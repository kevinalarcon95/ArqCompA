

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Dec 15 10:52:21 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4550 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataBANK0
   106  003268                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _character2
   110  003268  00                 	db	0
   111  003269  04                 	db	4
   112  00326A  04                 	db	4
   113  00326B  04                 	db	4
   114  00326C  1F                 	db	31
   115  00326D  0E                 	db	14
   116  00326E  04                 	db	4
   117  00326F  00                 	db	0
   118                           
   119                           ;initializer for _character1
   120  003270  04                 	db	4
   121  003271  0E                 	db	14
   122  003272  1F                 	db	31
   123  003273  04                 	db	4
   124  003274  04                 	db	4
   125  003275  04                 	db	4
   126  003276  00                 	db	0
   127  003277  00                 	db	0
   128                           
   129                           	psect	idataBANK1
   130  002A54                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for SensorTemperatura@F3715
   134  002A54  43                 	db	67
   135  002A55  61                 	db	97
   136  002A56  6C                 	db	108
   137  002A57  65                 	db	101
   138  002A58  66                 	db	102
   139  002A59  61                 	db	97
   140  002A5A  63                 	db	99
   141  002A5B  63                 	db	99
   142  002A5C  69                 	db	105
   143  002A5D  6F                 	db	111
   144  002A5E  6E                 	db	110
   145  002A5F  20                 	db	32
   146  002A60  65                 	db	101
   147  002A61  6E                 	db	110
   148  002A62  63                 	db	99
   149  002A63  65                 	db	101
   150  002A64  6E                 	db	110
   151  002A65  64                 	db	100
   152  002A66  69                 	db	105
   153  002A67  64                 	db	100
   154  002A68  61                 	db	97
   155  002A69  0D                 	db	13
   156  002A6A  00                 	db	0
   157                           
   158                           ;initializer for SensorTemperatura@F3718
   159  002A6B  43                 	db	67
   160  002A6C  61                 	db	97
   161  002A6D  6C                 	db	108
   162  002A6E  65                 	db	101
   163  002A6F  66                 	db	102
   164  002A70  61                 	db	97
   165  002A71  63                 	db	99
   166  002A72  63                 	db	99
   167  002A73  69                 	db	105
   168  002A74  6F                 	db	111
   169  002A75  6E                 	db	110
   170  002A76  20                 	db	32
   171  002A77  61                 	db	97
   172  002A78  70                 	db	112
   173  002A79  61                 	db	97
   174  002A7A  67                 	db	103
   175  002A7B  61                 	db	97
   176  002A7C  64                 	db	100
   177  002A7D  61                 	db	97
   178  002A7E  0D                 	db	13
   179  002A7F  00                 	db	0
   180                           
   181                           ;initializer for SensorMovimiento@F3730
   182  002A80  50                 	db	80
   183  002A81  72                 	db	114
   184  002A82  65                 	db	101
   185  002A83  73                 	db	115
   186  002A84  65                 	db	101
   187  002A85  6E                 	db	110
   188  002A86  63                 	db	99
   189  002A87  69                 	db	105
   190  002A88  61                 	db	97
   191  002A89  20                 	db	32
   192  002A8A  65                 	db	101
   193  002A8B  6E                 	db	110
   194  002A8C  20                 	db	32
   195  002A8D  6C                 	db	108
   196  002A8E  61                 	db	97
   197  002A8F  20                 	db	32
   198  002A90  48                 	db	72
   199  002A91  33                 	db	51
   200  002A92  0D                 	db	13
   201  002A93  00                 	db	0
   202                           
   203                           ;initializer for SensorMovimiento@F3727
   204  002A94  50                 	db	80
   205  002A95  72                 	db	114
   206  002A96  65                 	db	101
   207  002A97  73                 	db	115
   208  002A98  65                 	db	101
   209  002A99  6E                 	db	110
   210  002A9A  63                 	db	99
   211  002A9B  69                 	db	105
   212  002A9C  61                 	db	97
   213  002A9D  20                 	db	32
   214  002A9E  65                 	db	101
   215  002A9F  6E                 	db	110
   216  002AA0  20                 	db	32
   217  002AA1  6C                 	db	108
   218  002AA2  61                 	db	97
   219  002AA3  20                 	db	32
   220  002AA4  48                 	db	72
   221  002AA5  32                 	db	50
   222  002AA6  0D                 	db	13
   223  002AA7  00                 	db	0
   224                           
   225                           ;initializer for SensorMovimiento@F3724
   226  002AA8  50                 	db	80
   227  002AA9  72                 	db	114
   228  002AAA  65                 	db	101
   229  002AAB  73                 	db	115
   230  002AAC  65                 	db	101
   231  002AAD  6E                 	db	110
   232  002AAE  63                 	db	99
   233  002AAF  69                 	db	105
   234  002AB0  61                 	db	97
   235  002AB1  20                 	db	32
   236  002AB2  65                 	db	101
   237  002AB3  6E                 	db	110
   238  002AB4  20                 	db	32
   239  002AB5  6C                 	db	108
   240  002AB6  61                 	db	97
   241  002AB7  20                 	db	32
   242  002AB8  48                 	db	72
   243  002AB9  31                 	db	49
   244  002ABA  0D                 	db	13
   245  002ABB  00                 	db	0
   246                           
   247                           ;initializer for SensorMovimiento@F3722
   248  002ABC  30                 	db	48
   249  002ABD  00                 	db	0
   250  002ABE  00                 	db	0
   251  002ABF  00                 	db	0
   252  002AC0  00                 	db	0
   253  002AC1  00                 	db	0
   254  002AC2  00                 	db	0
   255  002AC3  00                 	db	0
   256  002AC4  00                 	db	0
   257  002AC5  00                 	db	0
   258  002AC6  00                 	db	0
   259  002AC7  00                 	db	0
   260  002AC8  00                 	db	0
   261  002AC9  00                 	db	0
   262  002ACA  00                 	db	0
   263  002ACB  00                 	db	0
   264  002ACC  00                 	db	0
   265  002ACD  00                 	db	0
   266  002ACE  00                 	db	0
   267  002ACF  00                 	db	0
   268                           
   269                           ;initializer for SensorLuz@F3735
   270  002AD0  43                 	db	67
   271  002AD1  6F                 	db	111
   272  002AD2  72                 	db	114
   273  002AD3  74                 	db	116
   274  002AD4  69                 	db	105
   275  002AD5  6E                 	db	110
   276  002AD6  61                 	db	97
   277  002AD7  20                 	db	32
   278  002AD8  61                 	db	97
   279  002AD9  72                 	db	114
   280  002ADA  72                 	db	114
   281  002ADB  69                 	db	105
   282  002ADC  62                 	db	98
   283  002ADD  61                 	db	97
   284  002ADE  0D                 	db	13
   285  002ADF  00                 	db	0
   286                           
   287                           ;initializer for SensorLuz@F3738
   288  002AE0  43                 	db	67
   289  002AE1  6F                 	db	111
   290  002AE2  72                 	db	114
   291  002AE3  74                 	db	116
   292  002AE4  69                 	db	105
   293  002AE5  6E                 	db	110
   294  002AE6  61                 	db	97
   295  002AE7  20                 	db	32
   296  002AE8  61                 	db	97
   297  002AE9  62                 	db	98
   298  002AEA  61                 	db	97
   299  002AEB  6A                 	db	106
   300  002AEC  6F                 	db	111
   301  002AED  0D                 	db	13
   302  002AEE  00                 	db	0
   303  0000                     _PORTEbits	set	3972
   304  0000                     _PORTAbits	set	3968
   305  0000                     _TRISAbits	set	3986
   306  0000                     _TXREG	set	4013
   307  0000                     _TRISBbits	set	3987
   308  0000                     _SPBRG	set	4015
   309  0000                     _RCSTAbits	set	4011
   310  0000                     _BAUDCONbits	set	4024
   311  0000                     _TXSTAbits	set	4012
   312  0000                     _TRISCbits	set	3988
   313  0000                     _OSCCON	set	4051
   314  0000                     _SSPCON2bits	set	4037
   315  0000                     _SSPADD	set	4040
   316  0000                     _SSPCON2	set	4037
   317  0000                     _SSPCON1	set	4038
   318  0000                     _SSPSTAT	set	4039
   319  0000                     _SSPBUF	set	4041
   320  0000                     _SSPSTATbits	set	4039
   321  0000                     _LATD	set	3980
   322  0000                     _TRISD	set	3989
   323  0000                     _TRISE	set	3990
   324  0000                     _ADCON0bits	set	4034
   325  0000                     _ADRESL	set	4035
   326  0000                     _ADRESH	set	4036
   327  0000                     _ADCON2	set	4032
   328  0000                     _ADCON1	set	4033
   329  0000                     _ADCON0	set	4034
   330  0000                     _TRISA	set	3986
   331  0000                     _LATC2	set	31834
   332  0000                     _LATC1	set	31833
   333  0000                     _LATC0	set	31832
   334  0000                     _LATB3	set	31827
   335  0000                     _LATB2	set	31826
   336  0000                     _ACKEN	set	32300
   337  0000                     _ACKDT	set	32301
   338  0000                     _PEN	set	32298
   339  0000                     _RSEN	set	32297
   340  0000                     _ACKSTAT	set	32302
   341  0000                     _SSPIF	set	31987
   342  0000                     _SSPIE	set	31979
   343  0000                     _TRISB1	set	31897
   344  0000                     _TRISB0	set	31896
   345  0000                     _RCEN	set	32299
   346  0000                     _LATE2	set	31850
   347  0000                     _LATE1	set	31849
   348  0000                     _GO	set	32273
   349  0000                     _ADON	set	32272
   350                           
   351                           	psect	smallconst
   352  000800                     __psmallconst:
   353                           	callstack 0
   354  000800  00                 	db	0
   355  000801                     STR_15:
   356  000801  43                 	db	67	;'C'
   357  000802  6F                 	db	111	;'o'
   358  000803  72                 	db	114	;'r'
   359  000804  74                 	db	116	;'t'
   360  000805  69                 	db	105	;'i'
   361  000806  6E                 	db	110	;'n'
   362  000807  61                 	db	97	;'a'
   363  000808  20                 	db	32
   364  000809  41                 	db	65	;'A'
   365  00080A  62                 	db	98	;'b'
   366  00080B  61                 	db	97	;'a'
   367  00080C  6A                 	db	106	;'j'
   368  00080D  6F                 	db	111	;'o'
   369  00080E  20                 	db	32
   370  00080F  20                 	db	32
   371  000810  20                 	db	32
   372  000811  20                 	db	32
   373  000812  20                 	db	32
   374  000813  20                 	db	32
   375  000814  20                 	db	32
   376  000815  20                 	db	32
   377  000816  00                 	db	0
   378  000817                     STR_14:
   379  000817  43                 	db	67	;'C'
   380  000818  6F                 	db	111	;'o'
   381  000819  72                 	db	114	;'r'
   382  00081A  74                 	db	116	;'t'
   383  00081B  69                 	db	105	;'i'
   384  00081C  6E                 	db	110	;'n'
   385  00081D  61                 	db	97	;'a'
   386  00081E  20                 	db	32
   387  00081F  41                 	db	65	;'A'
   388  000820  72                 	db	114	;'r'
   389  000821  72                 	db	114	;'r'
   390  000822  69                 	db	105	;'i'
   391  000823  62                 	db	98	;'b'
   392  000824  61                 	db	97	;'a'
   393  000825  20                 	db	32
   394  000826  20                 	db	32
   395  000827  20                 	db	32
   396  000828  20                 	db	32
   397  000829  20                 	db	32
   398  00082A  20                 	db	32
   399  00082B  20                 	db	32
   400  00082C  00                 	db	0
   401  00082D                     STR_3:
   402  00082D  54                 	db	84	;'T'
   403  00082E  69                 	db	105	;'i'
   404  00082F  6D                 	db	109	;'m'
   405  000830  3A                 	db	58	;':'
   406  000831  25                 	db	37
   407  000832  78                 	db	120	;'x'
   408  000833  3A                 	db	58	;':'
   409  000834  00                 	db	0
   410  000835                     STR_8:
   411  000835  31                 	db	49	;'1'
   412  000836  3A                 	db	58	;':'
   413  000837  4F                 	db	79	;'O'
   414  000838  4E                 	db	78	;'N'
   415  000839  20                 	db	32
   416  00083A  20                 	db	32
   417  00083B  00                 	db	0
   418  00083C                     STR_10:
   419  00083C  32                 	db	50	;'2'
   420  00083D  3A                 	db	58	;':'
   421  00083E  4F                 	db	79	;'O'
   422  00083F  4E                 	db	78	;'N'
   423  000840  20                 	db	32
   424  000841  20                 	db	32
   425  000842  00                 	db	0
   426  000843                     STR_12:
   427  000843  33                 	db	51	;'3'
   428  000844  3A                 	db	58	;':'
   429  000845  4F                 	db	79	;'O'
   430  000846  4E                 	db	78	;'N'
   431  000847  20                 	db	32
   432  000848  20                 	db	32
   433  000849  00                 	db	0
   434  00084A                     STR_4:
   435  00084A  54                 	db	84	;'T'
   436  00084B  65                 	db	101	;'e'
   437  00084C  6D                 	db	109	;'m'
   438  00084D  70                 	db	112	;'p'
   439  00084E  3A                 	db	58	;':'
   440  00084F  20                 	db	32
   441  000850  00                 	db	0
   442  000851                     STR_5:
   443  000851  25                 	db	37
   444  000852  64                 	db	100	;'d'
   445  000853  25                 	db	37
   446  000854  63                 	db	99	;'c'
   447  000855  43                 	db	67	;'C'
   448  000856  20                 	db	32
   449  000857  00                 	db	0
   450  000858                     STR_9:
   451  000858  31                 	db	49	;'1'
   452  000859  3A                 	db	58	;':'
   453  00085A  4F                 	db	79	;'O'
   454  00085B  46                 	db	70	;'F'
   455  00085C  46                 	db	70	;'F'
   456  00085D  20                 	db	32
   457  00085E  00                 	db	0
   458  00085F                     STR_11:
   459  00085F  32                 	db	50	;'2'
   460  000860  3A                 	db	58	;':'
   461  000861  4F                 	db	79	;'O'
   462  000862  46                 	db	70	;'F'
   463  000863  46                 	db	70	;'F'
   464  000864  20                 	db	32
   465  000865  00                 	db	0
   466  000866                     STR_13:
   467  000866  33                 	db	51	;'3'
   468  000867  3A                 	db	58	;':'
   469  000868  4F                 	db	79	;'O'
   470  000869  46                 	db	70	;'F'
   471  00086A  46                 	db	70	;'F'
   472  00086B  20                 	db	32
   473  00086C  00                 	db	0
   474  00086D                     STR_6:
   475  00086D  43                 	db	67	;'C'
   476  00086E  61                 	db	97	;'a'
   477  00086F  6C                 	db	108	;'l'
   478  000870  3A                 	db	58	;':'
   479  000871  20                 	db	32
   480  000872  00                 	db	0
   481  000873                     STR_1:
   482  000873  25                 	db	37
   483  000874  78                 	db	120	;'x'
   484  000875  20                 	db	32
   485  000876  00                 	db	0
   486  000877  00                 	db	0	; dummy byte at the end
   487  0000                     
   488                           ; #config settings
   489                           
   490                           	psect	cinit
   491  002C16                     __pcinit:
   492                           	callstack 0
   493  002C16                     start_initialization:
   494                           	callstack 0
   495  002C16                     __initialization:
   496                           	callstack 0
   497                           
   498                           ; Initialize objects allocated to BANK1 (155 bytes)
   499                           ; load TBLPTR registers with __pidataBANK1
   500  002C16  0E54               	movlw	low __pidataBANK1
   501  002C18  6EF6               	movwf	tblptrl,c
   502  002C1A  0E2A               	movlw	high __pidataBANK1
   503  002C1C  6EF7               	movwf	tblptrh,c
   504  002C1E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   505  002C20  6EF8               	movwf	tblptru,c
   506  002C22  EE01  F000         	lfsr	0,__pdataBANK1
   507  002C26  EE10 F09B          	lfsr	1,155
   508  002C2A                     copy_data0:
   509  002C2A  0009               	tblrd		*+
   510  002C2C  CFF5 FFEE          	movff	tablat,postinc0
   511  002C30  50E5               	movf	postdec1,w,c
   512  002C32  50E1               	movf	fsr1l,w,c
   513  002C34  E1FA               	bnz	copy_data0
   514                           
   515                           ; Initialize objects allocated to BANK0 (16 bytes)
   516                           ; load TBLPTR registers with __pidataBANK0
   517  002C36  0E68               	movlw	low __pidataBANK0
   518  002C38  6EF6               	movwf	tblptrl,c
   519  002C3A  0E32               	movlw	high __pidataBANK0
   520  002C3C  6EF7               	movwf	tblptrh,c
   521  002C3E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   522  002C40  6EF8               	movwf	tblptru,c
   523  002C42  EE00  F0E2         	lfsr	0,__pdataBANK0
   524  002C46  EE10 F010          	lfsr	1,16
   525  002C4A                     copy_data1:
   526  002C4A  0009               	tblrd		*+
   527  002C4C  CFF5 FFEE          	movff	tablat,postinc0
   528  002C50  50E5               	movf	postdec1,w,c
   529  002C52  50E1               	movf	fsr1l,w,c
   530  002C54  E1FA               	bnz	copy_data1
   531                           
   532                           ; Clear objects allocated to BANK1 (32 bytes)
   533  002C56  EE01  F09B         	lfsr	0,__pbssBANK1
   534  002C5A  0E20               	movlw	32
   535  002C5C                     clear_0:
   536  002C5C  6AEE               	clrf	postinc0,c
   537  002C5E  06E8               	decf	wreg,f,c
   538  002C60  E1FD               	bnz	clear_0
   539                           
   540                           ; Clear objects allocated to BANK0 (44 bytes)
   541  002C62  EE00  F0B6         	lfsr	0,__pbssBANK0
   542  002C66  0E2C               	movlw	44
   543  002C68                     clear_1:
   544  002C68  6AEE               	clrf	postinc0,c
   545  002C6A  06E8               	decf	wreg,f,c
   546  002C6C  E1FD               	bnz	clear_1
   547  002C6E                     end_of_initialization:
   548                           	callstack 0
   549  002C6E                     __end_of__initialization:
   550                           	callstack 0
   551  002C6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   552  002C70  6EF8               	movwf	tblptru,c
   553  002C72  0100               	movlb	0
   554  002C74  EFC2  F017         	goto	_main	;jump to C main() function
   555                           
   556                           	psect	bssBANK0
   557  0000B6                     __pbssBANK0:
   558                           	callstack 0
   559  0000B6                     _nout:
   560                           	callstack 0
   561  0000B6                     	ds	2
   562  0000B8                     _width:
   563                           	callstack 0
   564  0000B8                     	ds	2
   565  0000BA                     _prec:
   566                           	callstack 0
   567  0000BA                     	ds	2
   568  0000BC                     _flags:
   569                           	callstack 0
   570  0000BC                     	ds	2
   571  0000BE                     _hour:
   572                           	callstack 0
   573  0000BE                     	ds	2
   574  0000C0                     _min:
   575                           	callstack 0
   576  0000C0                     	ds	2
   577  0000C2                     _sec:
   578                           	callstack 0
   579  0000C2                     	ds	2
   580  0000C4                     _hours:
   581                           	callstack 0
   582  0000C4                     	ds	10
   583  0000CE                     _mins:
   584                           	callstack 0
   585  0000CE                     	ds	10
   586  0000D8                     _secs:
   587                           	callstack 0
   588  0000D8                     	ds	10
   589                           
   590                           	psect	dataBANK0
   591  0000E2                     __pdataBANK0:
   592                           	callstack 0
   593  0000E2                     _character2:
   594                           	callstack 0
   595  0000E2                     	ds	8
   596  0000EA                     _character1:
   597                           	callstack 0
   598  0000EA                     	ds	8
   599                           
   600                           	psect	bssBANK1
   601  00019B                     __pbssBANK1:
   602                           	callstack 0
   603  00019B                     _dbuf:
   604                           	callstack 0
   605  00019B                     	ds	32
   606                           
   607                           	psect	dataBANK1
   608  000100                     __pdataBANK1:
   609                           	callstack 0
   610  000100                     SensorTemperatura@F3715:
   611                           	callstack 0
   612  000100                     	ds	23
   613  000117                     SensorTemperatura@F3718:
   614                           	callstack 0
   615  000117                     	ds	21
   616  00012C                     SensorMovimiento@F3730:
   617                           	callstack 0
   618  00012C                     	ds	20
   619  000140                     SensorMovimiento@F3727:
   620                           	callstack 0
   621  000140                     	ds	20
   622  000154                     SensorMovimiento@F3724:
   623                           	callstack 0
   624  000154                     	ds	20
   625  000168                     SensorMovimiento@F3722:
   626                           	callstack 0
   627  000168                     	ds	20
   628  00017C                     SensorLuz@F3735:
   629                           	callstack 0
   630  00017C                     	ds	16
   631  00018C                     SensorLuz@F3738:
   632                           	callstack 0
   633  00018C                     	ds	15
   634                           
   635                           	psect	cstackBANK0
   636  000060                     __pcstackBANK0:
   637                           	callstack 0
   638  000060                     ?_vfprintf:
   639                           	callstack 0
   640  000060                     vfprintf@fp:
   641                           	callstack 0
   642  000060                     SensorLuz@buffer_TX3:
   643                           	callstack 0
   644  000060                     SensorMovimiento@buffer_TX5:
   645                           	callstack 0
   646                           
   647                           ; 20 bytes @ 0x0
   648  000060                     	ds	2
   649  000062                     vfprintf@fmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x2
   653  000062                     	ds	2
   654  000064                     vfprintf@ap:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x4
   658  000064                     	ds	2
   659  000066                     ?_sprintf:
   660                           	callstack 0
   661  000066                     sprintf@s:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x6
   665  000066                     	ds	2
   666  000068                     sprintf@fmt:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x8
   670  000068                     	ds	8
   671  000070                     sprintf@ap:
   672                           	callstack 0
   673  000070                     SensorLuz@buffer_TX4:
   674                           	callstack 0
   675                           
   676                           ; 15 bytes @ 0x10
   677  000070                     	ds	2
   678  000072                     sprintf@f:
   679                           	callstack 0
   680                           
   681                           ; 6 bytes @ 0x12
   682  000072                     	ds	2
   683  000074                     SensorMovimiento@buffer_TX6:
   684                           	callstack 0
   685                           
   686                           ; 20 bytes @ 0x14
   687  000074                     	ds	4
   688  000078                     SensorTemperatura@buffer_TX1:
   689                           	callstack 0
   690                           
   691                           ; 23 bytes @ 0x18
   692  000078                     	ds	7
   693  00007F                     SensorLuz@val:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x1F
   697  00007F                     	ds	4
   698  000083                     SensorLuz@i:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x23
   702  000083                     	ds	2
   703  000085                     SensorLuz@i_950:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x25
   707  000085                     	ds	3
   708  000088                     SensorMovimiento@buffer_TX7:
   709                           	callstack 0
   710                           
   711                           ; 20 bytes @ 0x28
   712  000088                     	ds	7
   713  00008F                     SensorTemperatura@buffer_TX2:
   714                           	callstack 0
   715                           
   716                           ; 21 bytes @ 0x2F
   717  00008F                     	ds	13
   718  00009C                     SensorMovimiento@buf:
   719                           	callstack 0
   720                           
   721                           ; 20 bytes @ 0x3C
   722  00009C                     	ds	8
   723  0000A4                     SensorTemperatura@Temperature:
   724                           	callstack 0
   725                           
   726                           ; 10 bytes @ 0x44
   727  0000A4                     	ds	10
   728  0000AE                     SensorTemperatura@i:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x4E
   732  0000AE                     	ds	2
   733  0000B0                     SensorTemperatura@i_901:
   734                           	callstack 0
   735  0000B0                     SensorMovimiento@i:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x50
   739  0000B0                     	ds	2
   740  0000B2                     SensorMovimiento@i_928:
   741                           	callstack 0
   742  0000B2                     SensorTemperatura@celsius:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x52
   746  0000B2                     	ds	2
   747  0000B4                     SensorMovimiento@i_933:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x54
   751  0000B4                     	ds	2
   752                           
   753                           	psect	cstackCOMRAM
   754  000001                     __pcstackCOMRAM:
   755                           	callstack 0
   756  000001                     ?_strlen:
   757                           	callstack 0
   758  000001                     ?_isupper:
   759                           	callstack 0
   760  000001                     ?_isalpha:
   761                           	callstack 0
   762  000001                     ?_islower:
   763                           	callstack 0
   764  000001                     ?_ADC_Read:
   765                           	callstack 0
   766  000001                     ?___fltol:
   767                           	callstack 0
   768  000001                     ?___aodiv:
   769                           	callstack 0
   770  000001                     ?___aomod:
   771                           	callstack 0
   772  000001                     I2C_Read@flag:
   773                           	callstack 0
   774  000001                     I2C_Write@data:
   775                           	callstack 0
   776  000001                     ADC_Read@channel:
   777                           	callstack 0
   778  000001                     MSdelay@val:
   779                           	callstack 0
   780  000001                     memset@dest:
   781                           	callstack 0
   782  000001                     isalpha@c:
   783                           	callstack 0
   784  000001                     isupper@c:
   785                           	callstack 0
   786  000001                     fputc@c:
   787                           	callstack 0
   788  000001                     strlen@s:
   789                           	callstack 0
   790  000001                     islower@c:
   791                           	callstack 0
   792  000001                     ___flge@ff1:
   793                           	callstack 0
   794  000001                     ___fltol@f1:
   795                           	callstack 0
   796  000001                     ___aodiv@dividend:
   797                           	callstack 0
   798  000001                     ___aomod@dividend:
   799                           	callstack 0
   800                           
   801                           ; 8 bytes @ 0x0
   802  000001                     	ds	1
   803  000002                     I2C_Read@buffer:
   804                           	callstack 0
   805  000002                     I2C_Start@slave_write_address:
   806                           	callstack 0
   807  000002                     I2C_Repeated_Start@slave_read_address:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x1
   811  000002                     	ds	1
   812  000003                     ??_RTC_Read_Clock:
   813  000003                     ??_isupper:
   814  000003                     ??_isalpha:
   815  000003                     ??_islower:
   816  000003                     ??_ADC_Read:
   817  000003                     MSdelay@i:
   818                           	callstack 0
   819  000003                     memset@c:
   820                           	callstack 0
   821  000003                     fputc@fp:
   822                           	callstack 0
   823  000003                     strlen@a:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x2
   827  000003                     	ds	1
   828  000004                     RTC_Read_Clock@read_clock_address:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x3
   832  000004                     	ds	1
   833  000005                     ??_fputc:
   834  000005                     ??___fltol:
   835  000005                     MSdelay@j:
   836                           	callstack 0
   837  000005                     memset@n:
   838                           	callstack 0
   839  000005                     strcpy@dest:
   840                           	callstack 0
   841  000005                     ___flge@ff2:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x4
   845  000005                     	ds	2
   846  000007                     ??_memset:
   847  000007                     ?_toupper:
   848                           	callstack 0
   849  000007                     LCD_Command@cmd:
   850                           	callstack 0
   851  000007                     LCD_Char@char_data:
   852                           	callstack 0
   853  000007                     ADC_Read@digital:
   854                           	callstack 0
   855  000007                     strcpy@src:
   856                           	callstack 0
   857  000007                     toupper@c:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x6
   861  000007                     	ds	1
   862  000008                     LCD_String@msg:
   863                           	callstack 0
   864  000008                     LCD_Custom_Char@msg:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x7
   868  000008                     	ds	1
   869  000009                     ??_toupper:
   870  000009                     ??___flge:
   871  000009                     ?___xxtofl:
   872                           	callstack 0
   873  000009                     ___fltol@sign1:
   874                           	callstack 0
   875  000009                     memset@k:
   876                           	callstack 0
   877  000009                     strcpy@s:
   878                           	callstack 0
   879  000009                     ___xxtofl@val:
   880                           	callstack 0
   881  000009                     ___aodiv@divisor:
   882                           	callstack 0
   883  000009                     ___aomod@divisor:
   884                           	callstack 0
   885                           
   886                           ; 8 bytes @ 0x8
   887  000009                     	ds	1
   888  00000A                     ?_ctoa:
   889                           	callstack 0
   890  00000A                     LCD_String_xy@pos:
   891                           	callstack 0
   892  00000A                     LCD_Custom_Char@loc:
   893                           	callstack 0
   894  00000A                     ___fltol@exp1:
   895                           	callstack 0
   896  00000A                     ctoa@fp:
   897                           	callstack 0
   898  00000A                     fputs@s:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x9
   902  00000A                     	ds	1
   903  00000B                     LCD_Custom_Char@i:
   904                           	callstack 0
   905  00000B                     LCD_String_xy@str:
   906                           	callstack 0
   907  00000B                     memset@s:
   908                           	callstack 0
   909  00000B                     strcpy@d:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0xA
   913  00000B                     	ds	1
   914  00000C                     ctoa@c:
   915                           	callstack 0
   916  00000C                     fputs@fp:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0xB
   920  00000C                     	ds	1
   921  00000D                     ??___xxtofl:
   922  00000D                     ??_ctoa:
   923  00000D                     LCD_String_xy@row:
   924                           	callstack 0
   925  00000D                     strcat@dest:
   926                           	callstack 0
   927  00000D                     _toupper$1604:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xC
   931  00000D                     	ds	1
   932  00000E                     fputs@c:
   933                           	callstack 0
   934  00000E                     ctoa@l:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0xD
   938  00000E                     	ds	1
   939  00000F                     fputs@i:
   940                           	callstack 0
   941  00000F                     strcat@src:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0xE
   945  00000F                     	ds	1
   946  000010                     ctoa@w:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0xF
   950  000010                     	ds	1
   951  000011                     ?_pad:
   952                           	callstack 0
   953  000011                     ___aodiv@counter:
   954                           	callstack 0
   955  000011                     ___aomod@counter:
   956                           	callstack 0
   957  000011                     ___xxtofl@sign:
   958                           	callstack 0
   959  000011                     pad@fp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x10
   963  000011                     	ds	1
   964  000012                     ___aodiv@sign:
   965                           	callstack 0
   966  000012                     ___aomod@sign:
   967                           	callstack 0
   968  000012                     ___xxtofl@exp:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x11
   972  000012                     	ds	1
   973  000013                     ?_abs:
   974                           	callstack 0
   975  000013                     pad@buf:
   976                           	callstack 0
   977  000013                     abs@a:
   978                           	callstack 0
   979  000013                     ___xxtofl@arg:
   980                           	callstack 0
   981  000013                     ___aodiv@quotient:
   982                           	callstack 0
   983                           
   984                           ; 8 bytes @ 0x12
   985  000013                     	ds	2
   986  000015                     ??_abs:
   987  000015                     pad@p:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x14
   991  000015                     	ds	2
   992  000017                     ??_pad:
   993  000017                     ?___flmul:
   994                           	callstack 0
   995  000017                     ___flmul@b:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x16
   999  000017                     	ds	1
  1000  000018                     pad@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x17
  1004  000018                     	ds	2
  1005  00001A                     pad@w:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x19
  1009  00001A                     	ds	1
  1010  00001B                     ___flmul@a:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x1A
  1014  00001B                     	ds	1
  1015  00001C                     ?_dtoa:
  1016                           	callstack 0
  1017  00001C                     ?_xtoa:
  1018                           	callstack 0
  1019  00001C                     dtoa@fp:
  1020                           	callstack 0
  1021  00001C                     xtoa@fp:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x1B
  1025  00001C                     	ds	2
  1026  00001E                     dtoa@d:
  1027                           	callstack 0
  1028  00001E                     xtoa@d:
  1029                           	callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x1D
  1032  00001E                     	ds	1
  1033  00001F                     ??___flmul:
  1034                           
  1035                           ; 1 bytes @ 0x1E
  1036  00001F                     	ds	4
  1037  000023                     ___flmul@sign:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x22
  1041  000023                     	ds	1
  1042  000024                     ___flmul@grs:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x23
  1046  000024                     	ds	2
  1047  000026                     ??_dtoa:
  1048  000026                     xtoa@x:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x25
  1052  000026                     	ds	1
  1053  000027                     ??_xtoa:
  1054                           
  1055                           ; 1 bytes @ 0x26
  1056  000027                     	ds	1
  1057  000028                     ___flmul@aexp:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x27
  1061  000028                     	ds	1
  1062  000029                     ___flmul@bexp:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x28
  1066  000029                     	ds	1
  1067  00002A                     ___flmul@prod:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x29
  1071  00002A                     	ds	4
  1072  00002E                     ___flmul@temp:
  1073                           	callstack 0
  1074  00002E                     _dtoa$1493:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x2D
  1078  00002E                     	ds	1
  1079  00002F                     _xtoa$1504:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x2E
  1083  00002F                     	ds	1
  1084  000030                     ?___fldiv:
  1085                           	callstack 0
  1086  000030                     dtoa@p:
  1087                           	callstack 0
  1088  000030                     ___fldiv@b:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x2F
  1092  000030                     	ds	1
  1093  000031                     _xtoa$1505:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x30
  1097  000031                     	ds	1
  1098  000032                     dtoa@w:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x31
  1102  000032                     	ds	1
  1103  000033                     xtoa@p:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x32
  1107  000033                     	ds	1
  1108  000034                     dtoa@s:
  1109                           	callstack 0
  1110  000034                     ___fldiv@a:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x33
  1114  000034                     	ds	1
  1115  000035                     xtoa@w:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x34
  1119  000035                     	ds	1
  1120  000036                     dtoa@n:
  1121                           	callstack 0
  1122                           
  1123                           ; 8 bytes @ 0x35
  1124  000036                     	ds	1
  1125  000037                     xtoa@n:
  1126                           	callstack 0
  1127                           
  1128                           ; 8 bytes @ 0x36
  1129  000037                     	ds	1
  1130  000038                     ??___fldiv:
  1131                           
  1132                           ; 1 bytes @ 0x37
  1133  000038                     	ds	4
  1134  00003C                     ___fldiv@rem:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x3B
  1138  00003C                     	ds	2
  1139  00003E                     dtoa@i:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x3D
  1143  00003E                     	ds	1
  1144  00003F                     xtoa@i:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x3E
  1148  00003F                     	ds	1
  1149  000040                     ___fldiv@sign:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x3F
  1153  000040                     	ds	1
  1154  000041                     ___fldiv@new_exp:
  1155                           	callstack 0
  1156  000041                     xtoa@c:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x40
  1160  000041                     	ds	2
  1161  000043                     ?_vfpfcnvrt:
  1162                           	callstack 0
  1163  000043                     vfpfcnvrt@fp:
  1164                           	callstack 0
  1165  000043                     ___fldiv@grs:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x42
  1169  000043                     	ds	2
  1170  000045                     vfpfcnvrt@fmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x44
  1174  000045                     	ds	2
  1175  000047                     ___fldiv@bexp:
  1176                           	callstack 0
  1177  000047                     vfpfcnvrt@ap:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x46
  1181  000047                     	ds	1
  1182  000048                     ___fldiv@aexp:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x47
  1186  000048                     	ds	1
  1187  000049                     ??_vfpfcnvrt:
  1188                           
  1189                           ; 1 bytes @ 0x48
  1190  000049                     	ds	4
  1191  00004D                     vfpfcnvrt@ll:
  1192                           	callstack 0
  1193                           
  1194                           ; 8 bytes @ 0x4C
  1195  00004D                     	ds	8
  1196  000055                     vfpfcnvrt@llu:
  1197                           	callstack 0
  1198                           
  1199                           ; 8 bytes @ 0x54
  1200  000055                     	ds	8
  1201  00005D                     vfpfcnvrt@c:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x5C
  1205  00005D                     	ds	1
  1206  00005E                     vfprintf@cfmt:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x5D
  1210  00005E                     	ds	2
  1211  000060                     
  1212                           ; 1 bytes @ 0x5F
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 58 in file "Controler.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels required when called:    9
  1238 ;; This function calls:
  1239 ;;		_ADC_Init
  1240 ;;		_I2C_Init
  1241 ;;		_LCD_Init
  1242 ;;		_RTC
  1243 ;;		_SensorLuz
  1244 ;;		_SensorMovimiento
  1245 ;;		_SensorTemperatura
  1246 ;; This function is called by:
  1247 ;;		Startup code after reset
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text0
  1252  002F84                     __ptext0:
  1253                           	callstack 0
  1254  002F84                     _main:
  1255                           	callstack 22
  1256  002F84                     
  1257                           ;Controler.c: 60:     OSCCON = 0x72;
  1258  002F84  0E72               	movlw	114
  1259  002F86  6ED3               	movwf	211,c	;volatile
  1260  002F88                     
  1261                           ;Controler.c: 61:     I2C_Init();
  1262  002F88  ECF4  F018         	call	_I2C_Init	;wreg free
  1263  002F8C                     
  1264                           ;Controler.c: 62:     LCD_Init();
  1265  002F8C  EC9D  F018         	call	_LCD_Init	;wreg free
  1266  002F90                     
  1267                           ;Controler.c: 63:     ADC_Init();
  1268  002F90  EC01  F019         	call	_ADC_Init	;wreg free
  1269  002F94                     
  1270                           ;Controler.c: 64:     ADCON1 = 0x0F;
  1271  002F94  0E0F               	movlw	15
  1272  002F96  6EC1               	movwf	193,c	;volatile
  1273  002F98                     
  1274                           ;Controler.c: 67:     TRISCbits.RC6 = 0;
  1275  002F98  9C94               	bcf	148,6,c	;volatile
  1276  002F9A                     
  1277                           ;Controler.c: 68:     TXSTAbits.TX9 = 0;
  1278  002F9A  9CAC               	bcf	172,6,c	;volatile
  1279  002F9C                     
  1280                           ;Controler.c: 69:     TXSTAbits.TXEN = 1;
  1281  002F9C  8AAC               	bsf	172,5,c	;volatile
  1282  002F9E                     
  1283                           ;Controler.c: 70:     TXSTAbits.SYNC = 0;
  1284  002F9E  98AC               	bcf	172,4,c	;volatile
  1285  002FA0                     
  1286                           ;Controler.c: 71:     TXSTAbits.BRGH = 0;
  1287  002FA0  94AC               	bcf	172,2,c	;volatile
  1288  002FA2                     
  1289                           ;Controler.c: 72:     BAUDCONbits.BRG16 = 0;
  1290  002FA2  96B8               	bcf	184,3,c	;volatile
  1291  002FA4                     
  1292                           ;Controler.c: 73:     RCSTAbits.SPEN = 1;
  1293  002FA4  8EAB               	bsf	171,7,c	;volatile
  1294  002FA6                     
  1295                           ;Controler.c: 74:     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1296  002FA6  0E0C               	movlw	12
  1297  002FA8  6EAF               	movwf	175,c	;volatile
  1298  002FAA                     l3746:
  1299                           
  1300                           ;Controler.c: 78:         RTC();
  1301  002FAA  EC78  F015         	call	_RTC	;wreg free
  1302  002FAE                     
  1303                           ;Controler.c: 79:         SensorTemperatura();
  1304  002FAE  EC82  F00C         	call	_SensorTemperatura	;wreg free
  1305  002FB2                     
  1306                           ;Controler.c: 80:         SensorMovimiento();
  1307  002FB2  ECC9  F00D         	call	_SensorMovimiento	;wreg free
  1308  002FB6                     
  1309                           ;Controler.c: 81:         SensorLuz();
  1310  002FB6  ECA5  F00F         	call	_SensorLuz	;wreg free
  1311  002FBA  EFD5  F017         	goto	l3746
  1312  002FBE  EF00  F000         	goto	start
  1313  002FC2                     __end_of_main:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _SensorTemperatura *****************
  1317 ;; Defined at:
  1318 ;;		line 109 in file "Controler.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  i               2   80[BANK0 ] int 
  1323 ;;  i               2   78[BANK0 ] int 
  1324 ;;  buffer_TX2     21   47[BANK0 ] unsigned char [21]
  1325 ;;  buffer_TX1     23   24[BANK0 ] unsigned char [23]
  1326 ;;  Temperature    10   68[BANK0 ] unsigned char [10]
  1327 ;;  celsius         4   82[BANK0 ] float 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0      62       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         0      62       0       0       0       0       0       0       0
  1341 ;;Total ram usage:       62 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    8
  1344 ;; This function calls:
  1345 ;;		_ADC_Read
  1346 ;;		_LCD_Char
  1347 ;;		_LCD_Command
  1348 ;;		_LCD_Custom_Char
  1349 ;;		_LCD_String_xy
  1350 ;;		___fldiv
  1351 ;;		___flge
  1352 ;;		___flmul
  1353 ;;		___fltol
  1354 ;;		___xxtofl
  1355 ;;		_memset
  1356 ;;		_sprintf
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text1
  1363  001904                     __ptext1:
  1364                           	callstack 0
  1365  001904                     _SensorTemperatura:
  1366                           	callstack 22
  1367  001904                     
  1368                           ;Controler.c: 110:     char Temperature[10];;Controler.c: 111:     float celsius;;Contro
      +                          ler.c: 112:     TRISBbits.RB2 = 0;
  1369  001904  9493               	bcf	147,2,c	;volatile
  1370                           
  1371                           ;Controler.c: 113:     TRISBbits.RB3 = 0;
  1372  001906  9693               	bcf	147,3,c	;volatile
  1373  001908                     
  1374                           ;Controler.c: 115:     LCD_String_xy(2, 0, "Temp: ");
  1375  001908  0E00               	movlw	0
  1376  00190A  6E0A               	movwf	LCD_String_xy@pos^0,c
  1377  00190C  0E4A               	movlw	low STR_4
  1378  00190E  6E0B               	movwf	LCD_String_xy@str^0,c
  1379  001910  0E08               	movlw	high STR_4
  1380  001912  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1381  001914  0E02               	movlw	2
  1382  001916  ECC4  F015         	call	_LCD_String_xy
  1383  00191A                     
  1384                           ;Controler.c: 116:     celsius = (ADC_Read(0)*4.88);
  1385  00191A  0E00               	movlw	0
  1386  00191C  6E02               	movwf	(ADC_Read@channel+1)^0,c
  1387  00191E  0E00               	movlw	0
  1388  001920  6E01               	movwf	ADC_Read@channel^0,c
  1389  001922  ECDC  F014         	call	_ADC_Read	;wreg free
  1390  001926  C001  F009         	movff	?_ADC_Read,___xxtofl@val
  1391  00192A  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
  1392  00192E  0E00               	movlw	0
  1393  001930  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  1394  001932  0EFF               	movlw	-1
  1395  001934  6E0B               	movwf	(___xxtofl@val+2)^0,c
  1396  001936  6E0C               	movwf	(___xxtofl@val+3)^0,c
  1397  001938  0E01               	movlw	1
  1398  00193A  ECCB  F00E         	call	___xxtofl
  1399  00193E  C009  F017         	movff	?___xxtofl,___flmul@b
  1400  001942  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  1401  001946  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  1402  00194A  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  1403  00194E  0EF6               	movlw	246
  1404  001950  6E1B               	movwf	___flmul@a^0,c
  1405  001952  0E28               	movlw	40
  1406  001954  6E1C               	movwf	(___flmul@a+1)^0,c
  1407  001956  0E9C               	movlw	156
  1408  001958  6E1D               	movwf	(___flmul@a+2)^0,c
  1409  00195A  0E40               	movlw	64
  1410  00195C  6E1E               	movwf	(___flmul@a+3)^0,c
  1411  00195E  EC3C  F004         	call	___flmul	;wreg free
  1412  001962  C017  F0B2         	movff	?___flmul,SensorTemperatura@celsius
  1413  001966  C018  F0B3         	movff	?___flmul+1,SensorTemperatura@celsius+1
  1414  00196A  C019  F0B4         	movff	?___flmul+2,SensorTemperatura@celsius+2
  1415  00196E  C01A  F0B5         	movff	?___flmul+3,SensorTemperatura@celsius+3
  1416  001972                     
  1417                           ;Controler.c: 117:     celsius = (celsius / 10.00);
  1418  001972  C0B2  F030         	movff	SensorTemperatura@celsius,___fldiv@b
  1419  001976  C0B3  F031         	movff	SensorTemperatura@celsius+1,___fldiv@b+1
  1420  00197A  C0B4  F032         	movff	SensorTemperatura@celsius+2,___fldiv@b+2
  1421  00197E  C0B5  F033         	movff	SensorTemperatura@celsius+3,___fldiv@b+3
  1422  001982  0E00               	movlw	0
  1423  001984  6E34               	movwf	___fldiv@a^0,c
  1424  001986  0E00               	movlw	0
  1425  001988  6E35               	movwf	(___fldiv@a+1)^0,c
  1426  00198A  0E20               	movlw	32
  1427  00198C  6E36               	movwf	(___fldiv@a+2)^0,c
  1428  00198E  0E41               	movlw	65
  1429  001990  6E37               	movwf	(___fldiv@a+3)^0,c
  1430  001992  EC51  F006         	call	___fldiv	;wreg free
  1431  001996  C030  F0B2         	movff	?___fldiv,SensorTemperatura@celsius
  1432  00199A  C031  F0B3         	movff	?___fldiv+1,SensorTemperatura@celsius+1
  1433  00199E  C032  F0B4         	movff	?___fldiv+2,SensorTemperatura@celsius+2
  1434  0019A2  C033  F0B5         	movff	?___fldiv+3,SensorTemperatura@celsius+3
  1435  0019A6                     
  1436                           ;Controler.c: 118:     sprintf(Temperature, "%d%cC ", (int) celsius, 0xdf);
  1437  0019A6  0EA4               	movlw	low SensorTemperatura@Temperature
  1438  0019A8  0100               	movlb	0	; () banked
  1439  0019AA  6F66               	movwf	sprintf@s& (0+255),b
  1440  0019AC  0E00               	movlw	high SensorTemperatura@Temperature
  1441  0019AE  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1442  0019B0  0E51               	movlw	low STR_5
  1443  0019B2  6F68               	movwf	sprintf@fmt& (0+255),b
  1444  0019B4  0E08               	movlw	high STR_5
  1445  0019B6  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1446  0019B8  C0B2  F001         	movff	SensorTemperatura@celsius,___fltol@f1
  1447  0019BC  C0B3  F002         	movff	SensorTemperatura@celsius+1,___fltol@f1+1
  1448  0019C0  C0B4  F003         	movff	SensorTemperatura@celsius+2,___fltol@f1+2
  1449  0019C4  C0B5  F004         	movff	SensorTemperatura@celsius+3,___fltol@f1+3
  1450  0019C8  ECA3  F012         	call	___fltol	;wreg free
  1451  0019CC  C001  F06A         	movff	?___fltol,?_sprintf+4
  1452  0019D0  C002  F06B         	movff	?___fltol+1,?_sprintf+5
  1453  0019D4  0E00               	movlw	0
  1454  0019D6  0100               	movlb	0	; () banked
  1455  0019D8  6F6D               	movwf	(?_sprintf+7)& (0+255),b
  1456  0019DA  0EDF               	movlw	223
  1457  0019DC  6F6C               	movwf	(?_sprintf+6)& (0+255),b
  1458  0019DE  ECCB  F016         	call	_sprintf	;wreg free
  1459  0019E2                     
  1460                           ;Controler.c: 119:     LCD_String_xy(2, 6, Temperature);
  1461  0019E2  0E06               	movlw	6
  1462  0019E4  6E0A               	movwf	LCD_String_xy@pos^0,c
  1463  0019E6  0EA4               	movlw	low SensorTemperatura@Temperature
  1464  0019E8  6E0B               	movwf	LCD_String_xy@str^0,c
  1465  0019EA  0E00               	movlw	high SensorTemperatura@Temperature
  1466  0019EC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1467  0019EE  0E02               	movlw	2
  1468  0019F0  ECC4  F015         	call	_LCD_String_xy
  1469  0019F4                     
  1470                           ;Controler.c: 120:     memset(Temperature, 0, 10);
  1471  0019F4  0EA4               	movlw	low SensorTemperatura@Temperature
  1472  0019F6  6E01               	movwf	memset@dest^0,c
  1473  0019F8  0E00               	movlw	high SensorTemperatura@Temperature
  1474  0019FA  6E02               	movwf	(memset@dest+1)^0,c
  1475  0019FC  0E00               	movlw	0
  1476  0019FE  6E04               	movwf	(memset@c+1)^0,c
  1477  001A00  0E00               	movlw	0
  1478  001A02  6E03               	movwf	memset@c^0,c
  1479  001A04  0E00               	movlw	0
  1480  001A06  6E06               	movwf	(memset@n+1)^0,c
  1481  001A08  0E0A               	movlw	10
  1482  001A0A  6E05               	movwf	memset@n^0,c
  1483  001A0C  EC36  F011         	call	_memset	;wreg free
  1484  001A10                     
  1485                           ;Controler.c: 122:     if (celsius >= 20 && celsius <= 25) {
  1486  001A10  C0B2  F001         	movff	SensorTemperatura@celsius,___flge@ff1
  1487  001A14  C0B3  F002         	movff	SensorTemperatura@celsius+1,___flge@ff1+1
  1488  001A18  C0B4  F003         	movff	SensorTemperatura@celsius+2,___flge@ff1+2
  1489  001A1C  C0B5  F004         	movff	SensorTemperatura@celsius+3,___flge@ff1+3
  1490  001A20  0E00               	movlw	0
  1491  001A22  6E05               	movwf	___flge@ff2^0,c
  1492  001A24  0E00               	movlw	0
  1493  001A26  6E06               	movwf	(___flge@ff2+1)^0,c
  1494  001A28  0EA0               	movlw	160
  1495  001A2A  6E07               	movwf	(___flge@ff2+2)^0,c
  1496  001A2C  0E41               	movlw	65
  1497  001A2E  6E08               	movwf	(___flge@ff2+3)^0,c
  1498  001A30  EC26  F013         	call	___flge	;wreg free
  1499  001A34  A0D8               	btfss	status,0,c
  1500  001A36  EF1F  F00D         	goto	u3861
  1501  001A3A  EF21  F00D         	goto	u3860
  1502  001A3E                     u3861:
  1503  001A3E  EF82  F00D         	goto	l295
  1504  001A42                     u3860:
  1505  001A42  0E00               	movlw	0
  1506  001A44  6E01               	movwf	___flge@ff1^0,c
  1507  001A46  0E00               	movlw	0
  1508  001A48  6E02               	movwf	(___flge@ff1+1)^0,c
  1509  001A4A  0EC8               	movlw	200
  1510  001A4C  6E03               	movwf	(___flge@ff1+2)^0,c
  1511  001A4E  0E41               	movlw	65
  1512  001A50  6E04               	movwf	(___flge@ff1+3)^0,c
  1513  001A52  C0B2  F005         	movff	SensorTemperatura@celsius,___flge@ff2
  1514  001A56  C0B3  F006         	movff	SensorTemperatura@celsius+1,___flge@ff2+1
  1515  001A5A  C0B4  F007         	movff	SensorTemperatura@celsius+2,___flge@ff2+2
  1516  001A5E  C0B5  F008         	movff	SensorTemperatura@celsius+3,___flge@ff2+3
  1517  001A62  EC26  F013         	call	___flge	;wreg free
  1518  001A66  A0D8               	btfss	status,0,c
  1519  001A68  EF38  F00D         	goto	u3871
  1520  001A6C  EF3A  F00D         	goto	u3870
  1521  001A70                     u3871:
  1522  001A70  EF82  F00D         	goto	l295
  1523  001A74                     u3870:
  1524  001A74                     
  1525                           ;Controler.c: 123:         LATB2 = 1;
  1526  001A74  848A               	bsf	3978,2,c	;volatile
  1527                           
  1528                           ;Controler.c: 124:         LATB3 = 0;
  1529  001A76  968A               	bcf	3978,3,c	;volatile
  1530  001A78                     
  1531                           ;Controler.c: 126:         char buffer_TX1[] = "Calefaccion encendida\r";
  1532  001A78  EE21  F000         	lfsr	2,SensorTemperatura@F3715
  1533  001A7C  EE10  F078         	lfsr	1,SensorTemperatura@buffer_TX1
  1534  001A80  0E16               	movlw	22
  1535  001A82                     u3881:
  1536  001A82  CFDB FFE3          	movff	plusw2,plusw1
  1537  001A86  06E8               	decf	wreg,f,c
  1538  001A88  E2FC               	bc	u3881
  1539  001A8A                     
  1540                           ;Controler.c: 127:         for (int i = 0; i < 25; i++) {
  1541  001A8A  0E00               	movlw	0
  1542  001A8C  0100               	movlb	0	; () banked
  1543  001A8E  6FAF               	movwf	(SensorTemperatura@i+1)& (0+255),b
  1544  001A90  0E00               	movlw	0
  1545  001A92  6FAE               	movwf	SensorTemperatura@i& (0+255),b
  1546  001A94                     l300:
  1547                           
  1548                           ;Controler.c: 128:             while (!TXSTAbits.TRMT) {
  1549  001A94  A2AC               	btfss	172,1,c	;volatile
  1550  001A96  EF4F  F00D         	goto	u3891
  1551  001A9A  EF51  F00D         	goto	u3890
  1552  001A9E                     u3891:
  1553  001A9E  EF4A  F00D         	goto	l300
  1554  001AA2                     u3890:
  1555  001AA2                     
  1556                           ;Controler.c: 130:             TXREG = buffer_TX1[i];
  1557  001AA2  0E78               	movlw	low SensorTemperatura@buffer_TX1
  1558  001AA4  0100               	movlb	0	; () banked
  1559  001AA6  25AE               	addwf	SensorTemperatura@i& (0+255),w,b
  1560  001AA8  6ED9               	movwf	fsr2l,c
  1561  001AAA  0E00               	movlw	high SensorTemperatura@buffer_TX1
  1562  001AAC  21AF               	addwfc	(SensorTemperatura@i+1)& (0+255),w,b
  1563  001AAE  6EDA               	movwf	fsr2h,c
  1564  001AB0  50DF               	movf	indf2,w,c
  1565  001AB2  6EAD               	movwf	173,c	;volatile
  1566  001AB4                     
  1567                           ; BSR set to: 0
  1568                           ;Controler.c: 131:         }
  1569  001AB4  4BAE               	infsnz	SensorTemperatura@i& (0+255),f,b
  1570  001AB6  2BAF               	incf	(SensorTemperatura@i+1)& (0+255),f,b
  1571  001AB8                     
  1572                           ; BSR set to: 0
  1573  001AB8  BFAF               	btfsc	(SensorTemperatura@i+1)& (0+255),7,b
  1574  001ABA  EF68  F00D         	goto	u3901
  1575  001ABE  51AF               	movf	(SensorTemperatura@i+1)& (0+255),w,b
  1576  001AC0  E109               	bnz	u3900
  1577  001AC2  0E19               	movlw	25
  1578  001AC4  5DAE               	subwf	SensorTemperatura@i& (0+255),w,b
  1579  001AC6  A0D8               	btfss	status,0,c
  1580  001AC8  EF68  F00D         	goto	u3901
  1581  001ACC  EF6A  F00D         	goto	u3900
  1582  001AD0                     u3901:
  1583  001AD0  EF4A  F00D         	goto	l300
  1584  001AD4                     u3900:
  1585  001AD4                     
  1586                           ; BSR set to: 0
  1587                           ;Controler.c: 133:         LCD_String_xy(2,13,"Cal: ");
  1588  001AD4  0E0D               	movlw	13
  1589  001AD6  6E0A               	movwf	LCD_String_xy@pos^0,c
  1590  001AD8  0E6D               	movlw	low STR_6
  1591  001ADA  6E0B               	movwf	LCD_String_xy@str^0,c
  1592  001ADC  0E08               	movlw	high STR_6
  1593  001ADE  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1594  001AE0  0E02               	movlw	2
  1595  001AE2  ECC4  F015         	call	_LCD_String_xy
  1596  001AE6                     
  1597                           ;Controler.c: 134:         LCD_Custom_Char(0,character1);
  1598  001AE6  0EEA               	movlw	low _character1
  1599  001AE8  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1600  001AEA  0E00               	movlw	high _character1
  1601  001AEC  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1602  001AEE  0E00               	movlw	0
  1603  001AF0  EC19  F017         	call	_LCD_Custom_Char
  1604  001AF4                     
  1605                           ;Controler.c: 135:         LCD_Command(0xc0|(17));
  1606  001AF4  0ED1               	movlw	209
  1607  001AF6  ECE6  F018         	call	_LCD_Command
  1608  001AFA                     
  1609                           ;Controler.c: 136:         LCD_Char(0);
  1610  001AFA  0E00               	movlw	0
  1611  001AFC  ECD8  F018         	call	_LCD_Char
  1612                           
  1613                           ;Controler.c: 138:     } else {
  1614  001B00  EFC8  F00D         	goto	l311
  1615  001B04                     l295:
  1616                           
  1617                           ;Controler.c: 139:         LATB2 = 0;
  1618  001B04  948A               	bcf	3978,2,c	;volatile
  1619                           
  1620                           ;Controler.c: 140:         LATB3 = 1;
  1621  001B06  868A               	bsf	3978,3,c	;volatile
  1622  001B08                     
  1623                           ;Controler.c: 142:         char buffer_TX2[] = "Calefaccion apagada\r";
  1624  001B08  EE21  F017         	lfsr	2,SensorTemperatura@F3718
  1625  001B0C  EE10  F08F         	lfsr	1,SensorTemperatura@buffer_TX2
  1626  001B10  0E14               	movlw	20
  1627  001B12                     u3911:
  1628  001B12  CFDB FFE3          	movff	plusw2,plusw1
  1629  001B16  06E8               	decf	wreg,f,c
  1630  001B18  E2FC               	bc	u3911
  1631  001B1A                     
  1632                           ;Controler.c: 143:         for (int i = 0; i < 21; i++) {
  1633  001B1A  0E00               	movlw	0
  1634  001B1C  0100               	movlb	0	; () banked
  1635  001B1E  6FB1               	movwf	(SensorTemperatura@i_901+1)& (0+255),b
  1636  001B20  0E00               	movlw	0
  1637  001B22  6FB0               	movwf	SensorTemperatura@i_901& (0+255),b
  1638  001B24                     l308:
  1639                           
  1640                           ;Controler.c: 144:             while (!TXSTAbits.TRMT) {
  1641  001B24  A2AC               	btfss	172,1,c	;volatile
  1642  001B26  EF97  F00D         	goto	u3921
  1643  001B2A  EF99  F00D         	goto	u3920
  1644  001B2E                     u3921:
  1645  001B2E  EF92  F00D         	goto	l308
  1646  001B32                     u3920:
  1647  001B32                     
  1648                           ;Controler.c: 146:             TXREG = buffer_TX2[i];
  1649  001B32  0E8F               	movlw	low SensorTemperatura@buffer_TX2
  1650  001B34  0100               	movlb	0	; () banked
  1651  001B36  25B0               	addwf	SensorTemperatura@i_901& (0+255),w,b
  1652  001B38  6ED9               	movwf	fsr2l,c
  1653  001B3A  0E00               	movlw	high SensorTemperatura@buffer_TX2
  1654  001B3C  21B1               	addwfc	(SensorTemperatura@i_901+1)& (0+255),w,b
  1655  001B3E  6EDA               	movwf	fsr2h,c
  1656  001B40  50DF               	movf	indf2,w,c
  1657  001B42  6EAD               	movwf	173,c	;volatile
  1658  001B44                     
  1659                           ; BSR set to: 0
  1660                           ;Controler.c: 147:         }
  1661  001B44  4BB0               	infsnz	SensorTemperatura@i_901& (0+255),f,b
  1662  001B46  2BB1               	incf	(SensorTemperatura@i_901+1)& (0+255),f,b
  1663  001B48                     
  1664                           ; BSR set to: 0
  1665  001B48  BFB1               	btfsc	(SensorTemperatura@i_901+1)& (0+255),7,b
  1666  001B4A  EFB0  F00D         	goto	u3931
  1667  001B4E  51B1               	movf	(SensorTemperatura@i_901+1)& (0+255),w,b
  1668  001B50  E109               	bnz	u3930
  1669  001B52  0E15               	movlw	21
  1670  001B54  5DB0               	subwf	SensorTemperatura@i_901& (0+255),w,b
  1671  001B56  A0D8               	btfss	status,0,c
  1672  001B58  EFB0  F00D         	goto	u3931
  1673  001B5C  EFB2  F00D         	goto	u3930
  1674  001B60                     u3931:
  1675  001B60  EF92  F00D         	goto	l308
  1676  001B64                     u3930:
  1677  001B64                     
  1678                           ; BSR set to: 0
  1679                           ;Controler.c: 149:         LCD_String_xy(2,13,"Cal: ");
  1680  001B64  0E0D               	movlw	13
  1681  001B66  6E0A               	movwf	LCD_String_xy@pos^0,c
  1682  001B68  0E6D               	movlw	low STR_6
  1683  001B6A  6E0B               	movwf	LCD_String_xy@str^0,c
  1684  001B6C  0E08               	movlw	high STR_6
  1685  001B6E  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1686  001B70  0E02               	movlw	2
  1687  001B72  ECC4  F015         	call	_LCD_String_xy
  1688  001B76                     
  1689                           ;Controler.c: 150:         LCD_Custom_Char(0,character2);
  1690  001B76  0EE2               	movlw	low _character2
  1691  001B78  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1692  001B7A  0E00               	movlw	high _character2
  1693  001B7C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1694  001B7E  0E00               	movlw	0
  1695  001B80  EC19  F017         	call	_LCD_Custom_Char
  1696  001B84                     
  1697                           ;Controler.c: 151:         LCD_Command(0xc0|(17));
  1698  001B84  0ED1               	movlw	209
  1699  001B86  ECE6  F018         	call	_LCD_Command
  1700  001B8A                     
  1701                           ;Controler.c: 152:         LCD_Char(0);
  1702  001B8A  0E00               	movlw	0
  1703  001B8C  ECD8  F018         	call	_LCD_Char
  1704  001B90                     l311:
  1705  001B90  0012               	return		;funcret
  1706  001B92                     __end_of_SensorTemperatura:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _memset *****************
  1710 ;; Defined at:
  1711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  dest            2    0[COMRAM] PTR void 
  1714 ;;		 -> SensorTemperatura@Temperature(10), 
  1715 ;;  c               2    2[COMRAM] int 
  1716 ;;  n               2    4[COMRAM] unsigned int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  s               2   10[COMRAM] PTR unsigned char 
  1719 ;;		 -> SensorTemperatura@Temperature(10), 
  1720 ;;  k               2    8[COMRAM] unsigned int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    0[COMRAM] PTR void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1730 ;;      Params:         6       0       0       0       0       0       0       0       0
  1731 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1732 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1733 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1734 ;;Total ram usage:       12 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_SensorTemperatura
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text2
  1744  00226C                     __ptext2:
  1745                           	callstack 0
  1746  00226C                     _memset:
  1747                           	callstack 29
  1748  00226C  C001  F00B         	movff	memset@dest,memset@s
  1749  002270  C002  F00C         	movff	memset@dest+1,memset@s+1
  1750  002274  5005               	movf	memset@n^0,w,c
  1751  002276  1006               	iorwf	(memset@n+1)^0,w,c
  1752  002278  A4D8               	btfss	status,2,c
  1753  00227A  EF41  F011         	goto	u3171
  1754  00227E  EF43  F011         	goto	u3170
  1755  002282                     u3171:
  1756  002282  EF45  F011         	goto	l3078
  1757  002286                     u3170:
  1758  002286  EFF0  F011         	goto	l1043
  1759  00228A                     l3078:
  1760  00228A  C00B  FFD9         	movff	memset@s,fsr2l
  1761  00228E  C00C  FFDA         	movff	memset@s+1,fsr2h
  1762  002292  C003  FFDF         	movff	memset@c,indf2
  1763  002296  5005               	movf	memset@n^0,w,c
  1764  002298  240B               	addwf	memset@s^0,w,c
  1765  00229A  6E07               	movwf	??_memset^0,c
  1766  00229C  5006               	movf	(memset@n+1)^0,w,c
  1767  00229E  200C               	addwfc	(memset@s+1)^0,w,c
  1768  0022A0  6E08               	movwf	(??_memset+1)^0,c
  1769  0022A2  0EFF               	movlw	255
  1770  0022A4  2407               	addwf	??_memset^0,w,c
  1771  0022A6  6ED9               	movwf	fsr2l,c
  1772  0022A8  0EFF               	movlw	255
  1773  0022AA  2008               	addwfc	(??_memset+1)^0,w,c
  1774  0022AC  6EDA               	movwf	fsr2h,c
  1775  0022AE  C003  FFDF         	movff	memset@c,indf2
  1776  0022B2  5006               	movf	(memset@n+1)^0,w,c
  1777  0022B4  E107               	bnz	u3181
  1778  0022B6  0E03               	movlw	3
  1779  0022B8  5C05               	subwf	memset@n^0,w,c
  1780  0022BA  B0D8               	btfsc	status,0,c
  1781  0022BC  EF62  F011         	goto	u3181
  1782  0022C0  EF64  F011         	goto	u3180
  1783  0022C4                     u3181:
  1784  0022C4  EF66  F011         	goto	l3084
  1785  0022C8                     u3180:
  1786  0022C8  EFF0  F011         	goto	l1043
  1787  0022CC                     l3084:
  1788  0022CC  EE20 F001          	lfsr	2,1
  1789  0022D0  500B               	movf	memset@s^0,w,c
  1790  0022D2  26D9               	addwf	fsr2l,f,c
  1791  0022D4  500C               	movf	(memset@s+1)^0,w,c
  1792  0022D6  22DA               	addwfc	fsr2h,f,c
  1793  0022D8  C003  FFDF         	movff	memset@c,indf2
  1794  0022DC  EE20 F002          	lfsr	2,2
  1795  0022E0  500B               	movf	memset@s^0,w,c
  1796  0022E2  26D9               	addwf	fsr2l,f,c
  1797  0022E4  500C               	movf	(memset@s+1)^0,w,c
  1798  0022E6  22DA               	addwfc	fsr2h,f,c
  1799  0022E8  C003  FFDF         	movff	memset@c,indf2
  1800  0022EC  5005               	movf	memset@n^0,w,c
  1801  0022EE  240B               	addwf	memset@s^0,w,c
  1802  0022F0  6E07               	movwf	??_memset^0,c
  1803  0022F2  5006               	movf	(memset@n+1)^0,w,c
  1804  0022F4  200C               	addwfc	(memset@s+1)^0,w,c
  1805  0022F6  6E08               	movwf	(??_memset+1)^0,c
  1806  0022F8  0EFE               	movlw	254
  1807  0022FA  2407               	addwf	??_memset^0,w,c
  1808  0022FC  6ED9               	movwf	fsr2l,c
  1809  0022FE  0EFF               	movlw	255
  1810  002300  2008               	addwfc	(??_memset+1)^0,w,c
  1811  002302  6EDA               	movwf	fsr2h,c
  1812  002304  C003  FFDF         	movff	memset@c,indf2
  1813  002308  5005               	movf	memset@n^0,w,c
  1814  00230A  240B               	addwf	memset@s^0,w,c
  1815  00230C  6E07               	movwf	??_memset^0,c
  1816  00230E  5006               	movf	(memset@n+1)^0,w,c
  1817  002310  200C               	addwfc	(memset@s+1)^0,w,c
  1818  002312  6E08               	movwf	(??_memset+1)^0,c
  1819  002314  0EFD               	movlw	253
  1820  002316  2407               	addwf	??_memset^0,w,c
  1821  002318  6ED9               	movwf	fsr2l,c
  1822  00231A  0EFF               	movlw	255
  1823  00231C  2008               	addwfc	(??_memset+1)^0,w,c
  1824  00231E  6EDA               	movwf	fsr2h,c
  1825  002320  C003  FFDF         	movff	memset@c,indf2
  1826  002324  5006               	movf	(memset@n+1)^0,w,c
  1827  002326  E107               	bnz	u3191
  1828  002328  0E07               	movlw	7
  1829  00232A  5C05               	subwf	memset@n^0,w,c
  1830  00232C  B0D8               	btfsc	status,0,c
  1831  00232E  EF9B  F011         	goto	u3191
  1832  002332  EF9D  F011         	goto	u3190
  1833  002336                     u3191:
  1834  002336  EF9F  F011         	goto	l3090
  1835  00233A                     u3190:
  1836  00233A  EFF0  F011         	goto	l1043
  1837  00233E                     l3090:
  1838  00233E  EE20 F003          	lfsr	2,3
  1839  002342  500B               	movf	memset@s^0,w,c
  1840  002344  26D9               	addwf	fsr2l,f,c
  1841  002346  500C               	movf	(memset@s+1)^0,w,c
  1842  002348  22DA               	addwfc	fsr2h,f,c
  1843  00234A  C003  FFDF         	movff	memset@c,indf2
  1844  00234E  5005               	movf	memset@n^0,w,c
  1845  002350  240B               	addwf	memset@s^0,w,c
  1846  002352  6E07               	movwf	??_memset^0,c
  1847  002354  5006               	movf	(memset@n+1)^0,w,c
  1848  002356  200C               	addwfc	(memset@s+1)^0,w,c
  1849  002358  6E08               	movwf	(??_memset+1)^0,c
  1850  00235A  0EFC               	movlw	252
  1851  00235C  2407               	addwf	??_memset^0,w,c
  1852  00235E  6ED9               	movwf	fsr2l,c
  1853  002360  0EFF               	movlw	255
  1854  002362  2008               	addwfc	(??_memset+1)^0,w,c
  1855  002364  6EDA               	movwf	fsr2h,c
  1856  002366  C003  FFDF         	movff	memset@c,indf2
  1857  00236A  5006               	movf	(memset@n+1)^0,w,c
  1858  00236C  E107               	bnz	u3201
  1859  00236E  0E09               	movlw	9
  1860  002370  5C05               	subwf	memset@n^0,w,c
  1861  002372  B0D8               	btfsc	status,0,c
  1862  002374  EFBE  F011         	goto	u3201
  1863  002378  EFC0  F011         	goto	u3200
  1864  00237C                     u3201:
  1865  00237C  EFC2  F011         	goto	l3096
  1866  002380                     u3200:
  1867  002380  EFF0  F011         	goto	l1043
  1868  002384                     l3096:
  1869  002384  C00B  F007         	movff	memset@s,??_memset
  1870  002388  C00C  F008         	movff	memset@s+1,??_memset+1
  1871  00238C  1E07               	comf	??_memset^0,f,c
  1872  00238E  1E08               	comf	(??_memset+1)^0,f,c
  1873  002390  4A07               	infsnz	??_memset^0,f,c
  1874  002392  2A08               	incf	(??_memset+1)^0,f,c
  1875  002394  0E03               	movlw	3
  1876  002396  1407               	andwf	??_memset^0,w,c
  1877  002398  6E09               	movwf	memset@k^0,c
  1878  00239A  6A0A               	clrf	(memset@k+1)^0,c
  1879  00239C  5009               	movf	memset@k^0,w,c
  1880  00239E  260B               	addwf	memset@s^0,f,c
  1881  0023A0  500A               	movf	(memset@k+1)^0,w,c
  1882  0023A2  220C               	addwfc	(memset@s+1)^0,f,c
  1883  0023A4  5009               	movf	memset@k^0,w,c
  1884  0023A6  5E05               	subwf	memset@n^0,f,c
  1885  0023A8  500A               	movf	(memset@k+1)^0,w,c
  1886  0023AA  5A06               	subwfb	(memset@n+1)^0,f,c
  1887  0023AC  0EFC               	movlw	252
  1888  0023AE  1605               	andwf	memset@n^0,f,c
  1889  0023B0  0EFF               	movlw	255
  1890  0023B2  1606               	andwf	(memset@n+1)^0,f,c
  1891  0023B4  EFE7  F011         	goto	l3104
  1892  0023B8                     l3098:
  1893  0023B8  C00B  FFD9         	movff	memset@s,fsr2l
  1894  0023BC  C00C  FFDA         	movff	memset@s+1,fsr2h
  1895  0023C0  C003  FFDF         	movff	memset@c,indf2
  1896  0023C4  0605               	decf	memset@n^0,f,c
  1897  0023C6  A0D8               	btfss	status,0,c
  1898  0023C8  0606               	decf	(memset@n+1)^0,f,c
  1899  0023CA  4A0B               	infsnz	memset@s^0,f,c
  1900  0023CC  2A0C               	incf	(memset@s+1)^0,f,c
  1901  0023CE                     l3104:
  1902  0023CE  5005               	movf	memset@n^0,w,c
  1903  0023D0  1006               	iorwf	(memset@n+1)^0,w,c
  1904  0023D2  A4D8               	btfss	status,2,c
  1905  0023D4  EFEE  F011         	goto	u3211
  1906  0023D8  EFF0  F011         	goto	u3210
  1907  0023DC                     u3211:
  1908  0023DC  EFDC  F011         	goto	l3098
  1909  0023E0                     u3210:
  1910  0023E0                     l1043:
  1911  0023E0  0012               	return		;funcret
  1912  0023E2                     __end_of_memset:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function ___fltol *****************
  1916 ;; Defined at:
  1917 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  f1              4    0[COMRAM] PTR void 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  exp1            1    9[COMRAM] unsigned char 
  1922 ;;  sign1           1    8[COMRAM] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  4    0[COMRAM] long 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         4       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1935 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:       10 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_SensorTemperatura
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text3
  1946  002546                     __ptext3:
  1947                           	callstack 0
  1948  002546                     ___fltol:
  1949                           	callstack 29
  1950  002546  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1951  002548  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1952  00254A  6E0A               	movwf	___fltol@exp1^0,c
  1953  00254C  500A               	movf	___fltol@exp1^0,w,c
  1954  00254E  A4D8               	btfss	status,2,c
  1955  002550  EFAC  F012         	goto	u3691
  1956  002554  EFAE  F012         	goto	u3690
  1957  002558                     u3691:
  1958  002558  EFB8  F012         	goto	l3406
  1959  00255C                     u3690:
  1960  00255C                     l3402:
  1961  00255C  0E00               	movlw	0
  1962  00255E  6E01               	movwf	?___fltol^0,c
  1963  002560  0E00               	movlw	0
  1964  002562  6E02               	movwf	(?___fltol+1)^0,c
  1965  002564  0E00               	movlw	0
  1966  002566  6E03               	movwf	(?___fltol+2)^0,c
  1967  002568  0E00               	movlw	0
  1968  00256A  6E04               	movwf	(?___fltol+3)^0,c
  1969  00256C  EF25  F013         	goto	l665
  1970  002570                     l3406:
  1971  002570  C001  F005         	movff	___fltol@f1,??___fltol
  1972  002574  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1973  002578  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1974  00257C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1975  002580  0E20               	movlw	32
  1976  002582  EFC8  F012         	goto	u3700
  1977  002586                     u3705:
  1978  002586  90D8               	bcf	status,0,c
  1979  002588  3208               	rrcf	(??___fltol+3)^0,f,c
  1980  00258A  3207               	rrcf	(??___fltol+2)^0,f,c
  1981  00258C  3206               	rrcf	(??___fltol+1)^0,f,c
  1982  00258E  3205               	rrcf	??___fltol^0,f,c
  1983  002590                     u3700:
  1984  002590  2EE8               	decfsz	wreg,f,c
  1985  002592  EFC3  F012         	goto	u3705
  1986  002596  5005               	movf	??___fltol^0,w,c
  1987  002598  6E09               	movwf	___fltol@sign1^0,c
  1988  00259A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1989  00259C  0EFF               	movlw	255
  1990  00259E  1601               	andwf	___fltol@f1^0,f,c
  1991  0025A0  0EFF               	movlw	255
  1992  0025A2  1602               	andwf	(___fltol@f1+1)^0,f,c
  1993  0025A4  0EFF               	movlw	255
  1994  0025A6  1603               	andwf	(___fltol@f1+2)^0,f,c
  1995  0025A8  0E00               	movlw	0
  1996  0025AA  1604               	andwf	(___fltol@f1+3)^0,f,c
  1997  0025AC  0E96               	movlw	150
  1998  0025AE  5E0A               	subwf	___fltol@exp1^0,f,c
  1999  0025B0  BE0A               	btfsc	___fltol@exp1^0,7,c
  2000  0025B2  EFDF  F012         	goto	u3710
  2001  0025B6  EFDD  F012         	goto	u3711
  2002  0025BA                     u3711:
  2003  0025BA  EFF5  F012         	goto	l3426
  2004  0025BE                     u3710:
  2005  0025BE  500A               	movf	___fltol@exp1^0,w,c
  2006  0025C0  0A80               	xorlw	128
  2007  0025C2  0F97               	addlw	151
  2008  0025C4  B0D8               	btfsc	status,0,c
  2009  0025C6  EFE7  F012         	goto	u3721
  2010  0025CA  EFE9  F012         	goto	u3720
  2011  0025CE                     u3721:
  2012  0025CE  EFEB  F012         	goto	l3422
  2013  0025D2                     u3720:
  2014  0025D2  EFAE  F012         	goto	l3402
  2015  0025D6                     l3422:
  2016  0025D6  90D8               	bcf	status,0,c
  2017  0025D8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2018  0025DA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2019  0025DC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2020  0025DE  3201               	rrcf	___fltol@f1^0,f,c
  2021  0025E0  3E0A               	incfsz	___fltol@exp1^0,f,c
  2022  0025E2  EFEB  F012         	goto	l3422
  2023  0025E6  EF0D  F013         	goto	l3436
  2024  0025EA                     l3426:
  2025  0025EA  0E1F               	movlw	31
  2026  0025EC  640A               	cpfsgt	___fltol@exp1^0,c
  2027  0025EE  EFFB  F012         	goto	u3731
  2028  0025F2  EFFD  F012         	goto	u3730
  2029  0025F6                     u3731:
  2030  0025F6  EF05  F013         	goto	l3434
  2031  0025FA                     u3730:
  2032  0025FA  EFAE  F012         	goto	l3402
  2033  0025FE                     l3432:
  2034  0025FE  90D8               	bcf	status,0,c
  2035  002600  3601               	rlcf	___fltol@f1^0,f,c
  2036  002602  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2037  002604  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2038  002606  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2039  002608  060A               	decf	___fltol@exp1^0,f,c
  2040  00260A                     l3434:
  2041  00260A  500A               	movf	___fltol@exp1^0,w,c
  2042  00260C  A4D8               	btfss	status,2,c
  2043  00260E  EF0B  F013         	goto	u3741
  2044  002612  EF0D  F013         	goto	u3740
  2045  002616                     u3741:
  2046  002616  EFFF  F012         	goto	l3432
  2047  00261A                     u3740:
  2048  00261A                     l3436:
  2049  00261A  5009               	movf	___fltol@sign1^0,w,c
  2050  00261C  B4D8               	btfsc	status,2,c
  2051  00261E  EF13  F013         	goto	u3751
  2052  002622  EF15  F013         	goto	u3750
  2053  002626                     u3751:
  2054  002626  EF1D  F013         	goto	l3440
  2055  00262A                     u3750:
  2056  00262A  1E04               	comf	(___fltol@f1+3)^0,f,c
  2057  00262C  1E03               	comf	(___fltol@f1+2)^0,f,c
  2058  00262E  1E02               	comf	(___fltol@f1+1)^0,f,c
  2059  002630  6C01               	negf	___fltol@f1^0,c
  2060  002632  0E00               	movlw	0
  2061  002634  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2062  002636  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2063  002638  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2064  00263A                     l3440:
  2065  00263A  C001  F001         	movff	___fltol@f1,?___fltol
  2066  00263E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2067  002642  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2068  002646  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2069  00264A                     l665:
  2070  00264A  0012               	return		;funcret
  2071  00264C                     __end_of___fltol:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _LCD_Custom_Char *****************
  2075 ;; Defined at:
  2076 ;;		line 95 in file "LCD_20x4.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  loc             1    wreg     unsigned char 
  2079 ;;  msg             2    7[COMRAM] PTR unsigned char 
  2080 ;;		 -> character2(8), character1(8), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  loc             1    9[COMRAM] unsigned char 
  2083 ;;  i               1   10[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         2       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        4 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    2
  2100 ;; This function calls:
  2101 ;;		_LCD_Char
  2102 ;;		_LCD_Command
  2103 ;; This function is called by:
  2104 ;;		_SensorTemperatura
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text4
  2109  002E32                     __ptext4:
  2110                           	callstack 0
  2111  002E32                     _LCD_Custom_Char:
  2112                           	callstack 27
  2113                           
  2114                           ;incstack = 0
  2115                           ;LCD_Custom_Char@loc stored from wreg
  2116  002E32  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  2117  002E34                     
  2118                           ;LCD_20x4.c: 95: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD_20x4.c: 
      +                          96: {;LCD_20x4.c: 97:     unsigned char i;;LCD_20x4.c: 98:     if(loc<8)
  2119  002E34  0E08               	movlw	8
  2120  002E36  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  2121  002E38  EF20  F017         	goto	u3141
  2122  002E3C  EF22  F017         	goto	u3140
  2123  002E40                     u3141:
  2124  002E40  EF3C  F017         	goto	l77
  2125  002E44                     u3140:
  2126  002E44                     
  2127                           ;LCD_20x4.c: 99:     {;LCD_20x4.c: 100:      LCD_Command(0x40+(loc*8));
  2128  002E44  500A               	movf	LCD_Custom_Char@loc^0,w,c
  2129  002E46  0D08               	mullw	8
  2130  002E48  50F3               	movf	243,w,c
  2131  002E4A  0F40               	addlw	64
  2132  002E4C  ECE6  F018         	call	_LCD_Command
  2133  002E50                     
  2134                           ;LCD_20x4.c: 101:        for(i=0;i<8;i++)
  2135  002E50  0E00               	movlw	0
  2136  002E52  6E0B               	movwf	LCD_Custom_Char@i^0,c
  2137  002E54                     l3046:
  2138                           
  2139                           ;LCD_20x4.c: 102:            LCD_Char(msg[i]);
  2140  002E54  500B               	movf	LCD_Custom_Char@i^0,w,c
  2141  002E56  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  2142  002E58  6ED9               	movwf	fsr2l,c
  2143  002E5A  0E00               	movlw	0
  2144  002E5C  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  2145  002E5E  6EDA               	movwf	fsr2h,c
  2146  002E60  50DF               	movf	indf2,w,c
  2147  002E62  ECD8  F018         	call	_LCD_Char
  2148  002E66  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  2149  002E68  0E07               	movlw	7
  2150  002E6A  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  2151  002E6C  EF3A  F017         	goto	u3151
  2152  002E70  EF3C  F017         	goto	u3150
  2153  002E74                     u3151:
  2154  002E74  EF2A  F017         	goto	l3046
  2155  002E78                     u3150:
  2156  002E78                     l77:
  2157  002E78  0012               	return		;funcret
  2158  002E7A                     __end_of_LCD_Custom_Char:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _SensorMovimiento *****************
  2162 ;; Defined at:
  2163 ;;		line 162 in file "Controler.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  i               2   84[BANK0 ] int 
  2168 ;;  i               2   82[BANK0 ] int 
  2169 ;;  i               2   80[BANK0 ] int 
  2170 ;;  buffer_TX7     20   40[BANK0 ] unsigned char [20]
  2171 ;;  buffer_TX6     20   20[BANK0 ] unsigned char [20]
  2172 ;;  buffer_TX5     20    0[BANK0 ] unsigned char [20]
  2173 ;;  buf            20   60[BANK0 ] unsigned char [20]
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0
  2184 ;;      Locals:         0      86       0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2186 ;;      Totals:         0      86       0       0       0       0       0       0       0
  2187 ;;Total ram usage:       86 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    4
  2190 ;; This function calls:
  2191 ;;		_LCD_String_xy
  2192 ;;		_strcat
  2193 ;;		_strcpy
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text5
  2200  001B92                     __ptext5:
  2201                           	callstack 0
  2202  001B92                     _SensorMovimiento:
  2203                           	callstack 26
  2204  001B92                     
  2205                           ;Controler.c: 163:     ADCON1 = 0x0F;
  2206  001B92  0E0F               	movlw	15
  2207  001B94  6EC1               	movwf	193,c	;volatile
  2208  001B96                     
  2209                           ;Controler.c: 164:     TRISAbits.RA2 = 1;
  2210  001B96  8492               	bsf	146,2,c	;volatile
  2211  001B98                     
  2212                           ;Controler.c: 165:     TRISAbits.RA3 = 1;
  2213  001B98  8692               	bsf	146,3,c	;volatile
  2214  001B9A                     
  2215                           ;Controler.c: 166:     TRISAbits.RA4 = 1;
  2216  001B9A  8892               	bsf	146,4,c	;volatile
  2217  001B9C                     
  2218                           ;Controler.c: 167:     TRISCbits.RC0 = 0;
  2219  001B9C  9094               	bcf	148,0,c	;volatile
  2220  001B9E                     
  2221                           ;Controler.c: 168:     TRISCbits.RC1 = 0;
  2222  001B9E  9294               	bcf	148,1,c	;volatile
  2223  001BA0                     
  2224                           ;Controler.c: 169:     TRISCbits.RC2 = 0;
  2225  001BA0  9494               	bcf	148,2,c	;volatile
  2226  001BA2                     
  2227                           ;Controler.c: 170:     char buf[20] = "0";
  2228  001BA2  EE21  F068         	lfsr	2,SensorMovimiento@F3722
  2229  001BA6  EE10  F09C         	lfsr	1,SensorMovimiento@buf
  2230  001BAA  0E13               	movlw	19
  2231  001BAC                     u3941:
  2232  001BAC  CFDB FFE3          	movff	plusw2,plusw1
  2233  001BB0  06E8               	decf	wreg,f,c
  2234  001BB2  E2FC               	bc	u3941
  2235  001BB4                     
  2236                           ;Controler.c: 172:     if (PORTAbits.RA2) {
  2237  001BB4  A480               	btfss	128,2,c	;volatile
  2238  001BB6  EFDF  F00D         	goto	u3951
  2239  001BBA  EFE1  F00D         	goto	u3950
  2240  001BBE                     u3951:
  2241  001BBE  EF1C  F00E         	goto	l316
  2242  001BC2                     u3950:
  2243  001BC2                     
  2244                           ;Controler.c: 173:         LATC0 = 1;
  2245  001BC2  808B               	bsf	3979,0,c	;volatile
  2246  001BC4                     
  2247                           ;Controler.c: 174:         strcpy(buf,"1:ON  ");
  2248  001BC4  0E9C               	movlw	low SensorMovimiento@buf
  2249  001BC6  6E05               	movwf	strcpy@dest^0,c
  2250  001BC8  0E00               	movlw	high SensorMovimiento@buf
  2251  001BCA  6E06               	movwf	(strcpy@dest+1)^0,c
  2252  001BCC  0E35               	movlw	low STR_8
  2253  001BCE  6E07               	movwf	strcpy@src^0,c
  2254  001BD0  0E08               	movlw	high STR_8
  2255  001BD2  6E08               	movwf	(strcpy@src+1)^0,c
  2256  001BD4  EC82  F017         	call	_strcpy	;wreg free
  2257  001BD8                     
  2258                           ;Controler.c: 176:         char buffer_TX5[] = "Presencia en la H1\r";
  2259  001BD8  EE21  F054         	lfsr	2,SensorMovimiento@F3724
  2260  001BDC  EE10  F060         	lfsr	1,SensorMovimiento@buffer_TX5
  2261  001BE0  0E13               	movlw	19
  2262  001BE2                     u3961:
  2263  001BE2  CFDB FFE3          	movff	plusw2,plusw1
  2264  001BE6  06E8               	decf	wreg,f,c
  2265  001BE8  E2FC               	bc	u3961
  2266  001BEA                     
  2267                           ;Controler.c: 177:         for (int i = 0; i < 20; i++) {
  2268  001BEA  0E00               	movlw	0
  2269  001BEC  0100               	movlb	0	; () banked
  2270  001BEE  6FB1               	movwf	(SensorMovimiento@i+1)& (0+255),b
  2271  001BF0  0E00               	movlw	0
  2272  001BF2  6FB0               	movwf	SensorMovimiento@i& (0+255),b
  2273  001BF4                     l321:
  2274                           
  2275                           ;Controler.c: 178:             while (!TXSTAbits.TRMT) {
  2276  001BF4  A2AC               	btfss	172,1,c	;volatile
  2277  001BF6  EFFF  F00D         	goto	u3971
  2278  001BFA  EF01  F00E         	goto	u3970
  2279  001BFE                     u3971:
  2280  001BFE  EFFA  F00D         	goto	l321
  2281  001C02                     u3970:
  2282  001C02                     
  2283                           ;Controler.c: 180:             TXREG = buffer_TX5[i];
  2284  001C02  0E60               	movlw	low SensorMovimiento@buffer_TX5
  2285  001C04  0100               	movlb	0	; () banked
  2286  001C06  25B0               	addwf	SensorMovimiento@i& (0+255),w,b
  2287  001C08  6ED9               	movwf	fsr2l,c
  2288  001C0A  0E00               	movlw	high SensorMovimiento@buffer_TX5
  2289  001C0C  21B1               	addwfc	(SensorMovimiento@i+1)& (0+255),w,b
  2290  001C0E  6EDA               	movwf	fsr2h,c
  2291  001C10  50DF               	movf	indf2,w,c
  2292  001C12  6EAD               	movwf	173,c	;volatile
  2293  001C14                     
  2294                           ; BSR set to: 0
  2295                           ;Controler.c: 181:         }
  2296  001C14  4BB0               	infsnz	SensorMovimiento@i& (0+255),f,b
  2297  001C16  2BB1               	incf	(SensorMovimiento@i+1)& (0+255),f,b
  2298  001C18                     
  2299                           ; BSR set to: 0
  2300  001C18  BFB1               	btfsc	(SensorMovimiento@i+1)& (0+255),7,b
  2301  001C1A  EF18  F00E         	goto	u3981
  2302  001C1E  51B1               	movf	(SensorMovimiento@i+1)& (0+255),w,b
  2303  001C20  E109               	bnz	u3980
  2304  001C22  0E14               	movlw	20
  2305  001C24  5DB0               	subwf	SensorMovimiento@i& (0+255),w,b
  2306  001C26  A0D8               	btfss	status,0,c
  2307  001C28  EF18  F00E         	goto	u3981
  2308  001C2C  EF1A  F00E         	goto	u3980
  2309  001C30                     u3981:
  2310  001C30  EFFA  F00D         	goto	l321
  2311  001C34                     u3980:
  2312  001C34  EF27  F00E         	goto	l3622
  2313  001C38                     l316:
  2314                           
  2315                           ;Controler.c: 184:         LATC0 = 0;
  2316  001C38  908B               	bcf	3979,0,c	;volatile
  2317  001C3A                     
  2318                           ;Controler.c: 185:         strcpy(buf,"1:OFF ");
  2319  001C3A  0E9C               	movlw	low SensorMovimiento@buf
  2320  001C3C  6E05               	movwf	strcpy@dest^0,c
  2321  001C3E  0E00               	movlw	high SensorMovimiento@buf
  2322  001C40  6E06               	movwf	(strcpy@dest+1)^0,c
  2323  001C42  0E58               	movlw	low STR_9
  2324  001C44  6E07               	movwf	strcpy@src^0,c
  2325  001C46  0E08               	movlw	high STR_9
  2326  001C48  6E08               	movwf	(strcpy@src+1)^0,c
  2327  001C4A  EC82  F017         	call	_strcpy	;wreg free
  2328  001C4E                     l3622:
  2329                           
  2330                           ;Controler.c: 189:     if (PORTAbits.RA3) {
  2331  001C4E  A680               	btfss	128,3,c	;volatile
  2332  001C50  EF2C  F00E         	goto	u3991
  2333  001C54  EF2E  F00E         	goto	u3990
  2334  001C58                     u3991:
  2335  001C58  EF69  F00E         	goto	l325
  2336  001C5C                     u3990:
  2337  001C5C                     
  2338                           ;Controler.c: 190:         LATC1 = 1;
  2339  001C5C  828B               	bsf	3979,1,c	;volatile
  2340  001C5E                     
  2341                           ;Controler.c: 191:         strcat(buf,"2:ON  ");
  2342  001C5E  0E9C               	movlw	low SensorMovimiento@buf
  2343  001C60  6E0D               	movwf	strcat@dest^0,c
  2344  001C62  0E00               	movlw	high SensorMovimiento@buf
  2345  001C64  6E0E               	movwf	(strcat@dest+1)^0,c
  2346  001C66  0E3C               	movlw	low STR_10
  2347  001C68  6E0F               	movwf	strcat@src^0,c
  2348  001C6A  0E08               	movlw	high STR_10
  2349  001C6C  6E10               	movwf	(strcat@src+1)^0,c
  2350  001C6E  ECB4  F018         	call	_strcat	;wreg free
  2351  001C72                     
  2352                           ;Controler.c: 193:         char buffer_TX6[] = "Presencia en la H2\r";
  2353  001C72  EE21  F040         	lfsr	2,SensorMovimiento@F3727
  2354  001C76  EE10  F074         	lfsr	1,SensorMovimiento@buffer_TX6
  2355  001C7A  0E13               	movlw	19
  2356  001C7C                     u4001:
  2357  001C7C  CFDB FFE3          	movff	plusw2,plusw1
  2358  001C80  06E8               	decf	wreg,f,c
  2359  001C82  E2FC               	bc	u4001
  2360  001C84                     
  2361                           ;Controler.c: 194:         for (int i = 0; i < 20; i++) {
  2362  001C84  0E00               	movlw	0
  2363  001C86  0100               	movlb	0	; () banked
  2364  001C88  6FB3               	movwf	(SensorMovimiento@i_928+1)& (0+255),b
  2365  001C8A  0E00               	movlw	0
  2366  001C8C  6FB2               	movwf	SensorMovimiento@i_928& (0+255),b
  2367  001C8E                     l330:
  2368                           
  2369                           ;Controler.c: 195:             while (!TXSTAbits.TRMT) {
  2370  001C8E  A2AC               	btfss	172,1,c	;volatile
  2371  001C90  EF4C  F00E         	goto	u4011
  2372  001C94  EF4E  F00E         	goto	u4010
  2373  001C98                     u4011:
  2374  001C98  EF47  F00E         	goto	l330
  2375  001C9C                     u4010:
  2376  001C9C                     
  2377                           ;Controler.c: 197:             TXREG = buffer_TX6[i];
  2378  001C9C  0E74               	movlw	low SensorMovimiento@buffer_TX6
  2379  001C9E  0100               	movlb	0	; () banked
  2380  001CA0  25B2               	addwf	SensorMovimiento@i_928& (0+255),w,b
  2381  001CA2  6ED9               	movwf	fsr2l,c
  2382  001CA4  0E00               	movlw	high SensorMovimiento@buffer_TX6
  2383  001CA6  21B3               	addwfc	(SensorMovimiento@i_928+1)& (0+255),w,b
  2384  001CA8  6EDA               	movwf	fsr2h,c
  2385  001CAA  50DF               	movf	indf2,w,c
  2386  001CAC  6EAD               	movwf	173,c	;volatile
  2387  001CAE                     
  2388                           ; BSR set to: 0
  2389                           ;Controler.c: 198:         }
  2390  001CAE  4BB2               	infsnz	SensorMovimiento@i_928& (0+255),f,b
  2391  001CB0  2BB3               	incf	(SensorMovimiento@i_928+1)& (0+255),f,b
  2392  001CB2                     
  2393                           ; BSR set to: 0
  2394  001CB2  BFB3               	btfsc	(SensorMovimiento@i_928+1)& (0+255),7,b
  2395  001CB4  EF65  F00E         	goto	u4021
  2396  001CB8  51B3               	movf	(SensorMovimiento@i_928+1)& (0+255),w,b
  2397  001CBA  E109               	bnz	u4020
  2398  001CBC  0E14               	movlw	20
  2399  001CBE  5DB2               	subwf	SensorMovimiento@i_928& (0+255),w,b
  2400  001CC0  A0D8               	btfss	status,0,c
  2401  001CC2  EF65  F00E         	goto	u4021
  2402  001CC6  EF67  F00E         	goto	u4020
  2403  001CCA                     u4021:
  2404  001CCA  EF47  F00E         	goto	l330
  2405  001CCE                     u4020:
  2406  001CCE  EF74  F00E         	goto	l3644
  2407  001CD2                     l325:
  2408                           
  2409                           ;Controler.c: 201:         LATC1 = 0;
  2410  001CD2  928B               	bcf	3979,1,c	;volatile
  2411  001CD4                     
  2412                           ;Controler.c: 202:         strcat(buf,"2:OFF ");
  2413  001CD4  0E9C               	movlw	low SensorMovimiento@buf
  2414  001CD6  6E0D               	movwf	strcat@dest^0,c
  2415  001CD8  0E00               	movlw	high SensorMovimiento@buf
  2416  001CDA  6E0E               	movwf	(strcat@dest+1)^0,c
  2417  001CDC  0E5F               	movlw	low STR_11
  2418  001CDE  6E0F               	movwf	strcat@src^0,c
  2419  001CE0  0E08               	movlw	high STR_11
  2420  001CE2  6E10               	movwf	(strcat@src+1)^0,c
  2421  001CE4  ECB4  F018         	call	_strcat	;wreg free
  2422  001CE8                     l3644:
  2423                           
  2424                           ;Controler.c: 206:     if (PORTAbits.RA4) {
  2425  001CE8  A880               	btfss	128,4,c	;volatile
  2426  001CEA  EF79  F00E         	goto	u4031
  2427  001CEE  EF7B  F00E         	goto	u4030
  2428  001CF2                     u4031:
  2429  001CF2  EFB6  F00E         	goto	l334
  2430  001CF6                     u4030:
  2431  001CF6                     
  2432                           ;Controler.c: 207:         LATC2 = 1;
  2433  001CF6  848B               	bsf	3979,2,c	;volatile
  2434  001CF8                     
  2435                           ;Controler.c: 208:         strcat(buf,"3:ON  ");
  2436  001CF8  0E9C               	movlw	low SensorMovimiento@buf
  2437  001CFA  6E0D               	movwf	strcat@dest^0,c
  2438  001CFC  0E00               	movlw	high SensorMovimiento@buf
  2439  001CFE  6E0E               	movwf	(strcat@dest+1)^0,c
  2440  001D00  0E43               	movlw	low STR_12
  2441  001D02  6E0F               	movwf	strcat@src^0,c
  2442  001D04  0E08               	movlw	high STR_12
  2443  001D06  6E10               	movwf	(strcat@src+1)^0,c
  2444  001D08  ECB4  F018         	call	_strcat	;wreg free
  2445  001D0C                     
  2446                           ;Controler.c: 210:         char buffer_TX7[] = "Presencia en la H3\r";
  2447  001D0C  EE21  F02C         	lfsr	2,SensorMovimiento@F3730
  2448  001D10  EE10  F088         	lfsr	1,SensorMovimiento@buffer_TX7
  2449  001D14  0E13               	movlw	19
  2450  001D16                     u4041:
  2451  001D16  CFDB FFE3          	movff	plusw2,plusw1
  2452  001D1A  06E8               	decf	wreg,f,c
  2453  001D1C  E2FC               	bc	u4041
  2454  001D1E                     
  2455                           ;Controler.c: 211:         for (int i = 0; i < 20; i++) {
  2456  001D1E  0E00               	movlw	0
  2457  001D20  0100               	movlb	0	; () banked
  2458  001D22  6FB5               	movwf	(SensorMovimiento@i_933+1)& (0+255),b
  2459  001D24  0E00               	movlw	0
  2460  001D26  6FB4               	movwf	SensorMovimiento@i_933& (0+255),b
  2461  001D28                     l339:
  2462                           
  2463                           ;Controler.c: 212:             while (!TXSTAbits.TRMT) {
  2464  001D28  A2AC               	btfss	172,1,c	;volatile
  2465  001D2A  EF99  F00E         	goto	u4051
  2466  001D2E  EF9B  F00E         	goto	u4050
  2467  001D32                     u4051:
  2468  001D32  EF94  F00E         	goto	l339
  2469  001D36                     u4050:
  2470  001D36                     
  2471                           ;Controler.c: 214:             TXREG = buffer_TX7[i];
  2472  001D36  0E88               	movlw	low SensorMovimiento@buffer_TX7
  2473  001D38  0100               	movlb	0	; () banked
  2474  001D3A  25B4               	addwf	SensorMovimiento@i_933& (0+255),w,b
  2475  001D3C  6ED9               	movwf	fsr2l,c
  2476  001D3E  0E00               	movlw	high SensorMovimiento@buffer_TX7
  2477  001D40  21B5               	addwfc	(SensorMovimiento@i_933+1)& (0+255),w,b
  2478  001D42  6EDA               	movwf	fsr2h,c
  2479  001D44  50DF               	movf	indf2,w,c
  2480  001D46  6EAD               	movwf	173,c	;volatile
  2481  001D48                     
  2482                           ; BSR set to: 0
  2483                           ;Controler.c: 215:         }
  2484  001D48  4BB4               	infsnz	SensorMovimiento@i_933& (0+255),f,b
  2485  001D4A  2BB5               	incf	(SensorMovimiento@i_933+1)& (0+255),f,b
  2486  001D4C                     
  2487                           ; BSR set to: 0
  2488  001D4C  BFB5               	btfsc	(SensorMovimiento@i_933+1)& (0+255),7,b
  2489  001D4E  EFB2  F00E         	goto	u4061
  2490  001D52  51B5               	movf	(SensorMovimiento@i_933+1)& (0+255),w,b
  2491  001D54  E109               	bnz	u4060
  2492  001D56  0E14               	movlw	20
  2493  001D58  5DB4               	subwf	SensorMovimiento@i_933& (0+255),w,b
  2494  001D5A  A0D8               	btfss	status,0,c
  2495  001D5C  EFB2  F00E         	goto	u4061
  2496  001D60  EFB4  F00E         	goto	u4060
  2497  001D64                     u4061:
  2498  001D64  EF94  F00E         	goto	l339
  2499  001D68                     u4060:
  2500  001D68  EFC1  F00E         	goto	l3666
  2501  001D6C                     l334:
  2502                           
  2503                           ;Controler.c: 217:         LATC2 = 0;
  2504  001D6C  948B               	bcf	3979,2,c	;volatile
  2505  001D6E                     
  2506                           ;Controler.c: 218:         strcat(buf,"3:OFF ");
  2507  001D6E  0E9C               	movlw	low SensorMovimiento@buf
  2508  001D70  6E0D               	movwf	strcat@dest^0,c
  2509  001D72  0E00               	movlw	high SensorMovimiento@buf
  2510  001D74  6E0E               	movwf	(strcat@dest+1)^0,c
  2511  001D76  0E66               	movlw	low STR_13
  2512  001D78  6E0F               	movwf	strcat@src^0,c
  2513  001D7A  0E08               	movlw	high STR_13
  2514  001D7C  6E10               	movwf	(strcat@src+1)^0,c
  2515  001D7E  ECB4  F018         	call	_strcat	;wreg free
  2516  001D82                     l3666:
  2517                           
  2518                           ;Controler.c: 221:     LCD_String_xy(3,0,buf);
  2519  001D82  0E00               	movlw	0
  2520  001D84  6E0A               	movwf	LCD_String_xy@pos^0,c
  2521  001D86  0E9C               	movlw	low SensorMovimiento@buf
  2522  001D88  6E0B               	movwf	LCD_String_xy@str^0,c
  2523  001D8A  0E00               	movlw	high SensorMovimiento@buf
  2524  001D8C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2525  001D8E  0E03               	movlw	3
  2526  001D90  ECC4  F015         	call	_LCD_String_xy
  2527  001D94  0012               	return		;funcret
  2528  001D96                     __end_of_SensorMovimiento:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _strcat *****************
  2532 ;; Defined at:
  2533 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcat.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  dest            2   12[COMRAM] PTR unsigned char 
  2536 ;;		 -> SensorMovimiento@buf(20), 
  2537 ;;  src             2   14[COMRAM] PTR const unsigned char 
  2538 ;;		 -> STR_13(7), STR_12(7), STR_11(7), STR_10(7), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  2   12[COMRAM] PTR unsigned char 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2550 ;;      Params:         4       0       0       0       0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2553 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2554 ;;Total ram usage:        4 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    1
  2557 ;; This function calls:
  2558 ;;		_strcpy
  2559 ;;		_strlen
  2560 ;; This function is called by:
  2561 ;;		_SensorMovimiento
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text6
  2566  003168                     __ptext6:
  2567                           	callstack 0
  2568  003168                     _strcat:
  2569                           	callstack 28
  2570  003168  C00D  F001         	movff	strcat@dest,strlen@s
  2571  00316C  C00E  F002         	movff	strcat@dest+1,strlen@s+1
  2572  003170  EC54  F018         	call	_strlen	;wreg free
  2573  003174  5001               	movf	?_strlen^0,w,c
  2574  003176  240D               	addwf	strcat@dest^0,w,c
  2575  003178  6E05               	movwf	strcpy@dest^0,c
  2576  00317A  5002               	movf	(?_strlen+1)^0,w,c
  2577  00317C  200E               	addwfc	(strcat@dest+1)^0,w,c
  2578  00317E  6E06               	movwf	(strcpy@dest+1)^0,c
  2579  003180  C00F  F007         	movff	strcat@src,strcpy@src
  2580  003184  C010  F008         	movff	strcat@src+1,strcpy@src+1
  2581  003188  EC82  F017         	call	_strcpy	;wreg free
  2582  00318C  0012               	return		;funcret
  2583  00318E                     __end_of_strcat:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _strcpy *****************
  2587 ;; Defined at:
  2588 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  dest            2    4[COMRAM] PTR unsigned char 
  2591 ;;		 -> SensorMovimiento@buf(20), 
  2592 ;;  src             2    6[COMRAM] PTR const unsigned char 
  2593 ;;		 -> STR_13(7), STR_12(7), STR_11(7), STR_10(7), 
  2594 ;;		 -> STR_9(7), STR_8(7), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  d               2   10[COMRAM] PTR unsigned char 
  2597 ;;		 -> SensorMovimiento@buf(20), 
  2598 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2599 ;;		 -> STR_13(7), STR_12(7), STR_11(7), STR_10(7), 
  2600 ;;		 -> STR_9(7), STR_8(7), 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    4[COMRAM] PTR unsigned char 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2610 ;;      Params:         4       0       0       0       0       0       0       0       0
  2611 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2613 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2614 ;;Total ram usage:        8 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_SensorMovimiento
  2620 ;;		_strcat
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text7
  2625  002F04                     __ptext7:
  2626                           	callstack 0
  2627  002F04                     _strcpy:
  2628                           	callstack 29
  2629  002F04  C007  F009         	movff	strcpy@src,strcpy@s
  2630  002F08  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  2631  002F0C  C005  F00B         	movff	strcpy@dest,strcpy@d
  2632  002F10  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  2633  002F14                     l3000:
  2634  002F14  C009  FFF6         	movff	strcpy@s,tblptrl
  2635  002F18  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  2636  002F1C  4A09               	infsnz	strcpy@s^0,f,c
  2637  002F1E  2A0A               	incf	(strcpy@s+1)^0,f,c
  2638  002F20                     	if	0	;tblptru may be non-zero
  2639  002F20                     	endif
  2640  002F20                     	if	0	;tblptru may be non-zero
  2641  002F20                     	endif
  2642  002F20  C00B  FFD9         	movff	strcpy@d,fsr2l
  2643  002F24  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  2644  002F28  4A0B               	infsnz	strcpy@d^0,f,c
  2645  002F2A  2A0C               	incf	(strcpy@d+1)^0,f,c
  2646  002F2C  0008               	tblrd		*
  2647  002F2E  CFF5 FFDF          	movff	tablat,indf2
  2648  002F32  50DF               	movf	indf2,w,c
  2649  002F34  A4D8               	btfss	status,2,c
  2650  002F36  EF9F  F017         	goto	u3011
  2651  002F3A  EFA1  F017         	goto	u3010
  2652  002F3E                     u3011:
  2653  002F3E  EF8A  F017         	goto	l3000
  2654  002F42                     u3010:
  2655  002F42  0012               	return		;funcret
  2656  002F44                     __end_of_strcpy:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _SensorLuz *****************
  2660 ;; Defined at:
  2661 ;;		line 229 in file "Controler.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  i               2   37[BANK0 ] int 
  2666 ;;  i               2   35[BANK0 ] int 
  2667 ;;  buffer_TX4     15   16[BANK0 ] unsigned char [15]
  2668 ;;  buffer_TX3     16    0[BANK0 ] unsigned char [16]
  2669 ;;  val             4   31[BANK0 ] float 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0
  2680 ;;      Locals:         0      39       0       0       0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2682 ;;      Totals:         0      39       0       0       0       0       0       0       0
  2683 ;;Total ram usage:       39 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    4
  2686 ;; This function calls:
  2687 ;;		_ADC_Read
  2688 ;;		_LCD_Command
  2689 ;;		_LCD_String_xy
  2690 ;;		___fldiv
  2691 ;;		___flge
  2692 ;;		___flmul
  2693 ;;		___xxtofl
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text8
  2700  001F4A                     __ptext8:
  2701                           	callstack 0
  2702  001F4A                     _SensorLuz:
  2703                           	callstack 26
  2704  001F4A                     
  2705                           ;Controler.c: 231:     float val;;Controler.c: 232:     LCD_Command(0x40);
  2706  001F4A  0E40               	movlw	64
  2707  001F4C  ECE6  F018         	call	_LCD_Command
  2708  001F50                     
  2709                           ;Controler.c: 233:     val = (ADC_Read(1)*5.0) / 1023.0;
  2710  001F50  0E00               	movlw	0
  2711  001F52  6E1B               	movwf	___flmul@a^0,c
  2712  001F54  0E00               	movlw	0
  2713  001F56  6E1C               	movwf	(___flmul@a+1)^0,c
  2714  001F58  0EA0               	movlw	160
  2715  001F5A  6E1D               	movwf	(___flmul@a+2)^0,c
  2716  001F5C  0E40               	movlw	64
  2717  001F5E  6E1E               	movwf	(___flmul@a+3)^0,c
  2718  001F60  0E00               	movlw	0
  2719  001F62  6E02               	movwf	(ADC_Read@channel+1)^0,c
  2720  001F64  0E01               	movlw	1
  2721  001F66  6E01               	movwf	ADC_Read@channel^0,c
  2722  001F68  ECDC  F014         	call	_ADC_Read	;wreg free
  2723  001F6C  C001  F009         	movff	?_ADC_Read,___xxtofl@val
  2724  001F70  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
  2725  001F74  0E00               	movlw	0
  2726  001F76  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  2727  001F78  0EFF               	movlw	-1
  2728  001F7A  6E0B               	movwf	(___xxtofl@val+2)^0,c
  2729  001F7C  6E0C               	movwf	(___xxtofl@val+3)^0,c
  2730  001F7E  0E01               	movlw	1
  2731  001F80  ECCB  F00E         	call	___xxtofl
  2732  001F84  C009  F017         	movff	?___xxtofl,___flmul@b
  2733  001F88  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  2734  001F8C  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  2735  001F90  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  2736  001F94  EC3C  F004         	call	___flmul	;wreg free
  2737  001F98  C017  F030         	movff	?___flmul,___fldiv@b
  2738  001F9C  C018  F031         	movff	?___flmul+1,___fldiv@b+1
  2739  001FA0  C019  F032         	movff	?___flmul+2,___fldiv@b+2
  2740  001FA4  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
  2741  001FA8  0E00               	movlw	0
  2742  001FAA  6E34               	movwf	___fldiv@a^0,c
  2743  001FAC  0EC0               	movlw	192
  2744  001FAE  6E35               	movwf	(___fldiv@a+1)^0,c
  2745  001FB0  0E7F               	movlw	127
  2746  001FB2  6E36               	movwf	(___fldiv@a+2)^0,c
  2747  001FB4  0E44               	movlw	68
  2748  001FB6  6E37               	movwf	(___fldiv@a+3)^0,c
  2749  001FB8  EC51  F006         	call	___fldiv	;wreg free
  2750  001FBC  C030  F07F         	movff	?___fldiv,SensorLuz@val
  2751  001FC0  C031  F080         	movff	?___fldiv+1,SensorLuz@val+1
  2752  001FC4  C032  F081         	movff	?___fldiv+2,SensorLuz@val+2
  2753  001FC8  C033  F082         	movff	?___fldiv+3,SensorLuz@val+3
  2754  001FCC                     
  2755                           ;Controler.c: 235:     if (val > 3) {
  2756  001FCC  0E00               	movlw	0
  2757  001FCE  6E01               	movwf	___flge@ff1^0,c
  2758  001FD0  0E00               	movlw	0
  2759  001FD2  6E02               	movwf	(___flge@ff1+1)^0,c
  2760  001FD4  0E40               	movlw	64
  2761  001FD6  6E03               	movwf	(___flge@ff1+2)^0,c
  2762  001FD8  0E40               	movlw	64
  2763  001FDA  6E04               	movwf	(___flge@ff1+3)^0,c
  2764  001FDC  C07F  F005         	movff	SensorLuz@val,___flge@ff2
  2765  001FE0  C080  F006         	movff	SensorLuz@val+1,___flge@ff2+1
  2766  001FE4  C081  F007         	movff	SensorLuz@val+2,___flge@ff2+2
  2767  001FE8  C082  F008         	movff	SensorLuz@val+3,___flge@ff2+3
  2768  001FEC  EC26  F013         	call	___flge	;wreg free
  2769  001FF0  B0D8               	btfsc	status,0,c
  2770  001FF2  EFFD  F00F         	goto	u4071
  2771  001FF6  EFFF  F00F         	goto	u4070
  2772  001FFA                     u4071:
  2773  001FFA  EF39  F010         	goto	l3692
  2774  001FFE                     u4070:
  2775  001FFE                     
  2776                           ;Controler.c: 237:         LCD_String_xy(4, 0, "Cortina Arriba       ");
  2777  001FFE  0E00               	movlw	0
  2778  002000  6E0A               	movwf	LCD_String_xy@pos^0,c
  2779  002002  0E17               	movlw	low STR_14
  2780  002004  6E0B               	movwf	LCD_String_xy@str^0,c
  2781  002006  0E08               	movlw	high STR_14
  2782  002008  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2783  00200A  0E04               	movlw	4
  2784  00200C  ECC4  F015         	call	_LCD_String_xy
  2785  002010                     
  2786                           ;Controler.c: 238:         PORTEbits.RE0 = 1;
  2787  002010  8084               	bsf	132,0,c	;volatile
  2788  002012                     
  2789                           ;Controler.c: 239:         char buffer_TX3[] = "Cortina arriba\r";
  2790  002012  EE21  F07C         	lfsr	2,SensorLuz@F3735
  2791  002016  EE10  F060         	lfsr	1,SensorLuz@buffer_TX3
  2792  00201A  0E0F               	movlw	15
  2793  00201C                     u4081:
  2794  00201C  CFDB FFE3          	movff	plusw2,plusw1
  2795  002020  06E8               	decf	wreg,f,c
  2796  002022  E2FC               	bc	u4081
  2797  002024                     
  2798                           ;Controler.c: 240:         for (int i = 0; i < 15; i++) {
  2799  002024  0E00               	movlw	0
  2800  002026  0100               	movlb	0	; () banked
  2801  002028  6F84               	movwf	(SensorLuz@i+1)& (0+255),b
  2802  00202A  0E00               	movlw	0
  2803  00202C  6F83               	movwf	SensorLuz@i& (0+255),b
  2804  00202E                     l351:
  2805                           
  2806                           ;Controler.c: 241:             while (!TXSTAbits.TRMT) {
  2807  00202E  A2AC               	btfss	172,1,c	;volatile
  2808  002030  EF1C  F010         	goto	u4091
  2809  002034  EF1E  F010         	goto	u4090
  2810  002038                     u4091:
  2811  002038  EF17  F010         	goto	l351
  2812  00203C                     u4090:
  2813  00203C                     
  2814                           ;Controler.c: 243:             TXREG = buffer_TX3[i];
  2815  00203C  0E60               	movlw	low SensorLuz@buffer_TX3
  2816  00203E  0100               	movlb	0	; () banked
  2817  002040  2583               	addwf	SensorLuz@i& (0+255),w,b
  2818  002042  6ED9               	movwf	fsr2l,c
  2819  002044  0E00               	movlw	high SensorLuz@buffer_TX3
  2820  002046  2184               	addwfc	(SensorLuz@i+1)& (0+255),w,b
  2821  002048  6EDA               	movwf	fsr2h,c
  2822  00204A  50DF               	movf	indf2,w,c
  2823  00204C  6EAD               	movwf	173,c	;volatile
  2824  00204E                     
  2825                           ; BSR set to: 0
  2826                           ;Controler.c: 244:         }
  2827  00204E  4B83               	infsnz	SensorLuz@i& (0+255),f,b
  2828  002050  2B84               	incf	(SensorLuz@i+1)& (0+255),f,b
  2829  002052                     
  2830                           ; BSR set to: 0
  2831  002052  BF84               	btfsc	(SensorLuz@i+1)& (0+255),7,b
  2832  002054  EF35  F010         	goto	u4101
  2833  002058  5184               	movf	(SensorLuz@i+1)& (0+255),w,b
  2834  00205A  E109               	bnz	u4100
  2835  00205C  0E0F               	movlw	15
  2836  00205E  5D83               	subwf	SensorLuz@i& (0+255),w,b
  2837  002060  A0D8               	btfss	status,0,c
  2838  002062  EF35  F010         	goto	u4101
  2839  002066  EF37  F010         	goto	u4100
  2840  00206A                     u4101:
  2841  00206A  EF17  F010         	goto	l351
  2842  00206E                     u4100:
  2843  00206E  EF71  F010         	goto	l362
  2844  002072                     l3692:
  2845                           
  2846                           ;Controler.c: 248:         LCD_String_xy(4, 0, "Cortina Abajo        ");
  2847  002072  0E00               	movlw	0
  2848  002074  6E0A               	movwf	LCD_String_xy@pos^0,c
  2849  002076  0E01               	movlw	low STR_15
  2850  002078  6E0B               	movwf	LCD_String_xy@str^0,c
  2851  00207A  0E08               	movlw	high STR_15
  2852  00207C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2853  00207E  0E04               	movlw	4
  2854  002080  ECC4  F015         	call	_LCD_String_xy
  2855  002084                     
  2856                           ;Controler.c: 249:         PORTEbits.RE0 = 0;
  2857  002084  9084               	bcf	132,0,c	;volatile
  2858  002086                     
  2859                           ;Controler.c: 250:         char buffer_TX4[] = "Cortina abajo\r";
  2860  002086  EE21  F08C         	lfsr	2,SensorLuz@F3738
  2861  00208A  EE10  F070         	lfsr	1,SensorLuz@buffer_TX4
  2862  00208E  0E0E               	movlw	14
  2863  002090                     u4111:
  2864  002090  CFDB FFE3          	movff	plusw2,plusw1
  2865  002094  06E8               	decf	wreg,f,c
  2866  002096  E2FC               	bc	u4111
  2867  002098                     
  2868                           ;Controler.c: 251:         for (int i = 0; i < 15; i++) {
  2869  002098  0E00               	movlw	0
  2870  00209A  0100               	movlb	0	; () banked
  2871  00209C  6F86               	movwf	(SensorLuz@i_950+1)& (0+255),b
  2872  00209E  0E00               	movlw	0
  2873  0020A0  6F85               	movwf	SensorLuz@i_950& (0+255),b
  2874  0020A2                     l359:
  2875                           
  2876                           ;Controler.c: 252:             while (!TXSTAbits.TRMT) {
  2877  0020A2  A2AC               	btfss	172,1,c	;volatile
  2878  0020A4  EF56  F010         	goto	u4121
  2879  0020A8  EF58  F010         	goto	u4120
  2880  0020AC                     u4121:
  2881  0020AC  EF51  F010         	goto	l359
  2882  0020B0                     u4120:
  2883  0020B0                     
  2884                           ;Controler.c: 254:             TXREG = buffer_TX4[i];
  2885  0020B0  0E70               	movlw	low SensorLuz@buffer_TX4
  2886  0020B2  0100               	movlb	0	; () banked
  2887  0020B4  2585               	addwf	SensorLuz@i_950& (0+255),w,b
  2888  0020B6  6ED9               	movwf	fsr2l,c
  2889  0020B8  0E00               	movlw	high SensorLuz@buffer_TX4
  2890  0020BA  2186               	addwfc	(SensorLuz@i_950+1)& (0+255),w,b
  2891  0020BC  6EDA               	movwf	fsr2h,c
  2892  0020BE  50DF               	movf	indf2,w,c
  2893  0020C0  6EAD               	movwf	173,c	;volatile
  2894  0020C2                     
  2895                           ; BSR set to: 0
  2896                           ;Controler.c: 255:         }
  2897  0020C2  4B85               	infsnz	SensorLuz@i_950& (0+255),f,b
  2898  0020C4  2B86               	incf	(SensorLuz@i_950+1)& (0+255),f,b
  2899  0020C6                     
  2900                           ; BSR set to: 0
  2901  0020C6  BF86               	btfsc	(SensorLuz@i_950+1)& (0+255),7,b
  2902  0020C8  EF6F  F010         	goto	u4131
  2903  0020CC  5186               	movf	(SensorLuz@i_950+1)& (0+255),w,b
  2904  0020CE  E109               	bnz	u4130
  2905  0020D0  0E0F               	movlw	15
  2906  0020D2  5D85               	subwf	SensorLuz@i_950& (0+255),w,b
  2907  0020D4  A0D8               	btfss	status,0,c
  2908  0020D6  EF6F  F010         	goto	u4131
  2909  0020DA  EF71  F010         	goto	u4130
  2910  0020DE                     u4131:
  2911  0020DE  EF51  F010         	goto	l359
  2912  0020E2                     u4130:
  2913  0020E2                     l362:
  2914                           
  2915                           ; BSR set to: 0
  2916  0020E2  0012               	return		;funcret
  2917  0020E4                     __end_of_SensorLuz:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function ___xxtofl *****************
  2921 ;; Defined at:
  2922 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  sign            1    wreg     unsigned char 
  2925 ;;  val             4    8[COMRAM] long 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  sign            1   16[COMRAM] unsigned char 
  2928 ;;  arg             4   18[COMRAM] unsigned long 
  2929 ;;  exp             1   17[COMRAM] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  4    8[COMRAM] unsigned char 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         4       0       0       0       0       0       0       0       0
  2940 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2941 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2942 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2943 ;;Total ram usage:       14 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_SensorTemperatura
  2949 ;;		_SensorLuz
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text9
  2954  001D96                     __ptext9:
  2955                           	callstack 0
  2956  001D96                     ___xxtofl:
  2957                           	callstack 29
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;incstack = 0
  2961                           ;___xxtofl@sign stored from wreg
  2962  001D96  6E11               	movwf	___xxtofl@sign^0,c
  2963  001D98  5011               	movf	___xxtofl@sign^0,w,c
  2964  001D9A  B4D8               	btfsc	status,2,c
  2965  001D9C  EFD2  F00E         	goto	u3761
  2966  001DA0  EFD4  F00E         	goto	u3760
  2967  001DA4                     u3761:
  2968  001DA4  EFF6  F00E         	goto	l1023
  2969  001DA8                     u3760:
  2970  001DA8  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2971  001DAA  EFDB  F00E         	goto	u3770
  2972  001DAE  EFD9  F00E         	goto	u3771
  2973  001DB2                     u3771:
  2974  001DB2  EFF6  F00E         	goto	l1023
  2975  001DB6                     u3770:
  2976  001DB6  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2977  001DBA  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2978  001DBE  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2979  001DC2  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2980  001DC6  1E0D               	comf	??___xxtofl^0,f,c
  2981  001DC8  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2982  001DCA  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2983  001DCC  1E10               	comf	(??___xxtofl+3)^0,f,c
  2984  001DCE  2A0D               	incf	??___xxtofl^0,f,c
  2985  001DD0  0E00               	movlw	0
  2986  001DD2  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2987  001DD4  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2988  001DD6  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2989  001DD8  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2990  001DDC  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2991  001DE0  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2992  001DE4  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2993  001DE8  EFFE  F00E         	goto	l3450
  2994  001DEC                     l1023:
  2995  001DEC  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2996  001DF0  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2997  001DF4  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2998  001DF8  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2999  001DFC                     l3450:
  3000  001DFC  5009               	movf	___xxtofl@val^0,w,c
  3001  001DFE  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  3002  001E00  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  3003  001E02  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  3004  001E04  A4D8               	btfss	status,2,c
  3005  001E06  EF07  F00F         	goto	u3781
  3006  001E0A  EF09  F00F         	goto	u3780
  3007  001E0E                     u3781:
  3008  001E0E  EF13  F00F         	goto	l3456
  3009  001E12                     u3780:
  3010  001E12  0E00               	movlw	0
  3011  001E14  6E09               	movwf	?___xxtofl^0,c
  3012  001E16  0E00               	movlw	0
  3013  001E18  6E0A               	movwf	(?___xxtofl+1)^0,c
  3014  001E1A  0E00               	movlw	0
  3015  001E1C  6E0B               	movwf	(?___xxtofl+2)^0,c
  3016  001E1E  0E00               	movlw	0
  3017  001E20  6E0C               	movwf	(?___xxtofl+3)^0,c
  3018  001E22  EFA4  F00F         	goto	l1026
  3019  001E26                     l3456:
  3020  001E26  0E96               	movlw	150
  3021  001E28  6E12               	movwf	___xxtofl@exp^0,c
  3022  001E2A  EF1D  F00F         	goto	l3460
  3023  001E2E                     l3458:
  3024  001E2E  2A12               	incf	___xxtofl@exp^0,f,c
  3025  001E30  90D8               	bcf	status,0,c
  3026  001E32  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  3027  001E34  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  3028  001E36  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  3029  001E38  3213               	rrcf	___xxtofl@arg^0,f,c
  3030  001E3A                     l3460:
  3031  001E3A  0E00               	movlw	0
  3032  001E3C  1413               	andwf	___xxtofl@arg^0,w,c
  3033  001E3E  6E0D               	movwf	??___xxtofl^0,c
  3034  001E40  0E00               	movlw	0
  3035  001E42  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  3036  001E44  6E0E               	movwf	(??___xxtofl+1)^0,c
  3037  001E46  0E00               	movlw	0
  3038  001E48  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  3039  001E4A  6E0F               	movwf	(??___xxtofl+2)^0,c
  3040  001E4C  0EFE               	movlw	254
  3041  001E4E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  3042  001E50  6E10               	movwf	(??___xxtofl+3)^0,c
  3043  001E52  500D               	movf	??___xxtofl^0,w,c
  3044  001E54  100E               	iorwf	(??___xxtofl+1)^0,w,c
  3045  001E56  100F               	iorwf	(??___xxtofl+2)^0,w,c
  3046  001E58  1010               	iorwf	(??___xxtofl+3)^0,w,c
  3047  001E5A  A4D8               	btfss	status,2,c
  3048  001E5C  EF32  F00F         	goto	u3791
  3049  001E60  EF34  F00F         	goto	u3790
  3050  001E64                     u3791:
  3051  001E64  EF17  F00F         	goto	l3458
  3052  001E68                     u3790:
  3053  001E68  EF42  F00F         	goto	l1030
  3054  001E6C                     l3462:
  3055  001E6C  2A12               	incf	___xxtofl@exp^0,f,c
  3056  001E6E  0E01               	movlw	1
  3057  001E70  2613               	addwf	___xxtofl@arg^0,f,c
  3058  001E72  0E00               	movlw	0
  3059  001E74  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  3060  001E76  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  3061  001E78  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  3062  001E7A  90D8               	bcf	status,0,c
  3063  001E7C  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  3064  001E7E  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  3065  001E80  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  3066  001E82  3213               	rrcf	___xxtofl@arg^0,f,c
  3067  001E84                     l1030:
  3068  001E84  0E00               	movlw	0
  3069  001E86  1413               	andwf	___xxtofl@arg^0,w,c
  3070  001E88  6E0D               	movwf	??___xxtofl^0,c
  3071  001E8A  0E00               	movlw	0
  3072  001E8C  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  3073  001E8E  6E0E               	movwf	(??___xxtofl+1)^0,c
  3074  001E90  0E00               	movlw	0
  3075  001E92  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  3076  001E94  6E0F               	movwf	(??___xxtofl+2)^0,c
  3077  001E96  0EFF               	movlw	255
  3078  001E98  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  3079  001E9A  6E10               	movwf	(??___xxtofl+3)^0,c
  3080  001E9C  500D               	movf	??___xxtofl^0,w,c
  3081  001E9E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  3082  001EA0  100F               	iorwf	(??___xxtofl+2)^0,w,c
  3083  001EA2  1010               	iorwf	(??___xxtofl+3)^0,w,c
  3084  001EA4  A4D8               	btfss	status,2,c
  3085  001EA6  EF57  F00F         	goto	u3801
  3086  001EAA  EF59  F00F         	goto	u3800
  3087  001EAE                     u3801:
  3088  001EAE  EF36  F00F         	goto	l3462
  3089  001EB2                     u3800:
  3090  001EB2  EF61  F00F         	goto	l3470
  3091  001EB6                     l3468:
  3092  001EB6  0612               	decf	___xxtofl@exp^0,f,c
  3093  001EB8  90D8               	bcf	status,0,c
  3094  001EBA  3613               	rlcf	___xxtofl@arg^0,f,c
  3095  001EBC  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  3096  001EBE  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  3097  001EC0  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  3098  001EC2                     l3470:
  3099  001EC2  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  3100  001EC4  EF66  F00F         	goto	u3811
  3101  001EC8  EF68  F00F         	goto	u3810
  3102  001ECC                     u3811:
  3103  001ECC  EF70  F00F         	goto	l1037
  3104  001ED0                     u3810:
  3105  001ED0  0E02               	movlw	2
  3106  001ED2  6012               	cpfslt	___xxtofl@exp^0,c
  3107  001ED4  EF6E  F00F         	goto	u3821
  3108  001ED8  EF70  F00F         	goto	u3820
  3109  001EDC                     u3821:
  3110  001EDC  EF5B  F00F         	goto	l3468
  3111  001EE0                     u3820:
  3112  001EE0                     l1037:
  3113  001EE0  B012               	btfsc	___xxtofl@exp^0,0,c
  3114  001EE2  EF75  F00F         	goto	u3831
  3115  001EE6  EF77  F00F         	goto	u3830
  3116  001EEA                     u3831:
  3117  001EEA  EF78  F00F         	goto	l3476
  3118  001EEE                     u3830:
  3119  001EEE  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  3120  001EF0                     l3476:
  3121  001EF0  90D8               	bcf	status,0,c
  3122  001EF2  3212               	rrcf	___xxtofl@exp^0,f,c
  3123  001EF4  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  3124  001EF8  6A0E               	clrf	(??___xxtofl+1)^0,c
  3125  001EFA  6A0F               	clrf	(??___xxtofl+2)^0,c
  3126  001EFC  6A10               	clrf	(??___xxtofl+3)^0,c
  3127  001EFE  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  3128  001F02  6A0F               	clrf	(??___xxtofl+2)^0,c
  3129  001F04  6A0E               	clrf	(??___xxtofl+1)^0,c
  3130  001F06  6A0D               	clrf	??___xxtofl^0,c
  3131  001F08  500D               	movf	??___xxtofl^0,w,c
  3132  001F0A  1213               	iorwf	___xxtofl@arg^0,f,c
  3133  001F0C  500E               	movf	(??___xxtofl+1)^0,w,c
  3134  001F0E  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  3135  001F10  500F               	movf	(??___xxtofl+2)^0,w,c
  3136  001F12  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  3137  001F14  5010               	movf	(??___xxtofl+3)^0,w,c
  3138  001F16  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  3139  001F18  5011               	movf	___xxtofl@sign^0,w,c
  3140  001F1A  B4D8               	btfsc	status,2,c
  3141  001F1C  EF92  F00F         	goto	u3841
  3142  001F20  EF94  F00F         	goto	u3840
  3143  001F24                     u3841:
  3144  001F24  EF9C  F00F         	goto	l3486
  3145  001F28                     u3840:
  3146  001F28  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  3147  001F2A  EF9B  F00F         	goto	u3850
  3148  001F2E  EF99  F00F         	goto	u3851
  3149  001F32                     u3851:
  3150  001F32  EF9C  F00F         	goto	l3486
  3151  001F36                     u3850:
  3152  001F36  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  3153  001F38                     l3486:
  3154  001F38  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  3155  001F3C  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  3156  001F40  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  3157  001F44  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  3158  001F48                     l1026:
  3159  001F48  0012               	return		;funcret
  3160  001F4A                     __end_of___xxtofl:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function ___flmul *****************
  3164 ;; Defined at:
  3165 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  b               4   22[COMRAM] unsigned char 
  3168 ;;  a               4   26[COMRAM] unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  prod            4   41[COMRAM] struct .
  3171 ;;  grs             4   35[COMRAM] unsigned long 
  3172 ;;  temp            2   45[COMRAM] struct .
  3173 ;;  bexp            1   40[COMRAM] unsigned char 
  3174 ;;  aexp            1   39[COMRAM] unsigned char 
  3175 ;;  sign            1   34[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  4   22[COMRAM] unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, prodl, prodh
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3185 ;;      Params:         8       0       0       0       0       0       0       0       0
  3186 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3187 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3188 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3189 ;;Total ram usage:       25 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_SensorTemperatura
  3195 ;;		_SensorLuz
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text10
  3200  000878                     __ptext10:
  3201                           	callstack 0
  3202  000878                     ___flmul:
  3203                           	callstack 29
  3204  000878  501A               	movf	(___flmul@b+3)^0,w,c
  3205  00087A  0B80               	andlw	128
  3206  00087C  6E23               	movwf	___flmul@sign^0,c
  3207  00087E  501A               	movf	(___flmul@b+3)^0,w,c
  3208  000880  241A               	addwf	(___flmul@b+3)^0,w,c
  3209  000882  6E29               	movwf	___flmul@bexp^0,c
  3210  000884  AE19               	btfss	(___flmul@b+2)^0,7,c
  3211  000886  EF47  F004         	goto	u3451
  3212  00088A  EF49  F004         	goto	u3450
  3213  00088E                     u3451:
  3214  00088E  EF4A  F004         	goto	l3254
  3215  000892                     u3450:
  3216  000892  8029               	bsf	___flmul@bexp^0,0,c
  3217  000894                     l3254:
  3218  000894  5029               	movf	___flmul@bexp^0,w,c
  3219  000896  B4D8               	btfsc	status,2,c
  3220  000898  EF50  F004         	goto	u3461
  3221  00089C  EF52  F004         	goto	u3460
  3222  0008A0                     u3461:
  3223  0008A0  EF65  F004         	goto	l3262
  3224  0008A4                     u3460:
  3225  0008A4  2829               	incf	___flmul@bexp^0,w,c
  3226  0008A6  A4D8               	btfss	status,2,c
  3227  0008A8  EF58  F004         	goto	u3471
  3228  0008AC  EF5A  F004         	goto	u3470
  3229  0008B0                     u3471:
  3230  0008B0  EF62  F004         	goto	l3260
  3231  0008B4                     u3470:
  3232  0008B4  0E00               	movlw	0
  3233  0008B6  6E17               	movwf	___flmul@b^0,c
  3234  0008B8  0E00               	movlw	0
  3235  0008BA  6E18               	movwf	(___flmul@b+1)^0,c
  3236  0008BC  0E00               	movlw	0
  3237  0008BE  6E19               	movwf	(___flmul@b+2)^0,c
  3238  0008C0  0E00               	movlw	0
  3239  0008C2  6E1A               	movwf	(___flmul@b+3)^0,c
  3240  0008C4                     l3260:
  3241  0008C4  8E19               	bsf	(___flmul@b+2)^0,7,c
  3242  0008C6  EF6D  F004         	goto	l3264
  3243  0008CA                     l3262:
  3244  0008CA  0E00               	movlw	0
  3245  0008CC  6E17               	movwf	___flmul@b^0,c
  3246  0008CE  0E00               	movlw	0
  3247  0008D0  6E18               	movwf	(___flmul@b+1)^0,c
  3248  0008D2  0E00               	movlw	0
  3249  0008D4  6E19               	movwf	(___flmul@b+2)^0,c
  3250  0008D6  0E00               	movlw	0
  3251  0008D8  6E1A               	movwf	(___flmul@b+3)^0,c
  3252  0008DA                     l3264:
  3253  0008DA  501E               	movf	(___flmul@a+3)^0,w,c
  3254  0008DC  0B80               	andlw	128
  3255  0008DE  1A23               	xorwf	___flmul@sign^0,f,c
  3256  0008E0  501E               	movf	(___flmul@a+3)^0,w,c
  3257  0008E2  241E               	addwf	(___flmul@a+3)^0,w,c
  3258  0008E4  6E28               	movwf	___flmul@aexp^0,c
  3259  0008E6  AE1D               	btfss	(___flmul@a+2)^0,7,c
  3260  0008E8  EF78  F004         	goto	u3481
  3261  0008EC  EF7A  F004         	goto	u3480
  3262  0008F0                     u3481:
  3263  0008F0  EF7B  F004         	goto	l3272
  3264  0008F4                     u3480:
  3265  0008F4  8028               	bsf	___flmul@aexp^0,0,c
  3266  0008F6                     l3272:
  3267  0008F6  5028               	movf	___flmul@aexp^0,w,c
  3268  0008F8  B4D8               	btfsc	status,2,c
  3269  0008FA  EF81  F004         	goto	u3491
  3270  0008FE  EF83  F004         	goto	u3490
  3271  000902                     u3491:
  3272  000902  EF96  F004         	goto	l3280
  3273  000906                     u3490:
  3274  000906  2828               	incf	___flmul@aexp^0,w,c
  3275  000908  A4D8               	btfss	status,2,c
  3276  00090A  EF89  F004         	goto	u3501
  3277  00090E  EF8B  F004         	goto	u3500
  3278  000912                     u3501:
  3279  000912  EF93  F004         	goto	l3278
  3280  000916                     u3500:
  3281  000916  0E00               	movlw	0
  3282  000918  6E1B               	movwf	___flmul@a^0,c
  3283  00091A  0E00               	movlw	0
  3284  00091C  6E1C               	movwf	(___flmul@a+1)^0,c
  3285  00091E  0E00               	movlw	0
  3286  000920  6E1D               	movwf	(___flmul@a+2)^0,c
  3287  000922  0E00               	movlw	0
  3288  000924  6E1E               	movwf	(___flmul@a+3)^0,c
  3289  000926                     l3278:
  3290  000926  8E1D               	bsf	(___flmul@a+2)^0,7,c
  3291  000928  EF9E  F004         	goto	l982
  3292  00092C                     l3280:
  3293  00092C  0E00               	movlw	0
  3294  00092E  6E1B               	movwf	___flmul@a^0,c
  3295  000930  0E00               	movlw	0
  3296  000932  6E1C               	movwf	(___flmul@a+1)^0,c
  3297  000934  0E00               	movlw	0
  3298  000936  6E1D               	movwf	(___flmul@a+2)^0,c
  3299  000938  0E00               	movlw	0
  3300  00093A  6E1E               	movwf	(___flmul@a+3)^0,c
  3301  00093C                     l982:
  3302  00093C  5028               	movf	___flmul@aexp^0,w,c
  3303  00093E  B4D8               	btfsc	status,2,c
  3304  000940  EFA4  F004         	goto	u3511
  3305  000944  EFA6  F004         	goto	u3510
  3306  000948                     u3511:
  3307  000948  EFAE  F004         	goto	l3284
  3308  00094C                     u3510:
  3309  00094C  5029               	movf	___flmul@bexp^0,w,c
  3310  00094E  A4D8               	btfss	status,2,c
  3311  000950  EFAC  F004         	goto	u3521
  3312  000954  EFAE  F004         	goto	u3520
  3313  000958                     u3521:
  3314  000958  EFB8  F004         	goto	l3288
  3315  00095C                     u3520:
  3316  00095C                     l3284:
  3317  00095C  0E00               	movlw	0
  3318  00095E  6E17               	movwf	?___flmul^0,c
  3319  000960  0E00               	movlw	0
  3320  000962  6E18               	movwf	(?___flmul+1)^0,c
  3321  000964  0E00               	movlw	0
  3322  000966  6E19               	movwf	(?___flmul+2)^0,c
  3323  000968  0E00               	movlw	0
  3324  00096A  6E1A               	movwf	(?___flmul+3)^0,c
  3325  00096C  EF50  F006         	goto	l986
  3326  000970                     l3288:
  3327  000970  501D               	movf	(___flmul@a+2)^0,w,c
  3328  000972  0217               	mulwf	___flmul@b^0,c
  3329  000974  CFF3 F02E          	movff	prodl,___flmul@temp
  3330  000978  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3331  00097C  502E               	movf	___flmul@temp^0,w,c
  3332  00097E  6E24               	movwf	___flmul@grs^0,c
  3333  000980  6A25               	clrf	(___flmul@grs+1)^0,c
  3334  000982  6A26               	clrf	(___flmul@grs+2)^0,c
  3335  000984  6A27               	clrf	(___flmul@grs+3)^0,c
  3336  000986  502F               	movf	(___flmul@temp+1)^0,w,c
  3337  000988  6E2A               	movwf	___flmul@prod^0,c
  3338  00098A  6A2B               	clrf	(___flmul@prod+1)^0,c
  3339  00098C  6A2C               	clrf	(___flmul@prod+2)^0,c
  3340  00098E  6A2D               	clrf	(___flmul@prod+3)^0,c
  3341  000990  501C               	movf	(___flmul@a+1)^0,w,c
  3342  000992  0218               	mulwf	(___flmul@b+1)^0,c
  3343  000994  CFF3 F02E          	movff	prodl,___flmul@temp
  3344  000998  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3345  00099C  502E               	movf	___flmul@temp^0,w,c
  3346  00099E  2624               	addwf	___flmul@grs^0,f,c
  3347  0009A0  0E00               	movlw	0
  3348  0009A2  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3349  0009A4  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3350  0009A6  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3351  0009A8  502F               	movf	(___flmul@temp+1)^0,w,c
  3352  0009AA  262A               	addwf	___flmul@prod^0,f,c
  3353  0009AC  0E00               	movlw	0
  3354  0009AE  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3355  0009B0  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3356  0009B2  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3357  0009B4  501B               	movf	___flmul@a^0,w,c
  3358  0009B6  0219               	mulwf	(___flmul@b+2)^0,c
  3359  0009B8  CFF3 F02E          	movff	prodl,___flmul@temp
  3360  0009BC  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3361  0009C0  502E               	movf	___flmul@temp^0,w,c
  3362  0009C2  2624               	addwf	___flmul@grs^0,f,c
  3363  0009C4  0E00               	movlw	0
  3364  0009C6  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3365  0009C8  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3366  0009CA  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3367  0009CC  502F               	movf	(___flmul@temp+1)^0,w,c
  3368  0009CE  262A               	addwf	___flmul@prod^0,f,c
  3369  0009D0  0E00               	movlw	0
  3370  0009D2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3371  0009D4  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3372  0009D6  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3373  0009D8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3374  0009DC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3375  0009E0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3376  0009E4  6A24               	clrf	___flmul@grs^0,c
  3377  0009E6  501B               	movf	___flmul@a^0,w,c
  3378  0009E8  0218               	mulwf	(___flmul@b+1)^0,c
  3379  0009EA  CFF3 F02E          	movff	prodl,___flmul@temp
  3380  0009EE  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3381  0009F2  502E               	movf	___flmul@temp^0,w,c
  3382  0009F4  2624               	addwf	___flmul@grs^0,f,c
  3383  0009F6  502F               	movf	(___flmul@temp+1)^0,w,c
  3384  0009F8  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3385  0009FA  0E00               	movlw	0
  3386  0009FC  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3387  0009FE  0E00               	movlw	0
  3388  000A00  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3389  000A02  501C               	movf	(___flmul@a+1)^0,w,c
  3390  000A04  0217               	mulwf	___flmul@b^0,c
  3391  000A06  CFF3 F02E          	movff	prodl,___flmul@temp
  3392  000A0A  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3393  000A0E  502E               	movf	___flmul@temp^0,w,c
  3394  000A10  2624               	addwf	___flmul@grs^0,f,c
  3395  000A12  502F               	movf	(___flmul@temp+1)^0,w,c
  3396  000A14  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3397  000A16  0E00               	movlw	0
  3398  000A18  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3399  000A1A  0E00               	movlw	0
  3400  000A1C  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3401  000A1E  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3402  000A22  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3403  000A26  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3404  000A2A  6A24               	clrf	___flmul@grs^0,c
  3405  000A2C  501B               	movf	___flmul@a^0,w,c
  3406  000A2E  0217               	mulwf	___flmul@b^0,c
  3407  000A30  CFF3 F02E          	movff	prodl,___flmul@temp
  3408  000A34  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3409  000A38  502E               	movf	___flmul@temp^0,w,c
  3410  000A3A  2624               	addwf	___flmul@grs^0,f,c
  3411  000A3C  502F               	movf	(___flmul@temp+1)^0,w,c
  3412  000A3E  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3413  000A40  0E00               	movlw	0
  3414  000A42  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3415  000A44  0E00               	movlw	0
  3416  000A46  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3417  000A48  501D               	movf	(___flmul@a+2)^0,w,c
  3418  000A4A  0218               	mulwf	(___flmul@b+1)^0,c
  3419  000A4C  CFF3 F02E          	movff	prodl,___flmul@temp
  3420  000A50  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3421  000A54  502E               	movf	___flmul@temp^0,w,c
  3422  000A56  262A               	addwf	___flmul@prod^0,f,c
  3423  000A58  502F               	movf	(___flmul@temp+1)^0,w,c
  3424  000A5A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3425  000A5C  0E00               	movlw	0
  3426  000A5E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3427  000A60  0E00               	movlw	0
  3428  000A62  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3429  000A64  501C               	movf	(___flmul@a+1)^0,w,c
  3430  000A66  0219               	mulwf	(___flmul@b+2)^0,c
  3431  000A68  CFF3 F02E          	movff	prodl,___flmul@temp
  3432  000A6C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3433  000A70  502E               	movf	___flmul@temp^0,w,c
  3434  000A72  262A               	addwf	___flmul@prod^0,f,c
  3435  000A74  502F               	movf	(___flmul@temp+1)^0,w,c
  3436  000A76  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3437  000A78  0E00               	movlw	0
  3438  000A7A  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3439  000A7C  0E00               	movlw	0
  3440  000A7E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3441  000A80  501D               	movf	(___flmul@a+2)^0,w,c
  3442  000A82  0219               	mulwf	(___flmul@b+2)^0,c
  3443  000A84  CFF3 F02E          	movff	prodl,___flmul@temp
  3444  000A88  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3445  000A8C  502E               	movf	___flmul@temp^0,w,c
  3446  000A8E  6E1F               	movwf	??___flmul^0,c
  3447  000A90  502F               	movf	(___flmul@temp+1)^0,w,c
  3448  000A92  6E20               	movwf	(??___flmul+1)^0,c
  3449  000A94  6A21               	clrf	(??___flmul+2)^0,c
  3450  000A96  6A22               	clrf	(??___flmul+3)^0,c
  3451  000A98  C021  F022         	movff	??___flmul+2,??___flmul+3
  3452  000A9C  C020  F021         	movff	??___flmul+1,??___flmul+2
  3453  000AA0  C01F  F020         	movff	??___flmul,??___flmul+1
  3454  000AA4  6A1F               	clrf	??___flmul^0,c
  3455  000AA6  501F               	movf	??___flmul^0,w,c
  3456  000AA8  262A               	addwf	___flmul@prod^0,f,c
  3457  000AAA  5020               	movf	(??___flmul+1)^0,w,c
  3458  000AAC  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3459  000AAE  5021               	movf	(??___flmul+2)^0,w,c
  3460  000AB0  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3461  000AB2  5022               	movf	(??___flmul+3)^0,w,c
  3462  000AB4  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3463  000AB6  C024  F01F         	movff	___flmul@grs,??___flmul
  3464  000ABA  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  3465  000ABE  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  3466  000AC2  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  3467  000AC6  0E19               	movlw	25
  3468  000AC8  EF6B  F005         	goto	u3530
  3469  000ACC                     u3535:
  3470  000ACC  90D8               	bcf	status,0,c
  3471  000ACE  3222               	rrcf	(??___flmul+3)^0,f,c
  3472  000AD0  3221               	rrcf	(??___flmul+2)^0,f,c
  3473  000AD2  3220               	rrcf	(??___flmul+1)^0,f,c
  3474  000AD4  321F               	rrcf	??___flmul^0,f,c
  3475  000AD6                     u3530:
  3476  000AD6  2EE8               	decfsz	wreg,f,c
  3477  000AD8  EF66  F005         	goto	u3535
  3478  000ADC  501F               	movf	??___flmul^0,w,c
  3479  000ADE  262A               	addwf	___flmul@prod^0,f,c
  3480  000AE0  5020               	movf	(??___flmul+1)^0,w,c
  3481  000AE2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3482  000AE4  5021               	movf	(??___flmul+2)^0,w,c
  3483  000AE6  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3484  000AE8  5022               	movf	(??___flmul+3)^0,w,c
  3485  000AEA  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3486  000AEC  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3487  000AF0  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3488  000AF4  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3489  000AF8  6A24               	clrf	___flmul@grs^0,c
  3490  000AFA  5028               	movf	___flmul@aexp^0,w,c
  3491  000AFC  C029  F01F         	movff	___flmul@bexp,??___flmul
  3492  000B00  6A20               	clrf	(??___flmul+1)^0,c
  3493  000B02  261F               	addwf	??___flmul^0,f,c
  3494  000B04  0E00               	movlw	0
  3495  000B06  2220               	addwfc	(??___flmul+1)^0,f,c
  3496  000B08  0E82               	movlw	130
  3497  000B0A  241F               	addwf	??___flmul^0,w,c
  3498  000B0C  6E2E               	movwf	___flmul@temp^0,c
  3499  000B0E  0EFF               	movlw	255
  3500  000B10  2020               	addwfc	(??___flmul+1)^0,w,c
  3501  000B12  6E2F               	movwf	(___flmul@temp+1)^0,c
  3502  000B14  EFA1  F005         	goto	l3336
  3503  000B18                     l3330:
  3504  000B18  90D8               	bcf	status,0,c
  3505  000B1A  362A               	rlcf	___flmul@prod^0,f,c
  3506  000B1C  362B               	rlcf	(___flmul@prod+1)^0,f,c
  3507  000B1E  362C               	rlcf	(___flmul@prod+2)^0,f,c
  3508  000B20  362D               	rlcf	(___flmul@prod+3)^0,f,c
  3509  000B22  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3510  000B24  EF96  F005         	goto	u3541
  3511  000B28  EF98  F005         	goto	u3540
  3512  000B2C                     u3541:
  3513  000B2C  EF99  F005         	goto	l989
  3514  000B30                     u3540:
  3515  000B30  802A               	bsf	___flmul@prod^0,0,c
  3516  000B32                     l989:
  3517  000B32  90D8               	bcf	status,0,c
  3518  000B34  3624               	rlcf	___flmul@grs^0,f,c
  3519  000B36  3625               	rlcf	(___flmul@grs+1)^0,f,c
  3520  000B38  3626               	rlcf	(___flmul@grs+2)^0,f,c
  3521  000B3A  3627               	rlcf	(___flmul@grs+3)^0,f,c
  3522  000B3C  062E               	decf	___flmul@temp^0,f,c
  3523  000B3E  A0D8               	btfss	status,0,c
  3524  000B40  062F               	decf	(___flmul@temp+1)^0,f,c
  3525  000B42                     l3336:
  3526  000B42  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  3527  000B44  EFA6  F005         	goto	u3551
  3528  000B48  EFA8  F005         	goto	u3550
  3529  000B4C                     u3551:
  3530  000B4C  EF8C  F005         	goto	l3330
  3531  000B50                     u3550:
  3532  000B50  0E00               	movlw	0
  3533  000B52  6E28               	movwf	___flmul@aexp^0,c
  3534  000B54  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3535  000B56  EFAF  F005         	goto	u3561
  3536  000B5A  EFB1  F005         	goto	u3560
  3537  000B5E                     u3561:
  3538  000B5E  EFD5  F005         	goto	l991
  3539  000B62                     u3560:
  3540  000B62  0EFF               	movlw	255
  3541  000B64  1424               	andwf	___flmul@grs^0,w,c
  3542  000B66  6E1F               	movwf	??___flmul^0,c
  3543  000B68  0EFF               	movlw	255
  3544  000B6A  1425               	andwf	(___flmul@grs+1)^0,w,c
  3545  000B6C  6E20               	movwf	(??___flmul+1)^0,c
  3546  000B6E  0EFF               	movlw	255
  3547  000B70  1426               	andwf	(___flmul@grs+2)^0,w,c
  3548  000B72  6E21               	movwf	(??___flmul+2)^0,c
  3549  000B74  0E7F               	movlw	127
  3550  000B76  1427               	andwf	(___flmul@grs+3)^0,w,c
  3551  000B78  6E22               	movwf	(??___flmul+3)^0,c
  3552  000B7A  501F               	movf	??___flmul^0,w,c
  3553  000B7C  1020               	iorwf	(??___flmul+1)^0,w,c
  3554  000B7E  1021               	iorwf	(??___flmul+2)^0,w,c
  3555  000B80  1022               	iorwf	(??___flmul+3)^0,w,c
  3556  000B82  B4D8               	btfsc	status,2,c
  3557  000B84  EFC6  F005         	goto	u3571
  3558  000B88  EFC8  F005         	goto	u3570
  3559  000B8C                     u3571:
  3560  000B8C  EFCC  F005         	goto	l992
  3561  000B90                     u3570:
  3562  000B90                     l3344:
  3563  000B90  0E01               	movlw	1
  3564  000B92  6E28               	movwf	___flmul@aexp^0,c
  3565  000B94  EFD5  F005         	goto	l991
  3566  000B98                     l992:
  3567  000B98  A02A               	btfss	___flmul@prod^0,0,c
  3568  000B9A  EFD1  F005         	goto	u3581
  3569  000B9E  EFD3  F005         	goto	u3580
  3570  000BA2                     u3581:
  3571  000BA2  EFD5  F005         	goto	l991
  3572  000BA6                     u3580:
  3573  000BA6  EFC8  F005         	goto	l3344
  3574  000BAA                     l991:
  3575  000BAA  5028               	movf	___flmul@aexp^0,w,c
  3576  000BAC  B4D8               	btfsc	status,2,c
  3577  000BAE  EFDB  F005         	goto	u3591
  3578  000BB2  EFDD  F005         	goto	u3590
  3579  000BB6                     u3591:
  3580  000BB6  EF01  F006         	goto	l3356
  3581  000BBA                     u3590:
  3582  000BBA  0E01               	movlw	1
  3583  000BBC  262A               	addwf	___flmul@prod^0,f,c
  3584  000BBE  0E00               	movlw	0
  3585  000BC0  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3586  000BC2  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3587  000BC4  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3588  000BC6  A02D               	btfss	(___flmul@prod+3)^0,0,c
  3589  000BC8  EFE8  F005         	goto	u3601
  3590  000BCC  EFEA  F005         	goto	u3600
  3591  000BD0                     u3601:
  3592  000BD0  EF01  F006         	goto	l3356
  3593  000BD4                     u3600:
  3594  000BD4  C02A  F01F         	movff	___flmul@prod,??___flmul
  3595  000BD8  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  3596  000BDC  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  3597  000BE0  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  3598  000BE4  3422               	rlcf	(??___flmul+3)^0,w,c
  3599  000BE6  3222               	rrcf	(??___flmul+3)^0,f,c
  3600  000BE8  3221               	rrcf	(??___flmul+2)^0,f,c
  3601  000BEA  3220               	rrcf	(??___flmul+1)^0,f,c
  3602  000BEC  321F               	rrcf	??___flmul^0,f,c
  3603  000BEE  C01F  F02A         	movff	??___flmul,___flmul@prod
  3604  000BF2  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  3605  000BF6  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  3606  000BFA  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  3607  000BFE  4A2E               	infsnz	___flmul@temp^0,f,c
  3608  000C00  2A2F               	incf	(___flmul@temp+1)^0,f,c
  3609  000C02                     l3356:
  3610  000C02  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  3611  000C04  EF0C  F006         	goto	u3611
  3612  000C08  502F               	movf	(___flmul@temp+1)^0,w,c
  3613  000C0A  E108               	bnz	u3610
  3614  000C0C  282E               	incf	___flmul@temp^0,w,c
  3615  000C0E  A0D8               	btfss	status,0,c
  3616  000C10  EF0C  F006         	goto	u3611
  3617  000C14  EF0E  F006         	goto	u3610
  3618  000C18                     u3611:
  3619  000C18  EF18  F006         	goto	l3360
  3620  000C1C                     u3610:
  3621  000C1C  0E00               	movlw	0
  3622  000C1E  6E2A               	movwf	___flmul@prod^0,c
  3623  000C20  0E00               	movlw	0
  3624  000C22  6E2B               	movwf	(___flmul@prod+1)^0,c
  3625  000C24  0E80               	movlw	128
  3626  000C26  6E2C               	movwf	(___flmul@prod+2)^0,c
  3627  000C28  0E7F               	movlw	127
  3628  000C2A  6E2D               	movwf	(___flmul@prod+3)^0,c
  3629  000C2C  EF46  F006         	goto	l3372
  3630  000C30                     l3360:
  3631  000C30  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  3632  000C32  EF25  F006         	goto	u3620
  3633  000C36  502F               	movf	(___flmul@temp+1)^0,w,c
  3634  000C38  E106               	bnz	u3621
  3635  000C3A  042E               	decf	___flmul@temp^0,w,c
  3636  000C3C  B0D8               	btfsc	status,0,c
  3637  000C3E  EF23  F006         	goto	u3621
  3638  000C42  EF25  F006         	goto	u3620
  3639  000C46                     u3621:
  3640  000C46  EF31  F006         	goto	l999
  3641  000C4A                     u3620:
  3642  000C4A  0E00               	movlw	0
  3643  000C4C  6E2A               	movwf	___flmul@prod^0,c
  3644  000C4E  0E00               	movlw	0
  3645  000C50  6E2B               	movwf	(___flmul@prod+1)^0,c
  3646  000C52  0E00               	movlw	0
  3647  000C54  6E2C               	movwf	(___flmul@prod+2)^0,c
  3648  000C56  0E00               	movlw	0
  3649  000C58  6E2D               	movwf	(___flmul@prod+3)^0,c
  3650  000C5A  0E00               	movlw	0
  3651  000C5C  6E23               	movwf	___flmul@sign^0,c
  3652  000C5E  EF46  F006         	goto	l3372
  3653  000C62                     l999:
  3654  000C62  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  3655  000C66  0EFF               	movlw	255
  3656  000C68  162A               	andwf	___flmul@prod^0,f,c
  3657  000C6A  0EFF               	movlw	255
  3658  000C6C  162B               	andwf	(___flmul@prod+1)^0,f,c
  3659  000C6E  0E7F               	movlw	127
  3660  000C70  162C               	andwf	(___flmul@prod+2)^0,f,c
  3661  000C72  0E00               	movlw	0
  3662  000C74  162D               	andwf	(___flmul@prod+3)^0,f,c
  3663  000C76  A029               	btfss	___flmul@bexp^0,0,c
  3664  000C78  EF40  F006         	goto	u3631
  3665  000C7C  EF42  F006         	goto	u3630
  3666  000C80                     u3631:
  3667  000C80  EF43  F006         	goto	l3370
  3668  000C84                     u3630:
  3669  000C84  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  3670  000C86                     l3370:
  3671  000C86  90D8               	bcf	status,0,c
  3672  000C88  3029               	rrcf	___flmul@bexp^0,w,c
  3673  000C8A  6E2D               	movwf	(___flmul@prod+3)^0,c
  3674  000C8C                     l3372:
  3675  000C8C  5023               	movf	___flmul@sign^0,w,c
  3676  000C8E  122D               	iorwf	(___flmul@prod+3)^0,f,c
  3677  000C90  C02A  F017         	movff	___flmul@prod,?___flmul
  3678  000C94  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  3679  000C98  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  3680  000C9C  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  3681  000CA0                     l986:
  3682  000CA0  0012               	return		;funcret
  3683  000CA2                     __end_of___flmul:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function ___flge *****************
  3687 ;; Defined at:
  3688 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  ff1             4    0[COMRAM] unsigned char 
  3691 ;;  ff2             4    4[COMRAM] unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         8       0       0       0       0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3706 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3707 ;;Total ram usage:       12 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_SensorTemperatura
  3713 ;;		_SensorLuz
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text11
  3718  00264C                     __ptext11:
  3719                           	callstack 0
  3720  00264C                     ___flge:
  3721                           	callstack 29
  3722  00264C  0E00               	movlw	0
  3723  00264E  1401               	andwf	___flge@ff1^0,w,c
  3724  002650  6E09               	movwf	??___flge^0,c
  3725  002652  0E00               	movlw	0
  3726  002654  1402               	andwf	(___flge@ff1+1)^0,w,c
  3727  002656  6E0A               	movwf	(??___flge+1)^0,c
  3728  002658  0E80               	movlw	128
  3729  00265A  1403               	andwf	(___flge@ff1+2)^0,w,c
  3730  00265C  6E0B               	movwf	(??___flge+2)^0,c
  3731  00265E  0E7F               	movlw	127
  3732  002660  1404               	andwf	(___flge@ff1+3)^0,w,c
  3733  002662  6E0C               	movwf	(??___flge+3)^0,c
  3734  002664  5009               	movf	??___flge^0,w,c
  3735  002666  100A               	iorwf	(??___flge+1)^0,w,c
  3736  002668  100B               	iorwf	(??___flge+2)^0,w,c
  3737  00266A  100C               	iorwf	(??___flge+3)^0,w,c
  3738  00266C  A4D8               	btfss	status,2,c
  3739  00266E  EF3B  F013         	goto	u3641
  3740  002672  EF3D  F013         	goto	u3640
  3741  002676                     u3641:
  3742  002676  EF45  F013         	goto	l3382
  3743  00267A                     u3640:
  3744  00267A  0E00               	movlw	0
  3745  00267C  6E01               	movwf	___flge@ff1^0,c
  3746  00267E  0E00               	movlw	0
  3747  002680  6E02               	movwf	(___flge@ff1+1)^0,c
  3748  002682  0E00               	movlw	0
  3749  002684  6E03               	movwf	(___flge@ff1+2)^0,c
  3750  002686  0E00               	movlw	0
  3751  002688  6E04               	movwf	(___flge@ff1+3)^0,c
  3752  00268A                     l3382:
  3753  00268A  0E00               	movlw	0
  3754  00268C  1405               	andwf	___flge@ff2^0,w,c
  3755  00268E  6E09               	movwf	??___flge^0,c
  3756  002690  0E00               	movlw	0
  3757  002692  1406               	andwf	(___flge@ff2+1)^0,w,c
  3758  002694  6E0A               	movwf	(??___flge+1)^0,c
  3759  002696  0E80               	movlw	128
  3760  002698  1407               	andwf	(___flge@ff2+2)^0,w,c
  3761  00269A  6E0B               	movwf	(??___flge+2)^0,c
  3762  00269C  0E7F               	movlw	127
  3763  00269E  1408               	andwf	(___flge@ff2+3)^0,w,c
  3764  0026A0  6E0C               	movwf	(??___flge+3)^0,c
  3765  0026A2  5009               	movf	??___flge^0,w,c
  3766  0026A4  100A               	iorwf	(??___flge+1)^0,w,c
  3767  0026A6  100B               	iorwf	(??___flge+2)^0,w,c
  3768  0026A8  100C               	iorwf	(??___flge+3)^0,w,c
  3769  0026AA  A4D8               	btfss	status,2,c
  3770  0026AC  EF5A  F013         	goto	u3651
  3771  0026B0  EF5C  F013         	goto	u3650
  3772  0026B4                     u3651:
  3773  0026B4  EF64  F013         	goto	l3386
  3774  0026B8                     u3650:
  3775  0026B8  0E00               	movlw	0
  3776  0026BA  6E05               	movwf	___flge@ff2^0,c
  3777  0026BC  0E00               	movlw	0
  3778  0026BE  6E06               	movwf	(___flge@ff2+1)^0,c
  3779  0026C0  0E00               	movlw	0
  3780  0026C2  6E07               	movwf	(___flge@ff2+2)^0,c
  3781  0026C4  0E00               	movlw	0
  3782  0026C6  6E08               	movwf	(___flge@ff2+3)^0,c
  3783  0026C8                     l3386:
  3784  0026C8  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3785  0026CA  EF69  F013         	goto	u3661
  3786  0026CE  EF6B  F013         	goto	u3660
  3787  0026D2                     u3661:
  3788  0026D2  EF74  F013         	goto	l3390
  3789  0026D6                     u3660:
  3790  0026D6  6C01               	negf	___flge@ff1^0,c
  3791  0026D8  1E02               	comf	(___flge@ff1+1)^0,f,c
  3792  0026DA  B0D8               	btfsc	status,0,c
  3793  0026DC  2A02               	incf	(___flge@ff1+1)^0,f,c
  3794  0026DE  1E03               	comf	(___flge@ff1+2)^0,f,c
  3795  0026E0  B0D8               	btfsc	status,0,c
  3796  0026E2  2A03               	incf	(___flge@ff1+2)^0,f,c
  3797  0026E4  0E80               	movlw	128
  3798  0026E6  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3799  0026E8                     l3390:
  3800  0026E8  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3801  0026EA  EF79  F013         	goto	u3671
  3802  0026EE  EF7B  F013         	goto	u3670
  3803  0026F2                     u3671:
  3804  0026F2  EF84  F013         	goto	l633
  3805  0026F6                     u3670:
  3806  0026F6  6C05               	negf	___flge@ff2^0,c
  3807  0026F8  1E06               	comf	(___flge@ff2+1)^0,f,c
  3808  0026FA  B0D8               	btfsc	status,0,c
  3809  0026FC  2A06               	incf	(___flge@ff2+1)^0,f,c
  3810  0026FE  1E07               	comf	(___flge@ff2+2)^0,f,c
  3811  002700  B0D8               	btfsc	status,0,c
  3812  002702  2A07               	incf	(___flge@ff2+2)^0,f,c
  3813  002704  0E80               	movlw	128
  3814  002706  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3815  002708                     l633:
  3816  002708  0E00               	movlw	0
  3817  00270A  1A01               	xorwf	___flge@ff1^0,f,c
  3818  00270C  0E00               	movlw	0
  3819  00270E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3820  002710  0E00               	movlw	0
  3821  002712  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3822  002714  0E80               	movlw	128
  3823  002716  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3824  002718  0E00               	movlw	0
  3825  00271A  1A05               	xorwf	___flge@ff2^0,f,c
  3826  00271C  0E00               	movlw	0
  3827  00271E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3828  002720  0E00               	movlw	0
  3829  002722  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3830  002724  0E80               	movlw	128
  3831  002726  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3832  002728  5005               	movf	___flge@ff2^0,w,c
  3833  00272A  5C01               	subwf	___flge@ff1^0,w,c
  3834  00272C  5006               	movf	(___flge@ff2+1)^0,w,c
  3835  00272E  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3836  002730  5007               	movf	(___flge@ff2+2)^0,w,c
  3837  002732  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3838  002734  5008               	movf	(___flge@ff2+3)^0,w,c
  3839  002736  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3840  002738  B0D8               	btfsc	status,0,c
  3841  00273A  EFA1  F013         	goto	u3681
  3842  00273E  EFA3  F013         	goto	u3680
  3843  002742                     u3681:
  3844  002742  EFA6  F013         	goto	l3396
  3845  002746                     u3680:
  3846  002746  90D8               	bcf	status,0,c
  3847  002748  EFA7  F013         	goto	l638
  3848  00274C                     l3396:
  3849  00274C  80D8               	bsf	status,0,c
  3850  00274E                     l638:
  3851  00274E  0012               	return		;funcret
  3852  002750                     __end_of___flge:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function ___fldiv *****************
  3856 ;; Defined at:
  3857 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  b               4   47[COMRAM] unsigned char 
  3860 ;;  a               4   51[COMRAM] unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  grs             4   66[COMRAM] unsigned long 
  3863 ;;  rem             4   59[COMRAM] unsigned long 
  3864 ;;  new_exp         2   64[COMRAM] short 
  3865 ;;  aexp            1   71[COMRAM] unsigned char 
  3866 ;;  bexp            1   70[COMRAM] unsigned char 
  3867 ;;  sign            1   63[COMRAM] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  4   47[COMRAM] unsigned char 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3877 ;;      Params:         8       0       0       0       0       0       0       0       0
  3878 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3879 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3880 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3881 ;;Total ram usage:       25 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_SensorTemperatura
  3887 ;;		_SensorLuz
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text12
  3892  000CA2                     __ptext12:
  3893                           	callstack 0
  3894  000CA2                     ___fldiv:
  3895                           	callstack 29
  3896  000CA2  5033               	movf	(___fldiv@b+3)^0,w,c
  3897  000CA4  0B80               	andlw	128
  3898  000CA6  6E40               	movwf	___fldiv@sign^0,c
  3899  000CA8  5033               	movf	(___fldiv@b+3)^0,w,c
  3900  000CAA  2433               	addwf	(___fldiv@b+3)^0,w,c
  3901  000CAC  6E47               	movwf	___fldiv@bexp^0,c
  3902  000CAE  AE32               	btfss	(___fldiv@b+2)^0,7,c
  3903  000CB0  EF5C  F006         	goto	u3221
  3904  000CB4  EF5E  F006         	goto	u3220
  3905  000CB8                     u3221:
  3906  000CB8  EF5F  F006         	goto	l3116
  3907  000CBC                     u3220:
  3908  000CBC  8047               	bsf	___fldiv@bexp^0,0,c
  3909  000CBE                     l3116:
  3910  000CBE  5047               	movf	___fldiv@bexp^0,w,c
  3911  000CC0  B4D8               	btfsc	status,2,c
  3912  000CC2  EF65  F006         	goto	u3231
  3913  000CC6  EF67  F006         	goto	u3230
  3914  000CCA                     u3231:
  3915  000CCA  EF7C  F006         	goto	l3126
  3916  000CCE                     u3230:
  3917  000CCE  2847               	incf	___fldiv@bexp^0,w,c
  3918  000CD0  A4D8               	btfss	status,2,c
  3919  000CD2  EF6D  F006         	goto	u3241
  3920  000CD6  EF6F  F006         	goto	u3240
  3921  000CDA                     u3241:
  3922  000CDA  EF77  F006         	goto	l3122
  3923  000CDE                     u3240:
  3924  000CDE  0E00               	movlw	0
  3925  000CE0  6E30               	movwf	___fldiv@b^0,c
  3926  000CE2  0E00               	movlw	0
  3927  000CE4  6E31               	movwf	(___fldiv@b+1)^0,c
  3928  000CE6  0E00               	movlw	0
  3929  000CE8  6E32               	movwf	(___fldiv@b+2)^0,c
  3930  000CEA  0E00               	movlw	0
  3931  000CEC  6E33               	movwf	(___fldiv@b+3)^0,c
  3932  000CEE                     l3122:
  3933  000CEE  8E32               	bsf	(___fldiv@b+2)^0,7,c
  3934  000CF0  0E00               	movlw	0
  3935  000CF2  6E33               	movwf	(___fldiv@b+3)^0,c
  3936  000CF4  EF84  F006         	goto	l3128
  3937  000CF8                     l3126:
  3938  000CF8  0E00               	movlw	0
  3939  000CFA  6E30               	movwf	___fldiv@b^0,c
  3940  000CFC  0E00               	movlw	0
  3941  000CFE  6E31               	movwf	(___fldiv@b+1)^0,c
  3942  000D00  0E00               	movlw	0
  3943  000D02  6E32               	movwf	(___fldiv@b+2)^0,c
  3944  000D04  0E00               	movlw	0
  3945  000D06  6E33               	movwf	(___fldiv@b+3)^0,c
  3946  000D08                     l3128:
  3947  000D08  5037               	movf	(___fldiv@a+3)^0,w,c
  3948  000D0A  0B80               	andlw	128
  3949  000D0C  1A40               	xorwf	___fldiv@sign^0,f,c
  3950  000D0E  5037               	movf	(___fldiv@a+3)^0,w,c
  3951  000D10  2437               	addwf	(___fldiv@a+3)^0,w,c
  3952  000D12  6E48               	movwf	___fldiv@aexp^0,c
  3953  000D14  AE36               	btfss	(___fldiv@a+2)^0,7,c
  3954  000D16  EF8F  F006         	goto	u3251
  3955  000D1A  EF91  F006         	goto	u3250
  3956  000D1E                     u3251:
  3957  000D1E  EF92  F006         	goto	l3136
  3958  000D22                     u3250:
  3959  000D22  8048               	bsf	___fldiv@aexp^0,0,c
  3960  000D24                     l3136:
  3961  000D24  5048               	movf	___fldiv@aexp^0,w,c
  3962  000D26  B4D8               	btfsc	status,2,c
  3963  000D28  EF98  F006         	goto	u3261
  3964  000D2C  EF9A  F006         	goto	u3260
  3965  000D30                     u3261:
  3966  000D30  EFAF  F006         	goto	l3146
  3967  000D34                     u3260:
  3968  000D34  2848               	incf	___fldiv@aexp^0,w,c
  3969  000D36  A4D8               	btfss	status,2,c
  3970  000D38  EFA0  F006         	goto	u3271
  3971  000D3C  EFA2  F006         	goto	u3270
  3972  000D40                     u3271:
  3973  000D40  EFAA  F006         	goto	l3142
  3974  000D44                     u3270:
  3975  000D44  0E00               	movlw	0
  3976  000D46  6E34               	movwf	___fldiv@a^0,c
  3977  000D48  0E00               	movlw	0
  3978  000D4A  6E35               	movwf	(___fldiv@a+1)^0,c
  3979  000D4C  0E00               	movlw	0
  3980  000D4E  6E36               	movwf	(___fldiv@a+2)^0,c
  3981  000D50  0E00               	movlw	0
  3982  000D52  6E37               	movwf	(___fldiv@a+3)^0,c
  3983  000D54                     l3142:
  3984  000D54  8E36               	bsf	(___fldiv@a+2)^0,7,c
  3985  000D56  0E00               	movlw	0
  3986  000D58  6E37               	movwf	(___fldiv@a+3)^0,c
  3987  000D5A  EFB7  F006         	goto	l3148
  3988  000D5E                     l3146:
  3989  000D5E  0E00               	movlw	0
  3990  000D60  6E34               	movwf	___fldiv@a^0,c
  3991  000D62  0E00               	movlw	0
  3992  000D64  6E35               	movwf	(___fldiv@a+1)^0,c
  3993  000D66  0E00               	movlw	0
  3994  000D68  6E36               	movwf	(___fldiv@a+2)^0,c
  3995  000D6A  0E00               	movlw	0
  3996  000D6C  6E37               	movwf	(___fldiv@a+3)^0,c
  3997  000D6E                     l3148:
  3998  000D6E  5034               	movf	___fldiv@a^0,w,c
  3999  000D70  1035               	iorwf	(___fldiv@a+1)^0,w,c
  4000  000D72  1036               	iorwf	(___fldiv@a+2)^0,w,c
  4001  000D74  1037               	iorwf	(___fldiv@a+3)^0,w,c
  4002  000D76  A4D8               	btfss	status,2,c
  4003  000D78  EFC0  F006         	goto	u3281
  4004  000D7C  EFC2  F006         	goto	u3280
  4005  000D80                     u3281:
  4006  000D80  EFDA  F006         	goto	l3160
  4007  000D84                     u3280:
  4008  000D84  0E00               	movlw	0
  4009  000D86  6E30               	movwf	___fldiv@b^0,c
  4010  000D88  0E00               	movlw	0
  4011  000D8A  6E31               	movwf	(___fldiv@b+1)^0,c
  4012  000D8C  0E00               	movlw	0
  4013  000D8E  6E32               	movwf	(___fldiv@b+2)^0,c
  4014  000D90  0E00               	movlw	0
  4015  000D92  6E33               	movwf	(___fldiv@b+3)^0,c
  4016  000D94  0E80               	movlw	128
  4017  000D96  1232               	iorwf	(___fldiv@b+2)^0,f,c
  4018  000D98  0E7F               	movlw	127
  4019  000D9A  1233               	iorwf	(___fldiv@b+3)^0,f,c
  4020  000D9C                     l3154:
  4021  000D9C  5040               	movf	___fldiv@sign^0,w,c
  4022  000D9E  1233               	iorwf	(___fldiv@b+3)^0,f,c
  4023  000DA0  C030  F030         	movff	___fldiv@b,?___fldiv
  4024  000DA4  C031  F031         	movff	___fldiv@b+1,?___fldiv+1
  4025  000DA8  C032  F032         	movff	___fldiv@b+2,?___fldiv+2
  4026  000DAC  C033  F033         	movff	___fldiv@b+3,?___fldiv+3
  4027  000DB0  EF1D  F008         	goto	l950
  4028  000DB4                     l3160:
  4029  000DB4  5047               	movf	___fldiv@bexp^0,w,c
  4030  000DB6  A4D8               	btfss	status,2,c
  4031  000DB8  EFE0  F006         	goto	u3291
  4032  000DBC  EFE2  F006         	goto	u3290
  4033  000DC0                     u3291:
  4034  000DC0  EFEC  F006         	goto	l3168
  4035  000DC4                     u3290:
  4036  000DC4  0E00               	movlw	0
  4037  000DC6  6E30               	movwf	?___fldiv^0,c
  4038  000DC8  0E00               	movlw	0
  4039  000DCA  6E31               	movwf	(?___fldiv+1)^0,c
  4040  000DCC  0E00               	movlw	0
  4041  000DCE  6E32               	movwf	(?___fldiv+2)^0,c
  4042  000DD0  0E00               	movlw	0
  4043  000DD2  6E33               	movwf	(?___fldiv+3)^0,c
  4044  000DD4  EF1D  F008         	goto	l950
  4045  000DD8                     l3168:
  4046  000DD8  5048               	movf	___fldiv@aexp^0,w,c
  4047  000DDA  C047  F038         	movff	___fldiv@bexp,??___fldiv
  4048  000DDE  6A39               	clrf	(??___fldiv+1)^0,c
  4049  000DE0  5E38               	subwf	??___fldiv^0,f,c
  4050  000DE2  0E00               	movlw	0
  4051  000DE4  5A39               	subwfb	(??___fldiv+1)^0,f,c
  4052  000DE6  0E7F               	movlw	127
  4053  000DE8  2438               	addwf	??___fldiv^0,w,c
  4054  000DEA  6E41               	movwf	___fldiv@new_exp^0,c
  4055  000DEC  0E00               	movlw	0
  4056  000DEE  2039               	addwfc	(??___fldiv+1)^0,w,c
  4057  000DF0  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4058  000DF2  C030  F03C         	movff	___fldiv@b,___fldiv@rem
  4059  000DF6  C031  F03D         	movff	___fldiv@b+1,___fldiv@rem+1
  4060  000DFA  C032  F03E         	movff	___fldiv@b+2,___fldiv@rem+2
  4061  000DFE  C033  F03F         	movff	___fldiv@b+3,___fldiv@rem+3
  4062  000E02  0E00               	movlw	0
  4063  000E04  6E30               	movwf	___fldiv@b^0,c
  4064  000E06  0E00               	movlw	0
  4065  000E08  6E31               	movwf	(___fldiv@b+1)^0,c
  4066  000E0A  0E00               	movlw	0
  4067  000E0C  6E32               	movwf	(___fldiv@b+2)^0,c
  4068  000E0E  0E00               	movlw	0
  4069  000E10  6E33               	movwf	(___fldiv@b+3)^0,c
  4070  000E12  0E00               	movlw	0
  4071  000E14  6E43               	movwf	___fldiv@grs^0,c
  4072  000E16  0E00               	movlw	0
  4073  000E18  6E44               	movwf	(___fldiv@grs+1)^0,c
  4074  000E1A  0E00               	movlw	0
  4075  000E1C  6E45               	movwf	(___fldiv@grs+2)^0,c
  4076  000E1E  0E00               	movlw	0
  4077  000E20  6E46               	movwf	(___fldiv@grs+3)^0,c
  4078  000E22  0E00               	movlw	0
  4079  000E24  6E48               	movwf	___fldiv@aexp^0,c
  4080  000E26  EF4D  F007         	goto	l952
  4081  000E2A                     l3178:
  4082  000E2A  5048               	movf	___fldiv@aexp^0,w,c
  4083  000E2C  B4D8               	btfsc	status,2,c
  4084  000E2E  EF1B  F007         	goto	u3301
  4085  000E32  EF1D  F007         	goto	u3300
  4086  000E36                     u3301:
  4087  000E36  EF34  F007         	goto	l3186
  4088  000E3A                     u3300:
  4089  000E3A  90D8               	bcf	status,0,c
  4090  000E3C  363C               	rlcf	___fldiv@rem^0,f,c
  4091  000E3E  363D               	rlcf	(___fldiv@rem+1)^0,f,c
  4092  000E40  363E               	rlcf	(___fldiv@rem+2)^0,f,c
  4093  000E42  363F               	rlcf	(___fldiv@rem+3)^0,f,c
  4094  000E44  90D8               	bcf	status,0,c
  4095  000E46  3630               	rlcf	___fldiv@b^0,f,c
  4096  000E48  3631               	rlcf	(___fldiv@b+1)^0,f,c
  4097  000E4A  3632               	rlcf	(___fldiv@b+2)^0,f,c
  4098  000E4C  3633               	rlcf	(___fldiv@b+3)^0,f,c
  4099  000E4E  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4100  000E50  EF2C  F007         	goto	u3311
  4101  000E54  EF2E  F007         	goto	u3310
  4102  000E58                     u3311:
  4103  000E58  EF2F  F007         	goto	l955
  4104  000E5C                     u3310:
  4105  000E5C  8030               	bsf	___fldiv@b^0,0,c
  4106  000E5E                     l955:
  4107  000E5E  90D8               	bcf	status,0,c
  4108  000E60  3643               	rlcf	___fldiv@grs^0,f,c
  4109  000E62  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  4110  000E64  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  4111  000E66  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  4112  000E68                     l3186:
  4113  000E68  5034               	movf	___fldiv@a^0,w,c
  4114  000E6A  5C3C               	subwf	___fldiv@rem^0,w,c
  4115  000E6C  5035               	movf	(___fldiv@a+1)^0,w,c
  4116  000E6E  583D               	subwfb	(___fldiv@rem+1)^0,w,c
  4117  000E70  5036               	movf	(___fldiv@a+2)^0,w,c
  4118  000E72  583E               	subwfb	(___fldiv@rem+2)^0,w,c
  4119  000E74  5037               	movf	(___fldiv@a+3)^0,w,c
  4120  000E76  583F               	subwfb	(___fldiv@rem+3)^0,w,c
  4121  000E78  A0D8               	btfss	status,0,c
  4122  000E7A  EF41  F007         	goto	u3321
  4123  000E7E  EF43  F007         	goto	u3320
  4124  000E82                     u3321:
  4125  000E82  EF4C  F007         	goto	l3192
  4126  000E86                     u3320:
  4127  000E86  8C46               	bsf	(___fldiv@grs+3)^0,6,c
  4128  000E88  5034               	movf	___fldiv@a^0,w,c
  4129  000E8A  5E3C               	subwf	___fldiv@rem^0,f,c
  4130  000E8C  5035               	movf	(___fldiv@a+1)^0,w,c
  4131  000E8E  5A3D               	subwfb	(___fldiv@rem+1)^0,f,c
  4132  000E90  5036               	movf	(___fldiv@a+2)^0,w,c
  4133  000E92  5A3E               	subwfb	(___fldiv@rem+2)^0,f,c
  4134  000E94  5037               	movf	(___fldiv@a+3)^0,w,c
  4135  000E96  5A3F               	subwfb	(___fldiv@rem+3)^0,f,c
  4136  000E98                     l3192:
  4137  000E98  2A48               	incf	___fldiv@aexp^0,f,c
  4138  000E9A                     l952:
  4139  000E9A  0E19               	movlw	25
  4140  000E9C  6448               	cpfsgt	___fldiv@aexp^0,c
  4141  000E9E  EF53  F007         	goto	u3331
  4142  000EA2  EF55  F007         	goto	u3330
  4143  000EA6                     u3331:
  4144  000EA6  EF15  F007         	goto	l3178
  4145  000EAA                     u3330:
  4146  000EAA  503C               	movf	___fldiv@rem^0,w,c
  4147  000EAC  103D               	iorwf	(___fldiv@rem+1)^0,w,c
  4148  000EAE  103E               	iorwf	(___fldiv@rem+2)^0,w,c
  4149  000EB0  103F               	iorwf	(___fldiv@rem+3)^0,w,c
  4150  000EB2  B4D8               	btfsc	status,2,c
  4151  000EB4  EF5E  F007         	goto	u3341
  4152  000EB8  EF60  F007         	goto	u3340
  4153  000EBC                     u3341:
  4154  000EBC  EF78  F007         	goto	l3204
  4155  000EC0                     u3340:
  4156  000EC0  8043               	bsf	___fldiv@grs^0,0,c
  4157  000EC2  EF78  F007         	goto	l3204
  4158  000EC6                     l3198:
  4159  000EC6  90D8               	bcf	status,0,c
  4160  000EC8  3630               	rlcf	___fldiv@b^0,f,c
  4161  000ECA  3631               	rlcf	(___fldiv@b+1)^0,f,c
  4162  000ECC  3632               	rlcf	(___fldiv@b+2)^0,f,c
  4163  000ECE  3633               	rlcf	(___fldiv@b+3)^0,f,c
  4164  000ED0  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4165  000ED2  EF6D  F007         	goto	u3351
  4166  000ED6  EF6F  F007         	goto	u3350
  4167  000EDA                     u3351:
  4168  000EDA  EF70  F007         	goto	l961
  4169  000EDE                     u3350:
  4170  000EDE  8030               	bsf	___fldiv@b^0,0,c
  4171  000EE0                     l961:
  4172  000EE0  90D8               	bcf	status,0,c
  4173  000EE2  3643               	rlcf	___fldiv@grs^0,f,c
  4174  000EE4  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  4175  000EE6  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  4176  000EE8  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  4177  000EEA  0641               	decf	___fldiv@new_exp^0,f,c
  4178  000EEC  A0D8               	btfss	status,0,c
  4179  000EEE  0642               	decf	(___fldiv@new_exp+1)^0,f,c
  4180  000EF0                     l3204:
  4181  000EF0  AE32               	btfss	(___fldiv@b+2)^0,7,c
  4182  000EF2  EF7D  F007         	goto	u3361
  4183  000EF6  EF7F  F007         	goto	u3360
  4184  000EFA                     u3361:
  4185  000EFA  EF63  F007         	goto	l3198
  4186  000EFE                     u3360:
  4187  000EFE  0E00               	movlw	0
  4188  000F00  6E48               	movwf	___fldiv@aexp^0,c
  4189  000F02  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4190  000F04  EF86  F007         	goto	u3371
  4191  000F08  EF88  F007         	goto	u3370
  4192  000F0C                     u3371:
  4193  000F0C  EFAC  F007         	goto	l963
  4194  000F10                     u3370:
  4195  000F10  0EFF               	movlw	255
  4196  000F12  1443               	andwf	___fldiv@grs^0,w,c
  4197  000F14  6E38               	movwf	??___fldiv^0,c
  4198  000F16  0EFF               	movlw	255
  4199  000F18  1444               	andwf	(___fldiv@grs+1)^0,w,c
  4200  000F1A  6E39               	movwf	(??___fldiv+1)^0,c
  4201  000F1C  0EFF               	movlw	255
  4202  000F1E  1445               	andwf	(___fldiv@grs+2)^0,w,c
  4203  000F20  6E3A               	movwf	(??___fldiv+2)^0,c
  4204  000F22  0E7F               	movlw	127
  4205  000F24  1446               	andwf	(___fldiv@grs+3)^0,w,c
  4206  000F26  6E3B               	movwf	(??___fldiv+3)^0,c
  4207  000F28  5038               	movf	??___fldiv^0,w,c
  4208  000F2A  1039               	iorwf	(??___fldiv+1)^0,w,c
  4209  000F2C  103A               	iorwf	(??___fldiv+2)^0,w,c
  4210  000F2E  103B               	iorwf	(??___fldiv+3)^0,w,c
  4211  000F30  B4D8               	btfsc	status,2,c
  4212  000F32  EF9D  F007         	goto	u3381
  4213  000F36  EF9F  F007         	goto	u3380
  4214  000F3A                     u3381:
  4215  000F3A  EFA3  F007         	goto	l964
  4216  000F3E                     u3380:
  4217  000F3E                     l3212:
  4218  000F3E  0E01               	movlw	1
  4219  000F40  6E48               	movwf	___fldiv@aexp^0,c
  4220  000F42  EFAC  F007         	goto	l963
  4221  000F46                     l964:
  4222  000F46  A030               	btfss	___fldiv@b^0,0,c
  4223  000F48  EFA8  F007         	goto	u3391
  4224  000F4C  EFAA  F007         	goto	u3390
  4225  000F50                     u3391:
  4226  000F50  EFAC  F007         	goto	l963
  4227  000F54                     u3390:
  4228  000F54  EF9F  F007         	goto	l3212
  4229  000F58                     l963:
  4230  000F58  5048               	movf	___fldiv@aexp^0,w,c
  4231  000F5A  B4D8               	btfsc	status,2,c
  4232  000F5C  EFB2  F007         	goto	u3401
  4233  000F60  EFB4  F007         	goto	u3400
  4234  000F64                     u3401:
  4235  000F64  EFD8  F007         	goto	l3224
  4236  000F68                     u3400:
  4237  000F68  0E01               	movlw	1
  4238  000F6A  2630               	addwf	___fldiv@b^0,f,c
  4239  000F6C  0E00               	movlw	0
  4240  000F6E  2231               	addwfc	(___fldiv@b+1)^0,f,c
  4241  000F70  2232               	addwfc	(___fldiv@b+2)^0,f,c
  4242  000F72  2233               	addwfc	(___fldiv@b+3)^0,f,c
  4243  000F74  A033               	btfss	(___fldiv@b+3)^0,0,c
  4244  000F76  EFBF  F007         	goto	u3411
  4245  000F7A  EFC1  F007         	goto	u3410
  4246  000F7E                     u3411:
  4247  000F7E  EFD8  F007         	goto	l3224
  4248  000F82                     u3410:
  4249  000F82  C030  F038         	movff	___fldiv@b,??___fldiv
  4250  000F86  C031  F039         	movff	___fldiv@b+1,??___fldiv+1
  4251  000F8A  C032  F03A         	movff	___fldiv@b+2,??___fldiv+2
  4252  000F8E  C033  F03B         	movff	___fldiv@b+3,??___fldiv+3
  4253  000F92  343B               	rlcf	(??___fldiv+3)^0,w,c
  4254  000F94  323B               	rrcf	(??___fldiv+3)^0,f,c
  4255  000F96  323A               	rrcf	(??___fldiv+2)^0,f,c
  4256  000F98  3239               	rrcf	(??___fldiv+1)^0,f,c
  4257  000F9A  3238               	rrcf	??___fldiv^0,f,c
  4258  000F9C  C038  F030         	movff	??___fldiv,___fldiv@b
  4259  000FA0  C039  F031         	movff	??___fldiv+1,___fldiv@b+1
  4260  000FA4  C03A  F032         	movff	??___fldiv+2,___fldiv@b+2
  4261  000FA8  C03B  F033         	movff	??___fldiv+3,___fldiv@b+3
  4262  000FAC  4A41               	infsnz	___fldiv@new_exp^0,f,c
  4263  000FAE  2A42               	incf	(___fldiv@new_exp+1)^0,f,c
  4264  000FB0                     l3224:
  4265  000FB0  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4266  000FB2  EFE3  F007         	goto	u3421
  4267  000FB6  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  4268  000FB8  E108               	bnz	u3420
  4269  000FBA  2841               	incf	___fldiv@new_exp^0,w,c
  4270  000FBC  A0D8               	btfss	status,0,c
  4271  000FBE  EFE3  F007         	goto	u3421
  4272  000FC2  EFE5  F007         	goto	u3420
  4273  000FC6                     u3421:
  4274  000FC6  EFF0  F007         	goto	l3228
  4275  000FCA                     u3420:
  4276  000FCA  0E00               	movlw	0
  4277  000FCC  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4278  000FCE  6841               	setf	___fldiv@new_exp^0,c
  4279  000FD0  0E00               	movlw	0
  4280  000FD2  6E30               	movwf	___fldiv@b^0,c
  4281  000FD4  0E00               	movlw	0
  4282  000FD6  6E31               	movwf	(___fldiv@b+1)^0,c
  4283  000FD8  0E00               	movlw	0
  4284  000FDA  6E32               	movwf	(___fldiv@b+2)^0,c
  4285  000FDC  0E00               	movlw	0
  4286  000FDE  6E33               	movwf	(___fldiv@b+3)^0,c
  4287  000FE0                     l3228:
  4288  000FE0  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4289  000FE2  EFFD  F007         	goto	u3430
  4290  000FE6  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  4291  000FE8  E106               	bnz	u3431
  4292  000FEA  0441               	decf	___fldiv@new_exp^0,w,c
  4293  000FEC  B0D8               	btfsc	status,0,c
  4294  000FEE  EFFB  F007         	goto	u3431
  4295  000FF2  EFFD  F007         	goto	u3430
  4296  000FF6                     u3431:
  4297  000FF6  EF0B  F008         	goto	l3232
  4298  000FFA                     u3430:
  4299  000FFA  0E00               	movlw	0
  4300  000FFC  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4301  000FFE  0E00               	movlw	0
  4302  001000  6E41               	movwf	___fldiv@new_exp^0,c
  4303  001002  0E00               	movlw	0
  4304  001004  6E30               	movwf	___fldiv@b^0,c
  4305  001006  0E00               	movlw	0
  4306  001008  6E31               	movwf	(___fldiv@b+1)^0,c
  4307  00100A  0E00               	movlw	0
  4308  00100C  6E32               	movwf	(___fldiv@b+2)^0,c
  4309  00100E  0E00               	movlw	0
  4310  001010  6E33               	movwf	(___fldiv@b+3)^0,c
  4311  001012  0E00               	movlw	0
  4312  001014  6E40               	movwf	___fldiv@sign^0,c
  4313  001016                     l3232:
  4314  001016  C041  F047         	movff	___fldiv@new_exp,___fldiv@bexp
  4315  00101A  A047               	btfss	___fldiv@bexp^0,0,c
  4316  00101C  EF12  F008         	goto	u3441
  4317  001020  EF14  F008         	goto	u3440
  4318  001024                     u3441:
  4319  001024  EF17  F008         	goto	l3238
  4320  001028                     u3440:
  4321  001028  8E32               	bsf	(___fldiv@b+2)^0,7,c
  4322  00102A  EF18  F008         	goto	l3240
  4323  00102E                     l3238:
  4324  00102E  9E32               	bcf	(___fldiv@b+2)^0,7,c
  4325  001030                     l3240:
  4326  001030  90D8               	bcf	status,0,c
  4327  001032  3047               	rrcf	___fldiv@bexp^0,w,c
  4328  001034  6E33               	movwf	(___fldiv@b+3)^0,c
  4329  001036  EFCE  F006         	goto	l3154
  4330  00103A                     l950:
  4331  00103A  0012               	return		;funcret
  4332  00103C                     __end_of___fldiv:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _ADC_Read *****************
  4336 ;; Defined at:
  4337 ;;		line 32 in file "PIC18F4550_ADC_Source_File.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  channel         2    0[COMRAM] int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  digital         2    6[COMRAM] int 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    0[COMRAM] int 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4351 ;;      Params:         2       0       0       0       0       0       0       0       0
  4352 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4353 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4354 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4355 ;;Total ram usage:        8 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_SensorTemperatura
  4361 ;;		_SensorLuz
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text13
  4366  0029B8                     __ptext13:
  4367                           	callstack 0
  4368  0029B8                     _ADC_Read:
  4369                           	callstack 29
  4370  0029B8                     
  4371                           ;PIC18F4550_ADC_Source_File.c: 32: int ADC_Read(int channel);PIC18F4550_ADC_Source_File.
      +                          c: 33: {;PIC18F4550_ADC_Source_File.c: 34:     int digital;;PIC18F4550_ADC_Source_File.c
      +                          : 35:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  4372  0029B8  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  4373  0029BC  90D8               	bcf	status,0,c
  4374  0029BE  3603               	rlcf	??_ADC_Read^0,f,c
  4375  0029C0  90D8               	bcf	status,0,c
  4376  0029C2  3603               	rlcf	??_ADC_Read^0,f,c
  4377  0029C4  0E3C               	movlw	60
  4378  0029C6  1603               	andwf	??_ADC_Read^0,f,c
  4379  0029C8  50C2               	movf	194,w,c	;volatile
  4380  0029CA  0BC3               	andlw	195
  4381  0029CC  1003               	iorwf	??_ADC_Read^0,w,c
  4382  0029CE  6EC2               	movwf	194,c	;volatile
  4383                           
  4384                           ;PIC18F4550_ADC_Source_File.c: 37:     ADCON0 |= ((1<<ADON)|(1<<GO));
  4385  0029D0  B2C2               	btfsc	4034,1,c	;volatile
  4386  0029D2  EFED  F014         	goto	u3031
  4387  0029D6  EFF1  F014         	goto	u3030
  4388  0029DA                     u3031:
  4389  0029DA  6A03               	clrf	??_ADC_Read^0,c
  4390  0029DC  2A03               	incf	??_ADC_Read^0,f,c
  4391  0029DE  EFF2  F014         	goto	u3048
  4392  0029E2                     u3030:
  4393  0029E2  6A03               	clrf	??_ADC_Read^0,c
  4394  0029E4                     u3048:
  4395  0029E4  0E01               	movlw	1
  4396  0029E6  6E04               	movwf	(??_ADC_Read+1)^0,c
  4397  0029E8  2A03               	incf	??_ADC_Read^0,f,c
  4398  0029EA  EFF9  F014         	goto	u3054
  4399  0029EE                     u3055:
  4400  0029EE  90D8               	bcf	status,0,c
  4401  0029F0  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  4402  0029F2                     u3054:
  4403  0029F2  2E03               	decfsz	??_ADC_Read^0,f,c
  4404  0029F4  EFF7  F014         	goto	u3055
  4405  0029F8  B0C2               	btfsc	4034,0,c	;volatile
  4406  0029FA  EF01  F015         	goto	u3061
  4407  0029FE  EF05  F015         	goto	u3060
  4408  002A02                     u3061:
  4409  002A02  6A05               	clrf	(??_ADC_Read+2)^0,c
  4410  002A04  2A05               	incf	(??_ADC_Read+2)^0,f,c
  4411  002A06  EF06  F015         	goto	u3078
  4412  002A0A                     u3060:
  4413  002A0A  6A05               	clrf	(??_ADC_Read+2)^0,c
  4414  002A0C                     u3078:
  4415  002A0C  0E01               	movlw	1
  4416  002A0E  6E06               	movwf	(??_ADC_Read+3)^0,c
  4417  002A10  2A05               	incf	(??_ADC_Read+2)^0,f,c
  4418  002A12  EF0D  F015         	goto	u3084
  4419  002A16                     u3085:
  4420  002A16  90D8               	bcf	status,0,c
  4421  002A18  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  4422  002A1A                     u3084:
  4423  002A1A  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  4424  002A1C  EF0B  F015         	goto	u3085
  4425  002A20  5006               	movf	(??_ADC_Read+3)^0,w,c
  4426  002A22  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  4427  002A24  12C2               	iorwf	194,f,c	;volatile
  4428  002A26                     l24:
  4429  002A26  B2C2               	btfsc	194,1,c	;volatile
  4430  002A28  EF18  F015         	goto	u3091
  4431  002A2C  EF1A  F015         	goto	u3090
  4432  002A30                     u3091:
  4433  002A30  EF13  F015         	goto	l24
  4434  002A34                     u3090:
  4435  002A34                     
  4436                           ;PIC18F4550_ADC_Source_File.c: 39:     digital = (ADRESH*256) | (ADRESL);
  4437  002A34  50C3               	movf	195,w,c	;volatile
  4438  002A36  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  4439  002A3A  6A04               	clrf	(??_ADC_Read+1)^0,c
  4440  002A3C  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  4441  002A40  6A03               	clrf	??_ADC_Read^0,c
  4442  002A42  1003               	iorwf	??_ADC_Read^0,w,c
  4443  002A44  6E07               	movwf	ADC_Read@digital^0,c
  4444  002A46  5004               	movf	(??_ADC_Read+1)^0,w,c
  4445  002A48  6E08               	movwf	(ADC_Read@digital+1)^0,c
  4446  002A4A                     
  4447                           ;PIC18F4550_ADC_Source_File.c: 40:     return(digital);
  4448  002A4A  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  4449  002A4E  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  4450  002A52  0012               	return		;funcret
  4451  002A54                     __end_of_ADC_Read:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _RTC *****************
  4455 ;; Defined at:
  4456 ;;		line 89 in file "Controler.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    8
  4477 ;; This function calls:
  4478 ;;		_I2C_Stop
  4479 ;;		_LCD_String
  4480 ;;		_LCD_String_xy
  4481 ;;		_RTC_Read_Clock
  4482 ;;		_sprintf
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text14
  4489  002AF0                     __ptext14:
  4490                           	callstack 0
  4491  002AF0                     _RTC:
  4492                           	callstack 22
  4493  002AF0                     
  4494                           ;Controler.c: 90:     RTC_Read_Clock(0);
  4495  002AF0  0E00               	movlw	0
  4496  002AF2  EC3D  F017         	call	_RTC_Read_Clock
  4497  002AF6                     
  4498                           ;Controler.c: 91:     I2C_Stop();
  4499  002AF6  EC21  F019         	call	_I2C_Stop	;wreg free
  4500  002AFA                     
  4501                           ;Controler.c: 94:     hour = hour & (0x1f);
  4502  002AFA  0E1F               	movlw	31
  4503  002AFC  0100               	movlb	0	; () banked
  4504  002AFE  15BE               	andwf	_hour& (0+255),w,b
  4505  002B00  6FBE               	movwf	_hour& (0+255),b
  4506  002B02  6BBF               	clrf	(_hour+1)& (0+255),b
  4507  002B04                     
  4508                           ; BSR set to: 0
  4509                           ;Controler.c: 95:     sprintf(secs, "%x ", sec);
  4510  002B04  0ED8               	movlw	low _secs
  4511  002B06  6F66               	movwf	sprintf@s& (0+255),b
  4512  002B08  0E00               	movlw	high _secs
  4513  002B0A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4514  002B0C  0E73               	movlw	low STR_1
  4515  002B0E  6F68               	movwf	sprintf@fmt& (0+255),b
  4516  002B10  0E08               	movlw	high STR_1
  4517  002B12  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4518  002B14  C0C2  F06A         	movff	_sec,?_sprintf+4
  4519  002B18  C0C3  F06B         	movff	_sec+1,?_sprintf+5
  4520  002B1C  ECCB  F016         	call	_sprintf	;wreg free
  4521  002B20                     
  4522                           ;Controler.c: 96:     sprintf(mins, "%x:", min);
  4523  002B20  0ECE               	movlw	low _mins
  4524  002B22  0100               	movlb	0	; () banked
  4525  002B24  6F66               	movwf	sprintf@s& (0+255),b
  4526  002B26  0E00               	movlw	high _mins
  4527  002B28  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4528  002B2A  0E31               	movlw	low (STR_3+4)
  4529  002B2C  6F68               	movwf	sprintf@fmt& (0+255),b
  4530  002B2E  0E08               	movlw	high (STR_3+4)
  4531  002B30  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4532  002B32  C0C0  F06A         	movff	_min,?_sprintf+4
  4533  002B36  C0C1  F06B         	movff	_min+1,?_sprintf+5
  4534  002B3A  ECCB  F016         	call	_sprintf	;wreg free
  4535  002B3E                     
  4536                           ;Controler.c: 97:     sprintf(hours, "Tim:%x:", hour);
  4537  002B3E  0EC4               	movlw	low _hours
  4538  002B40  0100               	movlb	0	; () banked
  4539  002B42  6F66               	movwf	sprintf@s& (0+255),b
  4540  002B44  0E00               	movlw	high _hours
  4541  002B46  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4542  002B48  0E2D               	movlw	low STR_3
  4543  002B4A  6F68               	movwf	sprintf@fmt& (0+255),b
  4544  002B4C  0E08               	movlw	high STR_3
  4545  002B4E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4546  002B50  C0BE  F06A         	movff	_hour,?_sprintf+4
  4547  002B54  C0BF  F06B         	movff	_hour+1,?_sprintf+5
  4548  002B58  ECCB  F016         	call	_sprintf	;wreg free
  4549  002B5C                     
  4550                           ;Controler.c: 98:     LCD_String_xy(0, 0, hours);
  4551  002B5C  0E00               	movlw	0
  4552  002B5E  6E0A               	movwf	LCD_String_xy@pos^0,c
  4553  002B60  0EC4               	movlw	low _hours
  4554  002B62  6E0B               	movwf	LCD_String_xy@str^0,c
  4555  002B64  0E00               	movlw	high _hours
  4556  002B66  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  4557  002B68  0E00               	movlw	0
  4558  002B6A  ECC4  F015         	call	_LCD_String_xy
  4559  002B6E                     
  4560                           ;Controler.c: 99:     LCD_String(mins);
  4561  002B6E  0ECE               	movlw	low _mins
  4562  002B70  6E08               	movwf	LCD_String@msg^0,c
  4563  002B72  0E00               	movlw	high _mins
  4564  002B74  6E09               	movwf	(LCD_String@msg+1)^0,c
  4565  002B76  EC9C  F016         	call	_LCD_String	;wreg free
  4566  002B7A                     
  4567                           ;Controler.c: 100:     LCD_String(secs);
  4568  002B7A  0ED8               	movlw	low _secs
  4569  002B7C  6E08               	movwf	LCD_String@msg^0,c
  4570  002B7E  0E00               	movlw	high _secs
  4571  002B80  6E09               	movwf	(LCD_String@msg+1)^0,c
  4572  002B82  EC9C  F016         	call	_LCD_String	;wreg free
  4573  002B86  0012               	return		;funcret
  4574  002B88                     __end_of_RTC:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _sprintf *****************
  4578 ;; Defined at:
  4579 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  s               2    6[BANK0 ] PTR unsigned char 
  4582 ;;		 -> SensorTemperatura@Temperature(10), hours(10), mins(10), secs(10), 
  4583 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  4584 ;;		 -> STR_5(7), STR_3(8), STR_2(4), STR_1(4), 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  f               6   18[BANK0 ] struct _IO_FILE
  4587 ;;  ap              2   16[BANK0 ] PTR void [1]
  4588 ;;		 -> ?_sprintf(2), 
  4589 ;;  ret             2    0        int 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  2    6[BANK0 ] int 
  4592 ;; Registers used:
  4593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4599 ;;      Params:         0       8       0       0       0       0       0       0       0
  4600 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4602 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4603 ;;Total ram usage:       18 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    7
  4606 ;; This function calls:
  4607 ;;		_vfprintf
  4608 ;; This function is called by:
  4609 ;;		_RTC
  4610 ;;		_SensorTemperatura
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text15
  4615  002D96                     __ptext15:
  4616                           	callstack 0
  4617  002D96                     _sprintf:
  4618                           	callstack 22
  4619  002D96  0E6A               	movlw	low (?_sprintf+4)
  4620  002D98  0100               	movlb	0	; () banked
  4621  002D9A  6F70               	movwf	sprintf@ap& (0+255),b
  4622  002D9C  0E00               	movlw	high (?_sprintf+4)
  4623  002D9E  6F71               	movwf	(sprintf@ap+1)& (0+255),b
  4624  002DA0  C066  F072         	movff	sprintf@s,sprintf@f
  4625  002DA4  C067  F073         	movff	sprintf@s+1,sprintf@f+1
  4626  002DA8                     
  4627                           ; BSR set to: 0
  4628  002DA8  0E00               	movlw	0
  4629  002DAA  6F75               	movwf	(sprintf@f+3)& (0+255),b
  4630  002DAC  0E00               	movlw	0
  4631  002DAE  6F74               	movwf	(sprintf@f+2)& (0+255),b
  4632  002DB0                     
  4633                           ; BSR set to: 0
  4634  002DB0  0E00               	movlw	0
  4635  002DB2  6F77               	movwf	(sprintf@f+5)& (0+255),b
  4636  002DB4  0E00               	movlw	0
  4637  002DB6  6F76               	movwf	(sprintf@f+4)& (0+255),b
  4638  002DB8                     
  4639                           ; BSR set to: 0
  4640  002DB8  0E72               	movlw	low sprintf@f
  4641  002DBA  6F60               	movwf	vfprintf@fp& (0+255),b
  4642  002DBC  0E00               	movlw	high sprintf@f
  4643  002DBE  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  4644  002DC0  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  4645  002DC4  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4646  002DC8  0E70               	movlw	low sprintf@ap
  4647  002DCA  6F64               	movwf	vfprintf@ap& (0+255),b
  4648  002DCC  0E00               	movlw	high sprintf@ap
  4649  002DCE  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  4650  002DD0  EC3C  F016         	call	_vfprintf	;wreg free
  4651  002DD4  0100               	movlb	0	; () banked
  4652  002DD6  5174               	movf	(sprintf@f+2)& (0+255),w,b
  4653  002DD8  2566               	addwf	sprintf@s& (0+255),w,b
  4654  002DDA  6ED9               	movwf	fsr2l,c
  4655  002DDC  5175               	movf	(sprintf@f+3)& (0+255),w,b
  4656  002DDE  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  4657  002DE0  6EDA               	movwf	fsr2h,c
  4658  002DE2  0E00               	movlw	0
  4659  002DE4  6EDF               	movwf	indf2,c
  4660  002DE6                     
  4661                           ; BSR set to: 0
  4662  002DE6  0012               	return		;funcret
  4663  002DE8                     __end_of_sprintf:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _vfprintf *****************
  4667 ;; Defined at:
  4668 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4671 ;;		 -> sprintf@f(6), 
  4672 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4673 ;;		 -> STR_5(7), STR_3(8), STR_2(4), STR_1(4), 
  4674 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4675 ;;		 -> sprintf@ap(2), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  4678 ;;		 -> STR_5(7), STR_3(8), STR_2(4), STR_1(4), 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  2    0[BANK0 ] int 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4688 ;;      Params:         0       6       0       0       0       0       0       0       0
  4689 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4691 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4692 ;;Total ram usage:        8 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    6
  4695 ;; This function calls:
  4696 ;;		_vfpfcnvrt
  4697 ;; This function is called by:
  4698 ;;		_sprintf
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text16
  4703  002C78                     __ptext16:
  4704                           	callstack 0
  4705  002C78                     _vfprintf:
  4706                           	callstack 22
  4707  002C78                     
  4708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4709  002C78  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  4710  002C7C  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4711  002C80                     
  4712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4713  002C80  0E00               	movlw	0
  4714  002C82  0100               	movlb	0	; () banked
  4715  002C84  6FB7               	movwf	(_nout+1)& (0+255),b
  4716  002C86  0E00               	movlw	0
  4717  002C88  6FB6               	movwf	_nout& (0+255),b
  4718                           
  4719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4720  002C8A  EF5A  F016         	goto	l3008
  4721  002C8E                     l3006:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4725  002C8E  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4726  002C92  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4727  002C96  0E5E               	movlw	low vfprintf@cfmt
  4728  002C98  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4729  002C9A  0E00               	movlw	high vfprintf@cfmt
  4730  002C9C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4731  002C9E  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4732  002CA2  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4733  002CA6  EC1E  F008         	call	_vfpfcnvrt	;wreg free
  4734  002CAA  5043               	movf	?_vfpfcnvrt^0,w,c
  4735  002CAC  0100               	movlb	0	; () banked
  4736  002CAE  27B6               	addwf	_nout& (0+255),f,b
  4737  002CB0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4738  002CB2  23B7               	addwfc	(_nout+1)& (0+255),f,b
  4739  002CB4                     l3008:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4743  002CB4  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4744  002CB8  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4745  002CBC                     	if	0	;tblptru may be non-zero
  4746  002CBC                     	endif
  4747  002CBC                     	if	0	;tblptru may be non-zero
  4748  002CBC                     	endif
  4749  002CBC  0008               	tblrd		*
  4750  002CBE  50F5               	movf	tablat,w,c
  4751  002CC0  0900               	iorlw	0
  4752  002CC2  A4D8               	btfss	status,2,c
  4753  002CC4  EF66  F016         	goto	u3021
  4754  002CC8  EF68  F016         	goto	u3020
  4755  002CCC                     u3021:
  4756  002CCC  EF47  F016         	goto	l3006
  4757  002CD0                     u3020:
  4758  002CD0                     
  4759                           ; BSR set to: 0
  4760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4761  002CD0  C0B6  F060         	movff	_nout,?_vfprintf
  4762  002CD4  C0B7  F061         	movff	_nout+1,?_vfprintf+1
  4763  002CD8                     
  4764                           ; BSR set to: 0
  4765  002CD8  0012               	return		;funcret
  4766  002CDA                     __end_of_vfprintf:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _vfpfcnvrt *****************
  4770 ;; Defined at:
  4771 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4774 ;;		 -> sprintf@f(6), 
  4775 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4776 ;;		 -> vfprintf@cfmt(2), 
  4777 ;;  ap              2   70[COMRAM] PTR PTR void 
  4778 ;;		 -> sprintf@ap(2), 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  llu             8   84[COMRAM] unsigned long long 
  4781 ;;  ll              8   76[COMRAM] long long 
  4782 ;;  f               4    0        long long 
  4783 ;;  vp              3    0        PTR void 
  4784 ;;  ct              3    0        unsigned char [3]
  4785 ;;  cp              3    0        PTR unsigned char 
  4786 ;;  i               2    0        int 
  4787 ;;  done            2    0        int 
  4788 ;;  c               1   92[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2   66[COMRAM] int 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         6       0       0       0       0       0       0       0       0
  4799 ;;      Locals:        17       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4801 ;;      Totals:        27       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:       27 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    5
  4805 ;; This function calls:
  4806 ;;		_ctoa
  4807 ;;		_dtoa
  4808 ;;		_fputc
  4809 ;;		_xtoa
  4810 ;; This function is called by:
  4811 ;;		_vfprintf
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text17
  4816  00103C                     __ptext17:
  4817                           	callstack 0
  4818  00103C                     _vfpfcnvrt:
  4819                           	callstack 22
  4820  00103C                     
  4821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4822  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4823  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4824  001044  CFDE FFF6          	movff	postinc2,tblptrl
  4825  001048  CFDD FFF7          	movff	postdec2,tblptrh
  4826  00104C                     	if	0	;tblptru may be non-zero
  4827  00104C                     	endif
  4828  00104C                     	if	0	;tblptru may be non-zero
  4829  00104C                     	endif
  4830  00104C  0008               	tblrd		*
  4831  00104E  50F5               	movf	tablat,w,c
  4832  001050  0A25               	xorlw	37
  4833  001052  A4D8               	btfss	status,2,c
  4834  001054  EF2E  F008         	goto	u2851
  4835  001058  EF30  F008         	goto	u2850
  4836  00105C                     u2851:
  4837  00105C  EF87  F009         	goto	l2938
  4838  001060                     u2850:
  4839  001060                     
  4840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4841  001060  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4842  001064  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4843  001068  2ADE               	incf	postinc2,f,c
  4844  00106A  0E00               	movlw	0
  4845  00106C  22DD               	addwfc	postdec2,f,c
  4846  00106E                     
  4847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4848  00106E  0E00               	movlw	0
  4849  001070  0100               	movlb	0	; () banked
  4850  001072  6FB9               	movwf	(_width+1)& (0+255),b
  4851  001074  0E00               	movlw	0
  4852  001076  6FB8               	movwf	_width& (0+255),b
  4853  001078  C0B8  F0BC         	movff	_width,_flags
  4854  00107C  C0B9  F0BD         	movff	_width+1,_flags+1
  4855  001080                     
  4856                           ; BSR set to: 0
  4857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4858  001080  69BA               	setf	_prec& (0+255),b
  4859  001082  69BB               	setf	(_prec+1)& (0+255),b
  4860  001084                     
  4861                           ; BSR set to: 0
  4862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  4863  001084  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4864  001088  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4865  00108C  CFDE FFF6          	movff	postinc2,tblptrl
  4866  001090  CFDD FFF7          	movff	postdec2,tblptrh
  4867  001094                     	if	0	;tblptru may be non-zero
  4868  001094                     	endif
  4869  001094                     	if	0	;tblptru may be non-zero
  4870  001094                     	endif
  4871  001094  0008               	tblrd		*
  4872  001096  50F5               	movf	tablat,w,c
  4873  001098  0A63               	xorlw	99
  4874  00109A  A4D8               	btfss	status,2,c
  4875  00109C  EF52  F008         	goto	u2861
  4876  0010A0  EF54  F008         	goto	u2860
  4877  0010A4                     u2861:
  4878  0010A4  EF7B  F008         	goto	l2898
  4879  0010A8                     u2860:
  4880  0010A8                     
  4881                           ; BSR set to: 0
  4882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  4883  0010A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4884  0010AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4885  0010B0  2ADE               	incf	postinc2,f,c
  4886  0010B2  0E00               	movlw	0
  4887  0010B4  22DD               	addwfc	postdec2,f,c
  4888                           
  4889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4890  0010B6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4891  0010BA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4892  0010BE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4893  0010C2  0E02               	movlw	2
  4894  0010C4  26DE               	addwf	postinc2,f,c
  4895  0010C6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4896  0010CA  0E00               	movlw	0
  4897  0010CC  22DD               	addwfc	postdec2,f,c
  4898  0010CE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4899  0010D2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4900  0010D6  50DF               	movf	indf2,w,c
  4901  0010D8  6E5D               	movwf	vfpfcnvrt@c^0,c
  4902  0010DA                     
  4903                           ; BSR set to: 0
  4904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  4905  0010DA  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  4906  0010DE  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4907  0010E2  C05D  F00C         	movff	vfpfcnvrt@c,ctoa@c
  4908  0010E6  ECA8  F013         	call	_ctoa	;wreg free
  4909  0010EA  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  4910  0010EE  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4911  0010F2  EFA2  F009         	goto	l1171
  4912  0010F6                     l2898:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4916  0010F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4917  0010FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4918  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  4919  001102  CFDD FFF7          	movff	postdec2,tblptrh
  4920  001106                     	if	0	;tblptru may be non-zero
  4921  001106                     	endif
  4922  001106                     	if	0	;tblptru may be non-zero
  4923  001106                     	endif
  4924  001106  0008               	tblrd		*
  4925  001108  50F5               	movf	tablat,w,c
  4926  00110A  0A64               	xorlw	100
  4927  00110C  B4D8               	btfsc	status,2,c
  4928  00110E  EF8B  F008         	goto	u2871
  4929  001112  EF8D  F008         	goto	u2870
  4930  001116                     u2871:
  4931  001116  EF9F  F008         	goto	l2902
  4932  00111A                     u2870:
  4933  00111A                     
  4934                           ; BSR set to: 0
  4935  00111A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4936  00111E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4937  001122  CFDE FFF6          	movff	postinc2,tblptrl
  4938  001126  CFDD FFF7          	movff	postdec2,tblptrh
  4939  00112A                     	if	0	;tblptru may be non-zero
  4940  00112A                     	endif
  4941  00112A                     	if	0	;tblptru may be non-zero
  4942  00112A                     	endif
  4943  00112A  0008               	tblrd		*
  4944  00112C  50F5               	movf	tablat,w,c
  4945  00112E  0A69               	xorlw	105
  4946  001130  A4D8               	btfss	status,2,c
  4947  001132  EF9D  F008         	goto	u2881
  4948  001136  EF9F  F008         	goto	u2880
  4949  00113A                     u2881:
  4950  00113A  EFDF  F008         	goto	l2908
  4951  00113E                     u2880:
  4952  00113E                     l2902:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4956  00113E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4957  001142  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4958  001146  2ADE               	incf	postinc2,f,c
  4959  001148  0E00               	movlw	0
  4960  00114A  22DD               	addwfc	postdec2,f,c
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4963  00114C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4964  001150  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4965  001154  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4966  001158  0E02               	movlw	2
  4967  00115A  26DE               	addwf	postinc2,f,c
  4968  00115C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4969  001160  0E00               	movlw	0
  4970  001162  22DD               	addwfc	postdec2,f,c
  4971  001164  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4972  001168  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4973  00116C  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  4974  001170  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  4975  001174  0E00               	movlw	0
  4976  001176  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4977  001178  0EFF               	movlw	-1
  4978  00117A  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  4979  00117C  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  4980  00117E  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  4981  001180  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  4982  001182  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  4983  001184  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  4984  001186                     
  4985                           ; BSR set to: 0
  4986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4987  001186  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4988  00118A  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4989  00118E  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4990  001192  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4991  001196  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4992  00119A  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4993  00119E  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4994  0011A2  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4995  0011A6  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4996  0011AA  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4997  0011AE  ECA3  F009         	call	_dtoa	;wreg free
  4998  0011B2  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4999  0011B6  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5000  0011BA  EFA2  F009         	goto	l1171
  5001  0011BE                     l2908:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5005  0011BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5006  0011C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5007  0011C6  CFDE FFF6          	movff	postinc2,tblptrl
  5008  0011CA  CFDD FFF7          	movff	postdec2,tblptrh
  5009  0011CE                     	if	0	;tblptru may be non-zero
  5010  0011CE                     	endif
  5011  0011CE                     	if	0	;tblptru may be non-zero
  5012  0011CE                     	endif
  5013  0011CE  0008               	tblrd		*
  5014  0011D0  50F5               	movf	tablat,w,c
  5015  0011D2  0A78               	xorlw	120
  5016  0011D4  B4D8               	btfsc	status,2,c
  5017  0011D6  EFEF  F008         	goto	u2891
  5018  0011DA  EFF1  F008         	goto	u2890
  5019  0011DE                     u2891:
  5020  0011DE  EF03  F009         	goto	l2912
  5021  0011E2                     u2890:
  5022  0011E2                     
  5023                           ; BSR set to: 0
  5024  0011E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5025  0011E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5026  0011EA  CFDE FFF6          	movff	postinc2,tblptrl
  5027  0011EE  CFDD FFF7          	movff	postdec2,tblptrh
  5028  0011F2                     	if	0	;tblptru may be non-zero
  5029  0011F2                     	endif
  5030  0011F2                     	if	0	;tblptru may be non-zero
  5031  0011F2                     	endif
  5032  0011F2  0008               	tblrd		*
  5033  0011F4  50F5               	movf	tablat,w,c
  5034  0011F6  0A58               	xorlw	88
  5035  0011F8  A4D8               	btfss	status,2,c
  5036  0011FA  EF01  F009         	goto	u2901
  5037  0011FE  EF03  F009         	goto	u2900
  5038  001202                     u2901:
  5039  001202  EF51  F009         	goto	l2922
  5040  001206                     u2900:
  5041  001206                     l2912:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5045  001206  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5046  00120A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5047  00120E  CFDE FFF6          	movff	postinc2,tblptrl
  5048  001212  CFDD FFF7          	movff	postdec2,tblptrh
  5049  001216                     	if	0	;tblptru may be non-zero
  5050  001216                     	endif
  5051  001216                     	if	0	;tblptru may be non-zero
  5052  001216                     	endif
  5053  001216  0008               	tblrd		*
  5054  001218  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  5055  00121C                     
  5056                           ; BSR set to: 0
  5057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5058  00121C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5059  001220  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5060  001224  2ADE               	incf	postinc2,f,c
  5061  001226  0E00               	movlw	0
  5062  001228  22DD               	addwfc	postdec2,f,c
  5063  00122A                     
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5066  00122A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5067  00122E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5068  001232  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5069  001236  0E02               	movlw	2
  5070  001238  26DE               	addwf	postinc2,f,c
  5071  00123A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5072  00123E  0E00               	movlw	0
  5073  001240  22DD               	addwfc	postdec2,f,c
  5074  001242  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5075  001246  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5076  00124A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5077  00124E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5078  001252  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5079  001256  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5080  00125A  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  5081  00125C  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  5082  00125E  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  5083  001260  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  5084  001262  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  5085  001264  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  5086  001266                     
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5089  001266  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5090  00126A  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5091  00126E  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5092  001272  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5093  001276  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5094  00127A  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5095  00127E  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5096  001282  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5097  001286  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5098  00128A  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5099  00128E  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  5100  001292  EC15  F00B         	call	_xtoa	;wreg free
  5101  001296  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5102  00129A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5103  00129E  EFA2  F009         	goto	l1171
  5104  0012A2                     l2922:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5108  0012A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5109  0012A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5110  0012AA  CFDE FFF6          	movff	postinc2,tblptrl
  5111  0012AE  CFDD FFF7          	movff	postdec2,tblptrh
  5112  0012B2                     	if	0	;tblptru may be non-zero
  5113  0012B2                     	endif
  5114  0012B2                     	if	0	;tblptru may be non-zero
  5115  0012B2                     	endif
  5116  0012B2  0008               	tblrd		*
  5117  0012B4  50F5               	movf	tablat,w,c
  5118  0012B6  0A25               	xorlw	37
  5119  0012B8  A4D8               	btfss	status,2,c
  5120  0012BA  EF61  F009         	goto	u2911
  5121  0012BE  EF63  F009         	goto	u2910
  5122  0012C2                     u2911:
  5123  0012C2  EF7A  F009         	goto	l2932
  5124  0012C6                     u2910:
  5125  0012C6                     
  5126                           ; BSR set to: 0
  5127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5128  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5129  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5130  0012CE  2ADE               	incf	postinc2,f,c
  5131  0012D0  0E00               	movlw	0
  5132  0012D2  22DD               	addwfc	postdec2,f,c
  5133  0012D4                     
  5134                           ; BSR set to: 0
  5135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5136  0012D4  0E00               	movlw	0
  5137  0012D6  6E02               	movwf	(fputc@c+1)^0,c
  5138  0012D8  0E25               	movlw	37
  5139  0012DA  6E01               	movwf	fputc@c^0,c
  5140  0012DC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5141  0012E0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5142  0012E4  EC14  F014         	call	_fputc	;wreg free
  5143  0012E8                     l2928:
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5146  0012E8  0E00               	movlw	0
  5147  0012EA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5148  0012EC  0E01               	movlw	1
  5149  0012EE  6E43               	movwf	?_vfpfcnvrt^0,c
  5150  0012F0  EFA2  F009         	goto	l1171
  5151  0012F4                     l2932:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5155  0012F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5156  0012F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5157  0012FC  2ADE               	incf	postinc2,f,c
  5158  0012FE  0E00               	movlw	0
  5159  001300  22DD               	addwfc	postdec2,f,c
  5160  001302                     
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5163  001302  0E00               	movlw	0
  5164  001304  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5165  001306  0E00               	movlw	0
  5166  001308  6E43               	movwf	?_vfpfcnvrt^0,c
  5167  00130A  EFA2  F009         	goto	l1171
  5168  00130E                     l2938:
  5169                           
  5170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5171  00130E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5172  001312  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5173  001316  CFDE FFF6          	movff	postinc2,tblptrl
  5174  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  5175  00131E                     	if	0	;tblptru may be non-zero
  5176  00131E                     	endif
  5177  00131E                     	if	0	;tblptru may be non-zero
  5178  00131E                     	endif
  5179  00131E  0008               	tblrd		*
  5180  001320  50F5               	movf	tablat,w,c
  5181  001322  6E01               	movwf	fputc@c^0,c
  5182  001324  6A02               	clrf	(fputc@c+1)^0,c
  5183  001326  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5184  00132A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5185  00132E  EC14  F014         	call	_fputc	;wreg free
  5186  001332                     
  5187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5188  001332  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5189  001336  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5190  00133A  2ADE               	incf	postinc2,f,c
  5191  00133C  0E00               	movlw	0
  5192  00133E  22DD               	addwfc	postdec2,f,c
  5193  001340  EF74  F009         	goto	l2928
  5194  001344                     l1171:
  5195  001344  0012               	return		;funcret
  5196  001346                     __end_of_vfpfcnvrt:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _xtoa *****************
  5200 ;; Defined at:
  5201 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5204 ;;		 -> sprintf@f(6), 
  5205 ;;  d               8   29[COMRAM] unsigned long long 
  5206 ;;  x               1   37[COMRAM] unsigned char 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  n               8   54[COMRAM] unsigned long long 
  5209 ;;  c               2   64[COMRAM] int 
  5210 ;;  i               2   62[COMRAM] int 
  5211 ;;  w               2   52[COMRAM] int 
  5212 ;;  p               2   50[COMRAM] int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  2   27[COMRAM] int 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5222 ;;      Params:        11       0       0       0       0       0       0       0       0
  5223 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5224 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5225 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5226 ;;Total ram usage:       39 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		_isalpha
  5231 ;;		_isupper
  5232 ;;		_pad
  5233 ;;		_toupper
  5234 ;; This function is called by:
  5235 ;;		_vfpfcnvrt
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text18
  5240  00162A                     __ptext18:
  5241                           	callstack 0
  5242  00162A                     _xtoa:
  5243                           	callstack 22
  5244  00162A                     
  5245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5246  00162A  0100               	movlb	0	; () banked
  5247  00162C  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  5248  00162E  EF1B  F00B         	goto	u2651
  5249  001632  EF1D  F00B         	goto	u2650
  5250  001636                     u2651:
  5251  001636  EF1E  F00B         	goto	l2788
  5252  00163A                     u2650:
  5253  00163A                     
  5254                           ; BSR set to: 0
  5255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5256  00163A  93BC               	bcf	_flags& (0+255),1,b
  5257  00163C                     l2788:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5261  00163C  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  5262  00163E  EF2B  F00B         	goto	u2660
  5263  001642  51BB               	movf	(_prec+1)& (0+255),w,b
  5264  001644  E106               	bnz	u2661
  5265  001646  05BA               	decf	_prec& (0+255),w,b
  5266  001648  B0D8               	btfsc	status,0,c
  5267  00164A  EF29  F00B         	goto	u2661
  5268  00164E  EF2B  F00B         	goto	u2660
  5269  001652                     u2661:
  5270  001652  EF31  F00B         	goto	l1141
  5271  001656                     u2660:
  5272  001656                     
  5273                           ; BSR set to: 0
  5274  001656  0E00               	movlw	0
  5275  001658  6E34               	movwf	(xtoa@p+1)^0,c
  5276  00165A  0E01               	movlw	1
  5277  00165C  6E33               	movwf	xtoa@p^0,c
  5278  00165E  EF35  F00B         	goto	l1143
  5279  001662                     l1141:
  5280                           
  5281                           ; BSR set to: 0
  5282  001662  C0BA  F033         	movff	_prec,xtoa@p
  5283  001666  C0BB  F034         	movff	_prec+1,xtoa@p+1
  5284  00166A                     l1143:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5288  00166A  C0B8  F035         	movff	_width,xtoa@w
  5289  00166E  C0B9  F036         	movff	_width+1,xtoa@w+1
  5290                           
  5291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5292  001672  A9BC               	btfss	_flags& (0+255),4,b
  5293  001674  EF3E  F00B         	goto	u2671
  5294  001678  EF40  F00B         	goto	u2670
  5295  00167C                     u2671:
  5296  00167C  EF44  F00B         	goto	l2794
  5297  001680                     u2670:
  5298  001680                     
  5299                           ; BSR set to: 0
  5300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5301  001680  0EFE               	movlw	254
  5302  001682  2635               	addwf	xtoa@w^0,f,c
  5303  001684  0EFF               	movlw	255
  5304  001686  2236               	addwfc	(xtoa@w+1)^0,f,c
  5305  001688                     l2794:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5309  001688  C01E  F037         	movff	xtoa@d,xtoa@n
  5310  00168C  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5311  001690  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5312  001694  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5313  001698  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5314  00169C  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5315  0016A0  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5316  0016A4  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5317  0016A8                     
  5318                           ; BSR set to: 0
  5319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5320  0016A8  0E00               	movlw	0
  5321  0016AA  6E40               	movwf	(xtoa@i+1)^0,c
  5322  0016AC  0E1F               	movlw	31
  5323  0016AE  6E3F               	movwf	xtoa@i^0,c
  5324  0016B0                     
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5327  0016B0  0E00               	movlw	0
  5328  0016B2  0101               	movlb	1	; () banked
  5329  0016B4  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5332  0016B6  EF10  F00C         	goto	l2830
  5333  0016BA                     l2800:
  5334                           
  5335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  5336  0016BA  063F               	decf	xtoa@i^0,f,c
  5337  0016BC  A0D8               	btfss	status,0,c
  5338  0016BE  0640               	decf	(xtoa@i+1)^0,f,c
  5339  0016C0                     
  5340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5341  0016C0  0E0F               	movlw	15
  5342  0016C2  1437               	andwf	xtoa@n^0,w,c
  5343  0016C4  6E41               	movwf	xtoa@c^0,c
  5344  0016C6  6A42               	clrf	(xtoa@c+1)^0,c
  5345  0016C8                     
  5346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5347  0016C8  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5348  0016CA  EF70  F00B         	goto	u2681
  5349  0016CE  5042               	movf	(xtoa@c+1)^0,w,c
  5350  0016D0  E109               	bnz	u2680
  5351  0016D2  0E0A               	movlw	10
  5352  0016D4  5C41               	subwf	xtoa@c^0,w,c
  5353  0016D6  A0D8               	btfss	status,0,c
  5354  0016D8  EF70  F00B         	goto	u2681
  5355  0016DC  EF72  F00B         	goto	u2680
  5356  0016E0                     u2681:
  5357  0016E0  EF7A  F00B         	goto	l2808
  5358  0016E4                     u2680:
  5359  0016E4  0E57               	movlw	87
  5360  0016E6  2441               	addwf	xtoa@c^0,w,c
  5361  0016E8  6E41               	movwf	xtoa@c^0,c
  5362  0016EA  0E00               	movlw	0
  5363  0016EC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5364  0016EE  6E42               	movwf	(xtoa@c+1)^0,c
  5365  0016F0  EF80  F00B         	goto	l1150
  5366  0016F4                     l2808:
  5367  0016F4  0E30               	movlw	48
  5368  0016F6  2441               	addwf	xtoa@c^0,w,c
  5369  0016F8  6E41               	movwf	xtoa@c^0,c
  5370  0016FA  0E00               	movlw	0
  5371  0016FC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5372  0016FE  6E42               	movwf	(xtoa@c+1)^0,c
  5373  001700                     l1150:
  5374  001700  0EBF               	movlw	191
  5375  001702  6E27               	movwf	??_xtoa^0,c
  5376  001704  0EFF               	movlw	255
  5377  001706  6E28               	movwf	(??_xtoa+1)^0,c
  5378  001708  5026               	movf	xtoa@x^0,w,c
  5379  00170A  6E29               	movwf	(??_xtoa+2)^0,c
  5380  00170C  6A2A               	clrf	(??_xtoa+3)^0,c
  5381  00170E  5027               	movf	??_xtoa^0,w,c
  5382  001710  2629               	addwf	(??_xtoa+2)^0,f,c
  5383  001712  5028               	movf	(??_xtoa+1)^0,w,c
  5384  001714  222A               	addwfc	(??_xtoa+3)^0,f,c
  5385  001716  502A               	movf	(??_xtoa+3)^0,w,c
  5386  001718  E10A               	bnz	u2690
  5387  00171A  0E1A               	movlw	26
  5388  00171C  5C29               	subwf	(??_xtoa+2)^0,w,c
  5389  00171E  A0D8               	btfss	status,0,c
  5390  001720  EF94  F00B         	goto	u2691
  5391  001724  EF97  F00B         	goto	u2690
  5392  001728                     u2691:
  5393  001728  0E01               	movlw	1
  5394  00172A  EF98  F00B         	goto	u2700
  5395  00172E                     u2690:
  5396  00172E  0E00               	movlw	0
  5397  001730                     u2700:
  5398  001730  6E2F               	movwf	_xtoa$1504^0,c
  5399  001732  6A30               	clrf	(_xtoa$1504+1)^0,c
  5400  001734  502F               	movf	_xtoa$1504^0,w,c
  5401  001736  1030               	iorwf	(_xtoa$1504+1)^0,w,c
  5402  001738  B4D8               	btfsc	status,2,c
  5403  00173A  EFA1  F00B         	goto	u2711
  5404  00173E  EFA3  F00B         	goto	u2710
  5405  001742                     u2711:
  5406  001742  EFD3  F00B         	goto	l2822
  5407  001746                     u2710:
  5408  001746  0E9F               	movlw	159
  5409  001748  6E27               	movwf	??_xtoa^0,c
  5410  00174A  0EFF               	movlw	255
  5411  00174C  6E28               	movwf	(??_xtoa+1)^0,c
  5412  00174E  0E20               	movlw	32
  5413  001750  1041               	iorwf	xtoa@c^0,w,c
  5414  001752  6E29               	movwf	(??_xtoa+2)^0,c
  5415  001754  0E00               	movlw	0
  5416  001756  1042               	iorwf	(xtoa@c+1)^0,w,c
  5417  001758  6E2A               	movwf	(??_xtoa+3)^0,c
  5418  00175A  5027               	movf	??_xtoa^0,w,c
  5419  00175C  2629               	addwf	(??_xtoa+2)^0,f,c
  5420  00175E  5028               	movf	(??_xtoa+1)^0,w,c
  5421  001760  222A               	addwfc	(??_xtoa+3)^0,f,c
  5422  001762  502A               	movf	(??_xtoa+3)^0,w,c
  5423  001764  E10A               	bnz	u2720
  5424  001766  0E1A               	movlw	26
  5425  001768  5C29               	subwf	(??_xtoa+2)^0,w,c
  5426  00176A  A0D8               	btfss	status,0,c
  5427  00176C  EFBA  F00B         	goto	u2721
  5428  001770  EFBD  F00B         	goto	u2720
  5429  001774                     u2721:
  5430  001774  0E01               	movlw	1
  5431  001776  EFBE  F00B         	goto	u2730
  5432  00177A                     u2720:
  5433  00177A  0E00               	movlw	0
  5434  00177C                     u2730:
  5435  00177C  6E31               	movwf	_xtoa$1505^0,c
  5436  00177E  6A32               	clrf	(_xtoa$1505+1)^0,c
  5437  001780  5031               	movf	_xtoa$1505^0,w,c
  5438  001782  1032               	iorwf	(_xtoa$1505+1)^0,w,c
  5439  001784  B4D8               	btfsc	status,2,c
  5440  001786  EFC7  F00B         	goto	u2741
  5441  00178A  EFC9  F00B         	goto	u2740
  5442  00178E                     u2741:
  5443  00178E  EFD3  F00B         	goto	l2822
  5444  001792                     u2740:
  5445  001792                     
  5446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5447  001792  C041  F007         	movff	xtoa@c,toupper@c
  5448  001796  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5449  00179A  EC6D  F016         	call	_toupper	;wreg free
  5450  00179E  C007  F041         	movff	?_toupper,xtoa@c
  5451  0017A2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5452  0017A6                     l2822:
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5455  0017A6  0E9B               	movlw	low _dbuf
  5456  0017A8  243F               	addwf	xtoa@i^0,w,c
  5457  0017AA  6ED9               	movwf	fsr2l,c
  5458  0017AC  0E01               	movlw	high _dbuf
  5459  0017AE  2040               	addwfc	(xtoa@i+1)^0,w,c
  5460  0017B0  6EDA               	movwf	fsr2h,c
  5461  0017B2  C041  FFDF         	movff	xtoa@c,indf2
  5462  0017B6                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  5464  0017B6  0633               	decf	xtoa@p^0,f,c
  5465  0017B8  A0D8               	btfss	status,0,c
  5466  0017BA  0634               	decf	(xtoa@p+1)^0,f,c
  5467  0017BC                     
  5468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  5469  0017BC  0635               	decf	xtoa@w^0,f,c
  5470  0017BE  A0D8               	btfss	status,0,c
  5471  0017C0  0636               	decf	(xtoa@w+1)^0,f,c
  5472  0017C2                     
  5473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5474  0017C2  C037  F027         	movff	xtoa@n,??_xtoa
  5475  0017C6  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5476  0017CA  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5477  0017CE  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5478  0017D2  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5479  0017D6  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5480  0017DA  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5481  0017DE  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5482  0017E2  0E05               	movlw	5
  5483  0017E4  EFFD  F00B         	goto	u2750
  5484  0017E8                     u2755:
  5485  0017E8  90D8               	bcf	status,0,c
  5486  0017EA  322E               	rrcf	(??_xtoa+7)^0,f,c
  5487  0017EC  322D               	rrcf	(??_xtoa+6)^0,f,c
  5488  0017EE  322C               	rrcf	(??_xtoa+5)^0,f,c
  5489  0017F0  322B               	rrcf	(??_xtoa+4)^0,f,c
  5490  0017F2  322A               	rrcf	(??_xtoa+3)^0,f,c
  5491  0017F4  3229               	rrcf	(??_xtoa+2)^0,f,c
  5492  0017F6  3228               	rrcf	(??_xtoa+1)^0,f,c
  5493  0017F8  3227               	rrcf	??_xtoa^0,f,c
  5494  0017FA                     u2750:
  5495  0017FA  2EE8               	decfsz	wreg,f,c
  5496  0017FC  EFF4  F00B         	goto	u2755
  5497  001800  C027  F037         	movff	??_xtoa,xtoa@n
  5498  001804  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5499  001808  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5500  00180C  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5501  001810  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5502  001814  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5503  001818  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5504  00181C  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5505  001820                     l2830:
  5506                           
  5507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5508  001820  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5509  001822  EF1C  F00C         	goto	u2761
  5510  001826  5040               	movf	(xtoa@i+1)^0,w,c
  5511  001828  E109               	bnz	u2760
  5512  00182A  0E02               	movlw	2
  5513  00182C  5C3F               	subwf	xtoa@i^0,w,c
  5514  00182E  A0D8               	btfss	status,0,c
  5515  001830  EF1C  F00C         	goto	u2761
  5516  001834  EF1E  F00C         	goto	u2760
  5517  001838                     u2761:
  5518  001838  EF4F  F00C         	goto	l1164
  5519  00183C                     u2760:
  5520  00183C  5037               	movf	xtoa@n^0,w,c
  5521  00183E  1038               	iorwf	(xtoa@n+1)^0,w,c
  5522  001840  1039               	iorwf	(xtoa@n+2)^0,w,c
  5523  001842  103A               	iorwf	(xtoa@n+3)^0,w,c
  5524  001844  103B               	iorwf	(xtoa@n+4)^0,w,c
  5525  001846  103C               	iorwf	(xtoa@n+5)^0,w,c
  5526  001848  103D               	iorwf	(xtoa@n+6)^0,w,c
  5527  00184A  103E               	iorwf	(xtoa@n+7)^0,w,c
  5528  00184C  A4D8               	btfss	status,2,c
  5529  00184E  EF2B  F00C         	goto	u2771
  5530  001852  EF2D  F00C         	goto	u2770
  5531  001856                     u2771:
  5532  001856  EF5D  F00B         	goto	l2800
  5533  00185A                     u2770:
  5534  00185A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5535  00185C  EF3A  F00C         	goto	u2780
  5536  001860  5034               	movf	(xtoa@p+1)^0,w,c
  5537  001862  E106               	bnz	u2781
  5538  001864  0433               	decf	xtoa@p^0,w,c
  5539  001866  B0D8               	btfsc	status,0,c
  5540  001868  EF38  F00C         	goto	u2781
  5541  00186C  EF3A  F00C         	goto	u2780
  5542  001870                     u2781:
  5543  001870  EF5D  F00B         	goto	l2800
  5544  001874                     u2780:
  5545  001874  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5546  001876  EF45  F00C         	goto	u2791
  5547  00187A  5036               	movf	(xtoa@w+1)^0,w,c
  5548  00187C  E108               	bnz	u2790
  5549  00187E  0435               	decf	xtoa@w^0,w,c
  5550  001880  A0D8               	btfss	status,0,c
  5551  001882  EF45  F00C         	goto	u2791
  5552  001886  EF47  F00C         	goto	u2790
  5553  00188A                     u2791:
  5554  00188A  EF4F  F00C         	goto	l1164
  5555  00188E                     u2790:
  5556  00188E  0100               	movlb	0	; () banked
  5557  001890  B3BC               	btfsc	_flags& (0+255),1,b
  5558  001892  EF4D  F00C         	goto	u2801
  5559  001896  EF4F  F00C         	goto	u2800
  5560  00189A                     u2801:
  5561  00189A  EF5D  F00B         	goto	l2800
  5562  00189E                     u2800:
  5563  00189E                     l1164:
  5564                           
  5565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5566  00189E  0100               	movlb	0	; () banked
  5567  0018A0  A9BC               	btfss	_flags& (0+255),4,b
  5568  0018A2  EF55  F00C         	goto	u2811
  5569  0018A6  EF57  F00C         	goto	u2810
  5570  0018AA                     u2811:
  5571  0018AA  EF6D  F00C         	goto	l2846
  5572  0018AE                     u2810:
  5573  0018AE                     
  5574                           ; BSR set to: 0
  5575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  5576  0018AE  063F               	decf	xtoa@i^0,f,c
  5577  0018B0  A0D8               	btfss	status,0,c
  5578  0018B2  0640               	decf	(xtoa@i+1)^0,f,c
  5579  0018B4                     
  5580                           ; BSR set to: 0
  5581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5582  0018B4  0E9B               	movlw	low _dbuf
  5583  0018B6  243F               	addwf	xtoa@i^0,w,c
  5584  0018B8  6ED9               	movwf	fsr2l,c
  5585  0018BA  0E01               	movlw	high _dbuf
  5586  0018BC  2040               	addwfc	(xtoa@i+1)^0,w,c
  5587  0018BE  6EDA               	movwf	fsr2h,c
  5588  0018C0  C026  FFDF         	movff	xtoa@x,indf2
  5589  0018C4                     
  5590                           ; BSR set to: 0
  5591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  5592  0018C4  063F               	decf	xtoa@i^0,f,c
  5593  0018C6  A0D8               	btfss	status,0,c
  5594  0018C8  0640               	decf	(xtoa@i+1)^0,f,c
  5595                           
  5596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5597  0018CA  0E9B               	movlw	low _dbuf
  5598  0018CC  243F               	addwf	xtoa@i^0,w,c
  5599  0018CE  6ED9               	movwf	fsr2l,c
  5600  0018D0  0E01               	movlw	high _dbuf
  5601  0018D2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5602  0018D4  6EDA               	movwf	fsr2h,c
  5603  0018D6  0E30               	movlw	48
  5604  0018D8  6EDF               	movwf	indf2,c
  5605  0018DA                     l2846:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5609  0018DA  C01C  F011         	movff	xtoa@fp,pad@fp
  5610  0018DE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5611  0018E2  0E9B               	movlw	low _dbuf
  5612  0018E4  243F               	addwf	xtoa@i^0,w,c
  5613  0018E6  6E13               	movwf	pad@buf^0,c
  5614  0018E8  0E01               	movlw	high _dbuf
  5615  0018EA  2040               	addwfc	(xtoa@i+1)^0,w,c
  5616  0018EC  6E14               	movwf	(pad@buf+1)^0,c
  5617  0018EE  C035  F015         	movff	xtoa@w,pad@p
  5618  0018F2  C036  F016         	movff	xtoa@w+1,pad@p+1
  5619  0018F6  EC79  F014         	call	_pad	;wreg free
  5620  0018FA  C011  F01C         	movff	?_pad,?_xtoa
  5621  0018FE  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5622  001902  0012               	return		;funcret
  5623  001904                     __end_of_xtoa:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _toupper *****************
  5627 ;; Defined at:
  5628 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  c               2    6[COMRAM] int 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;		None
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2    6[COMRAM] int 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5642 ;;      Params:         2       0       0       0       0       0       0       0       0
  5643 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5644 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5645 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5646 ;;Total ram usage:        8 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    1
  5649 ;; This function calls:
  5650 ;;		_islower
  5651 ;; This function is called by:
  5652 ;;		_xtoa
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text19
  5657  002CDA                     __ptext19:
  5658                           	callstack 0
  5659  002CDA                     _toupper:
  5660                           	callstack 24
  5661  002CDA  0E9F               	movlw	159
  5662  002CDC  6E09               	movwf	??_toupper^0,c
  5663  002CDE  0EFF               	movlw	255
  5664  002CE0  6E0A               	movwf	(??_toupper+1)^0,c
  5665  002CE2  C007  F00B         	movff	toupper@c,??_toupper+2
  5666  002CE6  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5667  002CEA  5009               	movf	??_toupper^0,w,c
  5668  002CEC  260B               	addwf	(??_toupper+2)^0,f,c
  5669  002CEE  500A               	movf	(??_toupper+1)^0,w,c
  5670  002CF0  220C               	addwfc	(??_toupper+3)^0,f,c
  5671  002CF2  500C               	movf	(??_toupper+3)^0,w,c
  5672  002CF4  E10A               	bnz	u2390
  5673  002CF6  0E1A               	movlw	26
  5674  002CF8  5C0B               	subwf	(??_toupper+2)^0,w,c
  5675  002CFA  A0D8               	btfss	status,0,c
  5676  002CFC  EF82  F016         	goto	u2391
  5677  002D00  EF85  F016         	goto	u2390
  5678  002D04                     u2391:
  5679  002D04  0E01               	movlw	1
  5680  002D06  EF86  F016         	goto	u2400
  5681  002D0A                     u2390:
  5682  002D0A  0E00               	movlw	0
  5683  002D0C                     u2400:
  5684  002D0C  6E0D               	movwf	_toupper$1604^0,c
  5685  002D0E  6A0E               	clrf	(_toupper$1604+1)^0,c
  5686  002D10  500D               	movf	_toupper$1604^0,w,c
  5687  002D12  100E               	iorwf	(_toupper$1604+1)^0,w,c
  5688  002D14  B4D8               	btfsc	status,2,c
  5689  002D16  EF8F  F016         	goto	u2411
  5690  002D1A  EF91  F016         	goto	u2410
  5691  002D1E                     u2411:
  5692  002D1E  EF97  F016         	goto	l1250
  5693  002D22                     u2410:
  5694  002D22  0E5F               	movlw	95
  5695  002D24  1407               	andwf	toupper@c^0,w,c
  5696  002D26  6E07               	movwf	?_toupper^0,c
  5697  002D28  6A08               	clrf	(?_toupper+1)^0,c
  5698  002D2A  EF9B  F016         	goto	l1255
  5699  002D2E                     l1250:
  5700  002D2E  C007  F007         	movff	toupper@c,?_toupper
  5701  002D32  C008  F008         	movff	toupper@c+1,?_toupper+1
  5702  002D36                     l1255:
  5703  002D36  0012               	return		;funcret
  5704  002D38                     __end_of_toupper:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function _islower *****************
  5708 ;; Defined at:
  5709 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  c               2    0[COMRAM] int 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2    0[COMRAM] int 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:         2       0       0       0       0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5725 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5726 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5727 ;;Total ram usage:        6 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_toupper
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text20
  5737  003038                     __ptext20:
  5738                           	callstack 0
  5739  003038                     _islower:
  5740                           	callstack 24
  5741  003038  0E9F               	movlw	159
  5742  00303A  6E03               	movwf	??_islower^0,c
  5743  00303C  0EFF               	movlw	255
  5744  00303E  6E04               	movwf	(??_islower+1)^0,c
  5745  003040  C001  F005         	movff	islower@c,??_islower+2
  5746  003044  C002  F006         	movff	islower@c+1,??_islower+3
  5747  003048  5003               	movf	??_islower^0,w,c
  5748  00304A  2605               	addwf	(??_islower+2)^0,f,c
  5749  00304C  5004               	movf	(??_islower+1)^0,w,c
  5750  00304E  2206               	addwfc	(??_islower+3)^0,f,c
  5751  003050  5006               	movf	(??_islower+3)^0,w,c
  5752  003052  E10A               	bnz	u2150
  5753  003054  0E1A               	movlw	26
  5754  003056  5C05               	subwf	(??_islower+2)^0,w,c
  5755  003058  A0D8               	btfss	status,0,c
  5756  00305A  EF31  F018         	goto	u2151
  5757  00305E  EF34  F018         	goto	u2150
  5758  003062                     u2151:
  5759  003062  0E01               	movlw	1
  5760  003064  EF35  F018         	goto	u2160
  5761  003068                     u2150:
  5762  003068  0E00               	movlw	0
  5763  00306A                     u2160:
  5764  00306A  6E01               	movwf	?_islower^0,c
  5765  00306C  6A02               	clrf	(?_islower+1)^0,c
  5766  00306E  0012               	return		;funcret
  5767  003070                     __end_of_islower:
  5768                           	callstack 0
  5769                           
  5770 ;; *************** function _isupper *****************
  5771 ;; Defined at:
  5772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  c               2    0[COMRAM] int 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  2    0[COMRAM] int 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5786 ;;      Params:         2       0       0       0       0       0       0       0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5788 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5789 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5790 ;;Total ram usage:        6 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_xtoa
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text21
  5800  003070                     __ptext21:
  5801                           	callstack 0
  5802  003070                     _isupper:
  5803                           	callstack 25
  5804  003070  0EBF               	movlw	191
  5805  003072  6E03               	movwf	??_isupper^0,c
  5806  003074  0EFF               	movlw	255
  5807  003076  6E04               	movwf	(??_isupper+1)^0,c
  5808  003078  C001  F005         	movff	isupper@c,??_isupper+2
  5809  00307C  C002  F006         	movff	isupper@c+1,??_isupper+3
  5810  003080  5003               	movf	??_isupper^0,w,c
  5811  003082  2605               	addwf	(??_isupper+2)^0,f,c
  5812  003084  5004               	movf	(??_isupper+1)^0,w,c
  5813  003086  2206               	addwfc	(??_isupper+3)^0,f,c
  5814  003088  5006               	movf	(??_isupper+3)^0,w,c
  5815  00308A  E10A               	bnz	u2350
  5816  00308C  0E1A               	movlw	26
  5817  00308E  5C05               	subwf	(??_isupper+2)^0,w,c
  5818  003090  A0D8               	btfss	status,0,c
  5819  003092  EF4D  F018         	goto	u2351
  5820  003096  EF50  F018         	goto	u2350
  5821  00309A                     u2351:
  5822  00309A  0E01               	movlw	1
  5823  00309C  EF51  F018         	goto	u2360
  5824  0030A0                     u2350:
  5825  0030A0  0E00               	movlw	0
  5826  0030A2                     u2360:
  5827  0030A2  6E01               	movwf	?_isupper^0,c
  5828  0030A4  6A02               	clrf	(?_isupper+1)^0,c
  5829  0030A6  0012               	return		;funcret
  5830  0030A8                     __end_of_isupper:
  5831                           	callstack 0
  5832                           
  5833 ;; *************** function _isalpha *****************
  5834 ;; Defined at:
  5835 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  c               2    0[COMRAM] int 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  2    0[COMRAM] int 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5849 ;;      Params:         2       0       0       0       0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5851 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5852 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5853 ;;Total ram usage:        6 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_xtoa
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text22
  5863  002FC2                     __ptext22:
  5864                           	callstack 0
  5865  002FC2                     _isalpha:
  5866                           	callstack 25
  5867  002FC2  0E9F               	movlw	159
  5868  002FC4  6E03               	movwf	??_isalpha^0,c
  5869  002FC6  0EFF               	movlw	255
  5870  002FC8  6E04               	movwf	(??_isalpha+1)^0,c
  5871  002FCA  0E20               	movlw	32
  5872  002FCC  1001               	iorwf	isalpha@c^0,w,c
  5873  002FCE  6E05               	movwf	(??_isalpha+2)^0,c
  5874  002FD0  0E00               	movlw	0
  5875  002FD2  1002               	iorwf	(isalpha@c+1)^0,w,c
  5876  002FD4  6E06               	movwf	(??_isalpha+3)^0,c
  5877  002FD6  5003               	movf	??_isalpha^0,w,c
  5878  002FD8  2605               	addwf	(??_isalpha+2)^0,f,c
  5879  002FDA  5004               	movf	(??_isalpha+1)^0,w,c
  5880  002FDC  2206               	addwfc	(??_isalpha+3)^0,f,c
  5881  002FDE  5006               	movf	(??_isalpha+3)^0,w,c
  5882  002FE0  E10A               	bnz	u2370
  5883  002FE2  0E1A               	movlw	26
  5884  002FE4  5C05               	subwf	(??_isalpha+2)^0,w,c
  5885  002FE6  A0D8               	btfss	status,0,c
  5886  002FE8  EFF8  F017         	goto	u2371
  5887  002FEC  EFFB  F017         	goto	u2370
  5888  002FF0                     u2371:
  5889  002FF0  0E01               	movlw	1
  5890  002FF2  EFFC  F017         	goto	u2380
  5891  002FF6                     u2370:
  5892  002FF6  0E00               	movlw	0
  5893  002FF8                     u2380:
  5894  002FF8  6E01               	movwf	?_isalpha^0,c
  5895  002FFA  6A02               	clrf	(?_isalpha+1)^0,c
  5896  002FFC  0012               	return		;funcret
  5897  002FFE                     __end_of_isalpha:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function _dtoa *****************
  5901 ;; Defined at:
  5902 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5905 ;;		 -> sprintf@f(6), 
  5906 ;;  d               8   29[COMRAM] long long 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  n               8   53[COMRAM] long long 
  5909 ;;  i               2   61[COMRAM] int 
  5910 ;;  s               2   51[COMRAM] int 
  5911 ;;  w               2   49[COMRAM] int 
  5912 ;;  p               2   47[COMRAM] int 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2   27[COMRAM] int 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5922 ;;      Params:        10       0       0       0       0       0       0       0       0
  5923 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5924 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5925 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5926 ;;Total ram usage:       36 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    4
  5929 ;; This function calls:
  5930 ;;		___aodiv
  5931 ;;		___aomod
  5932 ;;		_abs
  5933 ;;		_pad
  5934 ;; This function is called by:
  5935 ;;		_vfpfcnvrt
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text23
  5940  001346                     __ptext23:
  5941                           	callstack 0
  5942  001346                     _dtoa:
  5943                           	callstack 22
  5944  001346                     
  5945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5946  001346  C01E  F036         	movff	dtoa@d,dtoa@n
  5947  00134A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5948  00134E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5949  001352  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5950  001356  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5951  00135A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5952  00135E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5953  001362  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5954  001366                     
  5955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5956  001366  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5957  001368  EFB8  F009         	goto	u2501
  5958  00136C  EFBB  F009         	goto	u2500
  5959  001370                     u2501:
  5960  001370  0E01               	movlw	1
  5961  001372  EFBC  F009         	goto	u2510
  5962  001376                     u2500:
  5963  001376  0E00               	movlw	0
  5964  001378                     u2510:
  5965  001378  6E34               	movwf	dtoa@s^0,c
  5966  00137A  6A35               	clrf	(dtoa@s+1)^0,c
  5967                           
  5968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5969  00137C  5034               	movf	dtoa@s^0,w,c
  5970  00137E  1035               	iorwf	(dtoa@s+1)^0,w,c
  5971  001380  B4D8               	btfsc	status,2,c
  5972  001382  EFC5  F009         	goto	u2521
  5973  001386  EFC7  F009         	goto	u2520
  5974  00138A                     u2521:
  5975  00138A  EFD7  F009         	goto	l2728
  5976  00138E                     u2520:
  5977  00138E                     
  5978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5979  00138E  1E3D               	comf	(dtoa@n+7)^0,f,c
  5980  001390  1E3C               	comf	(dtoa@n+6)^0,f,c
  5981  001392  1E3B               	comf	(dtoa@n+5)^0,f,c
  5982  001394  1E3A               	comf	(dtoa@n+4)^0,f,c
  5983  001396  1E39               	comf	(dtoa@n+3)^0,f,c
  5984  001398  1E38               	comf	(dtoa@n+2)^0,f,c
  5985  00139A  1E37               	comf	(dtoa@n+1)^0,f,c
  5986  00139C  6C36               	negf	dtoa@n^0,c
  5987  00139E  0E00               	movlw	0
  5988  0013A0  2237               	addwfc	(dtoa@n+1)^0,f,c
  5989  0013A2  2238               	addwfc	(dtoa@n+2)^0,f,c
  5990  0013A4  2239               	addwfc	(dtoa@n+3)^0,f,c
  5991  0013A6  223A               	addwfc	(dtoa@n+4)^0,f,c
  5992  0013A8  223B               	addwfc	(dtoa@n+5)^0,f,c
  5993  0013AA  223C               	addwfc	(dtoa@n+6)^0,f,c
  5994  0013AC  223D               	addwfc	(dtoa@n+7)^0,f,c
  5995  0013AE                     l2728:
  5996                           
  5997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5998  0013AE  0100               	movlb	0	; () banked
  5999  0013B0  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  6000  0013B2  EFDD  F009         	goto	u2531
  6001  0013B6  EFDF  F009         	goto	u2530
  6002  0013BA                     u2531:
  6003  0013BA  EFE0  F009         	goto	l2732
  6004  0013BE                     u2530:
  6005  0013BE                     
  6006                           ; BSR set to: 0
  6007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6008  0013BE  93BC               	bcf	_flags& (0+255),1,b
  6009  0013C0                     l2732:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6013  0013C0  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  6014  0013C2  EFED  F009         	goto	u2540
  6015  0013C6  51BB               	movf	(_prec+1)& (0+255),w,b
  6016  0013C8  E106               	bnz	u2541
  6017  0013CA  05BA               	decf	_prec& (0+255),w,b
  6018  0013CC  B0D8               	btfsc	status,0,c
  6019  0013CE  EFEB  F009         	goto	u2541
  6020  0013D2  EFED  F009         	goto	u2540
  6021  0013D6                     u2541:
  6022  0013D6  EFF3  F009         	goto	l1116
  6023  0013DA                     u2540:
  6024  0013DA                     
  6025                           ; BSR set to: 0
  6026  0013DA  0E00               	movlw	0
  6027  0013DC  6E31               	movwf	(dtoa@p+1)^0,c
  6028  0013DE  0E01               	movlw	1
  6029  0013E0  6E30               	movwf	dtoa@p^0,c
  6030  0013E2  EFF7  F009         	goto	l1118
  6031  0013E6                     l1116:
  6032                           
  6033                           ; BSR set to: 0
  6034  0013E6  C0BA  F030         	movff	_prec,dtoa@p
  6035  0013EA  C0BB  F031         	movff	_prec+1,dtoa@p+1
  6036  0013EE                     l1118:
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6040  0013EE  C0B8  F032         	movff	_width,dtoa@w
  6041  0013F2  C0B9  F033         	movff	_width+1,dtoa@w+1
  6042  0013F6                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6045  0013F6  5034               	movf	dtoa@s^0,w,c
  6046  0013F8  1035               	iorwf	(dtoa@s+1)^0,w,c
  6047  0013FA  A4D8               	btfss	status,2,c
  6048  0013FC  EF02  F00A         	goto	u2551
  6049  001400  EF04  F00A         	goto	u2550
  6050  001404                     u2551:
  6051  001404  EF0B  F00A         	goto	l2740
  6052  001408                     u2550:
  6053  001408                     
  6054                           ; BSR set to: 0
  6055  001408  A5BC               	btfss	_flags& (0+255),2,b
  6056  00140A  EF09  F00A         	goto	u2561
  6057  00140E  EF0B  F00A         	goto	u2560
  6058  001412                     u2561:
  6059  001412  EF0E  F00A         	goto	l2742
  6060  001416                     u2560:
  6061  001416                     l2740:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6065  001416  0632               	decf	dtoa@w^0,f,c
  6066  001418  A0D8               	btfss	status,0,c
  6067  00141A  0633               	decf	(dtoa@w+1)^0,f,c
  6068  00141C                     l2742:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6072  00141C  0E00               	movlw	0
  6073  00141E  6E3F               	movwf	(dtoa@i+1)^0,c
  6074  001420  0E1F               	movlw	31
  6075  001422  6E3E               	movwf	dtoa@i^0,c
  6076  001424                     
  6077                           ; BSR set to: 0
  6078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6079  001424  0E00               	movlw	0
  6080  001426  0101               	movlb	1	; () banked
  6081  001428  6FBA               	movwf	(_dbuf+31)& (0+255),b
  6082                           
  6083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6084  00142A  EF93  F00A         	goto	l2756
  6085  00142E                     l2746:
  6086                           
  6087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6088  00142E  063E               	decf	dtoa@i^0,f,c
  6089  001430  A0D8               	btfss	status,0,c
  6090  001432  063F               	decf	(dtoa@i+1)^0,f,c
  6091  001434                     
  6092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6093  001434  0E9B               	movlw	low _dbuf
  6094  001436  243E               	addwf	dtoa@i^0,w,c
  6095  001438  6ED9               	movwf	fsr2l,c
  6096  00143A  0E01               	movlw	high _dbuf
  6097  00143C  203F               	addwfc	(dtoa@i+1)^0,w,c
  6098  00143E  6EDA               	movwf	fsr2h,c
  6099  001440  C036  F001         	movff	dtoa@n,___aomod@dividend
  6100  001444  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6101  001448  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6102  00144C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6103  001450  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6104  001454  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6105  001458  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6106  00145C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6107  001460  0E0A               	movlw	10
  6108  001462  6E09               	movwf	___aomod@divisor^0,c
  6109  001464  0E00               	movlw	0
  6110  001466  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6111  001468  0E00               	movlw	0
  6112  00146A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6113  00146C  0E00               	movlw	0
  6114  00146E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6115  001470  0E00               	movlw	0
  6116  001472  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6117  001474  0E00               	movlw	0
  6118  001476  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6119  001478  0E00               	movlw	0
  6120  00147A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6121  00147C  0E00               	movlw	0
  6122  00147E  6E10               	movwf	(___aomod@divisor+7)^0,c
  6123  001480  ECF1  F011         	call	___aomod	;wreg free
  6124  001484  C001  F026         	movff	?___aomod,??_dtoa
  6125  001488  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6126  00148C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6127  001490  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6128  001494  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6129  001498  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6130  00149C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6131  0014A0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6132  0014A4  C026  F013         	movff	??_dtoa,abs@a
  6133  0014A8  C028  F014         	movff	??_dtoa+2,abs@a+1
  6134  0014AC  ECA2  F017         	call	_abs	;wreg free
  6135  0014B0  5013               	movf	?_abs^0,w,c
  6136  0014B2  0F30               	addlw	48
  6137  0014B4  6EDF               	movwf	indf2,c
  6138  0014B6                     
  6139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6140  0014B6  0630               	decf	dtoa@p^0,f,c
  6141  0014B8  A0D8               	btfss	status,0,c
  6142  0014BA  0631               	decf	(dtoa@p+1)^0,f,c
  6143  0014BC                     
  6144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6145  0014BC  0632               	decf	dtoa@w^0,f,c
  6146  0014BE  A0D8               	btfss	status,0,c
  6147  0014C0  0633               	decf	(dtoa@w+1)^0,f,c
  6148  0014C2                     
  6149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6150  0014C2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6151  0014C6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6152  0014CA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6153  0014CE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6154  0014D2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6155  0014D6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6156  0014DA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6157  0014DE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6158  0014E2  0E0A               	movlw	10
  6159  0014E4  6E09               	movwf	___aodiv@divisor^0,c
  6160  0014E6  0E00               	movlw	0
  6161  0014E8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6162  0014EA  0E00               	movlw	0
  6163  0014EC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6164  0014EE  0E00               	movlw	0
  6165  0014F0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6166  0014F2  0E00               	movlw	0
  6167  0014F4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6168  0014F6  0E00               	movlw	0
  6169  0014F8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6170  0014FA  0E00               	movlw	0
  6171  0014FC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6172  0014FE  0E00               	movlw	0
  6173  001500  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6174  001502  EC72  F010         	call	___aodiv	;wreg free
  6175  001506  C001  F036         	movff	?___aodiv,dtoa@n
  6176  00150A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6177  00150E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6178  001512  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6179  001516  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6180  00151A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6181  00151E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6182  001522  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6183  001526                     l2756:
  6184                           
  6185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6186  001526  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6187  001528  EF9E  F00A         	goto	u2571
  6188  00152C  503F               	movf	(dtoa@i+1)^0,w,c
  6189  00152E  E108               	bnz	u2570
  6190  001530  043E               	decf	dtoa@i^0,w,c
  6191  001532  A0D8               	btfss	status,0,c
  6192  001534  EF9E  F00A         	goto	u2571
  6193  001538  EFA0  F00A         	goto	u2570
  6194  00153C                     u2571:
  6195  00153C  EFD1  F00A         	goto	l2766
  6196  001540                     u2570:
  6197  001540  5036               	movf	dtoa@n^0,w,c
  6198  001542  1037               	iorwf	(dtoa@n+1)^0,w,c
  6199  001544  1038               	iorwf	(dtoa@n+2)^0,w,c
  6200  001546  1039               	iorwf	(dtoa@n+3)^0,w,c
  6201  001548  103A               	iorwf	(dtoa@n+4)^0,w,c
  6202  00154A  103B               	iorwf	(dtoa@n+5)^0,w,c
  6203  00154C  103C               	iorwf	(dtoa@n+6)^0,w,c
  6204  00154E  103D               	iorwf	(dtoa@n+7)^0,w,c
  6205  001550  A4D8               	btfss	status,2,c
  6206  001552  EFAD  F00A         	goto	u2581
  6207  001556  EFAF  F00A         	goto	u2580
  6208  00155A                     u2581:
  6209  00155A  EF17  F00A         	goto	l2746
  6210  00155E                     u2580:
  6211  00155E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6212  001560  EFBC  F00A         	goto	u2590
  6213  001564  5031               	movf	(dtoa@p+1)^0,w,c
  6214  001566  E106               	bnz	u2591
  6215  001568  0430               	decf	dtoa@p^0,w,c
  6216  00156A  B0D8               	btfsc	status,0,c
  6217  00156C  EFBA  F00A         	goto	u2591
  6218  001570  EFBC  F00A         	goto	u2590
  6219  001574                     u2591:
  6220  001574  EF17  F00A         	goto	l2746
  6221  001578                     u2590:
  6222  001578  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6223  00157A  EFC7  F00A         	goto	u2601
  6224  00157E  5033               	movf	(dtoa@w+1)^0,w,c
  6225  001580  E108               	bnz	u2600
  6226  001582  0432               	decf	dtoa@w^0,w,c
  6227  001584  A0D8               	btfss	status,0,c
  6228  001586  EFC7  F00A         	goto	u2601
  6229  00158A  EFC9  F00A         	goto	u2600
  6230  00158E                     u2601:
  6231  00158E  EFD1  F00A         	goto	l2766
  6232  001592                     u2600:
  6233  001592  0100               	movlb	0	; () banked
  6234  001594  B3BC               	btfsc	_flags& (0+255),1,b
  6235  001596  EFCF  F00A         	goto	u2611
  6236  00159A  EFD1  F00A         	goto	u2610
  6237  00159E                     u2611:
  6238  00159E  EF17  F00A         	goto	l2746
  6239  0015A2                     u2610:
  6240  0015A2                     l2766:
  6241                           
  6242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6243  0015A2  5034               	movf	dtoa@s^0,w,c
  6244  0015A4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6245  0015A6  A4D8               	btfss	status,2,c
  6246  0015A8  EFD8  F00A         	goto	u2621
  6247  0015AC  EFDA  F00A         	goto	u2620
  6248  0015B0                     u2621:
  6249  0015B0  EFE2  F00A         	goto	l2770
  6250  0015B4                     u2620:
  6251  0015B4  0100               	movlb	0	; () banked
  6252  0015B6  A5BC               	btfss	_flags& (0+255),2,b
  6253  0015B8  EFE0  F00A         	goto	u2631
  6254  0015BC  EFE2  F00A         	goto	u2630
  6255  0015C0                     u2631:
  6256  0015C0  EF00  F00B         	goto	l2780
  6257  0015C4                     u2630:
  6258  0015C4                     l2770:
  6259                           
  6260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6261  0015C4  063E               	decf	dtoa@i^0,f,c
  6262  0015C6  A0D8               	btfss	status,0,c
  6263  0015C8  063F               	decf	(dtoa@i+1)^0,f,c
  6264  0015CA                     
  6265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6266  0015CA  5034               	movf	dtoa@s^0,w,c
  6267  0015CC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6268  0015CE  A4D8               	btfss	status,2,c
  6269  0015D0  EFEC  F00A         	goto	u2641
  6270  0015D4  EFEE  F00A         	goto	u2640
  6271  0015D8                     u2641:
  6272  0015D8  EFF4  F00A         	goto	l2776
  6273  0015DC                     u2640:
  6274  0015DC  0E00               	movlw	0
  6275  0015DE  6E2F               	movwf	(_dtoa$1493+1)^0,c
  6276  0015E0  0E2B               	movlw	43
  6277  0015E2  6E2E               	movwf	_dtoa$1493^0,c
  6278  0015E4  EFF8  F00A         	goto	l2778
  6279  0015E8                     l2776:
  6280  0015E8  0E00               	movlw	0
  6281  0015EA  6E2F               	movwf	(_dtoa$1493+1)^0,c
  6282  0015EC  0E2D               	movlw	45
  6283  0015EE  6E2E               	movwf	_dtoa$1493^0,c
  6284  0015F0                     l2778:
  6285  0015F0  0E9B               	movlw	low _dbuf
  6286  0015F2  243E               	addwf	dtoa@i^0,w,c
  6287  0015F4  6ED9               	movwf	fsr2l,c
  6288  0015F6  0E01               	movlw	high _dbuf
  6289  0015F8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6290  0015FA  6EDA               	movwf	fsr2h,c
  6291  0015FC  C02E  FFDF         	movff	_dtoa$1493,indf2
  6292  001600                     l2780:
  6293                           
  6294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6295  001600  C01C  F011         	movff	dtoa@fp,pad@fp
  6296  001604  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6297  001608  0E9B               	movlw	low _dbuf
  6298  00160A  243E               	addwf	dtoa@i^0,w,c
  6299  00160C  6E13               	movwf	pad@buf^0,c
  6300  00160E  0E01               	movlw	high _dbuf
  6301  001610  203F               	addwfc	(dtoa@i+1)^0,w,c
  6302  001612  6E14               	movwf	(pad@buf+1)^0,c
  6303  001614  C032  F015         	movff	dtoa@w,pad@p
  6304  001618  C033  F016         	movff	dtoa@w+1,pad@p+1
  6305  00161C  EC79  F014         	call	_pad	;wreg free
  6306  001620  C011  F01C         	movff	?_pad,?_dtoa
  6307  001624  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6308  001628  0012               	return		;funcret
  6309  00162A                     __end_of_dtoa:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function _pad *****************
  6313 ;; Defined at:
  6314 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6317 ;;		 -> sprintf@f(6), 
  6318 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6319 ;;		 -> dbuf(32), 
  6320 ;;  p               2   20[COMRAM] int 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  w               2   25[COMRAM] int 
  6323 ;;  i               2   23[COMRAM] int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2   16[COMRAM] int 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6333 ;;      Params:         6       0       0       0       0       0       0       0       0
  6334 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6335 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6336 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6337 ;;Total ram usage:       11 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    3
  6340 ;; This function calls:
  6341 ;;		_fputc
  6342 ;;		_fputs
  6343 ;;		_strlen
  6344 ;; This function is called by:
  6345 ;;		_dtoa
  6346 ;;		_xtoa
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text24
  6351  0028F2                     __ptext24:
  6352                           	callstack 0
  6353  0028F2                     _pad:
  6354                           	callstack 22
  6355  0028F2                     
  6356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6357  0028F2  0100               	movlb	0	; () banked
  6358  0028F4  A1BC               	btfss	_flags& (0+255),0,b
  6359  0028F6  EF7F  F014         	goto	u2301
  6360  0028FA  EF81  F014         	goto	u2300
  6361  0028FE                     u2301:
  6362  0028FE  EF8B  F014         	goto	l2636
  6363  002902                     u2300:
  6364  002902                     
  6365                           ; BSR set to: 0
  6366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6367  002902  C013  F00A         	movff	pad@buf,fputs@s
  6368  002906  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6369  00290A  C011  F00C         	movff	pad@fp,fputs@fp
  6370  00290E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6371  002912  EC60  F017         	call	_fputs	;wreg free
  6372  002916                     l2636:
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6375  002916  BE16               	btfsc	(pad@p+1)^0,7,c
  6376  002918  EF90  F014         	goto	u2311
  6377  00291C  EF92  F014         	goto	u2310
  6378  002920                     u2311:
  6379  002920  EF98  F014         	goto	l2640
  6380  002924                     u2310:
  6381  002924  C015  F01A         	movff	pad@p,pad@w
  6382  002928  C016  F01B         	movff	pad@p+1,pad@w+1
  6383  00292C  EF9C  F014         	goto	l1089
  6384  002930                     l2640:
  6385  002930  0E00               	movlw	0
  6386  002932  6E1B               	movwf	(pad@w+1)^0,c
  6387  002934  0E00               	movlw	0
  6388  002936  6E1A               	movwf	pad@w^0,c
  6389  002938                     l1089:
  6390                           
  6391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6392  002938  0E00               	movlw	0
  6393  00293A  6E19               	movwf	(pad@i+1)^0,c
  6394  00293C  0E00               	movlw	0
  6395  00293E  6E18               	movwf	pad@i^0,c
  6396                           
  6397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6398  002940  EFAE  F014         	goto	l2646
  6399  002944                     l2642:
  6400                           
  6401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6402  002944  0E00               	movlw	0
  6403  002946  6E02               	movwf	(fputc@c+1)^0,c
  6404  002948  0E20               	movlw	32
  6405  00294A  6E01               	movwf	fputc@c^0,c
  6406  00294C  C011  F003         	movff	pad@fp,fputc@fp
  6407  002950  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6408  002954  EC14  F014         	call	_fputc	;wreg free
  6409  002958                     
  6410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6411  002958  4A18               	infsnz	pad@i^0,f,c
  6412  00295A  2A19               	incf	(pad@i+1)^0,f,c
  6413  00295C                     l2646:
  6414                           
  6415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6416  00295C  501A               	movf	pad@w^0,w,c
  6417  00295E  5C18               	subwf	pad@i^0,w,c
  6418  002960  5019               	movf	(pad@i+1)^0,w,c
  6419  002962  0A80               	xorlw	128
  6420  002964  6E17               	movwf	??_pad^0,c
  6421  002966  501B               	movf	(pad@w+1)^0,w,c
  6422  002968  0A80               	xorlw	128
  6423  00296A  5817               	subwfb	??_pad^0,w,c
  6424  00296C  A0D8               	btfss	status,0,c
  6425  00296E  EFBB  F014         	goto	u2321
  6426  002972  EFBD  F014         	goto	u2320
  6427  002976                     u2321:
  6428  002976  EFA2  F014         	goto	l2642
  6429  00297A                     u2320:
  6430  00297A                     
  6431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6432  00297A  0100               	movlb	0	; () banked
  6433  00297C  B1BC               	btfsc	_flags& (0+255),0,b
  6434  00297E  EFC3  F014         	goto	u2331
  6435  002982  EFC5  F014         	goto	u2330
  6436  002986                     u2331:
  6437  002986  EFCF  F014         	goto	l2650
  6438  00298A                     u2330:
  6439  00298A                     
  6440                           ; BSR set to: 0
  6441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6442  00298A  C013  F00A         	movff	pad@buf,fputs@s
  6443  00298E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6444  002992  C011  F00C         	movff	pad@fp,fputs@fp
  6445  002996  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6446  00299A  EC60  F017         	call	_fputs	;wreg free
  6447  00299E                     l2650:
  6448                           
  6449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6450  00299E  C013  F001         	movff	pad@buf,strlen@s
  6451  0029A2  C014  F002         	movff	pad@buf+1,strlen@s+1
  6452  0029A6  EC54  F018         	call	_strlen	;wreg free
  6453  0029AA  501A               	movf	pad@w^0,w,c
  6454  0029AC  2401               	addwf	?_strlen^0,w,c
  6455  0029AE  6E11               	movwf	?_pad^0,c
  6456  0029B0  501B               	movf	(pad@w+1)^0,w,c
  6457  0029B2  2002               	addwfc	(?_strlen+1)^0,w,c
  6458  0029B4  6E12               	movwf	(?_pad+1)^0,c
  6459  0029B6  0012               	return		;funcret
  6460  0029B8                     __end_of_pad:
  6461                           	callstack 0
  6462                           
  6463 ;; *************** function _strlen *****************
  6464 ;; Defined at:
  6465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6468 ;;		 -> dbuf(32), SensorMovimiento@buf(20), 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6471 ;;		 -> dbuf(32), SensorMovimiento@buf(20), 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  2    0[COMRAM] unsigned int 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6481 ;;      Params:         2       0       0       0       0       0       0       0       0
  6482 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6484 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6485 ;;Total ram usage:        4 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_pad
  6491 ;;		_strcat
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text25
  6496  0030A8                     __ptext25:
  6497                           	callstack 0
  6498  0030A8                     _strlen:
  6499                           	callstack 24
  6500  0030A8  C001  F003         	movff	strlen@s,strlen@a
  6501  0030AC  C002  F004         	movff	strlen@s+1,strlen@a+1
  6502  0030B0  EF5C  F018         	goto	l2542
  6503  0030B4                     l2540:
  6504  0030B4  4A01               	infsnz	strlen@s^0,f,c
  6505  0030B6  2A02               	incf	(strlen@s+1)^0,f,c
  6506  0030B8                     l2542:
  6507  0030B8  C001  FFD9         	movff	strlen@s,fsr2l
  6508  0030BC  C002  FFDA         	movff	strlen@s+1,fsr2h
  6509  0030C0  50DF               	movf	indf2,w,c
  6510  0030C2  A4D8               	btfss	status,2,c
  6511  0030C4  EF66  F018         	goto	u2141
  6512  0030C8  EF68  F018         	goto	u2140
  6513  0030CC                     u2141:
  6514  0030CC  EF5A  F018         	goto	l2540
  6515  0030D0                     u2140:
  6516  0030D0  5003               	movf	strlen@a^0,w,c
  6517  0030D2  5C01               	subwf	strlen@s^0,w,c
  6518  0030D4  6E01               	movwf	?_strlen^0,c
  6519  0030D6  5004               	movf	(strlen@a+1)^0,w,c
  6520  0030D8  5802               	subwfb	(strlen@s+1)^0,w,c
  6521  0030DA  6E02               	movwf	(?_strlen+1)^0,c
  6522  0030DC  0012               	return		;funcret
  6523  0030DE                     __end_of_strlen:
  6524                           	callstack 0
  6525                           
  6526 ;; *************** function _fputs *****************
  6527 ;; Defined at:
  6528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6531 ;;		 -> dbuf(32), 
  6532 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6533 ;;		 -> sprintf@f(6), 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  i               2   14[COMRAM] int 
  6536 ;;  c               1   13[COMRAM] unsigned char 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  2    9[COMRAM] int 
  6539 ;; Registers used:
  6540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6546 ;;      Params:         4       0       0       0       0       0       0       0       0
  6547 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6549 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6550 ;;Total ram usage:        7 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    2
  6553 ;; This function calls:
  6554 ;;		_fputc
  6555 ;; This function is called by:
  6556 ;;		_pad
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text26
  6561  002EC0                     __ptext26:
  6562                           	callstack 0
  6563  002EC0                     _fputs:
  6564                           	callstack 22
  6565  002EC0  0E00               	movlw	0
  6566  002EC2  6E10               	movwf	(fputs@i+1)^0,c
  6567  002EC4  0E00               	movlw	0
  6568  002EC6  6E0F               	movwf	fputs@i^0,c
  6569  002EC8  EF71  F017         	goto	l2536
  6570  002ECC                     l2532:
  6571  002ECC  C00E  F001         	movff	fputs@c,fputc@c
  6572  002ED0  6A02               	clrf	(fputc@c+1)^0,c
  6573  002ED2  C00C  F003         	movff	fputs@fp,fputc@fp
  6574  002ED6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6575  002EDA  EC14  F014         	call	_fputc	;wreg free
  6576  002EDE  4A0F               	infsnz	fputs@i^0,f,c
  6577  002EE0  2A10               	incf	(fputs@i+1)^0,f,c
  6578  002EE2                     l2536:
  6579  002EE2  500F               	movf	fputs@i^0,w,c
  6580  002EE4  240A               	addwf	fputs@s^0,w,c
  6581  002EE6  6ED9               	movwf	fsr2l,c
  6582  002EE8  5010               	movf	(fputs@i+1)^0,w,c
  6583  002EEA  200B               	addwfc	(fputs@s+1)^0,w,c
  6584  002EEC  6EDA               	movwf	fsr2h,c
  6585  002EEE  50DF               	movf	indf2,w,c
  6586  002EF0  6E0E               	movwf	fputs@c^0,c
  6587  002EF2  500E               	movf	fputs@c^0,w,c
  6588  002EF4  A4D8               	btfss	status,2,c
  6589  002EF6  EF7F  F017         	goto	u2131
  6590  002EFA  EF81  F017         	goto	u2130
  6591  002EFE                     u2131:
  6592  002EFE  EF66  F017         	goto	l2532
  6593  002F02                     u2130:
  6594  002F02  0012               	return		;funcret
  6595  002F04                     __end_of_fputs:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _abs *****************
  6599 ;; Defined at:
  6600 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  a               2   18[COMRAM] int 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  2   18[COMRAM] int 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6614 ;;      Params:         2       0       0       0       0       0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6616 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6617 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6618 ;;Total ram usage:        4 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; This function calls:
  6621 ;;		Nothing
  6622 ;; This function is called by:
  6623 ;;		_dtoa
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text27
  6628  002F44                     __ptext27:
  6629                           	callstack 0
  6630  002F44                     _abs:
  6631                           	callstack 25
  6632  002F44  BE14               	btfsc	(abs@a+1)^0,7,c
  6633  002F46  EFAF  F017         	goto	u2340
  6634  002F4A  5014               	movf	(abs@a+1)^0,w,c
  6635  002F4C  E106               	bnz	u2341
  6636  002F4E  0413               	decf	abs@a^0,w,c
  6637  002F50  B0D8               	btfsc	status,0,c
  6638  002F52  EFAD  F017         	goto	u2341
  6639  002F56  EFAF  F017         	goto	u2340
  6640  002F5A                     u2341:
  6641  002F5A  EFBD  F017         	goto	l1188
  6642  002F5E                     u2340:
  6643  002F5E  C013  F015         	movff	abs@a,??_abs
  6644  002F62  C014  F016         	movff	abs@a+1,??_abs+1
  6645  002F66  1E15               	comf	??_abs^0,f,c
  6646  002F68  1E16               	comf	(??_abs+1)^0,f,c
  6647  002F6A  4A15               	infsnz	??_abs^0,f,c
  6648  002F6C  2A16               	incf	(??_abs+1)^0,f,c
  6649  002F6E  C015  F013         	movff	??_abs,?_abs
  6650  002F72  C016  F014         	movff	??_abs+1,?_abs+1
  6651  002F76  EFC1  F017         	goto	l1191
  6652  002F7A                     l1188:
  6653  002F7A  C013  F013         	movff	abs@a,?_abs
  6654  002F7E  C014  F014         	movff	abs@a+1,?_abs+1
  6655  002F82                     l1191:
  6656  002F82  0012               	return		;funcret
  6657  002F84                     __end_of_abs:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function ___aomod *****************
  6661 ;; Defined at:
  6662 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  dividend        8    0[COMRAM] long long 
  6665 ;;  divisor         8    8[COMRAM] long long 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  sign            1   17[COMRAM] unsigned char 
  6668 ;;  counter         1   16[COMRAM] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  8    0[COMRAM] long long 
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6678 ;;      Params:        16       0       0       0       0       0       0       0       0
  6679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6681 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6682 ;;Total ram usage:       18 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_dtoa
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text28
  6692  0023E2                     __ptext28:
  6693                           	callstack 0
  6694  0023E2                     ___aomod:
  6695                           	callstack 25
  6696  0023E2  0E00               	movlw	0
  6697  0023E4  6E12               	movwf	___aomod@sign^0,c
  6698  0023E6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6699  0023E8  EFFA  F011         	goto	u2240
  6700  0023EC  EFF8  F011         	goto	u2241
  6701  0023F0                     u2241:
  6702  0023F0  EF0C  F012         	goto	l2604
  6703  0023F4                     u2240:
  6704  0023F4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6705  0023F6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6706  0023F8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6707  0023FA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6708  0023FC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6709  0023FE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6710  002400  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6711  002402  6C01               	negf	___aomod@dividend^0,c
  6712  002404  0E00               	movlw	0
  6713  002406  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6714  002408  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6715  00240A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6716  00240C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6717  00240E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6718  002410  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6719  002412  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6720  002414  0E01               	movlw	1
  6721  002416  6E12               	movwf	___aomod@sign^0,c
  6722  002418                     l2604:
  6723  002418  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6724  00241A  EF13  F012         	goto	u2250
  6725  00241E  EF11  F012         	goto	u2251
  6726  002422                     u2251:
  6727  002422  EF23  F012         	goto	l2608
  6728  002426                     u2250:
  6729  002426  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6730  002428  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6731  00242A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6732  00242C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6733  00242E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6734  002430  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6735  002432  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6736  002434  6C09               	negf	___aomod@divisor^0,c
  6737  002436  0E00               	movlw	0
  6738  002438  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6739  00243A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6740  00243C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6741  00243E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6742  002440  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6743  002442  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6744  002444  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6745  002446                     l2608:
  6746  002446  5009               	movf	___aomod@divisor^0,w,c
  6747  002448  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6748  00244A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6749  00244C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6750  00244E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6751  002450  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6752  002452  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6753  002454  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6754  002456  B4D8               	btfsc	status,2,c
  6755  002458  EF30  F012         	goto	u2261
  6756  00245C  EF32  F012         	goto	u2260
  6757  002460                     u2261:
  6758  002460  EF7A  F012         	goto	l2624
  6759  002464                     u2260:
  6760  002464  0E01               	movlw	1
  6761  002466  6E11               	movwf	___aomod@counter^0,c
  6762  002468  EF40  F012         	goto	l2614
  6763  00246C                     l2612:
  6764  00246C  90D8               	bcf	status,0,c
  6765  00246E  3609               	rlcf	___aomod@divisor^0,f,c
  6766  002470  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6767  002472  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6768  002474  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6769  002476  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6770  002478  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6771  00247A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6772  00247C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6773  00247E  2A11               	incf	___aomod@counter^0,f,c
  6774  002480                     l2614:
  6775  002480  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6776  002482  EF45  F012         	goto	u2271
  6777  002486  EF47  F012         	goto	u2270
  6778  00248A                     u2271:
  6779  00248A  EF36  F012         	goto	l2612
  6780  00248E                     u2270:
  6781  00248E                     l2616:
  6782  00248E  5009               	movf	___aomod@divisor^0,w,c
  6783  002490  5C01               	subwf	___aomod@dividend^0,w,c
  6784  002492  500A               	movf	(___aomod@divisor+1)^0,w,c
  6785  002494  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6786  002496  500B               	movf	(___aomod@divisor+2)^0,w,c
  6787  002498  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6788  00249A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6789  00249C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6790  00249E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6791  0024A0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6792  0024A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  6793  0024A4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6794  0024A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  6795  0024A8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6796  0024AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  6797  0024AC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6798  0024AE  A0D8               	btfss	status,0,c
  6799  0024B0  EF5C  F012         	goto	u2281
  6800  0024B4  EF5E  F012         	goto	u2280
  6801  0024B8                     u2281:
  6802  0024B8  EF6E  F012         	goto	l2620
  6803  0024BC                     u2280:
  6804  0024BC  5009               	movf	___aomod@divisor^0,w,c
  6805  0024BE  5E01               	subwf	___aomod@dividend^0,f,c
  6806  0024C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  6807  0024C2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6808  0024C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  6809  0024C6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6810  0024C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  6811  0024CA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6812  0024CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  6813  0024CE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6814  0024D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  6815  0024D2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6816  0024D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  6817  0024D6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6818  0024D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  6819  0024DA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6820  0024DC                     l2620:
  6821  0024DC  90D8               	bcf	status,0,c
  6822  0024DE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6823  0024E0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6824  0024E2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6825  0024E4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6826  0024E6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6827  0024E8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6828  0024EA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6829  0024EC  3209               	rrcf	___aomod@divisor^0,f,c
  6830  0024EE  2E11               	decfsz	___aomod@counter^0,f,c
  6831  0024F0  EF47  F012         	goto	l2616
  6832  0024F4                     l2624:
  6833  0024F4  5012               	movf	___aomod@sign^0,w,c
  6834  0024F6  B4D8               	btfsc	status,2,c
  6835  0024F8  EF80  F012         	goto	u2291
  6836  0024FC  EF82  F012         	goto	u2290
  6837  002500                     u2291:
  6838  002500  EF92  F012         	goto	l2628
  6839  002504                     u2290:
  6840  002504  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6841  002506  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6842  002508  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6843  00250A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6844  00250C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6845  00250E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6846  002510  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6847  002512  6C01               	negf	___aomod@dividend^0,c
  6848  002514  0E00               	movlw	0
  6849  002516  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6850  002518  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6851  00251A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6852  00251C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6853  00251E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6854  002520  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6855  002522  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6856  002524                     l2628:
  6857  002524  C001  F001         	movff	___aomod@dividend,?___aomod
  6858  002528  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6859  00252C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6860  002530  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6861  002534  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6862  002538  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6863  00253C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6864  002540  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6865  002544  0012               	return		;funcret
  6866  002546                     __end_of___aomod:
  6867                           	callstack 0
  6868                           
  6869 ;; *************** function ___aodiv *****************
  6870 ;; Defined at:
  6871 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  dividend        8    0[COMRAM] long long 
  6874 ;;  divisor         8    8[COMRAM] long long 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  quotient        8   18[COMRAM] long long 
  6877 ;;  sign            1   17[COMRAM] unsigned char 
  6878 ;;  counter         1   16[COMRAM] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  8    0[COMRAM] long long 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6888 ;;      Params:        16       0       0       0       0       0       0       0       0
  6889 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6891 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6892 ;;Total ram usage:       26 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_dtoa
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text29
  6902  0020E4                     __ptext29:
  6903                           	callstack 0
  6904  0020E4                     ___aodiv:
  6905                           	callstack 25
  6906  0020E4  0E00               	movlw	0
  6907  0020E6  6E12               	movwf	___aodiv@sign^0,c
  6908  0020E8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6909  0020EA  EF7B  F010         	goto	u2170
  6910  0020EE  EF79  F010         	goto	u2171
  6911  0020F2                     u2171:
  6912  0020F2  EF8D  F010         	goto	l2560
  6913  0020F6                     u2170:
  6914  0020F6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6915  0020F8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6916  0020FA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6917  0020FC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6918  0020FE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6919  002100  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6920  002102  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6921  002104  6C09               	negf	___aodiv@divisor^0,c
  6922  002106  0E00               	movlw	0
  6923  002108  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6924  00210A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6925  00210C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6926  00210E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6927  002110  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6928  002112  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6929  002114  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6930  002116  0E01               	movlw	1
  6931  002118  6E12               	movwf	___aodiv@sign^0,c
  6932  00211A                     l2560:
  6933  00211A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6934  00211C  EF94  F010         	goto	u2180
  6935  002120  EF92  F010         	goto	u2181
  6936  002124                     u2181:
  6937  002124  EFA6  F010         	goto	l2566
  6938  002128                     u2180:
  6939  002128  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6940  00212A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6941  00212C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6942  00212E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6943  002130  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6944  002132  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6945  002134  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6946  002136  6C01               	negf	___aodiv@dividend^0,c
  6947  002138  0E00               	movlw	0
  6948  00213A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6949  00213C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6950  00213E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6951  002140  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6952  002142  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6953  002144  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6954  002146  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6955  002148  0E01               	movlw	1
  6956  00214A  1A12               	xorwf	___aodiv@sign^0,f,c
  6957  00214C                     l2566:
  6958  00214C  EE20  F013         	lfsr	2,___aodiv@quotient
  6959  002150  0E07               	movlw	7
  6960  002152                     u2191:
  6961  002152  6ADE               	clrf	postinc2,c
  6962  002154  06E8               	decf	wreg,f,c
  6963  002156  E2FD               	bc	u2191
  6964  002158  5009               	movf	___aodiv@divisor^0,w,c
  6965  00215A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6966  00215C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6967  00215E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6968  002160  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6969  002162  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6970  002164  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6971  002166  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6972  002168  B4D8               	btfsc	status,2,c
  6973  00216A  EFB9  F010         	goto	u2201
  6974  00216E  EFBB  F010         	goto	u2200
  6975  002172                     u2201:
  6976  002172  EF0D  F011         	goto	l2588
  6977  002176                     u2200:
  6978  002176  0E01               	movlw	1
  6979  002178  6E11               	movwf	___aodiv@counter^0,c
  6980  00217A  EFC9  F010         	goto	l2574
  6981  00217E                     l2572:
  6982  00217E  90D8               	bcf	status,0,c
  6983  002180  3609               	rlcf	___aodiv@divisor^0,f,c
  6984  002182  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6985  002184  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6986  002186  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6987  002188  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6988  00218A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6989  00218C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6990  00218E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6991  002190  2A11               	incf	___aodiv@counter^0,f,c
  6992  002192                     l2574:
  6993  002192  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6994  002194  EFCE  F010         	goto	u2211
  6995  002198  EFD0  F010         	goto	u2210
  6996  00219C                     u2211:
  6997  00219C  EFBF  F010         	goto	l2572
  6998  0021A0                     u2210:
  6999  0021A0                     l2576:
  7000  0021A0  90D8               	bcf	status,0,c
  7001  0021A2  3613               	rlcf	___aodiv@quotient^0,f,c
  7002  0021A4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7003  0021A6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7004  0021A8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7005  0021AA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7006  0021AC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7007  0021AE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7008  0021B0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7009  0021B2  5009               	movf	___aodiv@divisor^0,w,c
  7010  0021B4  5C01               	subwf	___aodiv@dividend^0,w,c
  7011  0021B6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7012  0021B8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7013  0021BA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7014  0021BC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7015  0021BE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7016  0021C0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7017  0021C2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7018  0021C4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7019  0021C6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7020  0021C8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7021  0021CA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7022  0021CC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7023  0021CE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7024  0021D0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7025  0021D2  A0D8               	btfss	status,0,c
  7026  0021D4  EFEE  F010         	goto	u2221
  7027  0021D8  EFF0  F010         	goto	u2220
  7028  0021DC                     u2221:
  7029  0021DC  EF01  F011         	goto	l2584
  7030  0021E0                     u2220:
  7031  0021E0  5009               	movf	___aodiv@divisor^0,w,c
  7032  0021E2  5E01               	subwf	___aodiv@dividend^0,f,c
  7033  0021E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7034  0021E6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7035  0021E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7036  0021EA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7037  0021EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7038  0021EE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7039  0021F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7040  0021F2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7041  0021F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7042  0021F6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7043  0021F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7044  0021FA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7045  0021FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7046  0021FE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7047  002200  8013               	bsf	___aodiv@quotient^0,0,c
  7048  002202                     l2584:
  7049  002202  90D8               	bcf	status,0,c
  7050  002204  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7051  002206  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7052  002208  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7053  00220A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7054  00220C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7055  00220E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7056  002210  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7057  002212  3209               	rrcf	___aodiv@divisor^0,f,c
  7058  002214  2E11               	decfsz	___aodiv@counter^0,f,c
  7059  002216  EFD0  F010         	goto	l2576
  7060  00221A                     l2588:
  7061  00221A  5012               	movf	___aodiv@sign^0,w,c
  7062  00221C  B4D8               	btfsc	status,2,c
  7063  00221E  EF13  F011         	goto	u2231
  7064  002222  EF15  F011         	goto	u2230
  7065  002226                     u2231:
  7066  002226  EF25  F011         	goto	l2592
  7067  00222A                     u2230:
  7068  00222A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7069  00222C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7070  00222E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7071  002230  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7072  002232  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7073  002234  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7074  002236  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7075  002238  6C13               	negf	___aodiv@quotient^0,c
  7076  00223A  0E00               	movlw	0
  7077  00223C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7078  00223E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7079  002240  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7080  002242  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7081  002244  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7082  002246  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7083  002248  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7084  00224A                     l2592:
  7085  00224A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7086  00224E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7087  002252  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7088  002256  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7089  00225A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7090  00225E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7091  002262  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7092  002266  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7093  00226A  0012               	return		;funcret
  7094  00226C                     __end_of___aodiv:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _ctoa *****************
  7098 ;; Defined at:
  7099 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7102 ;;		 -> sprintf@f(6), 
  7103 ;;  c               1   11[COMRAM] unsigned char 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  w               2   15[COMRAM] int 
  7106 ;;  l               2   13[COMRAM] int 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  2    9[COMRAM] int 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7116 ;;      Params:         3       0       0       0       0       0       0       0       0
  7117 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7118 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7119 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7120 ;;Total ram usage:        8 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    2
  7123 ;; This function calls:
  7124 ;;		_fputc
  7125 ;; This function is called by:
  7126 ;;		_vfpfcnvrt
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text30
  7131  002750                     __ptext30:
  7132                           	callstack 0
  7133  002750                     _ctoa:
  7134                           	callstack 24
  7135  002750                     
  7136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  7137  002750  0100               	movlb	0	; () banked
  7138  002752  51B8               	movf	_width& (0+255),w,b
  7139  002754  11B9               	iorwf	(_width+1)& (0+255),w,b
  7140  002756  A4D8               	btfss	status,2,c
  7141  002758  EFB0  F013         	goto	u2451
  7142  00275C  EFB2  F013         	goto	u2450
  7143  002760                     u2451:
  7144  002760  EFB8  F013         	goto	l2698
  7145  002764                     u2450:
  7146  002764                     
  7147                           ; BSR set to: 0
  7148  002764  C0B8  F010         	movff	_width,ctoa@w
  7149  002768  C0B9  F011         	movff	_width+1,ctoa@w+1
  7150  00276C  EFBE  F013         	goto	l2700
  7151  002770                     l2698:
  7152                           
  7153                           ; BSR set to: 0
  7154  002770  0EFF               	movlw	255
  7155  002772  25B8               	addwf	_width& (0+255),w,b
  7156  002774  6E10               	movwf	ctoa@w^0,c
  7157  002776  0EFF               	movlw	255
  7158  002778  21B9               	addwfc	(_width+1)& (0+255),w,b
  7159  00277A  6E11               	movwf	(ctoa@w+1)^0,c
  7160  00277C                     l2700:
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  7164  00277C  A1BC               	btfss	_flags& (0+255),0,b
  7165  00277E  EFC3  F013         	goto	u2461
  7166  002782  EFC5  F013         	goto	u2460
  7167  002786                     u2461:
  7168  002786  EFCE  F013         	goto	l2704
  7169  00278A                     u2460:
  7170  00278A                     
  7171                           ; BSR set to: 0
  7172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  7173  00278A  C00C  F001         	movff	ctoa@c,fputc@c
  7174  00278E  6A02               	clrf	(fputc@c+1)^0,c
  7175  002790  C00A  F003         	movff	ctoa@fp,fputc@fp
  7176  002794  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7177  002798  EC14  F014         	call	_fputc	;wreg free
  7178  00279C                     l2704:
  7179                           
  7180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  7181  00279C  BE11               	btfsc	(ctoa@w+1)^0,7,c
  7182  00279E  EFD3  F013         	goto	u2471
  7183  0027A2  EFD5  F013         	goto	u2470
  7184  0027A6                     u2471:
  7185  0027A6  EFD7  F013         	goto	l2708
  7186  0027AA                     u2470:
  7187  0027AA  EFDB  F013         	goto	l1105
  7188  0027AE                     l2708:
  7189  0027AE  0E00               	movlw	0
  7190  0027B0  6E11               	movwf	(ctoa@w+1)^0,c
  7191  0027B2  0E00               	movlw	0
  7192  0027B4  6E10               	movwf	ctoa@w^0,c
  7193  0027B6                     l1105:
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  7196  0027B6  0E00               	movlw	0
  7197  0027B8  6E0F               	movwf	(ctoa@l+1)^0,c
  7198  0027BA  0E00               	movlw	0
  7199  0027BC  6E0E               	movwf	ctoa@l^0,c
  7200                           
  7201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7202  0027BE  EFED  F013         	goto	l2714
  7203  0027C2                     l2710:
  7204                           
  7205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  7206  0027C2  0E00               	movlw	0
  7207  0027C4  6E02               	movwf	(fputc@c+1)^0,c
  7208  0027C6  0E20               	movlw	32
  7209  0027C8  6E01               	movwf	fputc@c^0,c
  7210  0027CA  C00A  F003         	movff	ctoa@fp,fputc@fp
  7211  0027CE  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7212  0027D2  EC14  F014         	call	_fputc	;wreg free
  7213  0027D6                     
  7214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  7215  0027D6  4A0E               	infsnz	ctoa@l^0,f,c
  7216  0027D8  2A0F               	incf	(ctoa@l+1)^0,f,c
  7217  0027DA                     l2714:
  7218                           
  7219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7220  0027DA  5010               	movf	ctoa@w^0,w,c
  7221  0027DC  5C0E               	subwf	ctoa@l^0,w,c
  7222  0027DE  500F               	movf	(ctoa@l+1)^0,w,c
  7223  0027E0  0A80               	xorlw	128
  7224  0027E2  6E0D               	movwf	??_ctoa^0,c
  7225  0027E4  5011               	movf	(ctoa@w+1)^0,w,c
  7226  0027E6  0A80               	xorlw	128
  7227  0027E8  580D               	subwfb	??_ctoa^0,w,c
  7228  0027EA  A0D8               	btfss	status,0,c
  7229  0027EC  EFFA  F013         	goto	u2481
  7230  0027F0  EFFC  F013         	goto	u2480
  7231  0027F4                     u2481:
  7232  0027F4  EFE1  F013         	goto	l2710
  7233  0027F8                     u2480:
  7234  0027F8                     
  7235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  7236  0027F8  0100               	movlb	0	; () banked
  7237  0027FA  B1BC               	btfsc	_flags& (0+255),0,b
  7238  0027FC  EF02  F014         	goto	u2491
  7239  002800  EF04  F014         	goto	u2490
  7240  002804                     u2491:
  7241  002804  EF0D  F014         	goto	l2718
  7242  002808                     u2490:
  7243  002808                     
  7244                           ; BSR set to: 0
  7245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  7246  002808  C00C  F001         	movff	ctoa@c,fputc@c
  7247  00280C  6A02               	clrf	(fputc@c+1)^0,c
  7248  00280E  C00A  F003         	movff	ctoa@fp,fputc@fp
  7249  002812  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7250  002816  EC14  F014         	call	_fputc	;wreg free
  7251  00281A                     l2718:
  7252                           
  7253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  7254  00281A  0E01               	movlw	1
  7255  00281C  240E               	addwf	ctoa@l^0,w,c
  7256  00281E  6E0A               	movwf	?_ctoa^0,c
  7257  002820  0E00               	movlw	0
  7258  002822  200F               	addwfc	(ctoa@l+1)^0,w,c
  7259  002824  6E0B               	movwf	(?_ctoa+1)^0,c
  7260  002826  0012               	return		;funcret
  7261  002828                     __end_of_ctoa:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function _fputc *****************
  7265 ;; Defined at:
  7266 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  c               2    0[COMRAM] int 
  7269 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7270 ;;		 -> sprintf@f(6), 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  2    0[COMRAM] int 
  7275 ;; Registers used:
  7276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7282 ;;      Params:         4       0       0       0       0       0       0       0       0
  7283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7284 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7285 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7286 ;;Total ram usage:        9 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    1
  7289 ;; This function calls:
  7290 ;;		_putch
  7291 ;; This function is called by:
  7292 ;;		_pad
  7293 ;;		_ctoa
  7294 ;;		_vfpfcnvrt
  7295 ;;		_fputs
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text31
  7300  002828                     __ptext31:
  7301                           	callstack 0
  7302  002828                     _fputc:
  7303                           	callstack 22
  7304  002828  5003               	movf	fputc@fp^0,w,c
  7305  00282A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7306  00282C  B4D8               	btfsc	status,2,c
  7307  00282E  EF1B  F014         	goto	u2091
  7308  002832  EF1D  F014         	goto	u2090
  7309  002836                     u2091:
  7310  002836  EF26  F014         	goto	l2520
  7311  00283A                     u2090:
  7312  00283A  5003               	movf	fputc@fp^0,w,c
  7313  00283C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7314  00283E  A4D8               	btfss	status,2,c
  7315  002840  EF24  F014         	goto	u2101
  7316  002844  EF26  F014         	goto	u2100
  7317  002848                     u2101:
  7318  002848  EF2B  F014         	goto	l2522
  7319  00284C                     u2100:
  7320  00284C                     l2520:
  7321  00284C  5001               	movf	fputc@c^0,w,c
  7322  00284E  EC3C  F019         	call	_putch
  7323  002852  EF78  F014         	goto	l1215
  7324  002856                     l2522:
  7325  002856  EE20 F004          	lfsr	2,4
  7326  00285A  5003               	movf	fputc@fp^0,w,c
  7327  00285C  26D9               	addwf	fsr2l,f,c
  7328  00285E  5004               	movf	(fputc@fp+1)^0,w,c
  7329  002860  22DA               	addwfc	fsr2h,f,c
  7330  002862  50DE               	movf	postinc2,w,c
  7331  002864  10DE               	iorwf	postinc2,w,c
  7332  002866  B4D8               	btfsc	status,2,c
  7333  002868  EF38  F014         	goto	u2111
  7334  00286C  EF3A  F014         	goto	u2110
  7335  002870                     u2111:
  7336  002870  EF55  F014         	goto	l2526
  7337  002874                     u2110:
  7338  002874  EE20 F004          	lfsr	2,4
  7339  002878  5003               	movf	fputc@fp^0,w,c
  7340  00287A  26D9               	addwf	fsr2l,f,c
  7341  00287C  5004               	movf	(fputc@fp+1)^0,w,c
  7342  00287E  22DA               	addwfc	fsr2h,f,c
  7343  002880  EE10 F002          	lfsr	1,2
  7344  002884  5003               	movf	fputc@fp^0,w,c
  7345  002886  26E1               	addwf	fsr1l,f,c
  7346  002888  5004               	movf	(fputc@fp+1)^0,w,c
  7347  00288A  22E2               	addwfc	fsr1h,f,c
  7348  00288C  50DE               	movf	postinc2,w,c
  7349  00288E  5CE6               	subwf	postinc1,w,c
  7350  002890  50E6               	movf	postinc1,w,c
  7351  002892  0A80               	xorlw	128
  7352  002894  6E09               	movwf	(??_fputc+4)^0,c
  7353  002896  50DE               	movf	postinc2,w,c
  7354  002898  0A80               	xorlw	128
  7355  00289A  5809               	subwfb	(??_fputc+4)^0,w,c
  7356  00289C  B0D8               	btfsc	status,0,c
  7357  00289E  EF53  F014         	goto	u2121
  7358  0028A2  EF55  F014         	goto	u2120
  7359  0028A6                     u2121:
  7360  0028A6  EF78  F014         	goto	l1215
  7361  0028AA                     u2120:
  7362  0028AA                     l2526:
  7363  0028AA  EE20 F002          	lfsr	2,2
  7364  0028AE  5003               	movf	fputc@fp^0,w,c
  7365  0028B0  26D9               	addwf	fsr2l,f,c
  7366  0028B2  5004               	movf	(fputc@fp+1)^0,w,c
  7367  0028B4  22DA               	addwfc	fsr2h,f,c
  7368  0028B6  CFDE F005          	movff	postinc2,??_fputc
  7369  0028BA  CFDD F006          	movff	postdec2,??_fputc+1
  7370  0028BE  C003  FFD9         	movff	fputc@fp,fsr2l
  7371  0028C2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7372  0028C6  CFDE F007          	movff	postinc2,??_fputc+2
  7373  0028CA  CFDD F008          	movff	postdec2,??_fputc+3
  7374  0028CE  5005               	movf	??_fputc^0,w,c
  7375  0028D0  2407               	addwf	(??_fputc+2)^0,w,c
  7376  0028D2  6ED9               	movwf	fsr2l,c
  7377  0028D4  5006               	movf	(??_fputc+1)^0,w,c
  7378  0028D6  2008               	addwfc	(??_fputc+3)^0,w,c
  7379  0028D8  6EDA               	movwf	fsr2h,c
  7380  0028DA  C001  FFDF         	movff	fputc@c,indf2
  7381  0028DE  EE20 F002          	lfsr	2,2
  7382  0028E2  5003               	movf	fputc@fp^0,w,c
  7383  0028E4  26D9               	addwf	fsr2l,f,c
  7384  0028E6  5004               	movf	(fputc@fp+1)^0,w,c
  7385  0028E8  22DA               	addwfc	fsr2h,f,c
  7386  0028EA  2ADE               	incf	postinc2,f,c
  7387  0028EC  0E00               	movlw	0
  7388  0028EE  22DD               	addwfc	postdec2,f,c
  7389  0028F0                     l1215:
  7390  0028F0  0012               	return		;funcret
  7391  0028F2                     __end_of_fputc:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function _putch *****************
  7395 ;; Defined at:
  7396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  c               1    wreg     unsigned char 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  c               1    0[COMRAM] unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7414 ;;Total ram usage:        0 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_fputc
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text32
  7424  003278                     __ptext32:
  7425                           	callstack 0
  7426  003278                     _putch:
  7427                           	callstack 22
  7428  003278  0012               	return		;funcret
  7429  00327A                     __end_of_putch:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _RTC_Read_Clock *****************
  7433 ;; Defined at:
  7434 ;;		line 260 in file "Controler.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  read_clock_a    1    wreg     unsigned char 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0
  7449 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7450 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7451 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7452 ;;Total ram usage:        2 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    3
  7455 ;; This function calls:
  7456 ;;		_I2C_Read
  7457 ;;		_I2C_Repeated_Start
  7458 ;;		_I2C_Start
  7459 ;;		_I2C_Write
  7460 ;; This function is called by:
  7461 ;;		_RTC
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text33
  7466  002E7A                     __ptext33:
  7467                           	callstack 0
  7468  002E7A                     _RTC_Read_Clock:
  7469                           	callstack 26
  7470                           
  7471                           ;incstack = 0
  7472                           ;RTC_Read_Clock@read_clock_address stored from wreg
  7473  002E7A  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  7474  002E7C                     
  7475                           ;Controler.c: 261:     I2C_Start(0xD0);
  7476  002E7C  0ED0               	movlw	208
  7477  002E7E  EC6F  F018         	call	_I2C_Start
  7478                           
  7479                           ;Controler.c: 262:     I2C_Write(read_clock_address);
  7480  002E82  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  7481  002E84  ECC7  F018         	call	_I2C_Write
  7482                           
  7483                           ;Controler.c: 263:     I2C_Repeated_Start(0xD1);
  7484  002E88  0ED1               	movlw	209
  7485  002E8A  EC86  F018         	call	_I2C_Repeated_Start
  7486  002E8E                     
  7487                           ;Controler.c: 264:     sec = I2C_Read(0);
  7488  002E8E  0E00               	movlw	0
  7489  002E90  ECFF  F017         	call	_I2C_Read
  7490  002E94  6E03               	movwf	??_RTC_Read_Clock^0,c
  7491  002E96  5003               	movf	??_RTC_Read_Clock^0,w,c
  7492  002E98  0100               	movlb	0	; () banked
  7493  002E9A  6FC2               	movwf	_sec& (0+255),b
  7494  002E9C  6BC3               	clrf	(_sec+1)& (0+255),b
  7495  002E9E                     
  7496                           ; BSR set to: 0
  7497                           ;Controler.c: 265:     min = I2C_Read(0);
  7498  002E9E  0E00               	movlw	0
  7499  002EA0  ECFF  F017         	call	_I2C_Read
  7500  002EA4  6E03               	movwf	??_RTC_Read_Clock^0,c
  7501  002EA6  5003               	movf	??_RTC_Read_Clock^0,w,c
  7502  002EA8  0100               	movlb	0	; () banked
  7503  002EAA  6FC0               	movwf	_min& (0+255),b
  7504  002EAC  6BC1               	clrf	(_min+1)& (0+255),b
  7505  002EAE                     
  7506                           ; BSR set to: 0
  7507                           ;Controler.c: 266:     hour = I2C_Read(1);
  7508  002EAE  0E01               	movlw	1
  7509  002EB0  ECFF  F017         	call	_I2C_Read
  7510  002EB4  6E03               	movwf	??_RTC_Read_Clock^0,c
  7511  002EB6  5003               	movf	??_RTC_Read_Clock^0,w,c
  7512  002EB8  0100               	movlb	0	; () banked
  7513  002EBA  6FBE               	movwf	_hour& (0+255),b
  7514  002EBC  6BBF               	clrf	(_hour+1)& (0+255),b
  7515  002EBE                     
  7516                           ; BSR set to: 0
  7517  002EBE  0012               	return		;funcret
  7518  002EC0                     __end_of_RTC_Read_Clock:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function _I2C_Start *****************
  7522 ;; Defined at:
  7523 ;;		line 81 in file "./I2C_Master_File_3.h"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  slave_write_    1    wreg     unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  slave_write_    1    1[COMRAM] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      unsigned char 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0
  7538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7541 ;;Total ram usage:        1 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    2
  7544 ;; This function calls:
  7545 ;;		_I2C_Write
  7546 ;; This function is called by:
  7547 ;;		_RTC_Read_Clock
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text34
  7552  0030DE                     __ptext34:
  7553                           	callstack 0
  7554  0030DE                     _I2C_Start:
  7555                           	callstack 26
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;incstack = 0
  7559                           ;I2C_Start@slave_write_address stored from wreg
  7560  0030DE  6E02               	movwf	I2C_Start@slave_write_address^0,c
  7561  0030E0                     
  7562                           ;./I2C_Master_File_3.h: 82:     SSPCON2bits.SEN=1;
  7563  0030E0  80C5               	bsf	197,0,c	;volatile
  7564  0030E2                     l228:
  7565  0030E2  B0C5               	btfsc	197,0,c	;volatile
  7566  0030E4  EF76  F018         	goto	u2971
  7567  0030E8  EF78  F018         	goto	u2970
  7568  0030EC                     u2971:
  7569  0030EC  EF71  F018         	goto	l228
  7570  0030F0                     u2970:
  7571  0030F0                     
  7572                           ;./I2C_Master_File_3.h: 84:  SSPIF=0;
  7573  0030F0  969E               	bcf	3998,3,c	;volatile
  7574                           
  7575                           ;./I2C_Master_File_3.h: 85:     if(!SSPSTATbits.S)
  7576  0030F2  B6C7               	btfsc	199,3,c	;volatile
  7577  0030F4  EF7E  F018         	goto	u2981
  7578  0030F8  EF80  F018         	goto	u2980
  7579  0030FC                     u2981:
  7580  0030FC  EF82  F018         	goto	l2982
  7581  003100                     u2980:
  7582  003100  EF85  F018         	goto	l232
  7583  003104                     l2982:
  7584                           
  7585                           ;./I2C_Master_File_3.h: 87:     return (I2C_Write(slave_write_address));;	Return value o
      +                          f _I2C_Start is never used
  7586  003104  5002               	movf	I2C_Start@slave_write_address^0,w,c
  7587  003106  ECC7  F018         	call	_I2C_Write
  7588  00310A                     l232:
  7589  00310A  0012               	return		;funcret
  7590  00310C                     __end_of_I2C_Start:
  7591                           	callstack 0
  7592                           
  7593 ;; *************** function _I2C_Repeated_Start *****************
  7594 ;; Defined at:
  7595 ;;		line 90 in file "./I2C_Master_File_3.h"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  slave_read_a    1    wreg     unsigned char 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      unsigned char 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0
  7610 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7612 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7613 ;;Total ram usage:        1 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    2
  7616 ;; This function calls:
  7617 ;;		_I2C_Write
  7618 ;; This function is called by:
  7619 ;;		_RTC_Read_Clock
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           	psect	text35
  7624  00310C                     __ptext35:
  7625                           	callstack 0
  7626  00310C                     _I2C_Repeated_Start:
  7627                           	callstack 26
  7628                           
  7629                           ;incstack = 0
  7630                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  7631  00310C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  7632  00310E                     
  7633                           ;./I2C_Master_File_3.h: 91:     RSEN = 1;
  7634  00310E  82C5               	bsf	4037,1,c	;volatile
  7635  003110                     l235:
  7636  003110  B2C5               	btfsc	4037,1,c	;volatile
  7637  003112  EF8D  F018         	goto	u2991
  7638  003116  EF8F  F018         	goto	u2990
  7639  00311A                     u2991:
  7640  00311A  EF88  F018         	goto	l235
  7641  00311E                     u2990:
  7642  00311E                     
  7643                           ;./I2C_Master_File_3.h: 93:     SSPIF = 0;
  7644  00311E  969E               	bcf	3998,3,c	;volatile
  7645                           
  7646                           ;./I2C_Master_File_3.h: 94:  if(!SSPSTATbits.S)
  7647  003120  B6C7               	btfsc	199,3,c	;volatile
  7648  003122  EF95  F018         	goto	u3001
  7649  003126  EF97  F018         	goto	u3000
  7650  00312A                     u3001:
  7651  00312A  EF99  F018         	goto	l2990
  7652  00312E                     u3000:
  7653  00312E  EF9C  F018         	goto	l239
  7654  003132                     l2990:
  7655                           
  7656                           ;./I2C_Master_File_3.h: 96:     I2C_Write(slave_read_address);
  7657  003132  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  7658  003134  ECC7  F018         	call	_I2C_Write
  7659  003138                     l239:
  7660  003138  0012               	return		;funcret
  7661  00313A                     __end_of_I2C_Repeated_Start:
  7662                           	callstack 0
  7663                           
  7664 ;; *************** function _I2C_Write *****************
  7665 ;; Defined at:
  7666 ;;		line 110 in file "./I2C_Master_File_3.h"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  data            1    wreg     unsigned char 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  data            1    0[COMRAM] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      unsigned char 
  7673 ;; Registers used:
  7674 ;;		wreg, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0
  7681 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7683 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7684 ;;Total ram usage:        1 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    1
  7687 ;; This function calls:
  7688 ;;		_I2C_Ready
  7689 ;; This function is called by:
  7690 ;;		_I2C_Start
  7691 ;;		_I2C_Repeated_Start
  7692 ;;		_RTC_Read_Clock
  7693 ;;		_I2C_Start_Wait
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text36
  7698  00318E                     __ptext36:
  7699                           	callstack 0
  7700  00318E                     _I2C_Write:
  7701                           	callstack 27
  7702                           
  7703                           ;incstack = 0
  7704                           ;I2C_Write@data stored from wreg
  7705  00318E  6E01               	movwf	I2C_Write@data^0,c
  7706  003190                     
  7707                           ;./I2C_Master_File_3.h: 111:       SSPBUF = data;
  7708  003190  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  7709  003194                     
  7710                           ;./I2C_Master_File_3.h: 112:       I2C_Ready();
  7711  003194  EC2B  F019         	call	_I2C_Ready	;wreg free
  7712  003198                     
  7713                           ;./I2C_Master_File_3.h: 113:       if (ACKSTAT)
  7714  003198  ACC5               	btfss	4037,6,c	;volatile
  7715  00319A  EFD1  F018         	goto	u2841
  7716  00319E  EFD3  F018         	goto	u2840
  7717  0031A2                     u2841:
  7718  0031A2  EFD6  F018         	goto	l2878
  7719  0031A6                     u2840:
  7720  0031A6                     
  7721                           ;./I2C_Master_File_3.h: 114:         return 1;
  7722  0031A6  0E01               	movlw	1
  7723  0031A8  EFD7  F018         	goto	l252
  7724  0031AC                     l2878:
  7725                           
  7726                           ;./I2C_Master_File_3.h: 116:         return 2;
  7727  0031AC  0E02               	movlw	2
  7728  0031AE                     l252:
  7729  0031AE  0012               	return		;funcret
  7730  0031B0                     __end_of_I2C_Write:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function _I2C_Read *****************
  7734 ;; Defined at:
  7735 ;;		line 31 in file "./I2C_Master_File_3.h"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  flag            1    wreg     unsigned char 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  flag            1    0[COMRAM] unsigned char 
  7740 ;;  buffer          1    1[COMRAM] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      unsigned char 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7750 ;;      Params:         0       0       0       0       0       0       0       0       0
  7751 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7753 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7754 ;;Total ram usage:        2 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    1
  7757 ;; This function calls:
  7758 ;;		_I2C_Ack
  7759 ;;		_I2C_Nack
  7760 ;;		_I2C_Ready
  7761 ;; This function is called by:
  7762 ;;		_RTC_Read_Clock
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text37
  7767  002FFE                     __ptext37:
  7768                           	callstack 0
  7769  002FFE                     _I2C_Read:
  7770                           	callstack 27
  7771                           
  7772                           ;incstack = 0
  7773                           ;I2C_Read@flag stored from wreg
  7774  002FFE  6E01               	movwf	I2C_Read@flag^0,c
  7775  003000                     
  7776                           ;./I2C_Master_File_3.h: 32:         char buffer;;./I2C_Master_File_3.h: 33:         RCEN
      +                           = 1;
  7777  003000  86C5               	bsf	4037,3,c	;volatile
  7778  003002                     l200:
  7779  003002  A0C7               	btfss	199,0,c	;volatile
  7780  003004  EF06  F018         	goto	u2951
  7781  003008  EF08  F018         	goto	u2950
  7782  00300C                     u2951:
  7783  00300C  EF01  F018         	goto	l200
  7784  003010                     u2950:
  7785  003010                     
  7786                           ;./I2C_Master_File_3.h: 36:         buffer = SSPBUF;
  7787  003010  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  7788  003014                     
  7789                           ;./I2C_Master_File_3.h: 38:         if(flag==0)
  7790  003014  5001               	movf	I2C_Read@flag^0,w,c
  7791  003016  A4D8               	btfss	status,2,c
  7792  003018  EF10  F018         	goto	u2961
  7793  00301C  EF12  F018         	goto	u2960
  7794  003020                     u2961:
  7795  003020  EF16  F018         	goto	l2972
  7796  003024                     u2960:
  7797  003024                     
  7798                           ;./I2C_Master_File_3.h: 39:             I2C_Ack();
  7799  003024  EC17  F019         	call	_I2C_Ack	;wreg free
  7800  003028  EF18  F018         	goto	l204
  7801  00302C                     l2972:
  7802                           
  7803                           ;./I2C_Master_File_3.h: 41:             I2C_Nack();
  7804  00302C  EC0D  F019         	call	_I2C_Nack	;wreg free
  7805  003030                     l204:
  7806                           
  7807                           ;./I2C_Master_File_3.h: 42:         I2C_Ready();
  7808  003030  EC2B  F019         	call	_I2C_Ready	;wreg free
  7809  003034                     
  7810                           ;./I2C_Master_File_3.h: 43:         return(buffer);
  7811  003034  5002               	movf	I2C_Read@buffer^0,w,c
  7812  003036  0012               	return		;funcret
  7813  003038                     __end_of_I2C_Read:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function _I2C_Ready *****************
  7817 ;; Defined at:
  7818 ;;		line 59 in file "./I2C_Master_File_3.h"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;		None
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      void 
  7825 ;; Registers used:
  7826 ;;		None
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7832 ;;      Params:         0       0       0       0       0       0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7836 ;;Total ram usage:        0 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_I2C_Read
  7842 ;;		_I2C_Write
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text38
  7847  003256                     __ptext38:
  7848                           	callstack 0
  7849  003256                     _I2C_Ready:
  7850                           	callstack 27
  7851  003256                     l211:
  7852  003256  A69E               	btfss	3998,3,c	;volatile
  7853  003258  EF30  F019         	goto	u2441
  7854  00325C  EF32  F019         	goto	u2440
  7855  003260                     u2441:
  7856  003260  EF2B  F019         	goto	l211
  7857  003264                     u2440:
  7858  003264                     
  7859                           ;./I2C_Master_File_3.h: 61:     SSPIF=0;
  7860  003264  969E               	bcf	3998,3,c	;volatile
  7861  003266  0012               	return		;funcret
  7862  003268                     __end_of_I2C_Ready:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function _I2C_Nack *****************
  7866 ;; Defined at:
  7867 ;;		line 125 in file "./I2C_Master_File_3.h"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;		None
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      void 
  7874 ;; Registers used:
  7875 ;;		None
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7881 ;;      Params:         0       0       0       0       0       0       0       0       0
  7882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7885 ;;Total ram usage:        0 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_I2C_Read
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text39
  7895  00321A                     __ptext39:
  7896                           	callstack 0
  7897  00321A                     _I2C_Nack:
  7898                           	callstack 27
  7899  00321A                     
  7900                           ;./I2C_Master_File_3.h: 126:     ACKDT=1;
  7901  00321A  8AC5               	bsf	4037,5,c	;volatile
  7902                           
  7903                           ;./I2C_Master_File_3.h: 127:  ACKEN=1;
  7904  00321C  88C5               	bsf	4037,4,c	;volatile
  7905  00321E                     l262:
  7906  00321E  B8C5               	btfsc	4037,4,c	;volatile
  7907  003220  EF14  F019         	goto	u2831
  7908  003224  EF16  F019         	goto	u2830
  7909  003228                     u2831:
  7910  003228  EF0F  F019         	goto	l262
  7911  00322C                     u2830:
  7912  00322C  0012               	return		;funcret
  7913  00322E                     __end_of_I2C_Nack:
  7914                           	callstack 0
  7915                           
  7916 ;; *************** function _I2C_Ack *****************
  7917 ;; Defined at:
  7918 ;;		line 119 in file "./I2C_Master_File_3.h"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		None
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7936 ;;Total ram usage:        0 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_I2C_Read
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text40
  7946  00322E                     __ptext40:
  7947                           	callstack 0
  7948  00322E                     _I2C_Ack:
  7949                           	callstack 27
  7950  00322E                     
  7951                           ;./I2C_Master_File_3.h: 120:     ACKDT=0;
  7952  00322E  9AC5               	bcf	4037,5,c	;volatile
  7953                           
  7954                           ;./I2C_Master_File_3.h: 121:  ACKEN=1;
  7955  003230  88C5               	bsf	4037,4,c	;volatile
  7956  003232                     l256:
  7957  003232  B8C5               	btfsc	4037,4,c	;volatile
  7958  003234  EF1E  F019         	goto	u2821
  7959  003238  EF20  F019         	goto	u2820
  7960  00323C                     u2821:
  7961  00323C  EF19  F019         	goto	l256
  7962  003240                     u2820:
  7963  003240  0012               	return		;funcret
  7964  003242                     __end_of_I2C_Ack:
  7965                           	callstack 0
  7966                           
  7967 ;; *************** function _LCD_String_xy *****************
  7968 ;; Defined at:
  7969 ;;		line 82 in file "LCD_20x4.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  row             1    wreg     unsigned char 
  7972 ;;  pos             1    9[COMRAM] unsigned char 
  7973 ;;  str             2   10[COMRAM] PTR const unsigned char 
  7974 ;;		 -> STR_15(22), STR_14(22), SensorMovimiento@buf(20), STR_7(6), 
  7975 ;;		 -> STR_6(6), SensorTemperatura@Temperature(10), STR_4(7), hours(10), 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  row             1   12[COMRAM] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7987 ;;      Params:         3       0       0       0       0       0       0       0       0
  7988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7990 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7991 ;;Total ram usage:        4 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:    3
  7994 ;; This function calls:
  7995 ;;		_LCD_Command
  7996 ;;		_LCD_String
  7997 ;; This function is called by:
  7998 ;;		_RTC
  7999 ;;		_SensorTemperatura
  8000 ;;		_SensorMovimiento
  8001 ;;		_SensorLuz
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text41
  8006  002B88                     __ptext41:
  8007                           	callstack 0
  8008  002B88                     _LCD_String_xy:
  8009                           	callstack 26
  8010                           
  8011                           ;incstack = 0
  8012                           ;LCD_String_xy@row stored from wreg
  8013  002B88  6E0D               	movwf	LCD_String_xy@row^0,c
  8014  002B8A                     
  8015                           ;LCD_20x4.c: 82: void LCD_String_xy(char row,char pos,const char *str);LCD_20x4.c: 83: {
      +                          ;LCD_20x4.c: 84:     if (row == 1)
  8016  002B8A  040D               	decf	LCD_String_xy@row^0,w,c
  8017  002B8C  A4D8               	btfss	status,2,c
  8018  002B8E  EFCB  F015         	goto	u3101
  8019  002B92  EFCD  F015         	goto	u3100
  8020  002B96                     u3101:
  8021  002B96  EFD4  F015         	goto	l3022
  8022  002B9A                     u3100:
  8023  002B9A                     
  8024                           ;LCD_20x4.c: 85:   LCD_Command((pos & 0x0F)|0x80);
  8025  002B9A  500A               	movf	LCD_String_xy@pos^0,w,c
  8026  002B9C  0B0F               	andlw	15
  8027  002B9E  0980               	iorlw	128
  8028  002BA0  ECE6  F018         	call	_LCD_Command
  8029  002BA4  EF04  F016         	goto	l3034
  8030  002BA8                     l3022:
  8031  002BA8  0E02               	movlw	2
  8032  002BAA  180D               	xorwf	LCD_String_xy@row^0,w,c
  8033  002BAC  A4D8               	btfss	status,2,c
  8034  002BAE  EFDB  F015         	goto	u3111
  8035  002BB2  EFDD  F015         	goto	u3110
  8036  002BB6                     u3111:
  8037  002BB6  EFE4  F015         	goto	l3026
  8038  002BBA                     u3110:
  8039  002BBA                     
  8040                           ;LCD_20x4.c: 87:   LCD_Command((pos & 0x0F)|0xC0);
  8041  002BBA  500A               	movf	LCD_String_xy@pos^0,w,c
  8042  002BBC  0B0F               	andlw	15
  8043  002BBE  09C0               	iorlw	192
  8044  002BC0  ECE6  F018         	call	_LCD_Command
  8045  002BC4  EF04  F016         	goto	l3034
  8046  002BC8                     l3026:
  8047  002BC8  0E03               	movlw	3
  8048  002BCA  180D               	xorwf	LCD_String_xy@row^0,w,c
  8049  002BCC  A4D8               	btfss	status,2,c
  8050  002BCE  EFEB  F015         	goto	u3121
  8051  002BD2  EFED  F015         	goto	u3120
  8052  002BD6                     u3121:
  8053  002BD6  EFF4  F015         	goto	l3030
  8054  002BDA                     u3120:
  8055  002BDA                     
  8056                           ;LCD_20x4.c: 89:   LCD_Command((pos & 0x0F)|0x94);
  8057  002BDA  500A               	movf	LCD_String_xy@pos^0,w,c
  8058  002BDC  0B0F               	andlw	15
  8059  002BDE  0994               	iorlw	148
  8060  002BE0  ECE6  F018         	call	_LCD_Command
  8061  002BE4  EF04  F016         	goto	l3034
  8062  002BE8                     l3030:
  8063  002BE8  0E04               	movlw	4
  8064  002BEA  180D               	xorwf	LCD_String_xy@row^0,w,c
  8065  002BEC  A4D8               	btfss	status,2,c
  8066  002BEE  EFFB  F015         	goto	u3131
  8067  002BF2  EFFD  F015         	goto	u3130
  8068  002BF6                     u3131:
  8069  002BF6  EF04  F016         	goto	l67
  8070  002BFA                     u3130:
  8071  002BFA                     
  8072                           ;LCD_20x4.c: 91:   LCD_Command((pos & 0x0F)|0xD4);
  8073  002BFA  500A               	movf	LCD_String_xy@pos^0,w,c
  8074  002BFC  0B0F               	andlw	15
  8075  002BFE  09D4               	iorlw	212
  8076  002C00  ECE6  F018         	call	_LCD_Command
  8077  002C04  EF04  F016         	goto	l3034
  8078  002C08                     l67:
  8079  002C08                     l3034:
  8080                           
  8081                           ;LCD_20x4.c: 92:  LCD_String(str);
  8082  002C08  C00B  F008         	movff	LCD_String_xy@str,LCD_String@msg
  8083  002C0C  C00C  F009         	movff	LCD_String_xy@str+1,LCD_String@msg+1
  8084  002C10  EC9C  F016         	call	_LCD_String	;wreg free
  8085  002C14  0012               	return		;funcret
  8086  002C16                     __end_of_LCD_String_xy:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function _LCD_String *****************
  8090 ;; Defined at:
  8091 ;;		line 72 in file "LCD_20x4.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  8094 ;;		 -> STR_15(22), STR_14(22), SensorMovimiento@buf(20), STR_7(6), 
  8095 ;;		 -> STR_6(6), SensorTemperatura@Temperature(10), STR_4(7), hours(10), 
  8096 ;;		 -> mins(10), secs(10), 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8108 ;;      Params:         2       0       0       0       0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8112 ;;Total ram usage:        2 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    2
  8115 ;; This function calls:
  8116 ;;		_LCD_Char
  8117 ;; This function is called by:
  8118 ;;		_LCD_String_xy
  8119 ;;		_RTC
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text42
  8124  002D38                     __ptext42:
  8125                           	callstack 0
  8126  002D38                     _LCD_String:
  8127                           	callstack 26
  8128  002D38                     
  8129                           ;LCD_20x4.c: 72: void LCD_String(const char *msg);LCD_20x4.c: 73: {;LCD_20x4.c: 74:  whi
      +                          le((*msg)!=0)
  8130  002D38  EFB2  F016         	goto	l2964
  8131  002D3C                     l2960:
  8132                           
  8133                           ;LCD_20x4.c: 75:  {;LCD_20x4.c: 76:    LCD_Char(*msg);
  8134  002D3C  C008  FFF6         	movff	LCD_String@msg,tblptrl
  8135  002D40  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  8136  002D44  6AF8               	clrf	tblptru,c
  8137  002D46  0E07               	movlw	(high __ramtop+-1)
  8138  002D48  64F7               	cpfsgt	tblptrh,c
  8139  002D4A  D003               	bra	u2927
  8140  002D4C  0008               	tblrd		*
  8141  002D4E  50F5               	movf	tablat,w,c
  8142  002D50  D005               	bra	u2920
  8143  002D52                     u2927:
  8144  002D52  CFF6 FFE1          	movff	tblptrl,fsr1l
  8145  002D56  CFF7 FFE2          	movff	tblptrh,fsr1h
  8146  002D5A  50E7               	movf	indf1,w,c
  8147  002D5C                     u2920:
  8148  002D5C  ECD8  F018         	call	_LCD_Char
  8149  002D60                     
  8150                           ;LCD_20x4.c: 77:    msg++;
  8151  002D60  4A08               	infsnz	LCD_String@msg^0,f,c
  8152  002D62  2A09               	incf	(LCD_String@msg+1)^0,f,c
  8153  002D64                     l2964:
  8154                           
  8155                           ;LCD_20x4.c: 74:  while((*msg)!=0)
  8156  002D64  C008  FFF6         	movff	LCD_String@msg,tblptrl
  8157  002D68  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  8158  002D6C  6AF8               	clrf	tblptru,c
  8159  002D6E  0E07               	movlw	(high __ramtop+-1)
  8160  002D70  64F7               	cpfsgt	tblptrh,c
  8161  002D72  D003               	bra	u2937
  8162  002D74  0008               	tblrd		*
  8163  002D76  50F5               	movf	tablat,w,c
  8164  002D78  D005               	bra	u2930
  8165  002D7A                     u2937:
  8166  002D7A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8167  002D7E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8168  002D82  50E7               	movf	indf1,w,c
  8169  002D84                     u2930:
  8170  002D84  0900               	iorlw	0
  8171  002D86  A4D8               	btfss	status,2,c
  8172  002D88  EFC8  F016         	goto	u2941
  8173  002D8C  EFCA  F016         	goto	u2940
  8174  002D90                     u2941:
  8175  002D90  EF9E  F016         	goto	l2960
  8176  002D94                     u2940:
  8177  002D94  0012               	return		;funcret
  8178  002D96                     __end_of_LCD_String:
  8179                           	callstack 0
  8180                           
  8181 ;; *************** function _LCD_Char *****************
  8182 ;; Defined at:
  8183 ;;		line 60 in file "LCD_20x4.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  char_data       1    wreg     unsigned char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  char_data       1    6[COMRAM] unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0
  8198 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8200 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8201 ;;Total ram usage:        1 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:    1
  8204 ;; This function calls:
  8205 ;;		_MSdelay
  8206 ;; This function is called by:
  8207 ;;		_LCD_String
  8208 ;;		_LCD_Custom_Char
  8209 ;;		_SensorTemperatura
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text43
  8214  0031B0                     __ptext43:
  8215                           	callstack 0
  8216  0031B0                     _LCD_Char:
  8217                           	callstack 26
  8218                           
  8219                           ;incstack = 0
  8220                           ;LCD_Char@char_data stored from wreg
  8221  0031B0  6E07               	movwf	LCD_Char@char_data^0,c
  8222  0031B2                     
  8223                           ;LCD_20x4.c: 60: void LCD_Char(char char_data);LCD_20x4.c: 61: {;LCD_20x4.c: 62:  LATD =
      +                           char_data;
  8224  0031B2  C007  FF8C         	movff	LCD_Char@char_data,3980	;volatile
  8225  0031B6                     
  8226                           ;LCD_20x4.c: 63:  LATE1 = 1;
  8227  0031B6  828D               	bsf	3981,1,c	;volatile
  8228  0031B8                     
  8229                           ;LCD_20x4.c: 65:     LATE2 = 1;
  8230  0031B8  848D               	bsf	3981,2,c	;volatile
  8231  0031BA                     
  8232                           ;LCD_20x4.c: 66:  __nop();
  8233  0031BA  F000               	nop	
  8234  0031BC                     
  8235                           ;LCD_20x4.c: 67:  LATE2 = 0;
  8236  0031BC  948D               	bcf	3981,2,c	;volatile
  8237  0031BE                     
  8238                           ;LCD_20x4.c: 68:  MSdelay(3);
  8239  0031BE  0E00               	movlw	0
  8240  0031C0  6E02               	movwf	(MSdelay@val+1)^0,c
  8241  0031C2  0E03               	movlw	3
  8242  0031C4  6E01               	movwf	MSdelay@val^0,c
  8243  0031C6  ECF4  F016         	call	_MSdelay	;wreg free
  8244  0031CA  0012               	return		;funcret
  8245  0031CC                     __end_of_LCD_Char:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function _I2C_Stop *****************
  8249 ;; Defined at:
  8250 ;;		line 103 in file "./I2C_Master_File_3.h"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;		None
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;		None
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      unsigned char 
  8257 ;; Registers used:
  8258 ;;		wreg
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8268 ;;Total ram usage:        0 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; This function calls:
  8271 ;;		Nothing
  8272 ;; This function is called by:
  8273 ;;		_RTC
  8274 ;;		_I2C_Start_Wait
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text44
  8279  003242                     __ptext44:
  8280                           	callstack 0
  8281  003242                     _I2C_Stop:
  8282                           	callstack 29
  8283  003242                     
  8284                           ;./I2C_Master_File_3.h: 104:     PEN = 1;
  8285  003242  84C5               	bsf	4037,2,c	;volatile
  8286  003244                     l244:
  8287  003244  B4C5               	btfsc	4037,2,c	;volatile
  8288  003246  EF27  F019         	goto	u3161
  8289  00324A  EF29  F019         	goto	u3160
  8290  00324E                     u3161:
  8291  00324E  EF22  F019         	goto	l244
  8292  003252                     u3160:
  8293  003252                     
  8294                           ;./I2C_Master_File_3.h: 106:     if(!SSPSTATbits.P);
  8295  003252  50C7               	movf	199,w,c	;volatile
  8296  003254  0012               	return		;funcret
  8297  003256                     __end_of_I2C_Stop:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function _LCD_Init *****************
  8301 ;; Defined at:
  8302 ;;		line 28 in file "LCD_20x4.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;		None
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2, status,0, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    2
  8323 ;; This function calls:
  8324 ;;		_LCD_Command
  8325 ;;		_MSdelay
  8326 ;; This function is called by:
  8327 ;;		_main
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text45
  8332  00313A                     __ptext45:
  8333                           	callstack 0
  8334  00313A                     _LCD_Init:
  8335                           	callstack 28
  8336  00313A                     
  8337                           ;LCD_20x4.c: 30:     TRISE = 0;
  8338  00313A  0E00               	movlw	0
  8339  00313C  6E96               	movwf	150,c	;volatile
  8340                           
  8341                           ;LCD_20x4.c: 31:  TRISD = 0x00;
  8342  00313E  0E00               	movlw	0
  8343  003140  6E95               	movwf	149,c	;volatile
  8344  003142                     
  8345                           ;LCD_20x4.c: 33:  MSdelay(20);
  8346  003142  0E00               	movlw	0
  8347  003144  6E02               	movwf	(MSdelay@val+1)^0,c
  8348  003146  0E14               	movlw	20
  8349  003148  6E01               	movwf	MSdelay@val^0,c
  8350  00314A  ECF4  F016         	call	_MSdelay	;wreg free
  8351  00314E                     
  8352                           ;LCD_20x4.c: 34:  LCD_Command(0x38);
  8353  00314E  0E38               	movlw	56
  8354  003150  ECE6  F018         	call	_LCD_Command
  8355  003154                     
  8356                           ;LCD_20x4.c: 35:     LCD_Command(0x01);
  8357  003154  0E01               	movlw	1
  8358  003156  ECE6  F018         	call	_LCD_Command
  8359  00315A                     
  8360                           ;LCD_20x4.c: 36:     LCD_Command(0x0c);
  8361  00315A  0E0C               	movlw	12
  8362  00315C  ECE6  F018         	call	_LCD_Command
  8363  003160                     
  8364                           ;LCD_20x4.c: 37:     LCD_Command(0x06);
  8365  003160  0E06               	movlw	6
  8366  003162  ECE6  F018         	call	_LCD_Command
  8367  003166  0012               	return		;funcret
  8368  003168                     __end_of_LCD_Init:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function _LCD_Command *****************
  8372 ;; Defined at:
  8373 ;;		line 49 in file "LCD_20x4.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  cmd             1    wreg     unsigned char 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  cmd             1    6[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0
  8388 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8390 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8391 ;;Total ram usage:        1 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    1
  8394 ;; This function calls:
  8395 ;;		_MSdelay
  8396 ;; This function is called by:
  8397 ;;		_LCD_Init
  8398 ;;		_LCD_String_xy
  8399 ;;		_LCD_Custom_Char
  8400 ;;		_SensorTemperatura
  8401 ;;		_SensorLuz
  8402 ;;		_LCD_Clear
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text46
  8407  0031CC                     __ptext46:
  8408                           	callstack 0
  8409  0031CC                     _LCD_Command:
  8410                           	callstack 27
  8411                           
  8412                           ;incstack = 0
  8413                           ;LCD_Command@cmd stored from wreg
  8414  0031CC  6E07               	movwf	LCD_Command@cmd^0,c
  8415  0031CE                     
  8416                           ;LCD_20x4.c: 49: void LCD_Command(char cmd );LCD_20x4.c: 50: {;LCD_20x4.c: 51:  LATD = c
      +                          md;
  8417  0031CE  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  8418  0031D2                     
  8419                           ;LCD_20x4.c: 52:  LATE1 = 0;
  8420  0031D2  928D               	bcf	3981,1,c	;volatile
  8421  0031D4                     
  8422                           ;LCD_20x4.c: 54:     LATE2 = 1;
  8423  0031D4  848D               	bsf	3981,2,c	;volatile
  8424  0031D6                     
  8425                           ;LCD_20x4.c: 55:  __nop();
  8426  0031D6  F000               	nop	
  8427  0031D8                     
  8428                           ;LCD_20x4.c: 56:  LATE2 = 0;
  8429  0031D8  948D               	bcf	3981,2,c	;volatile
  8430  0031DA                     
  8431                           ;LCD_20x4.c: 57:  MSdelay(3);
  8432  0031DA  0E00               	movlw	0
  8433  0031DC  6E02               	movwf	(MSdelay@val+1)^0,c
  8434  0031DE  0E03               	movlw	3
  8435  0031E0  6E01               	movwf	MSdelay@val^0,c
  8436  0031E2  ECF4  F016         	call	_MSdelay	;wreg free
  8437  0031E6  0012               	return		;funcret
  8438  0031E8                     __end_of_LCD_Command:
  8439                           	callstack 0
  8440                           
  8441 ;; *************** function _MSdelay *****************
  8442 ;; Defined at:
  8443 ;;		line 108 in file "LCD_20x4.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  val             2    0[COMRAM] unsigned int 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  j               2    4[COMRAM] unsigned int 
  8448 ;;  i               2    2[COMRAM] unsigned int 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8458 ;;      Params:         2       0       0       0       0       0       0       0       0
  8459 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8461 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8462 ;;Total ram usage:        6 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; This function calls:
  8465 ;;		Nothing
  8466 ;; This function is called by:
  8467 ;;		_LCD_Init
  8468 ;;		_LCD_Command
  8469 ;;		_LCD_Char
  8470 ;;		_LCD_Clear
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text47
  8475  002DE8                     __ptext47:
  8476                           	callstack 0
  8477  002DE8                     _MSdelay:
  8478                           	callstack 26
  8479  002DE8                     
  8480                           ;LCD_20x4.c: 108: void MSdelay(unsigned int val);LCD_20x4.c: 109: {;LCD_20x4.c: 110:    
      +                            unsigned int i,j;;LCD_20x4.c: 111:         for(i=0;i<=val;i++)
  8481  002DE8  0E00               	movlw	0
  8482  002DEA  6E04               	movwf	(MSdelay@i+1)^0,c
  8483  002DEC  0E00               	movlw	0
  8484  002DEE  6E03               	movwf	MSdelay@i^0,c
  8485  002DF0  EF0D  F017         	goto	l2690
  8486  002DF4                     l2678:
  8487                           
  8488                           ;LCD_20x4.c: 112:             for(j=0;j<165;j++);
  8489  002DF4  0E00               	movlw	0
  8490  002DF6  6E06               	movwf	(MSdelay@j+1)^0,c
  8491  002DF8  0E00               	movlw	0
  8492  002DFA  6E05               	movwf	MSdelay@j^0,c
  8493  002DFC                     l2684:
  8494  002DFC  4A05               	infsnz	MSdelay@j^0,f,c
  8495  002DFE  2A06               	incf	(MSdelay@j+1)^0,f,c
  8496  002E00  5006               	movf	(MSdelay@j+1)^0,w,c
  8497  002E02  E109               	bnz	u2420
  8498  002E04  0EA5               	movlw	165
  8499  002E06  5C05               	subwf	MSdelay@j^0,w,c
  8500  002E08  A0D8               	btfss	status,0,c
  8501  002E0A  EF09  F017         	goto	u2421
  8502  002E0E  EF0B  F017         	goto	u2420
  8503  002E12                     u2421:
  8504  002E12  EFFE  F016         	goto	l2684
  8505  002E16                     u2420:
  8506  002E16  4A03               	infsnz	MSdelay@i^0,f,c
  8507  002E18  2A04               	incf	(MSdelay@i+1)^0,f,c
  8508  002E1A                     l2690:
  8509  002E1A  5003               	movf	MSdelay@i^0,w,c
  8510  002E1C  5C01               	subwf	MSdelay@val^0,w,c
  8511  002E1E  5004               	movf	(MSdelay@i+1)^0,w,c
  8512  002E20  5802               	subwfb	(MSdelay@val+1)^0,w,c
  8513  002E22  B0D8               	btfsc	status,0,c
  8514  002E24  EF16  F017         	goto	u2431
  8515  002E28  EF18  F017         	goto	u2430
  8516  002E2C                     u2431:
  8517  002E2C  EFFA  F016         	goto	l2678
  8518  002E30                     u2430:
  8519  002E30  0012               	return		;funcret
  8520  002E32                     __end_of_MSdelay:
  8521                           	callstack 0
  8522                           
  8523 ;; *************** function _I2C_Init *****************
  8524 ;; Defined at:
  8525 ;;		line 46 in file "./I2C_Master_File_3.h"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8539 ;;      Params:         0       0       0       0       0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; This function calls:
  8546 ;;		Nothing
  8547 ;; This function is called by:
  8548 ;;		_main
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text48
  8553  0031E8                     __ptext48:
  8554                           	callstack 0
  8555  0031E8                     _I2C_Init:
  8556                           	callstack 30
  8557  0031E8                     
  8558                           ;./I2C_Master_File_3.h: 47:     TRISB0 =1;
  8559  0031E8  8093               	bsf	3987,0,c	;volatile
  8560                           
  8561                           ;./I2C_Master_File_3.h: 48:  TRISB1 =1;
  8562  0031EA  8293               	bsf	3987,1,c	;volatile
  8563  0031EC                     
  8564                           ;./I2C_Master_File_3.h: 49:  SSPSTAT=80;
  8565  0031EC  0E50               	movlw	80
  8566  0031EE  6EC7               	movwf	199,c	;volatile
  8567                           
  8568                           ;./I2C_Master_File_3.h: 50:     SSPCON1=0x28;
  8569  0031F0  0E28               	movlw	40
  8570  0031F2  6EC6               	movwf	198,c	;volatile
  8571                           
  8572                           ;./I2C_Master_File_3.h: 52:  SSPCON2=0;
  8573  0031F4  0E00               	movlw	0
  8574  0031F6  6EC5               	movwf	197,c	;volatile
  8575                           
  8576                           ;./I2C_Master_File_3.h: 53:     SSPADD=((8000000/(4*100000))-1);
  8577  0031F8  0E13               	movlw	19
  8578  0031FA  6EC8               	movwf	200,c	;volatile
  8579  0031FC                     
  8580                           ;./I2C_Master_File_3.h: 54:     SSPIE=1;
  8581  0031FC  869D               	bsf	3997,3,c	;volatile
  8582  0031FE                     
  8583                           ;./I2C_Master_File_3.h: 55:     SSPIF=0;
  8584  0031FE  969E               	bcf	3998,3,c	;volatile
  8585  003200  0012               	return		;funcret
  8586  003202                     __end_of_I2C_Init:
  8587                           	callstack 0
  8588                           
  8589 ;; *************** function _ADC_Init *****************
  8590 ;; Defined at:
  8591 ;;		line 22 in file "PIC18F4550_ADC_Source_File.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8605 ;;      Params:         0       0       0       0       0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_main
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text49
  8619  003202                     __ptext49:
  8620                           	callstack 0
  8621  003202                     _ADC_Init:
  8622                           	callstack 30
  8623  003202                     
  8624                           ;PIC18F4550_ADC_Source_File.c: 24:     TRISA = 0xff;
  8625  003202  6892               	setf	146,c	;volatile
  8626  003204                     
  8627                           ;PIC18F4550_ADC_Source_File.c: 25:     ADCON0 = 0x85;
  8628  003204  0E85               	movlw	133
  8629  003206  6EC2               	movwf	194,c	;volatile
  8630                           
  8631                           ;PIC18F4550_ADC_Source_File.c: 26:     ADCON1 = 0xC0;
  8632  003208  0EC0               	movlw	192
  8633  00320A  6EC1               	movwf	193,c	;volatile
  8634                           
  8635                           ;PIC18F4550_ADC_Source_File.c: 27:     ADCON2 = 0x92;
  8636  00320C  0E92               	movlw	146
  8637  00320E  6EC0               	movwf	192,c	;volatile
  8638                           
  8639                           ;PIC18F4550_ADC_Source_File.c: 28:     ADRESH = 0;
  8640  003210  0E00               	movlw	0
  8641  003212  6EC4               	movwf	196,c	;volatile
  8642                           
  8643                           ;PIC18F4550_ADC_Source_File.c: 29:     ADRESL = 0;
  8644  003214  0E00               	movlw	0
  8645  003216  6EC3               	movwf	195,c	;volatile
  8646  003218  0012               	return		;funcret
  8647  00321A                     __end_of_ADC_Init:
  8648                           	callstack 0
  8649                           
  8650                           	psect	rparam
  8651  0000                     
  8652                           	psect	idloc
  8653                           
  8654                           ;Config register IDLOC0 @ 0x200000
  8655                           ;	unspecified, using default values
  8656  200000                     	org	2097152
  8657  200000  FF                 	db	255
  8658                           
  8659                           ;Config register IDLOC1 @ 0x200001
  8660                           ;	unspecified, using default values
  8661  200001                     	org	2097153
  8662  200001  FF                 	db	255
  8663                           
  8664                           ;Config register IDLOC2 @ 0x200002
  8665                           ;	unspecified, using default values
  8666  200002                     	org	2097154
  8667  200002  FF                 	db	255
  8668                           
  8669                           ;Config register IDLOC3 @ 0x200003
  8670                           ;	unspecified, using default values
  8671  200003                     	org	2097155
  8672  200003  FF                 	db	255
  8673                           
  8674                           ;Config register IDLOC4 @ 0x200004
  8675                           ;	unspecified, using default values
  8676  200004                     	org	2097156
  8677  200004  FF                 	db	255
  8678                           
  8679                           ;Config register IDLOC5 @ 0x200005
  8680                           ;	unspecified, using default values
  8681  200005                     	org	2097157
  8682  200005  FF                 	db	255
  8683                           
  8684                           ;Config register IDLOC6 @ 0x200006
  8685                           ;	unspecified, using default values
  8686  200006                     	org	2097158
  8687  200006  FF                 	db	255
  8688                           
  8689                           ;Config register IDLOC7 @ 0x200007
  8690                           ;	unspecified, using default values
  8691  200007                     	org	2097159
  8692  200007  FF                 	db	255
  8693                           
  8694                           	psect	config
  8695                           
  8696                           ;Config register CONFIG1L @ 0x300000
  8697                           ;	PLL Prescaler Selection bits
  8698                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8699                           ;	System Clock Postscaler Selection bits
  8700                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8701                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8702                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8703  300000                     	org	3145728
  8704  300000  00                 	db	0
  8705                           
  8706                           ;Config register CONFIG1H @ 0x300001
  8707                           ;	Oscillator Selection bits
  8708                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8709                           ;	Fail-Safe Clock Monitor Enable bit
  8710                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8711                           ;	Internal/External Oscillator Switchover bit
  8712                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8713  300001                     	org	3145729
  8714  300001  09                 	db	9
  8715                           
  8716                           ;Config register CONFIG2L @ 0x300002
  8717                           ;	Power-up Timer Enable bit
  8718                           ;	PWRT = OFF, PWRT disabled
  8719                           ;	Brown-out Reset Enable bits
  8720                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8721                           ;	Brown-out Reset Voltage bits
  8722                           ;	BORV = 3, Minimum setting 2.05V
  8723                           ;	USB Voltage Regulator Enable bit
  8724                           ;	VREGEN = OFF, USB voltage regulator disabled
  8725  300002                     	org	3145730
  8726  300002  19                 	db	25
  8727                           
  8728                           ;Config register CONFIG2H @ 0x300003
  8729                           ;	Watchdog Timer Enable bit
  8730                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8731                           ;	Watchdog Timer Postscale Select bits
  8732                           ;	WDTPS = 32768, 1:32768
  8733  300003                     	org	3145731
  8734  300003  1E                 	db	30
  8735                           
  8736                           ; Padding undefined space
  8737  300004                     	org	3145732
  8738  300004  FF                 	db	255
  8739                           
  8740                           ;Config register CONFIG3H @ 0x300005
  8741                           ;	CCP2 MUX bit
  8742                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8743                           ;	PORTB A/D Enable bit
  8744                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8745                           ;	Low-Power Timer 1 Oscillator Enable bit
  8746                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8747                           ;	MCLR Pin Enable bit
  8748                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8749  300005                     	org	3145733
  8750  300005  01                 	db	1
  8751                           
  8752                           ;Config register CONFIG4L @ 0x300006
  8753                           ;	Stack Full/Underflow Reset Enable bit
  8754                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8755                           ;	Single-Supply ICSP Enable bit
  8756                           ;	LVP = OFF, Single-Supply ICSP disabled
  8757                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8758                           ;	ICPRT = OFF, ICPORT disabled
  8759                           ;	Extended Instruction Set Enable bit
  8760                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8761                           ;	Background Debugger Enable bit
  8762                           ;	DEBUG = 0x1, unprogrammed default
  8763  300006                     	org	3145734
  8764  300006  81                 	db	129
  8765                           
  8766                           ; Padding undefined space
  8767  300007                     	org	3145735
  8768  300007  FF                 	db	255
  8769                           
  8770                           ;Config register CONFIG5L @ 0x300008
  8771                           ;	Code Protection bit
  8772                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8773                           ;	Code Protection bit
  8774                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8775                           ;	Code Protection bit
  8776                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8777                           ;	Code Protection bit
  8778                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8779  300008                     	org	3145736
  8780  300008  0F                 	db	15
  8781                           
  8782                           ;Config register CONFIG5H @ 0x300009
  8783                           ;	Boot Block Code Protection bit
  8784                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8785                           ;	Data EEPROM Code Protection bit
  8786                           ;	CPD = OFF, Data EEPROM is not code-protected
  8787  300009                     	org	3145737
  8788  300009  C0                 	db	192
  8789                           
  8790                           ;Config register CONFIG6L @ 0x30000A
  8791                           ;	Write Protection bit
  8792                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8793                           ;	Write Protection bit
  8794                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8795                           ;	Write Protection bit
  8796                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8797                           ;	Write Protection bit
  8798                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8799  30000A                     	org	3145738
  8800  30000A  0F                 	db	15
  8801                           
  8802                           ;Config register CONFIG6H @ 0x30000B
  8803                           ;	Configuration Register Write Protection bit
  8804                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8805                           ;	Boot Block Write Protection bit
  8806                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8807                           ;	Data EEPROM Write Protection bit
  8808                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8809  30000B                     	org	3145739
  8810  30000B  E0                 	db	224
  8811                           
  8812                           ;Config register CONFIG7L @ 0x30000C
  8813                           ;	Table Read Protection bit
  8814                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8815                           ;	Table Read Protection bit
  8816                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8817                           ;	Table Read Protection bit
  8818                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8819                           ;	Table Read Protection bit
  8820                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8821  30000C                     	org	3145740
  8822  30000C  0F                 	db	15
  8823                           
  8824                           ;Config register CONFIG7H @ 0x30000D
  8825                           ;	Boot Block Table Read Protection bit
  8826                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8827  30000D                     	org	3145741
  8828  30000D  40                 	db	64
  8829                           tosu	equ	0xFFF
  8830                           tosh	equ	0xFFE
  8831                           tosl	equ	0xFFD
  8832                           stkptr	equ	0xFFC
  8833                           pclatu	equ	0xFFB
  8834                           pclath	equ	0xFFA
  8835                           pcl	equ	0xFF9
  8836                           tblptru	equ	0xFF8
  8837                           tblptrh	equ	0xFF7
  8838                           tblptrl	equ	0xFF6
  8839                           tablat	equ	0xFF5
  8840                           prodh	equ	0xFF4
  8841                           prodl	equ	0xFF3
  8842                           indf0	equ	0xFEF
  8843                           postinc0	equ	0xFEE
  8844                           postdec0	equ	0xFED
  8845                           preinc0	equ	0xFEC
  8846                           plusw0	equ	0xFEB
  8847                           fsr0h	equ	0xFEA
  8848                           fsr0l	equ	0xFE9
  8849                           wreg	equ	0xFE8
  8850                           indf1	equ	0xFE7
  8851                           postinc1	equ	0xFE6
  8852                           postdec1	equ	0xFE5
  8853                           preinc1	equ	0xFE4
  8854                           plusw1	equ	0xFE3
  8855                           fsr1h	equ	0xFE2
  8856                           fsr1l	equ	0xFE1
  8857                           bsr	equ	0xFE0
  8858                           indf2	equ	0xFDF
  8859                           postinc2	equ	0xFDE
  8860                           postdec2	equ	0xFDD
  8861                           preinc2	equ	0xFDC
  8862                           plusw2	equ	0xFDB
  8863                           fsr2h	equ	0xFDA
  8864                           fsr2l	equ	0xFD9
  8865                           status	equ	0xFD8

Data Sizes:
    Strings     118
    Constant    0
    Data        171
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     86     146
    BANK1           256      0     187
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), SensorMovimiento@buf(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), SensorMovimiento@buf(BANK0[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[7]), STR_3(CODE[8]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[7]), STR_3(CODE[8]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[7]), STR_3(CODE[8]), STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1400_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character2(BANK0[8]), character1(BANK0[8]), 

    LCD_String_xy@str	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[22]), STR_14(CODE[22]), SensorMovimiento@buf(BANK0[20]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), SensorTemperatura@Temperature(BANK0[10]), STR_4(CODE[7]), hours(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[22]), STR_14(CODE[22]), SensorMovimiento@buf(BANK0[20]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), SensorTemperatura@Temperature(BANK0[10]), STR_4(CODE[7]), hours(BANK0[10]), 
		 -> mins(BANK0[10]), secs(BANK0[10]), 


Critical Paths under _main in COMRAM

    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _SensorMovimiento->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _SensorLuz->___fldiv
    ___xxtofl->_ADC_Read
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_SensorMovimiento
    _main->_SensorTemperatura
    _SensorTemperatura->_sprintf
    _RTC->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   59965
                           _ADC_Init
                           _I2C_Init
                           _LCD_Init
                                _RTC
                          _SensorLuz
                   _SensorMovimiento
                  _SensorTemperatura
 ---------------------------------------------------------------------------------
 (1) _SensorTemperatura                                   62    62      0   26862
                                             24 BANK0     62    62      0
                           _ADC_Read
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1122
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _SensorMovimiento                                    86    86      0    4985
                                              0 BANK0     86    86      0
                      _LCD_String_xy
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1474
                                             12 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     552
                                              4 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _SensorLuz                                           39    39      0    7904
                                              0 BANK0     39    39      0
                           _ADC_Read
                        _LCD_Command
                      _LCD_String_xy
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              8 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             22 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             47 COMRAM    25    17      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTC                                                  0     0      0   19400
                           _I2C_Stop
                         _LCD_String
                      _LCD_String_xy
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   16009
                                              6 BANK0     18    10      8
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15198
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   14836
                                             66 COMRAM    27    21      6
                               _ctoa
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5479
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     1      3    2523
                                              9 COMRAM     4     1      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     691
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     418
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     814
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     418
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     396
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _RTC
     _I2C_Stop
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       ___fltol (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _SensorLuz
     _ADC_Read
     _LCD_Command
       _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     ___fldiv
       _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
   _SensorMovimiento
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
   _SensorTemperatura
     _ADC_Read
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
     _LCD_Custom_Char
       _LCD_Char
         _MSdelay
       _LCD_Command
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     ___fldiv
       _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fltol
     ___xxtofl
       _ADC_Read (ARG)
     _memset
     _sprintf
       ___fltol (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BB       7       73.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      92       5       91.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      20        0.0%
DATA                 0      0     1AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Dec 15 10:52:21 2020

                        ___fldiv@aexp 0048                          ___fldiv@bexp 0047  
                  __size_of_I2C_Ready 0012                          ___fldiv@sign 0040  
                  __size_of_I2C_Start 002E                          ?_LCD_Command 0001  
                         _SSPSTATbits 000FC7                    __size_of_I2C_Write 0022  
                                  l21 3218                                    l24 2A26  
                                  l27 2A52                                    l52 31E6  
                                  l61 2D94                                    l46 3166  
                                  l55 31CA                                    l71 2C14  
                                  l67 2C08                                    l85 2E30  
                                  l77 2E78                                    _GO 007E11  
                         ?_LCD_String 0008                       _LCD_Custom_Char 2E32  
                                 l200 3002                                   l202 3010  
                                 l211 3256                                   l204 3030  
                                 l300 1A94                                   l213 3264  
                                 l205 3036                                   l214 3266  
                                 l230 30F0                                   l311 1B90  
                                 l208 3200                                   l232 310A  
                                 l321 1BF4                                   l330 1C8E  
                                 l235 3110                                   l244 3244  
                                 l252 31AE                                   l228 30E2  
                                 l316 1C38                                   l308 1B24  
                                 l237 311E                                   l325 1CD2  
                                 l246 3252                                   l262 321E  
                                 l334 1D6C                                   l239 3138  
                                 l351 202E                                   l343 1D94  
                                 l248 3254                                   l256 3232  
                                 l265 322C                                   l362 20E2  
                                 l259 3240                                   l339 1D28  
                                 l292 2B86                                   l365 2EBE  
                                 l359 20A2                                   l295 1B04  
                                 l633 2708                                   l482 226A  
                                 l638 274E                                   l495 2544  
                                 l665 264A                                   l950 103A  
                                 l952 0E9A                                   l961 0EE0  
                                 l963 0F58                                   l955 0E5E  
                                 l964 0F46                                   l982 093C  
                                 l991 0BAA                                   l992 0B98  
                                 l986 0CA0                                   l989 0B32  
                                 l999 0C62                                   _PEN 007E2A  
                                 _RTC 2AF0                                   _abs 2F44  
                     __end_of_I2C_Ack 3242                                   _pad 28F2  
                                 _min 00C0                                   _sec 00C2  
                                 wreg 000FE8                          ___flmul@aexp 0028  
                        ___flmul@bexp 0029                          ___flmul@sign 0023  
                        ___flmul@temp 002E                          ___flmul@prod 002A  
                                ?_RTC 0001                          ___fltol@exp1 000A  
                                l1110 2826                                  l1030 1E84  
                                l1023 1DEC                                  l1200 30A6  
                                l1105 27B6                                  l1026 1F48  
                                l1043 23E0                                  ?_abs 0013  
                                l1108 27F8                                  l1116 13E6  
                                l1141 1662                                  l1037 1EE0  
                                l1118 13EE                                  l1150 1700  
                                l1215 28F0                                  l1223 2F02  
                                l1143 166A                                  l1136 1628  
                                l1056 2DE6                                  l3000 2F14  
                                l1233 318C                                  l1226 3278  
                                l1250 2D2E                                  l3002 2C78  
                                l3010 29B8                                  l1171 1344  
                                l3020 2B9A                                  l1092 297A  
                                l1164 189E                                  l3004 2C80  
                                l3012 2A34                                  l3100 23C4  
                                l1245 30DC                                  l1261 306E  
                                l3030 2BE8                                  l3022 2BA8  
                                l1094 29B6                                  l1166 1902  
                                l3006 2C8E                                  l3014 2A4A  
                                l3110 0CA2                                  l3102 23CA  
                                l1191 2F82                                  l1255 2D36  
                                l1183 2CD0                                  l1239 2F42  
                                l2240 3202                                  l3032 2BFA  
                                l3024 2BBA                                  l1184 2CD8  
                                l3008 2CB4                                  l3200 0ED0  
                                l3120 0CDE                                  l3112 0CAE  
                                l3040 2E50                                  l3104 23CE  
                                l1089 2938                                  l2242 3204  
                                l3026 2BC8                                  l3034 2C08  
                                l3018 2B8A                                  l1194 2FFC  
                                l3210 0F10                                  l3202 0EDE  
                                l3130 0D0E                                  l3122 0CEE  
                                l3114 0CBC                                  l3106 3168  
                                l3050 2E68                                  l2260 31FC  
                                l3052 3242                                  l3028 2BDA  
                                l3060 2EAE                                  l1188 2F7A  
                                l3220 0F82                                  l3212 0F3E  
                                l3204 0EF0                                  l3140 0D44  
                                l3132 0D14                                  l3124 0CF0  
                                l3116 0CBE                                  l3300 09CC  
                                l3036 2E34                                  l2262 31FE  
                                l3054 2E7C                                  l3070 2DD4  
                                l3062 2D96                                  l3230 0FFA  
                                l3222 0FAC                                  l3206 0EFE  
                                l3150 0D84                                  l3142 0D54  
                                l3134 0D22                                  l3118 0CCE  
                                l3126 0CF8                                  l3310 0A0E  
                                l3302 09D8                                  l3046 2E54  
                                l3038 2E44                                  l2256 31E8  
                                l3056 2E8E                                  l2520 284C  
                                l2600 23F4                                  l3064 2DA8  
                                l3240 1030                                  l3232 1016  
                                l3216 0F68                                  l3224 0FB0  
                                l3208 0F02                                  l3152 0D94  
                                l3160 0DB4                                  l3144 0D56  
                                l3136 0D24                                  l3128 0D08  
                                l3320 0A70                                  l3312 0A1E  
                                l3304 09E6                                  l3048 2E66  
                                l3400 2546                                  l3080 2296  
                                l2258 31EC                                  l3058 2E9E  
                                l2522 2856                                  l2610 2464  
                                l2602 2414                                  l2530 2EC0  
                                l3066 2DB0                                  l3234 101A  
                                l3226 0FCA                                  l3218 0F74  
                                l3170 0DF2                                  l3162 0DC4  
                                l3154 0D9C                                  l3138 0D34  
                                l3146 0D5E                                  l3330 0B18  
                                l3322 0A8C                                  l3314 0A38  
                                l3306 09F2                                  l3250 0884  
                                l3410 259C                                  l3402 255C  
                                l3090 233E                                  l3074 226C  
                                l3500 3160                                  l2524 2874  
                                l2516 2828                                  l2700 277C  
                                l2620 24DC                                  l2612 246C  
                                l2604 2418                                  l2532 2ECC  
                                l2540 30B4                                  l3068 2DB8  
                                l3236 1028                                  l3228 0FE0  
                                l3180 0E3A                                  l3172 0E02  
                                l3164 0DC4                                  l3156 0DA0  
                                l3148 0D6E                                  l3340 0B54  
                                l3332 0B22                                  l3324 0AB6  
                                l3316 0A48                                  l3308 0A02  
                                l3260 08C4                                  l3252 0892  
                                l3412 25AC                                  l3092 236A  
                                l3084 22CC                                  l2526 28AA  
                                l2518 283A                                  l2710 27C2  
                                l2702 278A                                  l2622 24EE  
                                l2614 2480                                  l2606 2426  
                                l2534 2EDE                                  l2542 30B8  
                                l3510 2B20                                  l3502 2AF0  
                                l3238 102E                                  l3190 0E88  
                                l3182 0E4E                                  l3174 0E12  
                                l3350 0BC6                                  l3342 0B62  
                                l3334 0B30                                  l3326 0AEC  
                                l3318 0A64                                  l3270 08F4  
                                l3262 08CA                                  l3254 0894  
                                l3422 25D6                                  l3414 25B0  
                                l3406 2570                                  l3086 2324  
                                l3078 228A                                  l2712 27D6  
                                l2704 279C                                  l2560 211A  
                                l2552 20E4                                  l2616 248E  
                                l2624 24F4                                  l2608 2446  
                                l2536 2EE2                                  l2544 30D0  
                                l2640 2930                                  l2632 28F2  
                                l2800 16BA                                  l3512 2B3E  
                                l3504 2AF6                                  l3192 0E98  
                                l3184 0E5C                                  l3176 0E22  
                                l3168 0DD8                                  l3360 0C30  
                                l3352 0BD4                                  l3344 0B90  
                                l3336 0B42                                  l3328 0AFA  
                                l3280 092C                                  l3272 08F6  
                                l3264 08DA                                  l3256 08A4  
                                l3248 0878                                  l3600 1BB4  
                                l3440 263A                                  l3432 25FE  
                                l3424 25E0                                  l3416 25BE  
                                l3408 259A                                  l3096 2384  
                                l3520 1904                                  l2714 27DA  
                                l2570 2176                                  l2562 2128  
                                l2554 20E8                                  l2626 2504  
                                l2618 24BC                                  l2538 30A8  
                                l2650 299E                                  l2642 2944  
                                l2634 2902                                  l2730 13BE  
                                l2722 1346                                  l2802 16C0  
                                l3514 2B5C                                  l3506 2AFA  
                                l3194 0EAA                                  l3186 0E68  
                                l3178 0E2A                                  l3370 0C86  
                                l3362 0C4A                                  l3354 0BFE  
                                l3338 0B50                                  l3290 097C  
                                l3282 094C                                  l3274 0906  
                                l3266 08E0                                  l3258 08B4  
                                l3450 1DFC                                  l3602 1BC2  
                                l3434 260A                                  l3426 25EA  
                                l3098 23B8                                  l3530 19E2  
                                l3522 1908                                  l2716 2808  
                                l2708 27AE                                  l2580 21E0  
                                l2572 217E                                  l2564 2148  
                                l2556 20F6                                  l2628 2524  
                                l2644 2958                                  l2636 2916  
                                l2740 1416                                  l2732 13C0  
                                l2724 1366                                  l2548 3038  
                                l2820 1792                                  l2812 1734  
                                l2804 16C8                                  l2900 111A  
                                l3516 2B6E                                  l3508 2B04  
                                l3196 0EC0                                  l3188 0E86  
                                l3380 267A                                  l3364 0C66  
                                l3372 0C8C                                  l3348 0BBA  
                                l3356 0C02                                  l3292 0986  
                                l3284 095C                                  l3276 0916  
                                l3268 08E6                                  l3460 1E3A  
                                l3452 1E12                                  l3444 1D98  
                                l3620 1C3A                                  l3604 1BC4  
                                l3436 261A                                  l3540 1A78  
                                l3532 19F4                                  l3524 191A  
                                l2718 281A                                  l2590 222A  
                                l2582 2200                                  l2574 2192  
                                l2566 214C                                  l2558 2116  
                                l2654 2F44                                  l2646 295C  
                                l2638 2924                                  l2750 14B6  
                                l2742 141C                                  l2734 13DA  
                                l2726 138E                                  l2662 2FC2  
                                l2670 2D10                                  l2814 1746  
                                l2822 17A6                                  l2806 16E4  
                                l2830 1820                                  l2910 11E2  
                                l2902 113E                                  l3518 2B7A  
                                l3198 0EC6                                  l3390 26E8  
                                l3382 268A                                  l3374 0C90  
                                l3366 0C76                                  l3358 0C1C  
                                l3294 099C                                  l3278 0926  
                                l3470 1EC2                                  l3462 1E6C  
                                l3446 1DA8                                  l3630 1C84  
                                l3622 1C4E                                  l3614 1C02  
                                l3606 1BD8                                  l3438 262A  
                                l3550 1AB4                                  l3542 1A8A  
                                l3534 1A10                                  l3526 1972  
                                l2592 224A                                  l2584 2202  
                                l2576 21A0                                  l2568 2158  
                                l2656 2F5E                                  l2648 298A  
                                l2760 155E                                  l2752 14BC  
                                l2744 1424                                  l2736 13F6  
                                l2728 13AE                                  l2672 2D22  
                                l2840 18AE                                  l2832 183C  
                                l2824 17B6                                  l2808 16F4  
                                l2912 1206                                  l2904 1186  
                                l3392 26F6                                  l3384 26B8  
                                l3368 0C84                                  l3296 09A8  
                                l3288 0970                                  l3480 1F18  
                                l3472 1ED0                                  l3464 1E6E  
                                l3456 1E26                                  l3448 1DB6  
                                l3704 20B0                                  l3640 1CB2  
                                l3624 1C5C                                  l3616 1C14  
                                l3608 1BEA                                  l3560 1AFA  
                                l3552 1AB8                                  l3536 1A42  
                                l3528 19A6                                  l3720 2F84  
                                l2690 2E1A                                  l3490 313A  
                                l2850 31B2                                  l2586 2214  
                                l2578 21B2                                  l2770 15C4  
                                l2762 1578                                  l2754 14C2  
                                l2746 142E                                  l2738 1408  
                                l2658 3070                                  l2666 2CDA  
                                l2842 18B4                                  l2834 185A  
                                l2826 17BC                                  l2818 1780  
                                l2914 121C                                  l2922 12A2  
                                l3394 2746                                  l3386 26C8  
                                l3378 264C                                  l3298 09C0  
                                l3482 1F28                                  l3474 1EEE  
                                l3466 1E7A                                  l3458 1E2E  
                                l3706 20C2                                  l3650 1D0C  
                                l3642 1CD4                                  l3626 1C5E  
                                l3618 1C18                                  l3570 1B32  
                                l3562 1B08                                  l3554 1AD4  
                                l3538 1A74                                  l3730 2F98  
                                l3722 2F88                                  l2684 2DFC  
                                l2676 2DE8                                  l3492 3142  
                                l2860 31BE                                  l2852 31B6  
                                l2692 3256                                  l2588 221A  
                                l2596 23E2                                  l2772 15CA  
                                l2780 1600                                  l2764 1592  
                                l2748 1434                                  l2756 1526  
                                l2844 18C4                                  l2836 1874  
                                l2828 17C2                                  l2940 1332  
                                l2924 12C6                                  l2932 12F4  
                                l2916 122A                                  l2908 11BE  
                                l3396 274C                                  l3388 26D6  
                                l3484 1F36                                  l3476 1EF0  
                                l3468 1EB6                                  l3708 20C6  
                                l3660 1D48                                  l3652 1D1E  
                                l3644 1CE8                                  l3636 1C9C  
                                l3628 1C72                                  l3580 1B84  
                                l3572 1B44                                  l3564 1B1A  
                                l3556 1AE6                                  l3548 1AA2  
                                l3740 2FA2                                  l3732 2F9A  
                                l3724 2F8C                                  l2686 2E00  
                                l2678 2DF4                                  l2950 31D4  
                                l3494 314E                                  l2854 31B8  
                                l2862 322E                                  l2870 3198  
                                l2694 2750                                  l2598 23E6  
                                l2774 15DC                                  l2758 1540  
                                l2766 15A2                                  l2846 18DA  
                                l2838 188E                                  l2790 1656  
                                l2934 1302                                  l2926 12D4  
                                l2918 1266                                  l3486 1F38  
                                l3478 1EF4                                  l3670 1F50  
                                l3662 1D4C                                  l3646 1CF6  
                                l3638 1CAE                                  l3590 1B9A  
                                l3582 1B8A                                  l3574 1B48  
                                l3558 1AF4                                  l3750 2FB2  
                                l3742 2FA4                                  l3734 2F9C  
                                l3726 2F90                                  ?_pad 0011  
                                l2688 2E16                                  l2952 31D6  
                                l3496 3154                                  l2856 31BA  
                                l2960 2D3C                                  l2864 321A  
                                l2872 31A6                                  l2696 2764  
                                l2776 15E8                                  l2768 15B4  
                                l2792 1680                                  l2784 162A  
                                l2928 12E8                                  l3680 2024  
                                l3672 1FCC                                  l3664 1D6E  
                                l3648 1CF8                                  l3592 1B9C  
                                l3584 1B92                                  l3576 1B64  
                                l3752 2FB6                                  l3744 2FA6  
                                l3736 2F9E                                  l3728 2F94  
                                l2954 31D8                                  l2946 31CE  
                                l3498 315A                                  l2858 31BC  
                                l2962 2D60                                  l2970 3024  
                                l2866 3190                                  l2698 2770  
                                l2778 15F0                                  l2794 1688  
                                l2786 163A                                  l2890 1084  
                                l2938 130E                                  l2882 103C  
                                l3690 2052                                  l3674 1FFE  
                                l3666 1D82                                  l3658 1D36  
                                l3594 1B9E                                  l3586 1B96  
                                l3578 1B76                                  l3746 2FAA  
                                l3738 2FA0                                  l2956 31DA  
                                l2948 31D2                                  l2964 2D64  
                                l2972 302C                                  l2868 3194  
                                l2796 16A8                                  l2788 163C  
                                l2892 10A8                                  l2884 1060  
                                l3676 2010                                  l3692 2072  
                                l3668 1F4A                                  l3596 1BA0  
                                l3588 1B98                                  l3748 2FAE  
                                l2958 2D38                                  l2974 3034  
                                l2966 3000                                  l2878 31AC  
                                l2990 3132                                  l2982 3104  
                                l2798 16B0                                  l2894 10DA  
                                l2886 106E                                  l3694 2084  
                                l3686 203C                                  l3678 2012  
                                l3598 1BA2                                  l2968 3014  
                                l2992 3138                                  l2888 1080  
                                l3696 2086                                  l3688 204E  
                                l2986 310E                                  l2978 30E0  
                                l2898 10F6                                  l3698 2098  
                                l2998 2F04                                  _ADON 007E10  
                                STR_1 0873                                  STR_2 0831  
                                STR_3 082D                                  STR_4 084A  
                                STR_5 0851                                  STR_6 086D  
                                STR_7 086D                                  STR_8 0835  
                                STR_9 0858                                  u2100 284C  
                                u2101 2848                                  u2110 2874  
                                u2111 2870                                  u3000 312E  
                                u2120 28AA                                  u2200 2176  
                                u3001 312A                                  u2121 28A6  
                                u2201 2172                                  u2210 21A0  
                                u2130 2F02                                  u3010 2F42  
                                u2211 219C                                  u2131 2EFE  
                                u3011 2F3E                                  u3100 2B9A  
                                u2220 21E0                                  u2140 30D0  
                                u2300 2902                                  u3020 2CD0  
                                u3101 2B96                                  u2221 21DC  
                                u2141 30CC                                  u2301 28FE  
                                u3021 2CCC                                  u3110 2BBA  
                                u2230 222A                                  u2310 2924  
                                u2150 3068                                  u3030 29E2  
                                u3111 2BB6                                  u2231 2226  
                                u2311 2920                                  u2151 3062  
                                u3031 29DA                                  u3120 2BDA  
                                u2240 23F4                                  u2320 297A  
                                u2160 306A                                  u2400 2D0C  
                                u3200 2380                                  _LATD 000F8C  
                                u3121 2BD6                                  u2241 23F0  
                                u2321 2976                                  u4001 1C7C  
                                u3201 237C                                  u3130 2BFA  
                                u2090 283A                                  u2170 20F6  
                                u2250 2426                                  u2330 298A  
                                u2410 2D22                                  u4010 1C9C  
                                u3210 23E0                                  u3131 2BF6  
                                u2091 2836                                  u2171 20F2  
                                u2251 2422                                  u2331 2986  
                                u2411 2D1E                                  u4011 1C98  
                                u3211 23DC                                  u2420 2E16  
                                u2180 2128                                  u2260 2464  
                                u2340 2F5E                                  u2500 1376  
                                u3060 2A0A                                  u3300 0E3A  
                                u3220 0CBC                                  u4100 206E  
                                u4020 1CCE                                  u3140 2E44  
                                u2421 2E12                                  u2181 2124  
                                u2261 2460                                  u2341 2F5A  
                                u2501 1370                                  u3061 2A02  
                                u3301 0E36                                  u3221 0CB8  
                                u4101 206A                                  u4021 1CCA  
                                u3141 2E40                                  u2430 2E30  
                                u2270 248E                                  u2510 1378  
                                u2350 30A0                                  u3054 29F2  
                                u3310 0E5C                                  u3230 0CCE  
                                u4030 1CF6                                  u3150 2E78  
                                u2431 2E2C                                  u2191 2152  
                                u2271 248A                                  u2351 309A  
                                u3055 29EE                                  u3311 0E58  
                                u3231 0CCA                                  u4111 2090  
                                u4031 1CF2                                  u3151 2E74  
                                u3160 3252                                  u2440 3264  
                                u2280 24BC                                  u2600 1592  
                                u2520 138E                                  u2360 30A2  
                                u3048 29E4                                  u3400 0F68  
                                u3320 0E86                                  u3240 0CDE  
                                u4120 20B0                                  u3161 324E  
                                u2441 3260                                  u2281 24B8  
                                u2601 158E                                  u2521 138A  
                                u3401 0F64                                  u3321 0E82  
                                u3241 0CDA                                  u4121 20AC  
                                u4041 1D16                                  u2450 2764  
                                u2290 2504                                  u2610 15A2  
                                u2530 13BE                                  u2370 2FF6  
                                u3090 2A34                                  u3410 0F82  
                                u3330 0EAA                                  u3250 0D22  
                                u4130 20E2                                  u4050 1D36  
                                u3170 2286                                  u2451 2760  
                                u2291 2500                                  u2611 159E  
                                u2531 13BA                                  u2371 2FF0  
                                u3091 2A30                                  u3411 0F7E  
                                u3331 0EA6                                  u3251 0D1E  
                                u4131 20DE                                  u4051 1D32  
                                u3171 2282                                  u2460 278A  
                                u2620 15B4                                  u2540 13DA  
                                u2380 2FF8                                  u2700 1730  
                                u3084 2A1A                                  u3420 0FCA  
                                u3340 0EC0                                  u3260 0D34  
                                u3500 0916                                  u4060 1D68  
                                u3180 22C8                                  u2461 2786  
                                u2621 15B0                                  u2541 13D6  
                                u3085 2A16                                  u3421 0FC6  
                                u3341 0EBC                                  u3261 0D30  
                                u3501 0912                                  u4061 1D64  
                                u3181 22C4                                  u2470 27AA  
                                u2630 15C4                                  u2550 1408  
                                u2390 2D0A                                  u2710 1746  
                                u3078 2A0C                                  u3430 0FFA  
                                u3350 0EDE                                  u3270 0D44  
                                u3510 094C                                  u4070 1FFE  
                                u3190 233A                                  u2471 27A6  
                                u2631 15C0                                  u2551 1404  
                                u2391 2D04                                  u2711 1742  
                                u3431 0FF6                                  u3351 0EDA  
                                u3271 0D40                                  u3511 0948  
                                u4071 1FFA                                  u3191 2336  
                                u2480 27F8                                  u2640 15DC  
                                u2560 1416                                  u2800 189E  
                                u2720 177A                                  u3440 1028  
                                u3360 0EFE                                  u3280 0D84  
                                u3600 0BD4                                  u3520 095C  
                                u2481 27F4                                  u2641 15D8  
                                u2561 1412                                  u2801 189A  
                                u2721 1774                                  u3441 1024  
                                u3361 0EFA                                  u3281 0D80  
                                u3601 0BD0                                  u3521 0958  
                                u4081 201C                                  u2490 2808  
                                u2570 1540                                  u2810 18AE  
                                u2730 177C                                  u2650 163A  
                                u3370 0F10                                  u3290 0DC4  
                                u3610 0C1C                                  u3530 0AD6  
                                u3450 0892                                  u4090 203C  
                                u2491 2804                                  u2571 153C  
                                u2811 18AA                                  u2651 1636  
                                u3371 0F0C                                  u3291 0DC0  
                                u3611 0C18                                  u3451 088E  
                                u4091 2038                                  u2820 3240  
                                u2580 155E                                  u2740 1792  
                                u2660 1656                                  u2900 1206  
                                u3380 0F3E                                  u3620 0C4A  
                                u3540 0B30                                  u3460 08A4  
                                u3700 2590                                  u2821 323C  
                                u2581 155A                                  u2741 178E  
                                u2661 1652                                  u2901 1202  
                                u3381 0F3A                                  u3621 0C46  
                                u3541 0B2C                                  u3461 08A0  
                                u2830 322C                                  u2590 1578  
                                u2750 17FA                                  u2670 1680  
                                u2910 12C6                                  u3390 0F54  
                                u3630 0C84                                  u3550 0B50  
                                u3470 08B4                                  u3710 25BE  
                                u2831 3228                                  u2591 1574  
                                u2671 167C                                  u2911 12C2  
                                u3391 0F50                                  u3631 0C80  
                                u3551 0B4C                                  u3535 0ACC  
                                u3471 08B0                                  u3711 25BA  
                                u2920 2D5C                                  u2840 31A6  
                                u2760 183C                                  u2680 16E4  
                                u3640 267A                                  u3560 0B62  
                                u3480 08F4                                  u3800 1EB2  
                                u3720 25D2                                  u2841 31A2  
                                u2761 1838                                  u2681 16E0  
                                u3641 2676                                  u3561 0B5E  
                                u3481 08F0                                  u3801 1EAE  
                                u3721 25CE                                  u3705 2586  
                                u2930 2D84                                  u2770 185A  
                                u2690 172E                                  u2850 1060  
                                u3650 26B8                                  u3570 0B90  
                                u3490 0906                                  u3810 1ED0  
                                u3730 25FA                                  u2771 1856  
                                u2755 17E8                                  u2691 1728  
                                u2851 105C                                  u3651 26B4  
                                u3571 0B8C                                  u3491 0902  
                                u3811 1ECC                                  u3731 25F6  
                                u2940 2D94                                  u2780 1874  
                                u2860 10A8                                  u3660 26D6  
                                u3580 0BA6                                  u3820 1EE0  
                                u3740 261A                                  u3900 1AD4  
                                u2941 2D90                                  u2781 1870  
                                u2861 10A4                                  u3661 26D2  
                                u3581 0BA2                                  u3821 1EDC  
                                u3741 2616                                  u3901 1AD0  
                                u2950 3010                                  u2790 188E  
                                u2870 111A                                  u3670 26F6  
                                u3590 0BBA                                  u3830 1EEE  
                                u3750 262A                                  u2927 2D52  
                                u2951 300C                                  u2791 188A  
                                u2871 1116                                  u3671 26F2  
                                u3591 0BB6                                  u3831 1EEA  
                                u3751 2626                                  u3911 1B12  
                                u2960 3024                                  u2880 113E  
                                u3680 2746                                  u3840 1F28  
                                u3760 1DA8                                  u3920 1B32  
                                u2937 2D7A                                  u2961 3020  
                                u2881 113A                                  u3681 2742  
                                u3841 1F24                                  u3761 1DA4  
                                u3921 1B2E                                  u2970 30F0  
                                u2890 11E2                                  u3850 1F36  
                                u3770 1DB6                                  u3690 255C  
                                u3930 1B64                                  u2971 30EC  
                                u2891 11DE                                  u3851 1F32  
                                u3771 1DB2                                  u3691 2558  
                                u3931 1B60                                  u2980 3100  
                                u3780 1E12                                  u3860 1A42  
                                _RCEN 007E2B                                  u2981 30FC  
                                u3781 1E0E                                  u3941 1BAC  
                                u3861 1A3E                                  u2990 311E  
                                u3790 1E68                                  u3950 1BC2  
                                u3870 1A74                                  u2991 311A  
                                u3791 1E64                                  u3951 1BBE  
                                u3871 1A70                                  u3961 1BE2  
                                u3881 1A82                                  u3970 1C02  
                                u3890 1AA2                                  u3971 1BFE  
                                u3891 1A9E                                  u3980 1C34  
                                u3981 1C30                                  u3990 1C5C  
                                u3991 1C58                                  _RSEN 007E29  
                                abs@a 0013                                  _dbuf 019B  
                                _ctoa 2750                                  _main 2F84  
                                _dtoa 1346                       ?_RTC_Read_Clock 0001  
                                _hour 00BE                      __end_of_I2C_Nack 322E  
                                _mins 00CE                                  _secs 00D8  
                                _prec 00BA                      __end_of_I2C_Init 3202  
                    __end_of_I2C_Read 3038                                  _nout 00B6  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  _xtoa 162A  
                    __end_of_I2C_Stop 3256                      __end_of_ADC_Init 321A  
                    __end_of_ADC_Read 2A54                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                     __end_of_MSdelay 2E32                       ___fldiv@new_exp 0041  
                       _LCD_String_xy 2B88                          ___param_bank 000000  
                               ??_RTC 0060      RTC_Read_Clock@read_clock_address 0004  
                               ??_abs 0015                                 ??_pad 0017  
                    __end_of_LCD_Char 31CC                      __end_of_LCD_Init 3168  
                       ___fltol@sign1 0009                       __end_of___aodiv 226C  
                               ?_ctoa 000A                                 ?_main 0001  
                               ?_dtoa 001C                       __end_of___aomod 2546  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___fldiv 103C                                 STR_10 083C  
                               STR_11 085F                                 STR_12 0843  
                               STR_13 0866                                 STR_14 0817  
                               STR_15 0801                       __end_of___flmul 0CA2  
                     __end_of___fltol 264C                                 ?_xtoa 001C  
                               _LATB2 007C52                                 _LATC0 007C58  
                               _LATB3 007C53                                 _LATC1 007C59  
                               _LATC2 007C5A                                 _LATE1 007C69  
                               _LATE2 007C6A                          vfpfcnvrt@fmt 0045  
                        vfpfcnvrt@llu 0055                                 _SPBRG 000FAF  
                               _TRISA 000F92                                 _TRISD 000F95  
                               _SSPIE 007CEB                                 _TRISE 000F96  
                               _SSPIF 007CF3                                 _TXREG 000FAD  
                               _flags 00BC                                 _fputc 2828  
                     __end_of_isalpha 2FFE                                 _fputs 2EC0  
                               _hours 00C4                        SensorLuz@F3735 017C  
                      SensorLuz@F3738 018C                     __end_of_I2C_Ready 3268  
                               pad@fp 0011                                 _width 00B8  
                               ctoa@c 000C                                 _putch 3278  
                               ctoa@l 000E                                 ctoa@w 0010  
                               dtoa@d 001E                                 dtoa@i 003E  
                               dtoa@n 0036                                 dtoa@p 0030  
                               dtoa@s 0034                                 dtoa@w 0032  
                     __end_of_islower 3070                     __end_of_I2C_Start 310C  
                   __end_of_I2C_Write 31B0                       __end_of_isupper 30A8  
                               tablat 000FF5                                 plusw1 000FE3  
                               plusw2 000FDB                                 status 000FD8  
                 __size_of_LCD_String 005E                       __end_of_sprintf 2DE8  
                               xtoa@c 0041                                 xtoa@d 001E  
                               xtoa@i 003F                                 xtoa@n 0037  
                               xtoa@p 0033                                 xtoa@w 0035  
                               xtoa@x 0026                     SensorMovimiento@i 00B0  
                     __end_of_toupper 2D38                        SensorLuz@i_950 0085  
                      ?_LCD_String_xy 000A                          _toupper$1604 000D  
             __end_of_LCD_Custom_Char 2E7A                       __initialization 2C16  
                        __end_of_ctoa 2828                          __end_of_main 2FC2  
                        __end_of_dtoa 162A                          __end_of_xtoa 1904  
                           ??_I2C_Ack 0001                   SensorLuz@buffer_TX3 0060  
                 SensorLuz@buffer_TX4 0070                                ??_ctoa 000D  
                              ??_main 0060                                ??_dtoa 0026  
                              ??_xtoa 0027                         __activetblptr 000002  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                                ?_fputc 0001  
                              ?_fputs 000A                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                ?_putch 0001  
                    LCD_String_xy@pos 000A                      LCD_String_xy@row 000D  
                    LCD_String_xy@str 000B                             ??_MSdelay 0003  
                              _OSCCON 000FD3                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                      __end_of___xxtofl 1F4A  
                          SensorLuz@i 0083                      _SensorMovimiento 1B92  
                        vfprintf@cfmt 005E                                ___flge 264C  
                           ??___aodiv 0011                             ??___aomod 0011  
                           ??___fldiv 0038                             ??___flmul 001F  
                           ??___fltol 0005                       ADC_Read@channel 0001  
                              _memset 226C                       ADC_Read@digital 0007  
                              clear_0 2C5C                                clear_1 2C68  
                  _I2C_Repeated_Start 310C                                pad@buf 0013  
                              ctoa@fp 000A                  __size_of_LCD_Command 001C  
                              _strcat 3168                                dtoa@fp 001C  
                              _strcpy 2F04                                _strlen 30A8  
                  __size_of_SensorLuz 019A                                fputc@c 0001  
                              fputs@c 000E                      LCD_Custom_Char@i 000B  
                              fputs@i 000F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ?_I2C_Init 0001                             ?_I2C_Read 0001  
                           ?_I2C_Stop 0001                             ?_ADC_Init 0001  
                           ?_ADC_Read 0001                             ??_islower 0003  
                        __mediumconst 0000                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 2CDA  
                           ??_sprintf 0060                                xtoa@fp 001C  
                           ??_toupper 0009                            ___flge@ff1 0001  
                          ___flge@ff2 0005                          ___xxtofl@arg 0013  
                        ___xxtofl@exp 0012                          ___xxtofl@val 0009  
                           ?_LCD_Char 0001                            __accesstop 0060  
             __end_of__initialization 2C6E                             ?_LCD_Init 0001  
                     ??_LCD_String_xy 000D                         ___rparam_used 000001  
                          ___fltol@f1 0001                  ??_I2C_Repeated_Start 0002  
                    ?_LCD_Custom_Char 0008                        __pcstackCOMRAM 0001  
                        __pidataBANK0 3268                          __pidataBANK1 2A54  
                  SensorTemperatura@i 00AE                         __end_of_fputc 28F2  
                       __end_of_fputs 2F04                         __end_of_putch 327A  
                        ??_LCD_String 000A                            ??_I2C_Nack 0001  
                          ??_I2C_Init 0001                            ??_I2C_Read 0001  
                          ??_I2C_Stop 0001                            ??_ADC_Init 0001  
                          ??_ADC_Read 0003          SensorTemperatura@Temperature 00A4  
                    ??_RTC_Read_Clock 0003                               ??_fputc 0005  
                             ??_fputs 000E                               ??_putch 0001  
                          __pbssBANK0 00B6                            __pbssBANK1 019B  
                          ??_LCD_Char 0007                            _character1 00EA  
                          _character2 00E2                            ??_LCD_Init 0008  
                   __end_of_SensorLuz 20E4                    __end_of_LCD_String 2D96  
                        I2C_Read@flag 0001                               ?___flge 0001  
                      I2C_Read@buffer 0002                SensorTemperatura@F3715 0100  
              SensorTemperatura@F3718 0117                               _I2C_Ack 322E  
                             _ACKSTAT 007E2E                               ?_memset 0001  
                             ?_strcat 000D                               ?_strcpy 0005  
                             ?_strlen 0001                SensorTemperatura@i_901 00B0  
                           ?___xxtofl 0009                    __size_of_vfpfcnvrt 030A  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                               _MSdelay 2DE8  
                           _I2C_Ready 3256                             _I2C_Start 30DE  
                           _I2C_Write 318E                         LCD_String@msg 0008  
                             __Hparam 0000                               __Lparam 0000  
                     __size_of___flge 0104                               ___aodiv 20E4  
                             ___aomod 23E2                               ___fldiv 0CA2  
                             ___flmul 0878                     _SensorTemperatura 1904  
                             ___fltol 2546                             ?_vfprintf 0060  
                        __psmallconst 0800                               __pcinit 2C16  
                  ?_SensorTemperatura 0001                       __size_of_memset 0176  
                             __ramtop 0800                               __ptext0 2F84  
                             __ptext1 1904                               __ptext2 226C  
                             __ptext3 2546                               __ptext4 2E32  
                             __ptext5 1B92                               __ptext6 3168  
                             __ptext7 2F04                               __ptext8 1F4A  
                             __ptext9 1D96                       __size_of_strcat 0026  
                     __size_of_strcpy 0040                       __size_of_strlen 0036  
                        __size_of_RTC 0098                          __size_of_abs 0040  
                        __size_of_pad 00C6                               _isalpha 2FC2  
                          ??___xxtofl 000D                               _islower 3038  
                 ??_SensorTemperatura 0060                               _isupper 3070  
            __end_of_SensorMovimiento 1D96                               _sprintf 2D96  
            SensorTemperatura@celsius 00B2                               _toupper 2CDA  
                end_of_initialization 2C6E                               fputc@fp 0003  
                             memset@c 0003                               memset@k 0009  
                             memset@n 0005                               memset@s 000B  
                      LCD_Command@cmd 0007                         __Lmediumconst 0000  
                             fputs@fp 000C                            ?_I2C_Ready 0001  
                          ?_I2C_Start 0001                            ?_I2C_Write 0001  
           __end_of_SensorTemperatura 1B92                     __end_of_vfpfcnvrt 1346  
                           _RCSTAbits 000FAB                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 005E                               strcpy@d 000B  
                             strlen@a 0003                               strcpy@s 0009  
                             strlen@s 0001                             _PORTAbits 000F80  
                           _PORTEbits 000F84                   SensorMovimiento@buf 009C  
                       ___xxtofl@sign 0011                             _TRISAbits 000F92  
                           _TRISBbits 000F93                             _TRISCbits 000F94  
                   __size_of_I2C_Nack 0014                     __size_of_I2C_Init 001A  
                   __size_of_I2C_Read 003A                           ___fldiv@grs 0043  
                         ___fldiv@rem 003C                     __size_of_I2C_Stop 0014  
                   __size_of_ADC_Init 0018                     __size_of_ADC_Read 009C  
         SensorTemperatura@buffer_TX1 0078           SensorTemperatura@buffer_TX2 008F  
                         ___flmul@grs 0024                             _TXSTAbits 000FAC  
                   __size_of_LCD_Char 001C                     __size_of_LCD_Init 002E  
                       ??_LCD_Command 0007                        __end_of___flge 2750  
                   LCD_Char@char_data 0007                           vfpfcnvrt@ap 0047  
                         vfpfcnvrt@fp 0043                           vfpfcnvrt@ll 004D  
                         _BAUDCONbits 000FB8                        __end_of_memset 23E2  
                      __end_of_strcat 318E                        __end_of_strcpy 2F44  
                      __end_of_strlen 30DE                   start_initialization 2C16  
                         __end_of_RTC 2B88                           __end_of_abs 2F84  
                         __end_of_pad 29B8  I2C_Repeated_Start@slave_read_address 0002  
                         ??_I2C_Ready 0001                           ??_I2C_Start 0002  
                         ??_I2C_Write 0001                 __end_of_LCD_String_xy 2C16  
          __size_of_SensorTemperatura 028E                           vfprintf@fmt 0062  
         __size_of_I2C_Repeated_Start 002E                              ??___flge 0009  
                           _SensorLuz 1F4A                           __pdataBANK0 00E2  
                         __pdataBANK1 0100                              ?_I2C_Ack 0001  
                            ??_memset 0007                            memset@dest 0001  
                            ??_strcat 0011                              ??_strcpy 0009  
                            ??_strlen 0003              __size_of_LCD_Custom_Char 0048  
                           ___fldiv@a 0034                             ___fldiv@b 0030  
                 __end_of_LCD_Command 31E8                             ___flmul@a 001B  
                           ___flmul@b 0017                         __pcstackBANK0 0060  
                    ___aodiv@dividend 0001                     __size_of___xxtofl 01B4  
                            ?_MSdelay 0001                             _dtoa$1493 002E  
                          ?_SensorLuz 0001                              ?___aodiv 0001  
                            ?___aomod 0001                              ?___fldiv 0030  
                    ___aodiv@quotient 0013                              ?___flmul 0017  
                            ?___fltol 0001                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 321A  
                            ?_isalpha 0001                              _I2C_Init 31E8  
                            _I2C_Read 2FFE                              _I2C_Stop 3242  
                            _ADC_Init 3202                              _ADC_Read 29B8  
                            ?_islower 0001                              ?_isupper 0001  
                   ?_SensorMovimiento 0001                              ?_sprintf 0066  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                  ??_SensorMovimiento 0011                              MSdelay@i 0003  
                            MSdelay@j 0005                              _LCD_Char 31B0  
                            _LCD_Init 313A               __size_of_RTC_Read_Clock 0046  
                         _LCD_Command 31CC                             _vfpfcnvrt 103C  
                           _xtoa$1504 002F                             _xtoa$1505 0031  
                    __size_of_I2C_Ack 0014                            _ADCON0bits 000FC2  
                   ??_LCD_Custom_Char 000A                            vfpfcnvrt@c 005D  
                           copy_data0 2C2A                             copy_data1 2C4A  
        I2C_Start@slave_write_address 0002                          SensorLuz@val 007F  
                    __size_of_MSdelay 004A                              __Hrparam 0000  
          SensorMovimiento@buffer_TX5 0060            SensorMovimiento@buffer_TX6 0074  
          SensorMovimiento@buffer_TX7 0088                            vfprintf@ap 0064  
                            __Lrparam 0000                            vfprintf@fp 0060  
                         ??_SensorLuz 0049                         I2C_Write@data 0001  
                    __size_of___aodiv 0188                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___flmul 042A  
                    __size_of___fltol 0106                            ?_vfpfcnvrt 0043  
                     ___aodiv@divisor 0009                       ___aodiv@counter 0011  
                          sprintf@fmt 0068                              ___xxtofl 1D96  
                          strcat@dest 000D                      __size_of_isalpha 003C  
                    __size_of_islower 0038                              __ptext10 0878  
                            __ptext11 264C                              __ptext20 3038  
                            __ptext12 0CA2                              __ptext21 3070  
                            __ptext13 29B8                              __ptext30 2750  
                            __ptext22 2FC2                              __ptext14 2AF0  
                            __ptext31 2828                              __ptext23 1346  
                            __ptext15 2D96                              __ptext40 322E  
                            __ptext32 3278                              __ptext24 28F2  
                            __ptext16 2C78                              __ptext41 2B88  
                            __ptext33 2E7A                              __ptext25 30A8  
                            __ptext17 103C                              __ptext42 2D38  
                            __ptext34 30DE                              __ptext26 2EC0  
                            __ptext18 162A                              __ptext43 31B0  
                            __ptext35 310C                              __ptext27 2F44  
                            __ptext19 2CDA                              __ptext44 3242  
                            __ptext36 318E                              __ptext28 23E2  
                            __ptext45 313A                              __ptext37 2FFE  
                            __ptext29 20E4                              __ptext46 31CC  
                            __ptext38 3256                              __ptext47 2DE8  
                            __ptext39 321A                              __ptext48 31E8  
                            __ptext49 3202                      __size_of_isupper 0038  
                    __size_of_sprintf 0052                            strcpy@dest 0005  
                    __size_of_toupper 005E                         __size_of_ctoa 00D8  
                       __size_of_main 003E                         __size_of_dtoa 02E4  
                       __size_of_xtoa 02DA                            MSdelay@val 0001  
                            _vfprintf 2C78                            _LCD_String 2D38  
                    ___aomod@dividend 0001                              isalpha@c 0001  
                  LCD_Custom_Char@loc 000A                    LCD_Custom_Char@msg 0008  
                           sprintf@ap 0070                             strcat@src 000F  
                            islower@c 0001                             strcpy@src 0007  
          __end_of_I2C_Repeated_Start 313A                              isupper@c 0001  
                      _RTC_Read_Clock 2E7A                 SensorMovimiento@F3722 0168  
               SensorMovimiento@F3730 012C                 SensorMovimiento@F3724 0154  
               SensorMovimiento@F3727 0140                       ___aomod@divisor 0009  
                         ??_vfpfcnvrt 0049                       ___aomod@counter 0011  
               SensorMovimiento@i_933 00B4                 SensorMovimiento@i_928 00B2  
                            sprintf@f 0072                              sprintf@s 0066  
                            toupper@c 0007                __size_of_LCD_String_xy 008E  
                         _SSPCON2bits 000FC5                          ___aodiv@sign 0012  
              __end_of_RTC_Read_Clock 2EC0                          ___aomod@sign 0012  
           __size_of_SensorMovimiento 0204  
