

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Dec 15 10:21:05 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4550 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataBANK0
   106  003288                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _character2
   110  003288  00                 	db	0
   111  003289  04                 	db	4
   112  00328A  04                 	db	4
   113  00328B  04                 	db	4
   114  00328C  1F                 	db	31
   115  00328D  0E                 	db	14
   116  00328E  04                 	db	4
   117  00328F  00                 	db	0
   118                           
   119                           ;initializer for _character1
   120  003290  00                 	db	0
   121  003291  00                 	db	0
   122  003292  04                 	db	4
   123  003293  0E                 	db	14
   124  003294  1F                 	db	31
   125  003295  04                 	db	4
   126  003296  04                 	db	4
   127  003297  04                 	db	4
   128                           
   129                           	psect	idataBANK1
   130  002A74                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for SensorTemperatura@F3714
   134  002A74  43                 	db	67
   135  002A75  61                 	db	97
   136  002A76  6C                 	db	108
   137  002A77  65                 	db	101
   138  002A78  66                 	db	102
   139  002A79  61                 	db	97
   140  002A7A  63                 	db	99
   141  002A7B  63                 	db	99
   142  002A7C  69                 	db	105
   143  002A7D  6F                 	db	111
   144  002A7E  6E                 	db	110
   145  002A7F  20                 	db	32
   146  002A80  65                 	db	101
   147  002A81  6E                 	db	110
   148  002A82  63                 	db	99
   149  002A83  65                 	db	101
   150  002A84  6E                 	db	110
   151  002A85  64                 	db	100
   152  002A86  69                 	db	105
   153  002A87  64                 	db	100
   154  002A88  61                 	db	97
   155  002A89  0D                 	db	13
   156  002A8A  00                 	db	0
   157                           
   158                           ;initializer for SensorTemperatura@F3717
   159  002A8B  43                 	db	67
   160  002A8C  61                 	db	97
   161  002A8D  6C                 	db	108
   162  002A8E  65                 	db	101
   163  002A8F  66                 	db	102
   164  002A90  61                 	db	97
   165  002A91  63                 	db	99
   166  002A92  63                 	db	99
   167  002A93  69                 	db	105
   168  002A94  6F                 	db	111
   169  002A95  6E                 	db	110
   170  002A96  20                 	db	32
   171  002A97  61                 	db	97
   172  002A98  70                 	db	112
   173  002A99  61                 	db	97
   174  002A9A  67                 	db	103
   175  002A9B  61                 	db	97
   176  002A9C  64                 	db	100
   177  002A9D  61                 	db	97
   178  002A9E  0D                 	db	13
   179  002A9F  00                 	db	0
   180                           
   181                           ;initializer for SensorMovimiento@F3737
   182  002AA0  50                 	db	80
   183  002AA1  72                 	db	114
   184  002AA2  65                 	db	101
   185  002AA3  73                 	db	115
   186  002AA4  65                 	db	101
   187  002AA5  6E                 	db	110
   188  002AA6  63                 	db	99
   189  002AA7  69                 	db	105
   190  002AA8  61                 	db	97
   191  002AA9  20                 	db	32
   192  002AAA  65                 	db	101
   193  002AAB  6E                 	db	110
   194  002AAC  20                 	db	32
   195  002AAD  6C                 	db	108
   196  002AAE  61                 	db	97
   197  002AAF  20                 	db	32
   198  002AB0  48                 	db	72
   199  002AB1  33                 	db	51
   200  002AB2  0D                 	db	13
   201  002AB3  00                 	db	0
   202                           
   203                           ;initializer for SensorMovimiento@F3734
   204  002AB4  50                 	db	80
   205  002AB5  72                 	db	114
   206  002AB6  65                 	db	101
   207  002AB7  73                 	db	115
   208  002AB8  65                 	db	101
   209  002AB9  6E                 	db	110
   210  002ABA  63                 	db	99
   211  002ABB  69                 	db	105
   212  002ABC  61                 	db	97
   213  002ABD  20                 	db	32
   214  002ABE  65                 	db	101
   215  002ABF  6E                 	db	110
   216  002AC0  20                 	db	32
   217  002AC1  6C                 	db	108
   218  002AC2  61                 	db	97
   219  002AC3  20                 	db	32
   220  002AC4  48                 	db	72
   221  002AC5  32                 	db	50
   222  002AC6  0D                 	db	13
   223  002AC7  00                 	db	0
   224                           
   225                           ;initializer for SensorMovimiento@F3731
   226  002AC8  50                 	db	80
   227  002AC9  72                 	db	114
   228  002ACA  65                 	db	101
   229  002ACB  73                 	db	115
   230  002ACC  65                 	db	101
   231  002ACD  6E                 	db	110
   232  002ACE  63                 	db	99
   233  002ACF  69                 	db	105
   234  002AD0  61                 	db	97
   235  002AD1  20                 	db	32
   236  002AD2  65                 	db	101
   237  002AD3  6E                 	db	110
   238  002AD4  20                 	db	32
   239  002AD5  6C                 	db	108
   240  002AD6  61                 	db	97
   241  002AD7  20                 	db	32
   242  002AD8  48                 	db	72
   243  002AD9  31                 	db	49
   244  002ADA  0D                 	db	13
   245  002ADB  00                 	db	0
   246                           
   247                           ;initializer for SensorMovimiento@F3729
   248  002ADC  30                 	db	48
   249  002ADD  00                 	db	0
   250  002ADE  00                 	db	0
   251  002ADF  00                 	db	0
   252  002AE0  00                 	db	0
   253  002AE1  00                 	db	0
   254  002AE2  00                 	db	0
   255  002AE3  00                 	db	0
   256  002AE4  00                 	db	0
   257  002AE5  00                 	db	0
   258  002AE6  00                 	db	0
   259  002AE7  00                 	db	0
   260  002AE8  00                 	db	0
   261  002AE9  00                 	db	0
   262  002AEA  00                 	db	0
   263  002AEB  00                 	db	0
   264  002AEC  00                 	db	0
   265  002AED  00                 	db	0
   266  002AEE  00                 	db	0
   267  002AEF  00                 	db	0
   268                           
   269                           ;initializer for SensorLuz@F3722
   270  002AF0  43                 	db	67
   271  002AF1  6F                 	db	111
   272  002AF2  72                 	db	114
   273  002AF3  74                 	db	116
   274  002AF4  69                 	db	105
   275  002AF5  6E                 	db	110
   276  002AF6  61                 	db	97
   277  002AF7  20                 	db	32
   278  002AF8  61                 	db	97
   279  002AF9  72                 	db	114
   280  002AFA  72                 	db	114
   281  002AFB  69                 	db	105
   282  002AFC  62                 	db	98
   283  002AFD  61                 	db	97
   284  002AFE  0D                 	db	13
   285  002AFF  00                 	db	0
   286                           
   287                           ;initializer for SensorLuz@F3725
   288  002B00  43                 	db	67
   289  002B01  6F                 	db	111
   290  002B02  72                 	db	114
   291  002B03  74                 	db	116
   292  002B04  69                 	db	105
   293  002B05  6E                 	db	110
   294  002B06  61                 	db	97
   295  002B07  20                 	db	32
   296  002B08  61                 	db	97
   297  002B09  62                 	db	98
   298  002B0A  61                 	db	97
   299  002B0B  6A                 	db	106
   300  002B0C  6F                 	db	111
   301  002B0D  0D                 	db	13
   302  002B0E  00                 	db	0
   303  0000                     _PORTAbits	set	3968
   304  0000                     _TRISAbits	set	3986
   305  0000                     _PORTEbits	set	3972
   306  0000                     _TXREG	set	4013
   307  0000                     _TRISBbits	set	3987
   308  0000                     _SPBRG	set	4015
   309  0000                     _RCSTAbits	set	4011
   310  0000                     _BAUDCONbits	set	4024
   311  0000                     _TXSTAbits	set	4012
   312  0000                     _TRISCbits	set	3988
   313  0000                     _OSCCON	set	4051
   314  0000                     _SSPCON2bits	set	4037
   315  0000                     _SSPADD	set	4040
   316  0000                     _SSPCON2	set	4037
   317  0000                     _SSPCON1	set	4038
   318  0000                     _SSPSTAT	set	4039
   319  0000                     _SSPBUF	set	4041
   320  0000                     _SSPSTATbits	set	4039
   321  0000                     _LATD	set	3980
   322  0000                     _TRISD	set	3989
   323  0000                     _TRISE	set	3990
   324  0000                     _ADCON0bits	set	4034
   325  0000                     _ADRESL	set	4035
   326  0000                     _ADRESH	set	4036
   327  0000                     _ADCON2	set	4032
   328  0000                     _ADCON1	set	4033
   329  0000                     _ADCON0	set	4034
   330  0000                     _TRISA	set	3986
   331  0000                     _LATC2	set	31834
   332  0000                     _LATC1	set	31833
   333  0000                     _LATC0	set	31832
   334  0000                     _LATB3	set	31827
   335  0000                     _LATB2	set	31826
   336  0000                     _ACKEN	set	32300
   337  0000                     _ACKDT	set	32301
   338  0000                     _PEN	set	32298
   339  0000                     _RSEN	set	32297
   340  0000                     _ACKSTAT	set	32302
   341  0000                     _SSPIF	set	31987
   342  0000                     _SSPIE	set	31979
   343  0000                     _TRISB1	set	31897
   344  0000                     _TRISB0	set	31896
   345  0000                     _RCEN	set	32299
   346  0000                     _LATE2	set	31850
   347  0000                     _LATE1	set	31849
   348  0000                     _GO	set	32273
   349  0000                     _ADON	set	32272
   350                           
   351                           	psect	smallconst
   352  000800                     __psmallconst:
   353                           	callstack 0
   354  000800  00                 	db	0
   355  000801                     STR_6:
   356  000801  43                 	db	67	;'C'
   357  000802  6F                 	db	111	;'o'
   358  000803  72                 	db	114	;'r'
   359  000804  74                 	db	116	;'t'
   360  000805  69                 	db	105	;'i'
   361  000806  6E                 	db	110	;'n'
   362  000807  61                 	db	97	;'a'
   363  000808  20                 	db	32
   364  000809  41                 	db	65	;'A'
   365  00080A  62                 	db	98	;'b'
   366  00080B  61                 	db	97	;'a'
   367  00080C  6A                 	db	106	;'j'
   368  00080D  6F                 	db	111	;'o'
   369  00080E  20                 	db	32
   370  00080F  20                 	db	32
   371  000810  20                 	db	32
   372  000811  20                 	db	32
   373  000812  20                 	db	32
   374  000813  20                 	db	32
   375  000814  20                 	db	32
   376  000815  20                 	db	32
   377  000816  00                 	db	0
   378  000817                     STR_5:
   379  000817  43                 	db	67	;'C'
   380  000818  6F                 	db	111	;'o'
   381  000819  72                 	db	114	;'r'
   382  00081A  74                 	db	116	;'t'
   383  00081B  69                 	db	105	;'i'
   384  00081C  6E                 	db	110	;'n'
   385  00081D  61                 	db	97	;'a'
   386  00081E  20                 	db	32
   387  00081F  41                 	db	65	;'A'
   388  000820  72                 	db	114	;'r'
   389  000821  72                 	db	114	;'r'
   390  000822  69                 	db	105	;'i'
   391  000823  62                 	db	98	;'b'
   392  000824  61                 	db	97	;'a'
   393  000825  20                 	db	32
   394  000826  20                 	db	32
   395  000827  20                 	db	32
   396  000828  20                 	db	32
   397  000829  20                 	db	32
   398  00082A  20                 	db	32
   399  00082B  20                 	db	32
   400  00082C  00                 	db	0
   401  00082D                     STR_15:
   402  00082D  54                 	db	84	;'T'
   403  00082E  69                 	db	105	;'i'
   404  00082F  6D                 	db	109	;'m'
   405  000830  3A                 	db	58	;':'
   406  000831  25                 	db	37
   407  000832  78                 	db	120	;'x'
   408  000833  3A                 	db	58	;':'
   409  000834  00                 	db	0
   410  000835                     STR_7:
   411  000835  31                 	db	49	;'1'
   412  000836  3A                 	db	58	;':'
   413  000837  4F                 	db	79	;'O'
   414  000838  4E                 	db	78	;'N'
   415  000839  20                 	db	32
   416  00083A  20                 	db	32
   417  00083B  00                 	db	0
   418  00083C                     STR_9:
   419  00083C  32                 	db	50	;'2'
   420  00083D  3A                 	db	58	;':'
   421  00083E  4F                 	db	79	;'O'
   422  00083F  4E                 	db	78	;'N'
   423  000840  20                 	db	32
   424  000841  20                 	db	32
   425  000842  00                 	db	0
   426  000843                     STR_11:
   427  000843  33                 	db	51	;'3'
   428  000844  3A                 	db	58	;':'
   429  000845  4F                 	db	79	;'O'
   430  000846  4E                 	db	78	;'N'
   431  000847  20                 	db	32
   432  000848  20                 	db	32
   433  000849  00                 	db	0
   434  00084A                     STR_1:
   435  00084A  54                 	db	84	;'T'
   436  00084B  65                 	db	101	;'e'
   437  00084C  6D                 	db	109	;'m'
   438  00084D  70                 	db	112	;'p'
   439  00084E  3A                 	db	58	;':'
   440  00084F  20                 	db	32
   441  000850  00                 	db	0
   442  000851                     STR_2:
   443  000851  25                 	db	37
   444  000852  64                 	db	100	;'d'
   445  000853  25                 	db	37
   446  000854  63                 	db	99	;'c'
   447  000855  43                 	db	67	;'C'
   448  000856  20                 	db	32
   449  000857  00                 	db	0
   450  000858                     STR_8:
   451  000858  31                 	db	49	;'1'
   452  000859  3A                 	db	58	;':'
   453  00085A  4F                 	db	79	;'O'
   454  00085B  46                 	db	70	;'F'
   455  00085C  46                 	db	70	;'F'
   456  00085D  20                 	db	32
   457  00085E  00                 	db	0
   458  00085F                     STR_10:
   459  00085F  32                 	db	50	;'2'
   460  000860  3A                 	db	58	;':'
   461  000861  4F                 	db	79	;'O'
   462  000862  46                 	db	70	;'F'
   463  000863  46                 	db	70	;'F'
   464  000864  20                 	db	32
   465  000865  00                 	db	0
   466  000866                     STR_12:
   467  000866  33                 	db	51	;'3'
   468  000867  3A                 	db	58	;':'
   469  000868  4F                 	db	79	;'O'
   470  000869  46                 	db	70	;'F'
   471  00086A  46                 	db	70	;'F'
   472  00086B  20                 	db	32
   473  00086C  00                 	db	0
   474  00086D                     STR_3:
   475  00086D  43                 	db	67	;'C'
   476  00086E  61                 	db	97	;'a'
   477  00086F  6C                 	db	108	;'l'
   478  000870  3A                 	db	58	;':'
   479  000871  20                 	db	32
   480  000872  00                 	db	0
   481  000873                     STR_13:
   482  000873  25                 	db	37
   483  000874  78                 	db	120	;'x'
   484  000875  20                 	db	32
   485  000876  00                 	db	0
   486  000877  00                 	db	0	; dummy byte at the end
   487  0000                     
   488                           ; #config settings
   489                           
   490                           	psect	cinit
   491  002C36                     __pcinit:
   492                           	callstack 0
   493  002C36                     start_initialization:
   494                           	callstack 0
   495  002C36                     __initialization:
   496                           	callstack 0
   497                           
   498                           ; Initialize objects allocated to BANK1 (155 bytes)
   499                           ; load TBLPTR registers with __pidataBANK1
   500  002C36  0E74               	movlw	low __pidataBANK1
   501  002C38  6EF6               	movwf	tblptrl,c
   502  002C3A  0E2A               	movlw	high __pidataBANK1
   503  002C3C  6EF7               	movwf	tblptrh,c
   504  002C3E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   505  002C40  6EF8               	movwf	tblptru,c
   506  002C42  EE01  F000         	lfsr	0,__pdataBANK1
   507  002C46  EE10 F09B          	lfsr	1,155
   508  002C4A                     copy_data0:
   509  002C4A  0009               	tblrd		*+
   510  002C4C  CFF5 FFEE          	movff	tablat,postinc0
   511  002C50  50E5               	movf	postdec1,w,c
   512  002C52  50E1               	movf	fsr1l,w,c
   513  002C54  E1FA               	bnz	copy_data0
   514                           
   515                           ; Initialize objects allocated to BANK0 (16 bytes)
   516                           ; load TBLPTR registers with __pidataBANK0
   517  002C56  0E88               	movlw	low __pidataBANK0
   518  002C58  6EF6               	movwf	tblptrl,c
   519  002C5A  0E32               	movlw	high __pidataBANK0
   520  002C5C  6EF7               	movwf	tblptrh,c
   521  002C5E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   522  002C60  6EF8               	movwf	tblptru,c
   523  002C62  EE00  F0E2         	lfsr	0,__pdataBANK0
   524  002C66  EE10 F010          	lfsr	1,16
   525  002C6A                     copy_data1:
   526  002C6A  0009               	tblrd		*+
   527  002C6C  CFF5 FFEE          	movff	tablat,postinc0
   528  002C70  50E5               	movf	postdec1,w,c
   529  002C72  50E1               	movf	fsr1l,w,c
   530  002C74  E1FA               	bnz	copy_data1
   531                           
   532                           ; Clear objects allocated to BANK1 (32 bytes)
   533  002C76  EE01  F09B         	lfsr	0,__pbssBANK1
   534  002C7A  0E20               	movlw	32
   535  002C7C                     clear_0:
   536  002C7C  6AEE               	clrf	postinc0,c
   537  002C7E  06E8               	decf	wreg,f,c
   538  002C80  E1FD               	bnz	clear_0
   539                           
   540                           ; Clear objects allocated to BANK0 (44 bytes)
   541  002C82  EE00  F0B6         	lfsr	0,__pbssBANK0
   542  002C86  0E2C               	movlw	44
   543  002C88                     clear_1:
   544  002C88  6AEE               	clrf	postinc0,c
   545  002C8A  06E8               	decf	wreg,f,c
   546  002C8C  E1FD               	bnz	clear_1
   547  002C8E                     end_of_initialization:
   548                           	callstack 0
   549  002C8E                     __end_of__initialization:
   550                           	callstack 0
   551  002C8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   552  002C90  6EF8               	movwf	tblptru,c
   553  002C92  0100               	movlb	0
   554  002C94  EFD2  F017         	goto	_main	;jump to C main() function
   555                           
   556                           	psect	bssBANK0
   557  0000B6                     __pbssBANK0:
   558                           	callstack 0
   559  0000B6                     _nout:
   560                           	callstack 0
   561  0000B6                     	ds	2
   562  0000B8                     _width:
   563                           	callstack 0
   564  0000B8                     	ds	2
   565  0000BA                     _prec:
   566                           	callstack 0
   567  0000BA                     	ds	2
   568  0000BC                     _flags:
   569                           	callstack 0
   570  0000BC                     	ds	2
   571  0000BE                     _hour:
   572                           	callstack 0
   573  0000BE                     	ds	2
   574  0000C0                     _min:
   575                           	callstack 0
   576  0000C0                     	ds	2
   577  0000C2                     _sec:
   578                           	callstack 0
   579  0000C2                     	ds	2
   580  0000C4                     _hours:
   581                           	callstack 0
   582  0000C4                     	ds	10
   583  0000CE                     _mins:
   584                           	callstack 0
   585  0000CE                     	ds	10
   586  0000D8                     _secs:
   587                           	callstack 0
   588  0000D8                     	ds	10
   589                           
   590                           	psect	dataBANK0
   591  0000E2                     __pdataBANK0:
   592                           	callstack 0
   593  0000E2                     _character2:
   594                           	callstack 0
   595  0000E2                     	ds	8
   596  0000EA                     _character1:
   597                           	callstack 0
   598  0000EA                     	ds	8
   599                           
   600                           	psect	bssBANK1
   601  00019B                     __pbssBANK1:
   602                           	callstack 0
   603  00019B                     _dbuf:
   604                           	callstack 0
   605  00019B                     	ds	32
   606                           
   607                           	psect	dataBANK1
   608  000100                     __pdataBANK1:
   609                           	callstack 0
   610  000100                     SensorTemperatura@F3714:
   611                           	callstack 0
   612  000100                     	ds	23
   613  000117                     SensorTemperatura@F3717:
   614                           	callstack 0
   615  000117                     	ds	21
   616  00012C                     SensorMovimiento@F3737:
   617                           	callstack 0
   618  00012C                     	ds	20
   619  000140                     SensorMovimiento@F3734:
   620                           	callstack 0
   621  000140                     	ds	20
   622  000154                     SensorMovimiento@F3731:
   623                           	callstack 0
   624  000154                     	ds	20
   625  000168                     SensorMovimiento@F3729:
   626                           	callstack 0
   627  000168                     	ds	20
   628  00017C                     SensorLuz@F3722:
   629                           	callstack 0
   630  00017C                     	ds	16
   631  00018C                     SensorLuz@F3725:
   632                           	callstack 0
   633  00018C                     	ds	15
   634                           
   635                           	psect	cstackBANK0
   636  000060                     __pcstackBANK0:
   637                           	callstack 0
   638  000060                     ?_vfprintf:
   639                           	callstack 0
   640  000060                     vfprintf@fp:
   641                           	callstack 0
   642  000060                     SensorLuz@buffer_TX3:
   643                           	callstack 0
   644  000060                     SensorMovimiento@buffer_TX5:
   645                           	callstack 0
   646                           
   647                           ; 20 bytes @ 0x0
   648  000060                     	ds	2
   649  000062                     vfprintf@fmt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x2
   653  000062                     	ds	2
   654  000064                     vfprintf@ap:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x4
   658  000064                     	ds	2
   659  000066                     ?_sprintf:
   660                           	callstack 0
   661  000066                     sprintf@s:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x6
   665  000066                     	ds	2
   666  000068                     sprintf@fmt:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x8
   670  000068                     	ds	8
   671  000070                     sprintf@ap:
   672                           	callstack 0
   673  000070                     SensorLuz@buffer_TX4:
   674                           	callstack 0
   675                           
   676                           ; 15 bytes @ 0x10
   677  000070                     	ds	2
   678  000072                     sprintf@f:
   679                           	callstack 0
   680                           
   681                           ; 6 bytes @ 0x12
   682  000072                     	ds	2
   683  000074                     SensorMovimiento@buffer_TX6:
   684                           	callstack 0
   685                           
   686                           ; 20 bytes @ 0x14
   687  000074                     	ds	4
   688  000078                     SensorTemperatura@buffer_TX1:
   689                           	callstack 0
   690                           
   691                           ; 23 bytes @ 0x18
   692  000078                     	ds	7
   693  00007F                     SensorLuz@val:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x1F
   697  00007F                     	ds	4
   698  000083                     SensorLuz@i:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x23
   702  000083                     	ds	2
   703  000085                     SensorLuz@i_910:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x25
   707  000085                     	ds	3
   708  000088                     SensorMovimiento@buffer_TX7:
   709                           	callstack 0
   710                           
   711                           ; 20 bytes @ 0x28
   712  000088                     	ds	7
   713  00008F                     SensorTemperatura@buffer_TX2:
   714                           	callstack 0
   715                           
   716                           ; 21 bytes @ 0x2F
   717  00008F                     	ds	13
   718  00009C                     SensorMovimiento@buf:
   719                           	callstack 0
   720                           
   721                           ; 20 bytes @ 0x3C
   722  00009C                     	ds	8
   723  0000A4                     SensorTemperatura@Temperature:
   724                           	callstack 0
   725                           
   726                           ; 10 bytes @ 0x44
   727  0000A4                     	ds	10
   728  0000AE                     SensorTemperatura@i:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x4E
   732  0000AE                     	ds	2
   733  0000B0                     SensorTemperatura@i_894:
   734                           	callstack 0
   735  0000B0                     SensorMovimiento@i:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x50
   739  0000B0                     	ds	2
   740  0000B2                     SensorMovimiento@i_936:
   741                           	callstack 0
   742  0000B2                     SensorTemperatura@celsius:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x52
   746  0000B2                     	ds	2
   747  0000B4                     SensorMovimiento@i_941:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x54
   751  0000B4                     	ds	2
   752                           
   753                           	psect	cstackCOMRAM
   754  000001                     __pcstackCOMRAM:
   755                           	callstack 0
   756  000001                     ?_strlen:
   757                           	callstack 0
   758  000001                     ?_isupper:
   759                           	callstack 0
   760  000001                     ?_isalpha:
   761                           	callstack 0
   762  000001                     ?_islower:
   763                           	callstack 0
   764  000001                     ?_ADC_Read:
   765                           	callstack 0
   766  000001                     ?___fltol:
   767                           	callstack 0
   768  000001                     ?___aodiv:
   769                           	callstack 0
   770  000001                     ?___aomod:
   771                           	callstack 0
   772  000001                     I2C_Read@flag:
   773                           	callstack 0
   774  000001                     I2C_Write@data:
   775                           	callstack 0
   776  000001                     ADC_Read@channel:
   777                           	callstack 0
   778  000001                     MSdelay@val:
   779                           	callstack 0
   780  000001                     memset@dest:
   781                           	callstack 0
   782  000001                     isalpha@c:
   783                           	callstack 0
   784  000001                     isupper@c:
   785                           	callstack 0
   786  000001                     fputc@c:
   787                           	callstack 0
   788  000001                     strlen@s:
   789                           	callstack 0
   790  000001                     islower@c:
   791                           	callstack 0
   792  000001                     ___flge@ff1:
   793                           	callstack 0
   794  000001                     ___fltol@f1:
   795                           	callstack 0
   796  000001                     ___aodiv@dividend:
   797                           	callstack 0
   798  000001                     ___aomod@dividend:
   799                           	callstack 0
   800                           
   801                           ; 8 bytes @ 0x0
   802  000001                     	ds	1
   803  000002                     I2C_Read@buffer:
   804                           	callstack 0
   805  000002                     I2C_Start@slave_write_address:
   806                           	callstack 0
   807  000002                     I2C_Repeated_Start@slave_read_address:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x1
   811  000002                     	ds	1
   812  000003                     ??_isupper:
   813  000003                     ??_isalpha:
   814  000003                     ??_islower:
   815  000003                     ??_ADC_Read:
   816  000003                     ??_RTC_Read_Clock:
   817  000003                     MSdelay@i:
   818                           	callstack 0
   819  000003                     memset@c:
   820                           	callstack 0
   821  000003                     fputc@fp:
   822                           	callstack 0
   823  000003                     strlen@a:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x2
   827  000003                     	ds	1
   828  000004                     RTC_Read_Clock@read_clock_address:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x3
   832  000004                     	ds	1
   833  000005                     ??_fputc:
   834  000005                     ??___fltol:
   835  000005                     MSdelay@j:
   836                           	callstack 0
   837  000005                     memset@n:
   838                           	callstack 0
   839  000005                     strcpy@dest:
   840                           	callstack 0
   841  000005                     ___flge@ff2:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x4
   845  000005                     	ds	2
   846  000007                     ??_memset:
   847  000007                     ?_toupper:
   848                           	callstack 0
   849  000007                     LCD_Command@cmd:
   850                           	callstack 0
   851  000007                     LCD_Char@char_data:
   852                           	callstack 0
   853  000007                     ADC_Read@digital:
   854                           	callstack 0
   855  000007                     strcpy@src:
   856                           	callstack 0
   857  000007                     toupper@c:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x6
   861  000007                     	ds	1
   862  000008                     LCD_String@msg:
   863                           	callstack 0
   864  000008                     LCD_Custom_Char@msg:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x7
   868  000008                     	ds	1
   869  000009                     ??_toupper:
   870  000009                     ??___flge:
   871  000009                     ?___xxtofl:
   872                           	callstack 0
   873  000009                     ___fltol@sign1:
   874                           	callstack 0
   875  000009                     memset@k:
   876                           	callstack 0
   877  000009                     strcpy@s:
   878                           	callstack 0
   879  000009                     ___xxtofl@val:
   880                           	callstack 0
   881  000009                     ___aodiv@divisor:
   882                           	callstack 0
   883  000009                     ___aomod@divisor:
   884                           	callstack 0
   885                           
   886                           ; 8 bytes @ 0x8
   887  000009                     	ds	1
   888  00000A                     ?_ctoa:
   889                           	callstack 0
   890  00000A                     LCD_String_xy@pos:
   891                           	callstack 0
   892  00000A                     LCD_Custom_Char@loc:
   893                           	callstack 0
   894  00000A                     ___fltol@exp1:
   895                           	callstack 0
   896  00000A                     ctoa@fp:
   897                           	callstack 0
   898  00000A                     fputs@s:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x9
   902  00000A                     	ds	1
   903  00000B                     LCD_Custom_Char@i:
   904                           	callstack 0
   905  00000B                     LCD_String_xy@str:
   906                           	callstack 0
   907  00000B                     memset@s:
   908                           	callstack 0
   909  00000B                     strcpy@d:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0xA
   913  00000B                     	ds	1
   914  00000C                     ctoa@c:
   915                           	callstack 0
   916  00000C                     fputs@fp:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0xB
   920  00000C                     	ds	1
   921  00000D                     ??___xxtofl:
   922  00000D                     ??_ctoa:
   923  00000D                     LCD_String_xy@row:
   924                           	callstack 0
   925  00000D                     strcat@dest:
   926                           	callstack 0
   927  00000D                     _toupper$1601:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xC
   931  00000D                     	ds	1
   932  00000E                     fputs@c:
   933                           	callstack 0
   934  00000E                     ctoa@l:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0xD
   938  00000E                     	ds	1
   939  00000F                     fputs@i:
   940                           	callstack 0
   941  00000F                     strcat@src:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0xE
   945  00000F                     	ds	1
   946  000010                     ctoa@w:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0xF
   950  000010                     	ds	1
   951  000011                     ?_pad:
   952                           	callstack 0
   953  000011                     ___aodiv@counter:
   954                           	callstack 0
   955  000011                     ___aomod@counter:
   956                           	callstack 0
   957  000011                     ___xxtofl@sign:
   958                           	callstack 0
   959  000011                     pad@fp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x10
   963  000011                     	ds	1
   964  000012                     ___aodiv@sign:
   965                           	callstack 0
   966  000012                     ___aomod@sign:
   967                           	callstack 0
   968  000012                     ___xxtofl@exp:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x11
   972  000012                     	ds	1
   973  000013                     ?_abs:
   974                           	callstack 0
   975  000013                     pad@buf:
   976                           	callstack 0
   977  000013                     abs@a:
   978                           	callstack 0
   979  000013                     ___xxtofl@arg:
   980                           	callstack 0
   981  000013                     ___aodiv@quotient:
   982                           	callstack 0
   983                           
   984                           ; 8 bytes @ 0x12
   985  000013                     	ds	2
   986  000015                     ??_abs:
   987  000015                     pad@p:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x14
   991  000015                     	ds	2
   992  000017                     ??_pad:
   993  000017                     ?___flmul:
   994                           	callstack 0
   995  000017                     ___flmul@b:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x16
   999  000017                     	ds	1
  1000  000018                     pad@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x17
  1004  000018                     	ds	2
  1005  00001A                     pad@w:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x19
  1009  00001A                     	ds	1
  1010  00001B                     ___flmul@a:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x1A
  1014  00001B                     	ds	1
  1015  00001C                     ?_dtoa:
  1016                           	callstack 0
  1017  00001C                     ?_xtoa:
  1018                           	callstack 0
  1019  00001C                     dtoa@fp:
  1020                           	callstack 0
  1021  00001C                     xtoa@fp:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x1B
  1025  00001C                     	ds	2
  1026  00001E                     dtoa@d:
  1027                           	callstack 0
  1028  00001E                     xtoa@d:
  1029                           	callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x1D
  1032  00001E                     	ds	1
  1033  00001F                     ??___flmul:
  1034                           
  1035                           ; 1 bytes @ 0x1E
  1036  00001F                     	ds	4
  1037  000023                     ___flmul@sign:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x22
  1041  000023                     	ds	1
  1042  000024                     ___flmul@grs:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x23
  1046  000024                     	ds	2
  1047  000026                     ??_dtoa:
  1048  000026                     xtoa@x:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x25
  1052  000026                     	ds	1
  1053  000027                     ??_xtoa:
  1054                           
  1055                           ; 1 bytes @ 0x26
  1056  000027                     	ds	1
  1057  000028                     ___flmul@aexp:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x27
  1061  000028                     	ds	1
  1062  000029                     ___flmul@bexp:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x28
  1066  000029                     	ds	1
  1067  00002A                     ___flmul@prod:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x29
  1071  00002A                     	ds	4
  1072  00002E                     ___flmul@temp:
  1073                           	callstack 0
  1074  00002E                     _dtoa$1490:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x2D
  1078  00002E                     	ds	1
  1079  00002F                     _xtoa$1501:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x2E
  1083  00002F                     	ds	1
  1084  000030                     ?___fldiv:
  1085                           	callstack 0
  1086  000030                     dtoa@p:
  1087                           	callstack 0
  1088  000030                     ___fldiv@b:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x2F
  1092  000030                     	ds	1
  1093  000031                     _xtoa$1502:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x30
  1097  000031                     	ds	1
  1098  000032                     dtoa@w:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x31
  1102  000032                     	ds	1
  1103  000033                     xtoa@p:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x32
  1107  000033                     	ds	1
  1108  000034                     dtoa@s:
  1109                           	callstack 0
  1110  000034                     ___fldiv@a:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x33
  1114  000034                     	ds	1
  1115  000035                     xtoa@w:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x34
  1119  000035                     	ds	1
  1120  000036                     dtoa@n:
  1121                           	callstack 0
  1122                           
  1123                           ; 8 bytes @ 0x35
  1124  000036                     	ds	1
  1125  000037                     xtoa@n:
  1126                           	callstack 0
  1127                           
  1128                           ; 8 bytes @ 0x36
  1129  000037                     	ds	1
  1130  000038                     ??___fldiv:
  1131                           
  1132                           ; 1 bytes @ 0x37
  1133  000038                     	ds	4
  1134  00003C                     ___fldiv@rem:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x3B
  1138  00003C                     	ds	2
  1139  00003E                     dtoa@i:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x3D
  1143  00003E                     	ds	1
  1144  00003F                     xtoa@i:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x3E
  1148  00003F                     	ds	1
  1149  000040                     ___fldiv@sign:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x3F
  1153  000040                     	ds	1
  1154  000041                     ___fldiv@new_exp:
  1155                           	callstack 0
  1156  000041                     xtoa@c:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x40
  1160  000041                     	ds	2
  1161  000043                     ?_vfpfcnvrt:
  1162                           	callstack 0
  1163  000043                     vfpfcnvrt@fp:
  1164                           	callstack 0
  1165  000043                     ___fldiv@grs:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x42
  1169  000043                     	ds	2
  1170  000045                     vfpfcnvrt@fmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x44
  1174  000045                     	ds	2
  1175  000047                     ___fldiv@bexp:
  1176                           	callstack 0
  1177  000047                     vfpfcnvrt@ap:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x46
  1181  000047                     	ds	1
  1182  000048                     ___fldiv@aexp:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x47
  1186  000048                     	ds	1
  1187  000049                     ??_vfpfcnvrt:
  1188                           
  1189                           ; 1 bytes @ 0x48
  1190  000049                     	ds	4
  1191  00004D                     vfpfcnvrt@ll:
  1192                           	callstack 0
  1193                           
  1194                           ; 8 bytes @ 0x4C
  1195  00004D                     	ds	8
  1196  000055                     vfpfcnvrt@llu:
  1197                           	callstack 0
  1198                           
  1199                           ; 8 bytes @ 0x54
  1200  000055                     	ds	8
  1201  00005D                     vfpfcnvrt@c:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x5C
  1205  00005D                     	ds	1
  1206  00005E                     vfprintf@cfmt:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x5D
  1210  00005E                     	ds	2
  1211  000060                     
  1212                           ; 1 bytes @ 0x5F
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 58 in file "Controler.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels required when called:    9
  1238 ;; This function calls:
  1239 ;;		_ADC_Init
  1240 ;;		_I2C_Init
  1241 ;;		_LCD_Init
  1242 ;;		_RTC
  1243 ;;		_SensorLuz
  1244 ;;		_SensorMovimiento
  1245 ;;		_SensorTemperatura
  1246 ;; This function is called by:
  1247 ;;		Startup code after reset
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text0
  1252  002FA4                     __ptext0:
  1253                           	callstack 0
  1254  002FA4                     _main:
  1255                           	callstack 22
  1256  002FA4                     
  1257                           ;Controler.c: 60:     OSCCON = 0x72;
  1258  002FA4  0E72               	movlw	114
  1259  002FA6  6ED3               	movwf	211,c	;volatile
  1260  002FA8                     
  1261                           ;Controler.c: 61:     I2C_Init();
  1262  002FA8  EC04  F019         	call	_I2C_Init	;wreg free
  1263  002FAC                     
  1264                           ;Controler.c: 62:     LCD_Init();
  1265  002FAC  ECAD  F018         	call	_LCD_Init	;wreg free
  1266  002FB0                     
  1267                           ;Controler.c: 63:     ADC_Init();
  1268  002FB0  EC11  F019         	call	_ADC_Init	;wreg free
  1269  002FB4                     
  1270                           ;Controler.c: 64:     ADCON1 = 0x0F;
  1271  002FB4  0E0F               	movlw	15
  1272  002FB6  6EC1               	movwf	193,c	;volatile
  1273  002FB8                     
  1274                           ;Controler.c: 67:     TRISCbits.RC6 = 0;
  1275  002FB8  9C94               	bcf	148,6,c	;volatile
  1276  002FBA                     
  1277                           ;Controler.c: 68:     TXSTAbits.TX9 = 0;
  1278  002FBA  9CAC               	bcf	172,6,c	;volatile
  1279  002FBC                     
  1280                           ;Controler.c: 69:     TXSTAbits.TXEN = 1;
  1281  002FBC  8AAC               	bsf	172,5,c	;volatile
  1282  002FBE                     
  1283                           ;Controler.c: 70:     TXSTAbits.SYNC = 0;
  1284  002FBE  98AC               	bcf	172,4,c	;volatile
  1285  002FC0                     
  1286                           ;Controler.c: 71:     TXSTAbits.BRGH = 0;
  1287  002FC0  94AC               	bcf	172,2,c	;volatile
  1288  002FC2                     
  1289                           ;Controler.c: 72:     BAUDCONbits.BRG16 = 0;
  1290  002FC2  96B8               	bcf	184,3,c	;volatile
  1291  002FC4                     
  1292                           ;Controler.c: 73:     RCSTAbits.SPEN = 1;
  1293  002FC4  8EAB               	bsf	171,7,c	;volatile
  1294  002FC6                     
  1295                           ;Controler.c: 74:     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1296  002FC6  0E0C               	movlw	12
  1297  002FC8  6EAF               	movwf	175,c	;volatile
  1298  002FCA                     l3762:
  1299                           
  1300                           ;Controler.c: 78:         RTC();
  1301  002FCA  EC88  F015         	call	_RTC	;wreg free
  1302  002FCE                     
  1303                           ;Controler.c: 79:         SensorTemperatura();
  1304  002FCE  EC82  F00C         	call	_SensorTemperatura	;wreg free
  1305  002FD2                     
  1306                           ;Controler.c: 80:         SensorMovimiento();
  1307  002FD2  ECD1  F00D         	call	_SensorMovimiento	;wreg free
  1308  002FD6                     
  1309                           ;Controler.c: 81:         SensorLuz();
  1310  002FD6  ECAD  F00F         	call	_SensorLuz	;wreg free
  1311  002FDA  EFE5  F017         	goto	l3762
  1312  002FDE  EF00  F000         	goto	start
  1313  002FE2                     __end_of_main:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _SensorTemperatura *****************
  1317 ;; Defined at:
  1318 ;;		line 91 in file "Controler.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  i               2   80[BANK0 ] int 
  1323 ;;  i               2   78[BANK0 ] int 
  1324 ;;  buffer_TX2     21   47[BANK0 ] unsigned char [21]
  1325 ;;  buffer_TX1     23   24[BANK0 ] unsigned char [23]
  1326 ;;  Temperature    10   68[BANK0 ] unsigned char [10]
  1327 ;;  celsius         4   82[BANK0 ] float 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0      62       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         0      62       0       0       0       0       0       0       0
  1341 ;;Total ram usage:       62 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    8
  1344 ;; This function calls:
  1345 ;;		_ADC_Read
  1346 ;;		_LCD_Char
  1347 ;;		_LCD_Command
  1348 ;;		_LCD_Custom_Char
  1349 ;;		_LCD_String_xy
  1350 ;;		_MSdelay
  1351 ;;		___fldiv
  1352 ;;		___flge
  1353 ;;		___flmul
  1354 ;;		___fltol
  1355 ;;		___xxtofl
  1356 ;;		_memset
  1357 ;;		_sprintf
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text1
  1364  001904                     __ptext1:
  1365                           	callstack 0
  1366  001904                     _SensorTemperatura:
  1367                           	callstack 22
  1368  001904                     
  1369                           ;Controler.c: 92:     char Temperature[10];;Controler.c: 93:     float celsius;;Controle
      +                          r.c: 94:     TRISBbits.RB2 = 0;
  1370  001904  9493               	bcf	147,2,c	;volatile
  1371                           
  1372                           ;Controler.c: 95:     TRISBbits.RB3 = 0;
  1373  001906  9693               	bcf	147,3,c	;volatile
  1374  001908                     
  1375                           ;Controler.c: 97:     LCD_String_xy(2, 0, "Temp: ");
  1376  001908  0E00               	movlw	0
  1377  00190A  6E0A               	movwf	LCD_String_xy@pos^0,c
  1378  00190C  0E4A               	movlw	low STR_1
  1379  00190E  6E0B               	movwf	LCD_String_xy@str^0,c
  1380  001910  0E08               	movlw	high STR_1
  1381  001912  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1382  001914  0E02               	movlw	2
  1383  001916  ECD4  F015         	call	_LCD_String_xy
  1384  00191A                     
  1385                           ;Controler.c: 98:     celsius = (ADC_Read(0)*4.88);
  1386  00191A  0E00               	movlw	0
  1387  00191C  6E02               	movwf	(ADC_Read@channel+1)^0,c
  1388  00191E  0E00               	movlw	0
  1389  001920  6E01               	movwf	ADC_Read@channel^0,c
  1390  001922  ECEC  F014         	call	_ADC_Read	;wreg free
  1391  001926  C001  F009         	movff	?_ADC_Read,___xxtofl@val
  1392  00192A  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
  1393  00192E  0E00               	movlw	0
  1394  001930  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  1395  001932  0EFF               	movlw	-1
  1396  001934  6E0B               	movwf	(___xxtofl@val+2)^0,c
  1397  001936  6E0C               	movwf	(___xxtofl@val+3)^0,c
  1398  001938  0E01               	movlw	1
  1399  00193A  ECD3  F00E         	call	___xxtofl
  1400  00193E  C009  F017         	movff	?___xxtofl,___flmul@b
  1401  001942  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  1402  001946  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  1403  00194A  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  1404  00194E  0EF6               	movlw	246
  1405  001950  6E1B               	movwf	___flmul@a^0,c
  1406  001952  0E28               	movlw	40
  1407  001954  6E1C               	movwf	(___flmul@a+1)^0,c
  1408  001956  0E9C               	movlw	156
  1409  001958  6E1D               	movwf	(___flmul@a+2)^0,c
  1410  00195A  0E40               	movlw	64
  1411  00195C  6E1E               	movwf	(___flmul@a+3)^0,c
  1412  00195E  EC3C  F004         	call	___flmul	;wreg free
  1413  001962  C017  F0B2         	movff	?___flmul,SensorTemperatura@celsius
  1414  001966  C018  F0B3         	movff	?___flmul+1,SensorTemperatura@celsius+1
  1415  00196A  C019  F0B4         	movff	?___flmul+2,SensorTemperatura@celsius+2
  1416  00196E  C01A  F0B5         	movff	?___flmul+3,SensorTemperatura@celsius+3
  1417  001972                     
  1418                           ;Controler.c: 99:     celsius = (celsius / 10.00);
  1419  001972  C0B2  F030         	movff	SensorTemperatura@celsius,___fldiv@b
  1420  001976  C0B3  F031         	movff	SensorTemperatura@celsius+1,___fldiv@b+1
  1421  00197A  C0B4  F032         	movff	SensorTemperatura@celsius+2,___fldiv@b+2
  1422  00197E  C0B5  F033         	movff	SensorTemperatura@celsius+3,___fldiv@b+3
  1423  001982  0E00               	movlw	0
  1424  001984  6E34               	movwf	___fldiv@a^0,c
  1425  001986  0E00               	movlw	0
  1426  001988  6E35               	movwf	(___fldiv@a+1)^0,c
  1427  00198A  0E20               	movlw	32
  1428  00198C  6E36               	movwf	(___fldiv@a+2)^0,c
  1429  00198E  0E41               	movlw	65
  1430  001990  6E37               	movwf	(___fldiv@a+3)^0,c
  1431  001992  EC51  F006         	call	___fldiv	;wreg free
  1432  001996  C030  F0B2         	movff	?___fldiv,SensorTemperatura@celsius
  1433  00199A  C031  F0B3         	movff	?___fldiv+1,SensorTemperatura@celsius+1
  1434  00199E  C032  F0B4         	movff	?___fldiv+2,SensorTemperatura@celsius+2
  1435  0019A2  C033  F0B5         	movff	?___fldiv+3,SensorTemperatura@celsius+3
  1436  0019A6                     
  1437                           ;Controler.c: 100:     sprintf(Temperature, "%d%cC ", (int) celsius, 0xdf);
  1438  0019A6  0EA4               	movlw	low SensorTemperatura@Temperature
  1439  0019A8  0100               	movlb	0	; () banked
  1440  0019AA  6F66               	movwf	sprintf@s& (0+255),b
  1441  0019AC  0E00               	movlw	high SensorTemperatura@Temperature
  1442  0019AE  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1443  0019B0  0E51               	movlw	low STR_2
  1444  0019B2  6F68               	movwf	sprintf@fmt& (0+255),b
  1445  0019B4  0E08               	movlw	high STR_2
  1446  0019B6  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1447  0019B8  C0B2  F001         	movff	SensorTemperatura@celsius,___fltol@f1
  1448  0019BC  C0B3  F002         	movff	SensorTemperatura@celsius+1,___fltol@f1+1
  1449  0019C0  C0B4  F003         	movff	SensorTemperatura@celsius+2,___fltol@f1+2
  1450  0019C4  C0B5  F004         	movff	SensorTemperatura@celsius+3,___fltol@f1+3
  1451  0019C8  ECB3  F012         	call	___fltol	;wreg free
  1452  0019CC  C001  F06A         	movff	?___fltol,?_sprintf+4
  1453  0019D0  C002  F06B         	movff	?___fltol+1,?_sprintf+5
  1454  0019D4  0E00               	movlw	0
  1455  0019D6  0100               	movlb	0	; () banked
  1456  0019D8  6F6D               	movwf	(?_sprintf+7)& (0+255),b
  1457  0019DA  0EDF               	movlw	223
  1458  0019DC  6F6C               	movwf	(?_sprintf+6)& (0+255),b
  1459  0019DE  ECDB  F016         	call	_sprintf	;wreg free
  1460  0019E2                     
  1461                           ;Controler.c: 101:     LCD_String_xy(2, 6, Temperature);
  1462  0019E2  0E06               	movlw	6
  1463  0019E4  6E0A               	movwf	LCD_String_xy@pos^0,c
  1464  0019E6  0EA4               	movlw	low SensorTemperatura@Temperature
  1465  0019E8  6E0B               	movwf	LCD_String_xy@str^0,c
  1466  0019EA  0E00               	movlw	high SensorTemperatura@Temperature
  1467  0019EC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1468  0019EE  0E02               	movlw	2
  1469  0019F0  ECD4  F015         	call	_LCD_String_xy
  1470  0019F4                     
  1471                           ;Controler.c: 104:     memset(Temperature, 0, 10);
  1472  0019F4  0EA4               	movlw	low SensorTemperatura@Temperature
  1473  0019F6  6E01               	movwf	memset@dest^0,c
  1474  0019F8  0E00               	movlw	high SensorTemperatura@Temperature
  1475  0019FA  6E02               	movwf	(memset@dest+1)^0,c
  1476  0019FC  0E00               	movlw	0
  1477  0019FE  6E04               	movwf	(memset@c+1)^0,c
  1478  001A00  0E00               	movlw	0
  1479  001A02  6E03               	movwf	memset@c^0,c
  1480  001A04  0E00               	movlw	0
  1481  001A06  6E06               	movwf	(memset@n+1)^0,c
  1482  001A08  0E0A               	movlw	10
  1483  001A0A  6E05               	movwf	memset@n^0,c
  1484  001A0C  EC46  F011         	call	_memset	;wreg free
  1485  001A10                     
  1486                           ;Controler.c: 106:     if (celsius >= 20 && celsius <= 25) {
  1487  001A10  C0B2  F001         	movff	SensorTemperatura@celsius,___flge@ff1
  1488  001A14  C0B3  F002         	movff	SensorTemperatura@celsius+1,___flge@ff1+1
  1489  001A18  C0B4  F003         	movff	SensorTemperatura@celsius+2,___flge@ff1+2
  1490  001A1C  C0B5  F004         	movff	SensorTemperatura@celsius+3,___flge@ff1+3
  1491  001A20  0E00               	movlw	0
  1492  001A22  6E05               	movwf	___flge@ff2^0,c
  1493  001A24  0E00               	movlw	0
  1494  001A26  6E06               	movwf	(___flge@ff2+1)^0,c
  1495  001A28  0EA0               	movlw	160
  1496  001A2A  6E07               	movwf	(___flge@ff2+2)^0,c
  1497  001A2C  0E41               	movlw	65
  1498  001A2E  6E08               	movwf	(___flge@ff2+3)^0,c
  1499  001A30  EC36  F013         	call	___flge	;wreg free
  1500  001A34  A0D8               	btfss	status,0,c
  1501  001A36  EF1F  F00D         	goto	u3861
  1502  001A3A  EF21  F00D         	goto	u3860
  1503  001A3E                     u3861:
  1504  001A3E  EF88  F00D         	goto	l292
  1505  001A42                     u3860:
  1506  001A42  0E00               	movlw	0
  1507  001A44  6E01               	movwf	___flge@ff1^0,c
  1508  001A46  0E00               	movlw	0
  1509  001A48  6E02               	movwf	(___flge@ff1+1)^0,c
  1510  001A4A  0EC8               	movlw	200
  1511  001A4C  6E03               	movwf	(___flge@ff1+2)^0,c
  1512  001A4E  0E41               	movlw	65
  1513  001A50  6E04               	movwf	(___flge@ff1+3)^0,c
  1514  001A52  C0B2  F005         	movff	SensorTemperatura@celsius,___flge@ff2
  1515  001A56  C0B3  F006         	movff	SensorTemperatura@celsius+1,___flge@ff2+1
  1516  001A5A  C0B4  F007         	movff	SensorTemperatura@celsius+2,___flge@ff2+2
  1517  001A5E  C0B5  F008         	movff	SensorTemperatura@celsius+3,___flge@ff2+3
  1518  001A62  EC36  F013         	call	___flge	;wreg free
  1519  001A66  A0D8               	btfss	status,0,c
  1520  001A68  EF38  F00D         	goto	u3871
  1521  001A6C  EF3A  F00D         	goto	u3870
  1522  001A70                     u3871:
  1523  001A70  EF88  F00D         	goto	l292
  1524  001A74                     u3870:
  1525  001A74                     
  1526                           ;Controler.c: 107:         LATB2 = 1;
  1527  001A74  848A               	bsf	3978,2,c	;volatile
  1528                           
  1529                           ;Controler.c: 108:         LATB3 = 0;
  1530  001A76  968A               	bcf	3978,3,c	;volatile
  1531  001A78                     
  1532                           ;Controler.c: 110:         LCD_String_xy(2,13,"Cal: ");
  1533  001A78  0E0D               	movlw	13
  1534  001A7A  6E0A               	movwf	LCD_String_xy@pos^0,c
  1535  001A7C  0E6D               	movlw	low STR_3
  1536  001A7E  6E0B               	movwf	LCD_String_xy@str^0,c
  1537  001A80  0E08               	movlw	high STR_3
  1538  001A82  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1539  001A84  0E02               	movlw	2
  1540  001A86  ECD4  F015         	call	_LCD_String_xy
  1541  001A8A                     
  1542                           ;Controler.c: 111:         LCD_Custom_Char(0,character1);
  1543  001A8A  0EEA               	movlw	low _character1
  1544  001A8C  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1545  001A8E  0E00               	movlw	high _character1
  1546  001A90  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1547  001A92  0E00               	movlw	0
  1548  001A94  EC29  F017         	call	_LCD_Custom_Char
  1549  001A98                     
  1550                           ;Controler.c: 112:         LCD_Command(0xc0|(17));
  1551  001A98  0ED1               	movlw	209
  1552  001A9A  ECF6  F018         	call	_LCD_Command
  1553  001A9E                     
  1554                           ;Controler.c: 113:         LCD_Char(0);
  1555  001A9E  0E00               	movlw	0
  1556  001AA0  ECE8  F018         	call	_LCD_Char
  1557  001AA4                     
  1558                           ;Controler.c: 115:         char buffer_TX1[] = "Calefaccion encendida\r";
  1559  001AA4  EE21  F000         	lfsr	2,SensorTemperatura@F3714
  1560  001AA8  EE10  F078         	lfsr	1,SensorTemperatura@buffer_TX1
  1561  001AAC  0E16               	movlw	22
  1562  001AAE                     u3881:
  1563  001AAE  CFDB FFE3          	movff	plusw2,plusw1
  1564  001AB2  06E8               	decf	wreg,f,c
  1565  001AB4  E2FC               	bc	u3881
  1566  001AB6                     
  1567                           ;Controler.c: 116:         for (int i = 0; i < 25; i++) {
  1568  001AB6  0E00               	movlw	0
  1569  001AB8  0100               	movlb	0	; () banked
  1570  001ABA  6FAF               	movwf	(SensorTemperatura@i+1)& (0+255),b
  1571  001ABC  0E00               	movlw	0
  1572  001ABE  6FAE               	movwf	SensorTemperatura@i& (0+255),b
  1573  001AC0                     l297:
  1574                           
  1575                           ;Controler.c: 117:             while (!TXSTAbits.TRMT) {
  1576  001AC0  A2AC               	btfss	172,1,c	;volatile
  1577  001AC2  EF65  F00D         	goto	u3891
  1578  001AC6  EF67  F00D         	goto	u3890
  1579  001ACA                     u3891:
  1580  001ACA  EF60  F00D         	goto	l297
  1581  001ACE                     u3890:
  1582  001ACE                     
  1583                           ;Controler.c: 119:             TXREG = buffer_TX1[i];
  1584  001ACE  0E78               	movlw	low SensorTemperatura@buffer_TX1
  1585  001AD0  0100               	movlb	0	; () banked
  1586  001AD2  25AE               	addwf	SensorTemperatura@i& (0+255),w,b
  1587  001AD4  6ED9               	movwf	fsr2l,c
  1588  001AD6  0E00               	movlw	high SensorTemperatura@buffer_TX1
  1589  001AD8  21AF               	addwfc	(SensorTemperatura@i+1)& (0+255),w,b
  1590  001ADA  6EDA               	movwf	fsr2h,c
  1591  001ADC  50DF               	movf	indf2,w,c
  1592  001ADE  6EAD               	movwf	173,c	;volatile
  1593  001AE0                     
  1594                           ; BSR set to: 0
  1595                           ;Controler.c: 120:         }
  1596  001AE0  4BAE               	infsnz	SensorTemperatura@i& (0+255),f,b
  1597  001AE2  2BAF               	incf	(SensorTemperatura@i+1)& (0+255),f,b
  1598  001AE4                     
  1599                           ; BSR set to: 0
  1600  001AE4  BFAF               	btfsc	(SensorTemperatura@i+1)& (0+255),7,b
  1601  001AE6  EF7E  F00D         	goto	u3901
  1602  001AEA  51AF               	movf	(SensorTemperatura@i+1)& (0+255),w,b
  1603  001AEC  E109               	bnz	u3900
  1604  001AEE  0E19               	movlw	25
  1605  001AF0  5DAE               	subwf	SensorTemperatura@i& (0+255),w,b
  1606  001AF2  A0D8               	btfss	status,0,c
  1607  001AF4  EF7E  F00D         	goto	u3901
  1608  001AF8  EF80  F00D         	goto	u3900
  1609  001AFC                     u3901:
  1610  001AFC  EF60  F00D         	goto	l297
  1611  001B00                     u3900:
  1612  001B00                     l3570:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;Controler.c: 121:         MSdelay(1000);
  1616  001B00  0E03               	movlw	3
  1617  001B02  6E02               	movwf	(MSdelay@val+1)^0,c
  1618  001B04  0EE8               	movlw	232
  1619  001B06  6E01               	movwf	MSdelay@val^0,c
  1620  001B08  EC04  F017         	call	_MSdelay	;wreg free
  1621                           
  1622                           ;Controler.c: 122:     } else {
  1623  001B0C  EFD0  F00D         	goto	l308
  1624  001B10                     l292:
  1625                           
  1626                           ;Controler.c: 123:         LATB2 = 0;
  1627  001B10  948A               	bcf	3978,2,c	;volatile
  1628                           
  1629                           ;Controler.c: 124:         LATB3 = 1;
  1630  001B12  868A               	bsf	3978,3,c	;volatile
  1631  001B14                     
  1632                           ;Controler.c: 126:         LCD_String_xy(2,13,"Cal: ");
  1633  001B14  0E0D               	movlw	13
  1634  001B16  6E0A               	movwf	LCD_String_xy@pos^0,c
  1635  001B18  0E6D               	movlw	low STR_3
  1636  001B1A  6E0B               	movwf	LCD_String_xy@str^0,c
  1637  001B1C  0E08               	movlw	high STR_3
  1638  001B1E  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1639  001B20  0E02               	movlw	2
  1640  001B22  ECD4  F015         	call	_LCD_String_xy
  1641  001B26                     
  1642                           ;Controler.c: 127:         LCD_Custom_Char(0,character2);
  1643  001B26  0EE2               	movlw	low _character2
  1644  001B28  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1645  001B2A  0E00               	movlw	high _character2
  1646  001B2C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1647  001B2E  0E00               	movlw	0
  1648  001B30  EC29  F017         	call	_LCD_Custom_Char
  1649  001B34                     
  1650                           ;Controler.c: 128:         LCD_Command(0xc0|(17));
  1651  001B34  0ED1               	movlw	209
  1652  001B36  ECF6  F018         	call	_LCD_Command
  1653  001B3A                     
  1654                           ;Controler.c: 129:         LCD_Char(0);
  1655  001B3A  0E00               	movlw	0
  1656  001B3C  ECE8  F018         	call	_LCD_Char
  1657  001B40                     
  1658                           ;Controler.c: 131:         char buffer_TX2[] = "Calefaccion apagada\r";
  1659  001B40  EE21  F017         	lfsr	2,SensorTemperatura@F3717
  1660  001B44  EE10  F08F         	lfsr	1,SensorTemperatura@buffer_TX2
  1661  001B48  0E14               	movlw	20
  1662  001B4A                     u3911:
  1663  001B4A  CFDB FFE3          	movff	plusw2,plusw1
  1664  001B4E  06E8               	decf	wreg,f,c
  1665  001B50  E2FC               	bc	u3911
  1666  001B52                     
  1667                           ;Controler.c: 132:         for (int i = 0; i < 21; i++) {
  1668  001B52  0E00               	movlw	0
  1669  001B54  0100               	movlb	0	; () banked
  1670  001B56  6FB1               	movwf	(SensorTemperatura@i_894+1)& (0+255),b
  1671  001B58  0E00               	movlw	0
  1672  001B5A  6FB0               	movwf	SensorTemperatura@i_894& (0+255),b
  1673  001B5C                     l305:
  1674                           
  1675                           ;Controler.c: 133:             while (!TXSTAbits.TRMT) {
  1676  001B5C  A2AC               	btfss	172,1,c	;volatile
  1677  001B5E  EFB3  F00D         	goto	u3921
  1678  001B62  EFB5  F00D         	goto	u3920
  1679  001B66                     u3921:
  1680  001B66  EFAE  F00D         	goto	l305
  1681  001B6A                     u3920:
  1682  001B6A                     
  1683                           ;Controler.c: 135:             TXREG = buffer_TX2[i];
  1684  001B6A  0E8F               	movlw	low SensorTemperatura@buffer_TX2
  1685  001B6C  0100               	movlb	0	; () banked
  1686  001B6E  25B0               	addwf	SensorTemperatura@i_894& (0+255),w,b
  1687  001B70  6ED9               	movwf	fsr2l,c
  1688  001B72  0E00               	movlw	high SensorTemperatura@buffer_TX2
  1689  001B74  21B1               	addwfc	(SensorTemperatura@i_894+1)& (0+255),w,b
  1690  001B76  6EDA               	movwf	fsr2h,c
  1691  001B78  50DF               	movf	indf2,w,c
  1692  001B7A  6EAD               	movwf	173,c	;volatile
  1693  001B7C                     
  1694                           ; BSR set to: 0
  1695                           ;Controler.c: 136:         }
  1696  001B7C  4BB0               	infsnz	SensorTemperatura@i_894& (0+255),f,b
  1697  001B7E  2BB1               	incf	(SensorTemperatura@i_894+1)& (0+255),f,b
  1698  001B80                     
  1699                           ; BSR set to: 0
  1700  001B80  BFB1               	btfsc	(SensorTemperatura@i_894+1)& (0+255),7,b
  1701  001B82  EFCC  F00D         	goto	u3931
  1702  001B86  51B1               	movf	(SensorTemperatura@i_894+1)& (0+255),w,b
  1703  001B88  E109               	bnz	u3930
  1704  001B8A  0E15               	movlw	21
  1705  001B8C  5DB0               	subwf	SensorTemperatura@i_894& (0+255),w,b
  1706  001B8E  A0D8               	btfss	status,0,c
  1707  001B90  EFCC  F00D         	goto	u3931
  1708  001B94  EFCE  F00D         	goto	u3930
  1709  001B98                     u3931:
  1710  001B98  EFAE  F00D         	goto	l305
  1711  001B9C                     u3930:
  1712  001B9C  EF80  F00D         	goto	l3570
  1713  001BA0                     l308:
  1714  001BA0  0012               	return		;funcret
  1715  001BA2                     __end_of_SensorTemperatura:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _memset *****************
  1719 ;; Defined at:
  1720 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  dest            2    0[COMRAM] PTR void 
  1723 ;;		 -> SensorTemperatura@Temperature(10), 
  1724 ;;  c               2    2[COMRAM] int 
  1725 ;;  n               2    4[COMRAM] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  s               2   10[COMRAM] PTR unsigned char 
  1728 ;;		 -> SensorTemperatura@Temperature(10), 
  1729 ;;  k               2    8[COMRAM] unsigned int 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    0[COMRAM] PTR void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1739 ;;      Params:         6       0       0       0       0       0       0       0       0
  1740 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1741 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1742 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1743 ;;Total ram usage:       12 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_SensorTemperatura
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text2
  1753  00228C                     __ptext2:
  1754                           	callstack 0
  1755  00228C                     _memset:
  1756                           	callstack 29
  1757  00228C  C001  F00B         	movff	memset@dest,memset@s
  1758  002290  C002  F00C         	movff	memset@dest+1,memset@s+1
  1759  002294  5005               	movf	memset@n^0,w,c
  1760  002296  1006               	iorwf	(memset@n+1)^0,w,c
  1761  002298  A4D8               	btfss	status,2,c
  1762  00229A  EF51  F011         	goto	u3171
  1763  00229E  EF53  F011         	goto	u3170
  1764  0022A2                     u3171:
  1765  0022A2  EF55  F011         	goto	l3078
  1766  0022A6                     u3170:
  1767  0022A6  EF00  F012         	goto	l1043
  1768  0022AA                     l3078:
  1769  0022AA  C00B  FFD9         	movff	memset@s,fsr2l
  1770  0022AE  C00C  FFDA         	movff	memset@s+1,fsr2h
  1771  0022B2  C003  FFDF         	movff	memset@c,indf2
  1772  0022B6  5005               	movf	memset@n^0,w,c
  1773  0022B8  240B               	addwf	memset@s^0,w,c
  1774  0022BA  6E07               	movwf	??_memset^0,c
  1775  0022BC  5006               	movf	(memset@n+1)^0,w,c
  1776  0022BE  200C               	addwfc	(memset@s+1)^0,w,c
  1777  0022C0  6E08               	movwf	(??_memset+1)^0,c
  1778  0022C2  0EFF               	movlw	255
  1779  0022C4  2407               	addwf	??_memset^0,w,c
  1780  0022C6  6ED9               	movwf	fsr2l,c
  1781  0022C8  0EFF               	movlw	255
  1782  0022CA  2008               	addwfc	(??_memset+1)^0,w,c
  1783  0022CC  6EDA               	movwf	fsr2h,c
  1784  0022CE  C003  FFDF         	movff	memset@c,indf2
  1785  0022D2  5006               	movf	(memset@n+1)^0,w,c
  1786  0022D4  E107               	bnz	u3181
  1787  0022D6  0E03               	movlw	3
  1788  0022D8  5C05               	subwf	memset@n^0,w,c
  1789  0022DA  B0D8               	btfsc	status,0,c
  1790  0022DC  EF72  F011         	goto	u3181
  1791  0022E0  EF74  F011         	goto	u3180
  1792  0022E4                     u3181:
  1793  0022E4  EF76  F011         	goto	l3084
  1794  0022E8                     u3180:
  1795  0022E8  EF00  F012         	goto	l1043
  1796  0022EC                     l3084:
  1797  0022EC  EE20 F001          	lfsr	2,1
  1798  0022F0  500B               	movf	memset@s^0,w,c
  1799  0022F2  26D9               	addwf	fsr2l,f,c
  1800  0022F4  500C               	movf	(memset@s+1)^0,w,c
  1801  0022F6  22DA               	addwfc	fsr2h,f,c
  1802  0022F8  C003  FFDF         	movff	memset@c,indf2
  1803  0022FC  EE20 F002          	lfsr	2,2
  1804  002300  500B               	movf	memset@s^0,w,c
  1805  002302  26D9               	addwf	fsr2l,f,c
  1806  002304  500C               	movf	(memset@s+1)^0,w,c
  1807  002306  22DA               	addwfc	fsr2h,f,c
  1808  002308  C003  FFDF         	movff	memset@c,indf2
  1809  00230C  5005               	movf	memset@n^0,w,c
  1810  00230E  240B               	addwf	memset@s^0,w,c
  1811  002310  6E07               	movwf	??_memset^0,c
  1812  002312  5006               	movf	(memset@n+1)^0,w,c
  1813  002314  200C               	addwfc	(memset@s+1)^0,w,c
  1814  002316  6E08               	movwf	(??_memset+1)^0,c
  1815  002318  0EFE               	movlw	254
  1816  00231A  2407               	addwf	??_memset^0,w,c
  1817  00231C  6ED9               	movwf	fsr2l,c
  1818  00231E  0EFF               	movlw	255
  1819  002320  2008               	addwfc	(??_memset+1)^0,w,c
  1820  002322  6EDA               	movwf	fsr2h,c
  1821  002324  C003  FFDF         	movff	memset@c,indf2
  1822  002328  5005               	movf	memset@n^0,w,c
  1823  00232A  240B               	addwf	memset@s^0,w,c
  1824  00232C  6E07               	movwf	??_memset^0,c
  1825  00232E  5006               	movf	(memset@n+1)^0,w,c
  1826  002330  200C               	addwfc	(memset@s+1)^0,w,c
  1827  002332  6E08               	movwf	(??_memset+1)^0,c
  1828  002334  0EFD               	movlw	253
  1829  002336  2407               	addwf	??_memset^0,w,c
  1830  002338  6ED9               	movwf	fsr2l,c
  1831  00233A  0EFF               	movlw	255
  1832  00233C  2008               	addwfc	(??_memset+1)^0,w,c
  1833  00233E  6EDA               	movwf	fsr2h,c
  1834  002340  C003  FFDF         	movff	memset@c,indf2
  1835  002344  5006               	movf	(memset@n+1)^0,w,c
  1836  002346  E107               	bnz	u3191
  1837  002348  0E07               	movlw	7
  1838  00234A  5C05               	subwf	memset@n^0,w,c
  1839  00234C  B0D8               	btfsc	status,0,c
  1840  00234E  EFAB  F011         	goto	u3191
  1841  002352  EFAD  F011         	goto	u3190
  1842  002356                     u3191:
  1843  002356  EFAF  F011         	goto	l3090
  1844  00235A                     u3190:
  1845  00235A  EF00  F012         	goto	l1043
  1846  00235E                     l3090:
  1847  00235E  EE20 F003          	lfsr	2,3
  1848  002362  500B               	movf	memset@s^0,w,c
  1849  002364  26D9               	addwf	fsr2l,f,c
  1850  002366  500C               	movf	(memset@s+1)^0,w,c
  1851  002368  22DA               	addwfc	fsr2h,f,c
  1852  00236A  C003  FFDF         	movff	memset@c,indf2
  1853  00236E  5005               	movf	memset@n^0,w,c
  1854  002370  240B               	addwf	memset@s^0,w,c
  1855  002372  6E07               	movwf	??_memset^0,c
  1856  002374  5006               	movf	(memset@n+1)^0,w,c
  1857  002376  200C               	addwfc	(memset@s+1)^0,w,c
  1858  002378  6E08               	movwf	(??_memset+1)^0,c
  1859  00237A  0EFC               	movlw	252
  1860  00237C  2407               	addwf	??_memset^0,w,c
  1861  00237E  6ED9               	movwf	fsr2l,c
  1862  002380  0EFF               	movlw	255
  1863  002382  2008               	addwfc	(??_memset+1)^0,w,c
  1864  002384  6EDA               	movwf	fsr2h,c
  1865  002386  C003  FFDF         	movff	memset@c,indf2
  1866  00238A  5006               	movf	(memset@n+1)^0,w,c
  1867  00238C  E107               	bnz	u3201
  1868  00238E  0E09               	movlw	9
  1869  002390  5C05               	subwf	memset@n^0,w,c
  1870  002392  B0D8               	btfsc	status,0,c
  1871  002394  EFCE  F011         	goto	u3201
  1872  002398  EFD0  F011         	goto	u3200
  1873  00239C                     u3201:
  1874  00239C  EFD2  F011         	goto	l3096
  1875  0023A0                     u3200:
  1876  0023A0  EF00  F012         	goto	l1043
  1877  0023A4                     l3096:
  1878  0023A4  C00B  F007         	movff	memset@s,??_memset
  1879  0023A8  C00C  F008         	movff	memset@s+1,??_memset+1
  1880  0023AC  1E07               	comf	??_memset^0,f,c
  1881  0023AE  1E08               	comf	(??_memset+1)^0,f,c
  1882  0023B0  4A07               	infsnz	??_memset^0,f,c
  1883  0023B2  2A08               	incf	(??_memset+1)^0,f,c
  1884  0023B4  0E03               	movlw	3
  1885  0023B6  1407               	andwf	??_memset^0,w,c
  1886  0023B8  6E09               	movwf	memset@k^0,c
  1887  0023BA  6A0A               	clrf	(memset@k+1)^0,c
  1888  0023BC  5009               	movf	memset@k^0,w,c
  1889  0023BE  260B               	addwf	memset@s^0,f,c
  1890  0023C0  500A               	movf	(memset@k+1)^0,w,c
  1891  0023C2  220C               	addwfc	(memset@s+1)^0,f,c
  1892  0023C4  5009               	movf	memset@k^0,w,c
  1893  0023C6  5E05               	subwf	memset@n^0,f,c
  1894  0023C8  500A               	movf	(memset@k+1)^0,w,c
  1895  0023CA  5A06               	subwfb	(memset@n+1)^0,f,c
  1896  0023CC  0EFC               	movlw	252
  1897  0023CE  1605               	andwf	memset@n^0,f,c
  1898  0023D0  0EFF               	movlw	255
  1899  0023D2  1606               	andwf	(memset@n+1)^0,f,c
  1900  0023D4  EFF7  F011         	goto	l3104
  1901  0023D8                     l3098:
  1902  0023D8  C00B  FFD9         	movff	memset@s,fsr2l
  1903  0023DC  C00C  FFDA         	movff	memset@s+1,fsr2h
  1904  0023E0  C003  FFDF         	movff	memset@c,indf2
  1905  0023E4  0605               	decf	memset@n^0,f,c
  1906  0023E6  A0D8               	btfss	status,0,c
  1907  0023E8  0606               	decf	(memset@n+1)^0,f,c
  1908  0023EA  4A0B               	infsnz	memset@s^0,f,c
  1909  0023EC  2A0C               	incf	(memset@s+1)^0,f,c
  1910  0023EE                     l3104:
  1911  0023EE  5005               	movf	memset@n^0,w,c
  1912  0023F0  1006               	iorwf	(memset@n+1)^0,w,c
  1913  0023F2  A4D8               	btfss	status,2,c
  1914  0023F4  EFFE  F011         	goto	u3211
  1915  0023F8  EF00  F012         	goto	u3210
  1916  0023FC                     u3211:
  1917  0023FC  EFEC  F011         	goto	l3098
  1918  002400                     u3210:
  1919  002400                     l1043:
  1920  002400  0012               	return		;funcret
  1921  002402                     __end_of_memset:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function ___fltol *****************
  1925 ;; Defined at:
  1926 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  f1              4    0[COMRAM] PTR void 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  exp1            1    9[COMRAM] unsigned char 
  1931 ;;  sign1           1    8[COMRAM] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  4    0[COMRAM] long 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1941 ;;      Params:         4       0       0       0       0       0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1943 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1944 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1945 ;;Total ram usage:       10 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_SensorTemperatura
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text3
  1955  002566                     __ptext3:
  1956                           	callstack 0
  1957  002566                     ___fltol:
  1958                           	callstack 29
  1959  002566  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1960  002568  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1961  00256A  6E0A               	movwf	___fltol@exp1^0,c
  1962  00256C  500A               	movf	___fltol@exp1^0,w,c
  1963  00256E  A4D8               	btfss	status,2,c
  1964  002570  EFBC  F012         	goto	u3691
  1965  002574  EFBE  F012         	goto	u3690
  1966  002578                     u3691:
  1967  002578  EFC8  F012         	goto	l3414
  1968  00257C                     u3690:
  1969  00257C                     l3410:
  1970  00257C  0E00               	movlw	0
  1971  00257E  6E01               	movwf	?___fltol^0,c
  1972  002580  0E00               	movlw	0
  1973  002582  6E02               	movwf	(?___fltol+1)^0,c
  1974  002584  0E00               	movlw	0
  1975  002586  6E03               	movwf	(?___fltol+2)^0,c
  1976  002588  0E00               	movlw	0
  1977  00258A  6E04               	movwf	(?___fltol+3)^0,c
  1978  00258C  EF35  F013         	goto	l665
  1979  002590                     l3414:
  1980  002590  C001  F005         	movff	___fltol@f1,??___fltol
  1981  002594  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1982  002598  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1983  00259C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1984  0025A0  0E20               	movlw	32
  1985  0025A2  EFD8  F012         	goto	u3700
  1986  0025A6                     u3705:
  1987  0025A6  90D8               	bcf	status,0,c
  1988  0025A8  3208               	rrcf	(??___fltol+3)^0,f,c
  1989  0025AA  3207               	rrcf	(??___fltol+2)^0,f,c
  1990  0025AC  3206               	rrcf	(??___fltol+1)^0,f,c
  1991  0025AE  3205               	rrcf	??___fltol^0,f,c
  1992  0025B0                     u3700:
  1993  0025B0  2EE8               	decfsz	wreg,f,c
  1994  0025B2  EFD3  F012         	goto	u3705
  1995  0025B6  5005               	movf	??___fltol^0,w,c
  1996  0025B8  6E09               	movwf	___fltol@sign1^0,c
  1997  0025BA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1998  0025BC  0EFF               	movlw	255
  1999  0025BE  1601               	andwf	___fltol@f1^0,f,c
  2000  0025C0  0EFF               	movlw	255
  2001  0025C2  1602               	andwf	(___fltol@f1+1)^0,f,c
  2002  0025C4  0EFF               	movlw	255
  2003  0025C6  1603               	andwf	(___fltol@f1+2)^0,f,c
  2004  0025C8  0E00               	movlw	0
  2005  0025CA  1604               	andwf	(___fltol@f1+3)^0,f,c
  2006  0025CC  0E96               	movlw	150
  2007  0025CE  5E0A               	subwf	___fltol@exp1^0,f,c
  2008  0025D0  BE0A               	btfsc	___fltol@exp1^0,7,c
  2009  0025D2  EFEF  F012         	goto	u3710
  2010  0025D6  EFED  F012         	goto	u3711
  2011  0025DA                     u3711:
  2012  0025DA  EF05  F013         	goto	l3434
  2013  0025DE                     u3710:
  2014  0025DE  500A               	movf	___fltol@exp1^0,w,c
  2015  0025E0  0A80               	xorlw	128
  2016  0025E2  0F97               	addlw	151
  2017  0025E4  B0D8               	btfsc	status,0,c
  2018  0025E6  EFF7  F012         	goto	u3721
  2019  0025EA  EFF9  F012         	goto	u3720
  2020  0025EE                     u3721:
  2021  0025EE  EFFB  F012         	goto	l3430
  2022  0025F2                     u3720:
  2023  0025F2  EFBE  F012         	goto	l3410
  2024  0025F6                     l3430:
  2025  0025F6  90D8               	bcf	status,0,c
  2026  0025F8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2027  0025FA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2028  0025FC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2029  0025FE  3201               	rrcf	___fltol@f1^0,f,c
  2030  002600  3E0A               	incfsz	___fltol@exp1^0,f,c
  2031  002602  EFFB  F012         	goto	l3430
  2032  002606  EF1D  F013         	goto	l3444
  2033  00260A                     l3434:
  2034  00260A  0E1F               	movlw	31
  2035  00260C  640A               	cpfsgt	___fltol@exp1^0,c
  2036  00260E  EF0B  F013         	goto	u3731
  2037  002612  EF0D  F013         	goto	u3730
  2038  002616                     u3731:
  2039  002616  EF15  F013         	goto	l3442
  2040  00261A                     u3730:
  2041  00261A  EFBE  F012         	goto	l3410
  2042  00261E                     l3440:
  2043  00261E  90D8               	bcf	status,0,c
  2044  002620  3601               	rlcf	___fltol@f1^0,f,c
  2045  002622  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2046  002624  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2047  002626  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2048  002628  060A               	decf	___fltol@exp1^0,f,c
  2049  00262A                     l3442:
  2050  00262A  500A               	movf	___fltol@exp1^0,w,c
  2051  00262C  A4D8               	btfss	status,2,c
  2052  00262E  EF1B  F013         	goto	u3741
  2053  002632  EF1D  F013         	goto	u3740
  2054  002636                     u3741:
  2055  002636  EF0F  F013         	goto	l3440
  2056  00263A                     u3740:
  2057  00263A                     l3444:
  2058  00263A  5009               	movf	___fltol@sign1^0,w,c
  2059  00263C  B4D8               	btfsc	status,2,c
  2060  00263E  EF23  F013         	goto	u3751
  2061  002642  EF25  F013         	goto	u3750
  2062  002646                     u3751:
  2063  002646  EF2D  F013         	goto	l3448
  2064  00264A                     u3750:
  2065  00264A  1E04               	comf	(___fltol@f1+3)^0,f,c
  2066  00264C  1E03               	comf	(___fltol@f1+2)^0,f,c
  2067  00264E  1E02               	comf	(___fltol@f1+1)^0,f,c
  2068  002650  6C01               	negf	___fltol@f1^0,c
  2069  002652  0E00               	movlw	0
  2070  002654  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2071  002656  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2072  002658  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2073  00265A                     l3448:
  2074  00265A  C001  F001         	movff	___fltol@f1,?___fltol
  2075  00265E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2076  002662  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2077  002666  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2078  00266A                     l665:
  2079  00266A  0012               	return		;funcret
  2080  00266C                     __end_of___fltol:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _LCD_Custom_Char *****************
  2084 ;; Defined at:
  2085 ;;		line 95 in file "LCD_20x4.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  loc             1    wreg     unsigned char 
  2088 ;;  msg             2    7[COMRAM] PTR unsigned char 
  2089 ;;		 -> character2(8), character1(8), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  loc             1    9[COMRAM] unsigned char 
  2092 ;;  i               1   10[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         2       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2105 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        4 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    2
  2109 ;; This function calls:
  2110 ;;		_LCD_Char
  2111 ;;		_LCD_Command
  2112 ;; This function is called by:
  2113 ;;		_SensorTemperatura
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text4
  2118  002E52                     __ptext4:
  2119                           	callstack 0
  2120  002E52                     _LCD_Custom_Char:
  2121                           	callstack 27
  2122                           
  2123                           ;incstack = 0
  2124                           ;LCD_Custom_Char@loc stored from wreg
  2125  002E52  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  2126  002E54                     
  2127                           ;LCD_20x4.c: 95: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD_20x4.c: 
      +                          96: {;LCD_20x4.c: 97:     unsigned char i;;LCD_20x4.c: 98:     if(loc<8)
  2128  002E54  0E08               	movlw	8
  2129  002E56  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  2130  002E58  EF30  F017         	goto	u3141
  2131  002E5C  EF32  F017         	goto	u3140
  2132  002E60                     u3141:
  2133  002E60  EF4C  F017         	goto	l77
  2134  002E64                     u3140:
  2135  002E64                     
  2136                           ;LCD_20x4.c: 99:     {;LCD_20x4.c: 100:      LCD_Command(0x40+(loc*8));
  2137  002E64  500A               	movf	LCD_Custom_Char@loc^0,w,c
  2138  002E66  0D08               	mullw	8
  2139  002E68  50F3               	movf	243,w,c
  2140  002E6A  0F40               	addlw	64
  2141  002E6C  ECF6  F018         	call	_LCD_Command
  2142  002E70                     
  2143                           ;LCD_20x4.c: 101:        for(i=0;i<8;i++)
  2144  002E70  0E00               	movlw	0
  2145  002E72  6E0B               	movwf	LCD_Custom_Char@i^0,c
  2146  002E74                     l3054:
  2147                           
  2148                           ;LCD_20x4.c: 102:            LCD_Char(msg[i]);
  2149  002E74  500B               	movf	LCD_Custom_Char@i^0,w,c
  2150  002E76  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  2151  002E78  6ED9               	movwf	fsr2l,c
  2152  002E7A  0E00               	movlw	0
  2153  002E7C  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  2154  002E7E  6EDA               	movwf	fsr2h,c
  2155  002E80  50DF               	movf	indf2,w,c
  2156  002E82  ECE8  F018         	call	_LCD_Char
  2157  002E86  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  2158  002E88  0E07               	movlw	7
  2159  002E8A  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  2160  002E8C  EF4A  F017         	goto	u3151
  2161  002E90  EF4C  F017         	goto	u3150
  2162  002E94                     u3151:
  2163  002E94  EF3A  F017         	goto	l3054
  2164  002E98                     u3150:
  2165  002E98                     l77:
  2166  002E98  0012               	return		;funcret
  2167  002E9A                     __end_of_LCD_Custom_Char:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _SensorMovimiento *****************
  2171 ;; Defined at:
  2172 ;;		line 182 in file "Controler.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  i               2   84[BANK0 ] int 
  2177 ;;  i               2   82[BANK0 ] int 
  2178 ;;  i               2   80[BANK0 ] int 
  2179 ;;  buffer_TX7     20   40[BANK0 ] unsigned char [20]
  2180 ;;  buffer_TX6     20   20[BANK0 ] unsigned char [20]
  2181 ;;  buffer_TX5     20    0[BANK0 ] unsigned char [20]
  2182 ;;  buf            20   60[BANK0 ] unsigned char [20]
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         0      86       0       0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2195 ;;      Totals:         0      86       0       0       0       0       0       0       0
  2196 ;;Total ram usage:       86 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		_LCD_String_xy
  2201 ;;		_strcat
  2202 ;;		_strcpy
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text5
  2209  001BA2                     __ptext5:
  2210                           	callstack 0
  2211  001BA2                     _SensorMovimiento:
  2212                           	callstack 26
  2213  001BA2                     
  2214                           ;Controler.c: 183:     ADCON1 = 0x0F;
  2215  001BA2  0E0F               	movlw	15
  2216  001BA4  6EC1               	movwf	193,c	;volatile
  2217  001BA6                     
  2218                           ;Controler.c: 184:     TRISAbits.RA2 = 1;
  2219  001BA6  8492               	bsf	146,2,c	;volatile
  2220  001BA8                     
  2221                           ;Controler.c: 185:     TRISAbits.RA3 = 1;
  2222  001BA8  8692               	bsf	146,3,c	;volatile
  2223  001BAA                     
  2224                           ;Controler.c: 186:     TRISAbits.RA4 = 1;
  2225  001BAA  8892               	bsf	146,4,c	;volatile
  2226  001BAC                     
  2227                           ;Controler.c: 187:     TRISCbits.RC0 = 0;
  2228  001BAC  9094               	bcf	148,0,c	;volatile
  2229  001BAE                     
  2230                           ;Controler.c: 188:     TRISCbits.RC1 = 0;
  2231  001BAE  9294               	bcf	148,1,c	;volatile
  2232  001BB0                     
  2233                           ;Controler.c: 189:     TRISCbits.RC2 = 0;
  2234  001BB0  9494               	bcf	148,2,c	;volatile
  2235  001BB2                     
  2236                           ;Controler.c: 190:     char buf[20] = "0";
  2237  001BB2  EE21  F068         	lfsr	2,SensorMovimiento@F3729
  2238  001BB6  EE10  F09C         	lfsr	1,SensorMovimiento@buf
  2239  001BBA  0E13               	movlw	19
  2240  001BBC                     u3941:
  2241  001BBC  CFDB FFE3          	movff	plusw2,plusw1
  2242  001BC0  06E8               	decf	wreg,f,c
  2243  001BC2  E2FC               	bc	u3941
  2244  001BC4                     
  2245                           ;Controler.c: 192:     if (PORTAbits.RA2) {
  2246  001BC4  A480               	btfss	128,2,c	;volatile
  2247  001BC6  EFE7  F00D         	goto	u3951
  2248  001BCA  EFE9  F00D         	goto	u3950
  2249  001BCE                     u3951:
  2250  001BCE  EF24  F00E         	goto	l332
  2251  001BD2                     u3950:
  2252  001BD2                     
  2253                           ;Controler.c: 193:         LATC0 = 1;
  2254  001BD2  808B               	bsf	3979,0,c	;volatile
  2255  001BD4                     
  2256                           ;Controler.c: 194:         strcpy(buf,"1:ON  ");
  2257  001BD4  0E9C               	movlw	low SensorMovimiento@buf
  2258  001BD6  6E05               	movwf	strcpy@dest^0,c
  2259  001BD8  0E00               	movlw	high SensorMovimiento@buf
  2260  001BDA  6E06               	movwf	(strcpy@dest+1)^0,c
  2261  001BDC  0E35               	movlw	low STR_7
  2262  001BDE  6E07               	movwf	strcpy@src^0,c
  2263  001BE0  0E08               	movlw	high STR_7
  2264  001BE2  6E08               	movwf	(strcpy@src+1)^0,c
  2265  001BE4  EC92  F017         	call	_strcpy	;wreg free
  2266  001BE8                     
  2267                           ;Controler.c: 196:         char buffer_TX5[] = "Presencia en la H1\r";
  2268  001BE8  EE21  F054         	lfsr	2,SensorMovimiento@F3731
  2269  001BEC  EE10  F060         	lfsr	1,SensorMovimiento@buffer_TX5
  2270  001BF0  0E13               	movlw	19
  2271  001BF2                     u3961:
  2272  001BF2  CFDB FFE3          	movff	plusw2,plusw1
  2273  001BF6  06E8               	decf	wreg,f,c
  2274  001BF8  E2FC               	bc	u3961
  2275  001BFA                     
  2276                           ;Controler.c: 197:         for (int i = 0; i < 20; i++) {
  2277  001BFA  0E00               	movlw	0
  2278  001BFC  0100               	movlb	0	; () banked
  2279  001BFE  6FB1               	movwf	(SensorMovimiento@i+1)& (0+255),b
  2280  001C00  0E00               	movlw	0
  2281  001C02  6FB0               	movwf	SensorMovimiento@i& (0+255),b
  2282  001C04                     l337:
  2283                           
  2284                           ;Controler.c: 198:             while (!TXSTAbits.TRMT) {
  2285  001C04  A2AC               	btfss	172,1,c	;volatile
  2286  001C06  EF07  F00E         	goto	u3971
  2287  001C0A  EF09  F00E         	goto	u3970
  2288  001C0E                     u3971:
  2289  001C0E  EF02  F00E         	goto	l337
  2290  001C12                     u3970:
  2291  001C12                     
  2292                           ;Controler.c: 200:             TXREG = buffer_TX5[i];
  2293  001C12  0E60               	movlw	low SensorMovimiento@buffer_TX5
  2294  001C14  0100               	movlb	0	; () banked
  2295  001C16  25B0               	addwf	SensorMovimiento@i& (0+255),w,b
  2296  001C18  6ED9               	movwf	fsr2l,c
  2297  001C1A  0E00               	movlw	high SensorMovimiento@buffer_TX5
  2298  001C1C  21B1               	addwfc	(SensorMovimiento@i+1)& (0+255),w,b
  2299  001C1E  6EDA               	movwf	fsr2h,c
  2300  001C20  50DF               	movf	indf2,w,c
  2301  001C22  6EAD               	movwf	173,c	;volatile
  2302  001C24                     
  2303                           ; BSR set to: 0
  2304                           ;Controler.c: 201:         }
  2305  001C24  4BB0               	infsnz	SensorMovimiento@i& (0+255),f,b
  2306  001C26  2BB1               	incf	(SensorMovimiento@i+1)& (0+255),f,b
  2307  001C28                     
  2308                           ; BSR set to: 0
  2309  001C28  BFB1               	btfsc	(SensorMovimiento@i+1)& (0+255),7,b
  2310  001C2A  EF20  F00E         	goto	u3981
  2311  001C2E  51B1               	movf	(SensorMovimiento@i+1)& (0+255),w,b
  2312  001C30  E109               	bnz	u3980
  2313  001C32  0E14               	movlw	20
  2314  001C34  5DB0               	subwf	SensorMovimiento@i& (0+255),w,b
  2315  001C36  A0D8               	btfss	status,0,c
  2316  001C38  EF20  F00E         	goto	u3981
  2317  001C3C  EF22  F00E         	goto	u3980
  2318  001C40                     u3981:
  2319  001C40  EF02  F00E         	goto	l337
  2320  001C44                     u3980:
  2321  001C44  EF2F  F00E         	goto	l3634
  2322  001C48                     l332:
  2323                           
  2324                           ;Controler.c: 204:         LATC0 = 0;
  2325  001C48  908B               	bcf	3979,0,c	;volatile
  2326  001C4A                     
  2327                           ;Controler.c: 205:         strcpy(buf,"1:OFF ");
  2328  001C4A  0E9C               	movlw	low SensorMovimiento@buf
  2329  001C4C  6E05               	movwf	strcpy@dest^0,c
  2330  001C4E  0E00               	movlw	high SensorMovimiento@buf
  2331  001C50  6E06               	movwf	(strcpy@dest+1)^0,c
  2332  001C52  0E58               	movlw	low STR_8
  2333  001C54  6E07               	movwf	strcpy@src^0,c
  2334  001C56  0E08               	movlw	high STR_8
  2335  001C58  6E08               	movwf	(strcpy@src+1)^0,c
  2336  001C5A  EC92  F017         	call	_strcpy	;wreg free
  2337  001C5E                     l3634:
  2338                           
  2339                           ;Controler.c: 209:     if (PORTAbits.RA3) {
  2340  001C5E  A680               	btfss	128,3,c	;volatile
  2341  001C60  EF34  F00E         	goto	u3991
  2342  001C64  EF36  F00E         	goto	u3990
  2343  001C68                     u3991:
  2344  001C68  EF71  F00E         	goto	l341
  2345  001C6C                     u3990:
  2346  001C6C                     
  2347                           ;Controler.c: 210:         LATC1 = 1;
  2348  001C6C  828B               	bsf	3979,1,c	;volatile
  2349  001C6E                     
  2350                           ;Controler.c: 211:         strcat(buf,"2:ON  ");
  2351  001C6E  0E9C               	movlw	low SensorMovimiento@buf
  2352  001C70  6E0D               	movwf	strcat@dest^0,c
  2353  001C72  0E00               	movlw	high SensorMovimiento@buf
  2354  001C74  6E0E               	movwf	(strcat@dest+1)^0,c
  2355  001C76  0E3C               	movlw	low STR_9
  2356  001C78  6E0F               	movwf	strcat@src^0,c
  2357  001C7A  0E08               	movlw	high STR_9
  2358  001C7C  6E10               	movwf	(strcat@src+1)^0,c
  2359  001C7E  ECC4  F018         	call	_strcat	;wreg free
  2360  001C82                     
  2361                           ;Controler.c: 213:         char buffer_TX6[] = "Presencia en la H2\r";
  2362  001C82  EE21  F040         	lfsr	2,SensorMovimiento@F3734
  2363  001C86  EE10  F074         	lfsr	1,SensorMovimiento@buffer_TX6
  2364  001C8A  0E13               	movlw	19
  2365  001C8C                     u4001:
  2366  001C8C  CFDB FFE3          	movff	plusw2,plusw1
  2367  001C90  06E8               	decf	wreg,f,c
  2368  001C92  E2FC               	bc	u4001
  2369  001C94                     
  2370                           ;Controler.c: 214:         for (int i = 0; i < 20; i++) {
  2371  001C94  0E00               	movlw	0
  2372  001C96  0100               	movlb	0	; () banked
  2373  001C98  6FB3               	movwf	(SensorMovimiento@i_936+1)& (0+255),b
  2374  001C9A  0E00               	movlw	0
  2375  001C9C  6FB2               	movwf	SensorMovimiento@i_936& (0+255),b
  2376  001C9E                     l346:
  2377                           
  2378                           ;Controler.c: 215:             while (!TXSTAbits.TRMT) {
  2379  001C9E  A2AC               	btfss	172,1,c	;volatile
  2380  001CA0  EF54  F00E         	goto	u4011
  2381  001CA4  EF56  F00E         	goto	u4010
  2382  001CA8                     u4011:
  2383  001CA8  EF4F  F00E         	goto	l346
  2384  001CAC                     u4010:
  2385  001CAC                     
  2386                           ;Controler.c: 217:             TXREG = buffer_TX6[i];
  2387  001CAC  0E74               	movlw	low SensorMovimiento@buffer_TX6
  2388  001CAE  0100               	movlb	0	; () banked
  2389  001CB0  25B2               	addwf	SensorMovimiento@i_936& (0+255),w,b
  2390  001CB2  6ED9               	movwf	fsr2l,c
  2391  001CB4  0E00               	movlw	high SensorMovimiento@buffer_TX6
  2392  001CB6  21B3               	addwfc	(SensorMovimiento@i_936+1)& (0+255),w,b
  2393  001CB8  6EDA               	movwf	fsr2h,c
  2394  001CBA  50DF               	movf	indf2,w,c
  2395  001CBC  6EAD               	movwf	173,c	;volatile
  2396  001CBE                     
  2397                           ; BSR set to: 0
  2398                           ;Controler.c: 218:         }
  2399  001CBE  4BB2               	infsnz	SensorMovimiento@i_936& (0+255),f,b
  2400  001CC0  2BB3               	incf	(SensorMovimiento@i_936+1)& (0+255),f,b
  2401  001CC2                     
  2402                           ; BSR set to: 0
  2403  001CC2  BFB3               	btfsc	(SensorMovimiento@i_936+1)& (0+255),7,b
  2404  001CC4  EF6D  F00E         	goto	u4021
  2405  001CC8  51B3               	movf	(SensorMovimiento@i_936+1)& (0+255),w,b
  2406  001CCA  E109               	bnz	u4020
  2407  001CCC  0E14               	movlw	20
  2408  001CCE  5DB2               	subwf	SensorMovimiento@i_936& (0+255),w,b
  2409  001CD0  A0D8               	btfss	status,0,c
  2410  001CD2  EF6D  F00E         	goto	u4021
  2411  001CD6  EF6F  F00E         	goto	u4020
  2412  001CDA                     u4021:
  2413  001CDA  EF4F  F00E         	goto	l346
  2414  001CDE                     u4020:
  2415  001CDE  EF7C  F00E         	goto	l3656
  2416  001CE2                     l341:
  2417                           
  2418                           ;Controler.c: 221:         LATC1 = 0;
  2419  001CE2  928B               	bcf	3979,1,c	;volatile
  2420  001CE4                     
  2421                           ;Controler.c: 222:         strcat(buf,"2:OFF ");
  2422  001CE4  0E9C               	movlw	low SensorMovimiento@buf
  2423  001CE6  6E0D               	movwf	strcat@dest^0,c
  2424  001CE8  0E00               	movlw	high SensorMovimiento@buf
  2425  001CEA  6E0E               	movwf	(strcat@dest+1)^0,c
  2426  001CEC  0E5F               	movlw	low STR_10
  2427  001CEE  6E0F               	movwf	strcat@src^0,c
  2428  001CF0  0E08               	movlw	high STR_10
  2429  001CF2  6E10               	movwf	(strcat@src+1)^0,c
  2430  001CF4  ECC4  F018         	call	_strcat	;wreg free
  2431  001CF8                     l3656:
  2432                           
  2433                           ;Controler.c: 226:     if (PORTAbits.RA4) {
  2434  001CF8  A880               	btfss	128,4,c	;volatile
  2435  001CFA  EF81  F00E         	goto	u4031
  2436  001CFE  EF83  F00E         	goto	u4030
  2437  001D02                     u4031:
  2438  001D02  EFBE  F00E         	goto	l350
  2439  001D06                     u4030:
  2440  001D06                     
  2441                           ;Controler.c: 227:         LATC2 = 1;
  2442  001D06  848B               	bsf	3979,2,c	;volatile
  2443  001D08                     
  2444                           ;Controler.c: 228:         strcat(buf,"3:ON  ");
  2445  001D08  0E9C               	movlw	low SensorMovimiento@buf
  2446  001D0A  6E0D               	movwf	strcat@dest^0,c
  2447  001D0C  0E00               	movlw	high SensorMovimiento@buf
  2448  001D0E  6E0E               	movwf	(strcat@dest+1)^0,c
  2449  001D10  0E43               	movlw	low STR_11
  2450  001D12  6E0F               	movwf	strcat@src^0,c
  2451  001D14  0E08               	movlw	high STR_11
  2452  001D16  6E10               	movwf	(strcat@src+1)^0,c
  2453  001D18  ECC4  F018         	call	_strcat	;wreg free
  2454  001D1C                     
  2455                           ;Controler.c: 230:         char buffer_TX7[] = "Presencia en la H3\r";
  2456  001D1C  EE21  F02C         	lfsr	2,SensorMovimiento@F3737
  2457  001D20  EE10  F088         	lfsr	1,SensorMovimiento@buffer_TX7
  2458  001D24  0E13               	movlw	19
  2459  001D26                     u4041:
  2460  001D26  CFDB FFE3          	movff	plusw2,plusw1
  2461  001D2A  06E8               	decf	wreg,f,c
  2462  001D2C  E2FC               	bc	u4041
  2463  001D2E                     
  2464                           ;Controler.c: 231:         for (int i = 0; i < 20; i++) {
  2465  001D2E  0E00               	movlw	0
  2466  001D30  0100               	movlb	0	; () banked
  2467  001D32  6FB5               	movwf	(SensorMovimiento@i_941+1)& (0+255),b
  2468  001D34  0E00               	movlw	0
  2469  001D36  6FB4               	movwf	SensorMovimiento@i_941& (0+255),b
  2470  001D38                     l355:
  2471                           
  2472                           ;Controler.c: 232:             while (!TXSTAbits.TRMT) {
  2473  001D38  A2AC               	btfss	172,1,c	;volatile
  2474  001D3A  EFA1  F00E         	goto	u4051
  2475  001D3E  EFA3  F00E         	goto	u4050
  2476  001D42                     u4051:
  2477  001D42  EF9C  F00E         	goto	l355
  2478  001D46                     u4050:
  2479  001D46                     
  2480                           ;Controler.c: 234:             TXREG = buffer_TX7[i];
  2481  001D46  0E88               	movlw	low SensorMovimiento@buffer_TX7
  2482  001D48  0100               	movlb	0	; () banked
  2483  001D4A  25B4               	addwf	SensorMovimiento@i_941& (0+255),w,b
  2484  001D4C  6ED9               	movwf	fsr2l,c
  2485  001D4E  0E00               	movlw	high SensorMovimiento@buffer_TX7
  2486  001D50  21B5               	addwfc	(SensorMovimiento@i_941+1)& (0+255),w,b
  2487  001D52  6EDA               	movwf	fsr2h,c
  2488  001D54  50DF               	movf	indf2,w,c
  2489  001D56  6EAD               	movwf	173,c	;volatile
  2490  001D58                     
  2491                           ; BSR set to: 0
  2492                           ;Controler.c: 235:         }
  2493  001D58  4BB4               	infsnz	SensorMovimiento@i_941& (0+255),f,b
  2494  001D5A  2BB5               	incf	(SensorMovimiento@i_941+1)& (0+255),f,b
  2495  001D5C                     
  2496                           ; BSR set to: 0
  2497  001D5C  BFB5               	btfsc	(SensorMovimiento@i_941+1)& (0+255),7,b
  2498  001D5E  EFBA  F00E         	goto	u4061
  2499  001D62  51B5               	movf	(SensorMovimiento@i_941+1)& (0+255),w,b
  2500  001D64  E109               	bnz	u4060
  2501  001D66  0E14               	movlw	20
  2502  001D68  5DB4               	subwf	SensorMovimiento@i_941& (0+255),w,b
  2503  001D6A  A0D8               	btfss	status,0,c
  2504  001D6C  EFBA  F00E         	goto	u4061
  2505  001D70  EFBC  F00E         	goto	u4060
  2506  001D74                     u4061:
  2507  001D74  EF9C  F00E         	goto	l355
  2508  001D78                     u4060:
  2509  001D78  EFC9  F00E         	goto	l3678
  2510  001D7C                     l350:
  2511                           
  2512                           ;Controler.c: 237:         LATC2 = 0;
  2513  001D7C  948B               	bcf	3979,2,c	;volatile
  2514  001D7E                     
  2515                           ;Controler.c: 238:         strcat(buf,"3:OFF ");
  2516  001D7E  0E9C               	movlw	low SensorMovimiento@buf
  2517  001D80  6E0D               	movwf	strcat@dest^0,c
  2518  001D82  0E00               	movlw	high SensorMovimiento@buf
  2519  001D84  6E0E               	movwf	(strcat@dest+1)^0,c
  2520  001D86  0E66               	movlw	low STR_12
  2521  001D88  6E0F               	movwf	strcat@src^0,c
  2522  001D8A  0E08               	movlw	high STR_12
  2523  001D8C  6E10               	movwf	(strcat@src+1)^0,c
  2524  001D8E  ECC4  F018         	call	_strcat	;wreg free
  2525  001D92                     l3678:
  2526                           
  2527                           ;Controler.c: 241:     LCD_String_xy(3,0,buf);
  2528  001D92  0E00               	movlw	0
  2529  001D94  6E0A               	movwf	LCD_String_xy@pos^0,c
  2530  001D96  0E9C               	movlw	low SensorMovimiento@buf
  2531  001D98  6E0B               	movwf	LCD_String_xy@str^0,c
  2532  001D9A  0E00               	movlw	high SensorMovimiento@buf
  2533  001D9C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2534  001D9E  0E03               	movlw	3
  2535  001DA0  ECD4  F015         	call	_LCD_String_xy
  2536  001DA4  0012               	return		;funcret
  2537  001DA6                     __end_of_SensorMovimiento:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _strcat *****************
  2541 ;; Defined at:
  2542 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcat.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  dest            2   12[COMRAM] PTR unsigned char 
  2545 ;;		 -> SensorMovimiento@buf(20), 
  2546 ;;  src             2   14[COMRAM] PTR const unsigned char 
  2547 ;;		 -> STR_12(7), STR_11(7), STR_10(7), STR_9(7), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2   12[COMRAM] PTR unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2559 ;;      Params:         4       0       0       0       0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2562 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2563 ;;Total ram usage:        4 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    1
  2566 ;; This function calls:
  2567 ;;		_strcpy
  2568 ;;		_strlen
  2569 ;; This function is called by:
  2570 ;;		_SensorMovimiento
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text6
  2575  003188                     __ptext6:
  2576                           	callstack 0
  2577  003188                     _strcat:
  2578                           	callstack 28
  2579  003188  C00D  F001         	movff	strcat@dest,strlen@s
  2580  00318C  C00E  F002         	movff	strcat@dest+1,strlen@s+1
  2581  003190  EC64  F018         	call	_strlen	;wreg free
  2582  003194  5001               	movf	?_strlen^0,w,c
  2583  003196  240D               	addwf	strcat@dest^0,w,c
  2584  003198  6E05               	movwf	strcpy@dest^0,c
  2585  00319A  5002               	movf	(?_strlen+1)^0,w,c
  2586  00319C  200E               	addwfc	(strcat@dest+1)^0,w,c
  2587  00319E  6E06               	movwf	(strcpy@dest+1)^0,c
  2588  0031A0  C00F  F007         	movff	strcat@src,strcpy@src
  2589  0031A4  C010  F008         	movff	strcat@src+1,strcpy@src+1
  2590  0031A8  EC92  F017         	call	_strcpy	;wreg free
  2591  0031AC  0012               	return		;funcret
  2592  0031AE                     __end_of_strcat:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _strcpy *****************
  2596 ;; Defined at:
  2597 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dest            2    4[COMRAM] PTR unsigned char 
  2600 ;;		 -> SensorMovimiento@buf(20), 
  2601 ;;  src             2    6[COMRAM] PTR const unsigned char 
  2602 ;;		 -> STR_12(7), STR_11(7), STR_10(7), STR_9(7), 
  2603 ;;		 -> STR_8(7), STR_7(7), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  d               2   10[COMRAM] PTR unsigned char 
  2606 ;;		 -> SensorMovimiento@buf(20), 
  2607 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2608 ;;		 -> STR_12(7), STR_11(7), STR_10(7), STR_9(7), 
  2609 ;;		 -> STR_8(7), STR_7(7), 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2    4[COMRAM] PTR unsigned char 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2619 ;;      Params:         4       0       0       0       0       0       0       0       0
  2620 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2622 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2623 ;;Total ram usage:        8 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_SensorMovimiento
  2629 ;;		_strcat
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text7
  2634  002F24                     __ptext7:
  2635                           	callstack 0
  2636  002F24                     _strcpy:
  2637                           	callstack 29
  2638  002F24  C007  F009         	movff	strcpy@src,strcpy@s
  2639  002F28  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  2640  002F2C  C005  F00B         	movff	strcpy@dest,strcpy@d
  2641  002F30  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  2642  002F34                     l3008:
  2643  002F34  C009  FFF6         	movff	strcpy@s,tblptrl
  2644  002F38  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  2645  002F3C  4A09               	infsnz	strcpy@s^0,f,c
  2646  002F3E  2A0A               	incf	(strcpy@s+1)^0,f,c
  2647  002F40                     	if	0	;tblptru may be non-zero
  2648  002F40                     	endif
  2649  002F40                     	if	0	;tblptru may be non-zero
  2650  002F40                     	endif
  2651  002F40  C00B  FFD9         	movff	strcpy@d,fsr2l
  2652  002F44  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  2653  002F48  4A0B               	infsnz	strcpy@d^0,f,c
  2654  002F4A  2A0C               	incf	(strcpy@d+1)^0,f,c
  2655  002F4C  0008               	tblrd		*
  2656  002F4E  CFF5 FFDF          	movff	tablat,indf2
  2657  002F52  50DF               	movf	indf2,w,c
  2658  002F54  A4D8               	btfss	status,2,c
  2659  002F56  EFAF  F017         	goto	u3011
  2660  002F5A  EFB1  F017         	goto	u3010
  2661  002F5E                     u3011:
  2662  002F5E  EF9A  F017         	goto	l3008
  2663  002F62                     u3010:
  2664  002F62  0012               	return		;funcret
  2665  002F64                     __end_of_strcpy:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _SensorLuz *****************
  2669 ;; Defined at:
  2670 ;;		line 146 in file "Controler.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  i               2   37[BANK0 ] int 
  2675 ;;  i               2   35[BANK0 ] int 
  2676 ;;  buffer_TX4     15   16[BANK0 ] unsigned char [15]
  2677 ;;  buffer_TX3     16    0[BANK0 ] unsigned char [16]
  2678 ;;  val             4   31[BANK0 ] float 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0      39       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0      39       0       0       0       0       0       0       0
  2692 ;;Total ram usage:       39 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    4
  2695 ;; This function calls:
  2696 ;;		_ADC_Read
  2697 ;;		_LCD_Command
  2698 ;;		_LCD_String_xy
  2699 ;;		_MSdelay
  2700 ;;		___fldiv
  2701 ;;		___flge
  2702 ;;		___flmul
  2703 ;;		___xxtofl
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text8
  2710  001F5A                     __ptext8:
  2711                           	callstack 0
  2712  001F5A                     _SensorLuz:
  2713                           	callstack 26
  2714  001F5A                     
  2715                           ;Controler.c: 148:     float val;;Controler.c: 149:     LCD_Command(0x40);
  2716  001F5A  0E40               	movlw	64
  2717  001F5C  ECF6  F018         	call	_LCD_Command
  2718  001F60                     
  2719                           ;Controler.c: 150:     val = (ADC_Read(1)*5.0) / 1023.0;
  2720  001F60  0E00               	movlw	0
  2721  001F62  6E1B               	movwf	___flmul@a^0,c
  2722  001F64  0E00               	movlw	0
  2723  001F66  6E1C               	movwf	(___flmul@a+1)^0,c
  2724  001F68  0EA0               	movlw	160
  2725  001F6A  6E1D               	movwf	(___flmul@a+2)^0,c
  2726  001F6C  0E40               	movlw	64
  2727  001F6E  6E1E               	movwf	(___flmul@a+3)^0,c
  2728  001F70  0E00               	movlw	0
  2729  001F72  6E02               	movwf	(ADC_Read@channel+1)^0,c
  2730  001F74  0E01               	movlw	1
  2731  001F76  6E01               	movwf	ADC_Read@channel^0,c
  2732  001F78  ECEC  F014         	call	_ADC_Read	;wreg free
  2733  001F7C  C001  F009         	movff	?_ADC_Read,___xxtofl@val
  2734  001F80  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
  2735  001F84  0E00               	movlw	0
  2736  001F86  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  2737  001F88  0EFF               	movlw	-1
  2738  001F8A  6E0B               	movwf	(___xxtofl@val+2)^0,c
  2739  001F8C  6E0C               	movwf	(___xxtofl@val+3)^0,c
  2740  001F8E  0E01               	movlw	1
  2741  001F90  ECD3  F00E         	call	___xxtofl
  2742  001F94  C009  F017         	movff	?___xxtofl,___flmul@b
  2743  001F98  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  2744  001F9C  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  2745  001FA0  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  2746  001FA4  EC3C  F004         	call	___flmul	;wreg free
  2747  001FA8  C017  F030         	movff	?___flmul,___fldiv@b
  2748  001FAC  C018  F031         	movff	?___flmul+1,___fldiv@b+1
  2749  001FB0  C019  F032         	movff	?___flmul+2,___fldiv@b+2
  2750  001FB4  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
  2751  001FB8  0E00               	movlw	0
  2752  001FBA  6E34               	movwf	___fldiv@a^0,c
  2753  001FBC  0EC0               	movlw	192
  2754  001FBE  6E35               	movwf	(___fldiv@a+1)^0,c
  2755  001FC0  0E7F               	movlw	127
  2756  001FC2  6E36               	movwf	(___fldiv@a+2)^0,c
  2757  001FC4  0E44               	movlw	68
  2758  001FC6  6E37               	movwf	(___fldiv@a+3)^0,c
  2759  001FC8  EC51  F006         	call	___fldiv	;wreg free
  2760  001FCC  C030  F07F         	movff	?___fldiv,SensorLuz@val
  2761  001FD0  C031  F080         	movff	?___fldiv+1,SensorLuz@val+1
  2762  001FD4  C032  F081         	movff	?___fldiv+2,SensorLuz@val+2
  2763  001FD8  C033  F082         	movff	?___fldiv+3,SensorLuz@val+3
  2764  001FDC                     
  2765                           ;Controler.c: 152:     if (val > 3) {
  2766  001FDC  0E00               	movlw	0
  2767  001FDE  6E01               	movwf	___flge@ff1^0,c
  2768  001FE0  0E00               	movlw	0
  2769  001FE2  6E02               	movwf	(___flge@ff1+1)^0,c
  2770  001FE4  0E40               	movlw	64
  2771  001FE6  6E03               	movwf	(___flge@ff1+2)^0,c
  2772  001FE8  0E40               	movlw	64
  2773  001FEA  6E04               	movwf	(___flge@ff1+3)^0,c
  2774  001FEC  C07F  F005         	movff	SensorLuz@val,___flge@ff2
  2775  001FF0  C080  F006         	movff	SensorLuz@val+1,___flge@ff2+1
  2776  001FF4  C081  F007         	movff	SensorLuz@val+2,___flge@ff2+2
  2777  001FF8  C082  F008         	movff	SensorLuz@val+3,___flge@ff2+3
  2778  001FFC  EC36  F013         	call	___flge	;wreg free
  2779  002000  B0D8               	btfsc	status,0,c
  2780  002002  EF05  F010         	goto	u4071
  2781  002006  EF07  F010         	goto	u4070
  2782  00200A                     u4071:
  2783  00200A  EF47  F010         	goto	l3706
  2784  00200E                     u4070:
  2785  00200E                     
  2786                           ;Controler.c: 154:         LCD_String_xy(4, 0, "Cortina Arriba       ");
  2787  00200E  0E00               	movlw	0
  2788  002010  6E0A               	movwf	LCD_String_xy@pos^0,c
  2789  002012  0E17               	movlw	low STR_5
  2790  002014  6E0B               	movwf	LCD_String_xy@str^0,c
  2791  002016  0E08               	movlw	high STR_5
  2792  002018  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2793  00201A  0E04               	movlw	4
  2794  00201C  ECD4  F015         	call	_LCD_String_xy
  2795  002020                     
  2796                           ;Controler.c: 155:         PORTEbits.RE0 = 1;
  2797  002020  8084               	bsf	132,0,c	;volatile
  2798  002022                     
  2799                           ;Controler.c: 156:         char buffer_TX3[] = "Cortina arriba\r";
  2800  002022  EE21  F07C         	lfsr	2,SensorLuz@F3722
  2801  002026  EE10  F060         	lfsr	1,SensorLuz@buffer_TX3
  2802  00202A  0E0F               	movlw	15
  2803  00202C                     u4081:
  2804  00202C  CFDB FFE3          	movff	plusw2,plusw1
  2805  002030  06E8               	decf	wreg,f,c
  2806  002032  E2FC               	bc	u4081
  2807  002034                     
  2808                           ;Controler.c: 157:         for (int i = 0; i < 15; i++) {
  2809  002034  0E00               	movlw	0
  2810  002036  0100               	movlb	0	; () banked
  2811  002038  6F84               	movwf	(SensorLuz@i+1)& (0+255),b
  2812  00203A  0E00               	movlw	0
  2813  00203C  6F83               	movwf	SensorLuz@i& (0+255),b
  2814  00203E                     l316:
  2815                           
  2816                           ;Controler.c: 158:             while (!TXSTAbits.TRMT) {
  2817  00203E  A2AC               	btfss	172,1,c	;volatile
  2818  002040  EF24  F010         	goto	u4091
  2819  002044  EF26  F010         	goto	u4090
  2820  002048                     u4091:
  2821  002048  EF1F  F010         	goto	l316
  2822  00204C                     u4090:
  2823  00204C                     
  2824                           ;Controler.c: 160:             TXREG = buffer_TX3[i];
  2825  00204C  0E60               	movlw	low SensorLuz@buffer_TX3
  2826  00204E  0100               	movlb	0	; () banked
  2827  002050  2583               	addwf	SensorLuz@i& (0+255),w,b
  2828  002052  6ED9               	movwf	fsr2l,c
  2829  002054  0E00               	movlw	high SensorLuz@buffer_TX3
  2830  002056  2184               	addwfc	(SensorLuz@i+1)& (0+255),w,b
  2831  002058  6EDA               	movwf	fsr2h,c
  2832  00205A  50DF               	movf	indf2,w,c
  2833  00205C  6EAD               	movwf	173,c	;volatile
  2834  00205E                     
  2835                           ; BSR set to: 0
  2836                           ;Controler.c: 161:         }
  2837  00205E  4B83               	infsnz	SensorLuz@i& (0+255),f,b
  2838  002060  2B84               	incf	(SensorLuz@i+1)& (0+255),f,b
  2839  002062                     
  2840                           ; BSR set to: 0
  2841  002062  BF84               	btfsc	(SensorLuz@i+1)& (0+255),7,b
  2842  002064  EF3D  F010         	goto	u4101
  2843  002068  5184               	movf	(SensorLuz@i+1)& (0+255),w,b
  2844  00206A  E109               	bnz	u4100
  2845  00206C  0E0F               	movlw	15
  2846  00206E  5D83               	subwf	SensorLuz@i& (0+255),w,b
  2847  002070  A0D8               	btfss	status,0,c
  2848  002072  EF3D  F010         	goto	u4101
  2849  002076  EF3F  F010         	goto	u4100
  2850  00207A                     u4101:
  2851  00207A  EF1F  F010         	goto	l316
  2852  00207E                     u4100:
  2853  00207E                     l3704:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;Controler.c: 162:         MSdelay(1000);
  2857  00207E  0E03               	movlw	3
  2858  002080  6E02               	movwf	(MSdelay@val+1)^0,c
  2859  002082  0EE8               	movlw	232
  2860  002084  6E01               	movwf	MSdelay@val^0,c
  2861  002086  EC04  F017         	call	_MSdelay	;wreg free
  2862                           
  2863                           ;Controler.c: 164:     } else {
  2864  00208A  EF81  F010         	goto	l327
  2865  00208E                     l3706:
  2866                           
  2867                           ;Controler.c: 165:         LCD_String_xy(4, 0, "Cortina Abajo        ");
  2868  00208E  0E00               	movlw	0
  2869  002090  6E0A               	movwf	LCD_String_xy@pos^0,c
  2870  002092  0E01               	movlw	low STR_6
  2871  002094  6E0B               	movwf	LCD_String_xy@str^0,c
  2872  002096  0E08               	movlw	high STR_6
  2873  002098  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2874  00209A  0E04               	movlw	4
  2875  00209C  ECD4  F015         	call	_LCD_String_xy
  2876  0020A0                     
  2877                           ;Controler.c: 166:         PORTEbits.RE0 = 0;
  2878  0020A0  9084               	bcf	132,0,c	;volatile
  2879  0020A2                     
  2880                           ;Controler.c: 167:         char buffer_TX4[] = "Cortina abajo\r";
  2881  0020A2  EE21  F08C         	lfsr	2,SensorLuz@F3725
  2882  0020A6  EE10  F070         	lfsr	1,SensorLuz@buffer_TX4
  2883  0020AA  0E0E               	movlw	14
  2884  0020AC                     u4111:
  2885  0020AC  CFDB FFE3          	movff	plusw2,plusw1
  2886  0020B0  06E8               	decf	wreg,f,c
  2887  0020B2  E2FC               	bc	u4111
  2888  0020B4                     
  2889                           ;Controler.c: 168:         for (int i = 0; i < 15; i++) {
  2890  0020B4  0E00               	movlw	0
  2891  0020B6  0100               	movlb	0	; () banked
  2892  0020B8  6F86               	movwf	(SensorLuz@i_910+1)& (0+255),b
  2893  0020BA  0E00               	movlw	0
  2894  0020BC  6F85               	movwf	SensorLuz@i_910& (0+255),b
  2895  0020BE                     l324:
  2896                           
  2897                           ;Controler.c: 169:             while (!TXSTAbits.TRMT) {
  2898  0020BE  A2AC               	btfss	172,1,c	;volatile
  2899  0020C0  EF64  F010         	goto	u4121
  2900  0020C4  EF66  F010         	goto	u4120
  2901  0020C8                     u4121:
  2902  0020C8  EF5F  F010         	goto	l324
  2903  0020CC                     u4120:
  2904  0020CC                     
  2905                           ;Controler.c: 171:             TXREG = buffer_TX4[i];
  2906  0020CC  0E70               	movlw	low SensorLuz@buffer_TX4
  2907  0020CE  0100               	movlb	0	; () banked
  2908  0020D0  2585               	addwf	SensorLuz@i_910& (0+255),w,b
  2909  0020D2  6ED9               	movwf	fsr2l,c
  2910  0020D4  0E00               	movlw	high SensorLuz@buffer_TX4
  2911  0020D6  2186               	addwfc	(SensorLuz@i_910+1)& (0+255),w,b
  2912  0020D8  6EDA               	movwf	fsr2h,c
  2913  0020DA  50DF               	movf	indf2,w,c
  2914  0020DC  6EAD               	movwf	173,c	;volatile
  2915  0020DE                     
  2916                           ; BSR set to: 0
  2917                           ;Controler.c: 172:         }
  2918  0020DE  4B85               	infsnz	SensorLuz@i_910& (0+255),f,b
  2919  0020E0  2B86               	incf	(SensorLuz@i_910+1)& (0+255),f,b
  2920  0020E2                     
  2921                           ; BSR set to: 0
  2922  0020E2  BF86               	btfsc	(SensorLuz@i_910+1)& (0+255),7,b
  2923  0020E4  EF7D  F010         	goto	u4131
  2924  0020E8  5186               	movf	(SensorLuz@i_910+1)& (0+255),w,b
  2925  0020EA  E109               	bnz	u4130
  2926  0020EC  0E0F               	movlw	15
  2927  0020EE  5D85               	subwf	SensorLuz@i_910& (0+255),w,b
  2928  0020F0  A0D8               	btfss	status,0,c
  2929  0020F2  EF7D  F010         	goto	u4131
  2930  0020F6  EF7F  F010         	goto	u4130
  2931  0020FA                     u4131:
  2932  0020FA  EF5F  F010         	goto	l324
  2933  0020FE                     u4130:
  2934  0020FE  EF3F  F010         	goto	l3704
  2935  002102                     l327:
  2936  002102  0012               	return		;funcret
  2937  002104                     __end_of_SensorLuz:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function ___xxtofl *****************
  2941 ;; Defined at:
  2942 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  sign            1    wreg     unsigned char 
  2945 ;;  val             4    8[COMRAM] long 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  sign            1   16[COMRAM] unsigned char 
  2948 ;;  arg             4   18[COMRAM] unsigned long 
  2949 ;;  exp             1   17[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  4    8[COMRAM] unsigned char 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2959 ;;      Params:         4       0       0       0       0       0       0       0       0
  2960 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2961 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2962 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2963 ;;Total ram usage:       14 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_SensorTemperatura
  2969 ;;		_SensorLuz
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text9
  2974  001DA6                     __ptext9:
  2975                           	callstack 0
  2976  001DA6                     ___xxtofl:
  2977                           	callstack 29
  2978                           
  2979                           ;incstack = 0
  2980                           ;___xxtofl@sign stored from wreg
  2981  001DA6  6E11               	movwf	___xxtofl@sign^0,c
  2982  001DA8  5011               	movf	___xxtofl@sign^0,w,c
  2983  001DAA  B4D8               	btfsc	status,2,c
  2984  001DAC  EFDA  F00E         	goto	u3761
  2985  001DB0  EFDC  F00E         	goto	u3760
  2986  001DB4                     u3761:
  2987  001DB4  EFFE  F00E         	goto	l1023
  2988  001DB8                     u3760:
  2989  001DB8  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2990  001DBA  EFE3  F00E         	goto	u3770
  2991  001DBE  EFE1  F00E         	goto	u3771
  2992  001DC2                     u3771:
  2993  001DC2  EFFE  F00E         	goto	l1023
  2994  001DC6                     u3770:
  2995  001DC6  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2996  001DCA  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2997  001DCE  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2998  001DD2  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2999  001DD6  1E0D               	comf	??___xxtofl^0,f,c
  3000  001DD8  1E0E               	comf	(??___xxtofl+1)^0,f,c
  3001  001DDA  1E0F               	comf	(??___xxtofl+2)^0,f,c
  3002  001DDC  1E10               	comf	(??___xxtofl+3)^0,f,c
  3003  001DDE  2A0D               	incf	??___xxtofl^0,f,c
  3004  001DE0  0E00               	movlw	0
  3005  001DE2  220E               	addwfc	(??___xxtofl+1)^0,f,c
  3006  001DE4  220F               	addwfc	(??___xxtofl+2)^0,f,c
  3007  001DE6  2210               	addwfc	(??___xxtofl+3)^0,f,c
  3008  001DE8  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  3009  001DEC  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  3010  001DF0  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  3011  001DF4  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  3012  001DF8  EF06  F00F         	goto	l3458
  3013  001DFC                     l1023:
  3014  001DFC  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  3015  001E00  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3016  001E04  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3017  001E08  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3018  001E0C                     l3458:
  3019  001E0C  5009               	movf	___xxtofl@val^0,w,c
  3020  001E0E  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  3021  001E10  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  3022  001E12  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  3023  001E14  A4D8               	btfss	status,2,c
  3024  001E16  EF0F  F00F         	goto	u3781
  3025  001E1A  EF11  F00F         	goto	u3780
  3026  001E1E                     u3781:
  3027  001E1E  EF1B  F00F         	goto	l3464
  3028  001E22                     u3780:
  3029  001E22  0E00               	movlw	0
  3030  001E24  6E09               	movwf	?___xxtofl^0,c
  3031  001E26  0E00               	movlw	0
  3032  001E28  6E0A               	movwf	(?___xxtofl+1)^0,c
  3033  001E2A  0E00               	movlw	0
  3034  001E2C  6E0B               	movwf	(?___xxtofl+2)^0,c
  3035  001E2E  0E00               	movlw	0
  3036  001E30  6E0C               	movwf	(?___xxtofl+3)^0,c
  3037  001E32  EFAC  F00F         	goto	l1026
  3038  001E36                     l3464:
  3039  001E36  0E96               	movlw	150
  3040  001E38  6E12               	movwf	___xxtofl@exp^0,c
  3041  001E3A  EF25  F00F         	goto	l3468
  3042  001E3E                     l3466:
  3043  001E3E  2A12               	incf	___xxtofl@exp^0,f,c
  3044  001E40  90D8               	bcf	status,0,c
  3045  001E42  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  3046  001E44  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  3047  001E46  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  3048  001E48  3213               	rrcf	___xxtofl@arg^0,f,c
  3049  001E4A                     l3468:
  3050  001E4A  0E00               	movlw	0
  3051  001E4C  1413               	andwf	___xxtofl@arg^0,w,c
  3052  001E4E  6E0D               	movwf	??___xxtofl^0,c
  3053  001E50  0E00               	movlw	0
  3054  001E52  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  3055  001E54  6E0E               	movwf	(??___xxtofl+1)^0,c
  3056  001E56  0E00               	movlw	0
  3057  001E58  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  3058  001E5A  6E0F               	movwf	(??___xxtofl+2)^0,c
  3059  001E5C  0EFE               	movlw	254
  3060  001E5E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  3061  001E60  6E10               	movwf	(??___xxtofl+3)^0,c
  3062  001E62  500D               	movf	??___xxtofl^0,w,c
  3063  001E64  100E               	iorwf	(??___xxtofl+1)^0,w,c
  3064  001E66  100F               	iorwf	(??___xxtofl+2)^0,w,c
  3065  001E68  1010               	iorwf	(??___xxtofl+3)^0,w,c
  3066  001E6A  A4D8               	btfss	status,2,c
  3067  001E6C  EF3A  F00F         	goto	u3791
  3068  001E70  EF3C  F00F         	goto	u3790
  3069  001E74                     u3791:
  3070  001E74  EF1F  F00F         	goto	l3466
  3071  001E78                     u3790:
  3072  001E78  EF4A  F00F         	goto	l1030
  3073  001E7C                     l3470:
  3074  001E7C  2A12               	incf	___xxtofl@exp^0,f,c
  3075  001E7E  0E01               	movlw	1
  3076  001E80  2613               	addwf	___xxtofl@arg^0,f,c
  3077  001E82  0E00               	movlw	0
  3078  001E84  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  3079  001E86  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  3080  001E88  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  3081  001E8A  90D8               	bcf	status,0,c
  3082  001E8C  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  3083  001E8E  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  3084  001E90  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  3085  001E92  3213               	rrcf	___xxtofl@arg^0,f,c
  3086  001E94                     l1030:
  3087  001E94  0E00               	movlw	0
  3088  001E96  1413               	andwf	___xxtofl@arg^0,w,c
  3089  001E98  6E0D               	movwf	??___xxtofl^0,c
  3090  001E9A  0E00               	movlw	0
  3091  001E9C  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  3092  001E9E  6E0E               	movwf	(??___xxtofl+1)^0,c
  3093  001EA0  0E00               	movlw	0
  3094  001EA2  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  3095  001EA4  6E0F               	movwf	(??___xxtofl+2)^0,c
  3096  001EA6  0EFF               	movlw	255
  3097  001EA8  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  3098  001EAA  6E10               	movwf	(??___xxtofl+3)^0,c
  3099  001EAC  500D               	movf	??___xxtofl^0,w,c
  3100  001EAE  100E               	iorwf	(??___xxtofl+1)^0,w,c
  3101  001EB0  100F               	iorwf	(??___xxtofl+2)^0,w,c
  3102  001EB2  1010               	iorwf	(??___xxtofl+3)^0,w,c
  3103  001EB4  A4D8               	btfss	status,2,c
  3104  001EB6  EF5F  F00F         	goto	u3801
  3105  001EBA  EF61  F00F         	goto	u3800
  3106  001EBE                     u3801:
  3107  001EBE  EF3E  F00F         	goto	l3470
  3108  001EC2                     u3800:
  3109  001EC2  EF69  F00F         	goto	l3478
  3110  001EC6                     l3476:
  3111  001EC6  0612               	decf	___xxtofl@exp^0,f,c
  3112  001EC8  90D8               	bcf	status,0,c
  3113  001ECA  3613               	rlcf	___xxtofl@arg^0,f,c
  3114  001ECC  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  3115  001ECE  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  3116  001ED0  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  3117  001ED2                     l3478:
  3118  001ED2  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  3119  001ED4  EF6E  F00F         	goto	u3811
  3120  001ED8  EF70  F00F         	goto	u3810
  3121  001EDC                     u3811:
  3122  001EDC  EF78  F00F         	goto	l1037
  3123  001EE0                     u3810:
  3124  001EE0  0E02               	movlw	2
  3125  001EE2  6012               	cpfslt	___xxtofl@exp^0,c
  3126  001EE4  EF76  F00F         	goto	u3821
  3127  001EE8  EF78  F00F         	goto	u3820
  3128  001EEC                     u3821:
  3129  001EEC  EF63  F00F         	goto	l3476
  3130  001EF0                     u3820:
  3131  001EF0                     l1037:
  3132  001EF0  B012               	btfsc	___xxtofl@exp^0,0,c
  3133  001EF2  EF7D  F00F         	goto	u3831
  3134  001EF6  EF7F  F00F         	goto	u3830
  3135  001EFA                     u3831:
  3136  001EFA  EF80  F00F         	goto	l3484
  3137  001EFE                     u3830:
  3138  001EFE  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  3139  001F00                     l3484:
  3140  001F00  90D8               	bcf	status,0,c
  3141  001F02  3212               	rrcf	___xxtofl@exp^0,f,c
  3142  001F04  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  3143  001F08  6A0E               	clrf	(??___xxtofl+1)^0,c
  3144  001F0A  6A0F               	clrf	(??___xxtofl+2)^0,c
  3145  001F0C  6A10               	clrf	(??___xxtofl+3)^0,c
  3146  001F0E  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  3147  001F12  6A0F               	clrf	(??___xxtofl+2)^0,c
  3148  001F14  6A0E               	clrf	(??___xxtofl+1)^0,c
  3149  001F16  6A0D               	clrf	??___xxtofl^0,c
  3150  001F18  500D               	movf	??___xxtofl^0,w,c
  3151  001F1A  1213               	iorwf	___xxtofl@arg^0,f,c
  3152  001F1C  500E               	movf	(??___xxtofl+1)^0,w,c
  3153  001F1E  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  3154  001F20  500F               	movf	(??___xxtofl+2)^0,w,c
  3155  001F22  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  3156  001F24  5010               	movf	(??___xxtofl+3)^0,w,c
  3157  001F26  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  3158  001F28  5011               	movf	___xxtofl@sign^0,w,c
  3159  001F2A  B4D8               	btfsc	status,2,c
  3160  001F2C  EF9A  F00F         	goto	u3841
  3161  001F30  EF9C  F00F         	goto	u3840
  3162  001F34                     u3841:
  3163  001F34  EFA4  F00F         	goto	l3494
  3164  001F38                     u3840:
  3165  001F38  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  3166  001F3A  EFA3  F00F         	goto	u3850
  3167  001F3E  EFA1  F00F         	goto	u3851
  3168  001F42                     u3851:
  3169  001F42  EFA4  F00F         	goto	l3494
  3170  001F46                     u3850:
  3171  001F46  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  3172  001F48                     l3494:
  3173  001F48  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  3174  001F4C  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  3175  001F50  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  3176  001F54  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  3177  001F58                     l1026:
  3178  001F58  0012               	return		;funcret
  3179  001F5A                     __end_of___xxtofl:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function ___flmul *****************
  3183 ;; Defined at:
  3184 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  b               4   22[COMRAM] unsigned char 
  3187 ;;  a               4   26[COMRAM] unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  prod            4   41[COMRAM] struct .
  3190 ;;  grs             4   35[COMRAM] unsigned long 
  3191 ;;  temp            2   45[COMRAM] struct .
  3192 ;;  bexp            1   40[COMRAM] unsigned char 
  3193 ;;  aexp            1   39[COMRAM] unsigned char 
  3194 ;;  sign            1   34[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  4   22[COMRAM] unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, prodl, prodh
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3204 ;;      Params:         8       0       0       0       0       0       0       0       0
  3205 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3206 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3207 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3208 ;;Total ram usage:       25 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_SensorTemperatura
  3214 ;;		_SensorLuz
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text10
  3219  000878                     __ptext10:
  3220                           	callstack 0
  3221  000878                     ___flmul:
  3222                           	callstack 29
  3223  000878  501A               	movf	(___flmul@b+3)^0,w,c
  3224  00087A  0B80               	andlw	128
  3225  00087C  6E23               	movwf	___flmul@sign^0,c
  3226  00087E  501A               	movf	(___flmul@b+3)^0,w,c
  3227  000880  241A               	addwf	(___flmul@b+3)^0,w,c
  3228  000882  6E29               	movwf	___flmul@bexp^0,c
  3229  000884  AE19               	btfss	(___flmul@b+2)^0,7,c
  3230  000886  EF47  F004         	goto	u3451
  3231  00088A  EF49  F004         	goto	u3450
  3232  00088E                     u3451:
  3233  00088E  EF4A  F004         	goto	l3262
  3234  000892                     u3450:
  3235  000892  8029               	bsf	___flmul@bexp^0,0,c
  3236  000894                     l3262:
  3237  000894  5029               	movf	___flmul@bexp^0,w,c
  3238  000896  B4D8               	btfsc	status,2,c
  3239  000898  EF50  F004         	goto	u3461
  3240  00089C  EF52  F004         	goto	u3460
  3241  0008A0                     u3461:
  3242  0008A0  EF65  F004         	goto	l3270
  3243  0008A4                     u3460:
  3244  0008A4  2829               	incf	___flmul@bexp^0,w,c
  3245  0008A6  A4D8               	btfss	status,2,c
  3246  0008A8  EF58  F004         	goto	u3471
  3247  0008AC  EF5A  F004         	goto	u3470
  3248  0008B0                     u3471:
  3249  0008B0  EF62  F004         	goto	l3268
  3250  0008B4                     u3470:
  3251  0008B4  0E00               	movlw	0
  3252  0008B6  6E17               	movwf	___flmul@b^0,c
  3253  0008B8  0E00               	movlw	0
  3254  0008BA  6E18               	movwf	(___flmul@b+1)^0,c
  3255  0008BC  0E00               	movlw	0
  3256  0008BE  6E19               	movwf	(___flmul@b+2)^0,c
  3257  0008C0  0E00               	movlw	0
  3258  0008C2  6E1A               	movwf	(___flmul@b+3)^0,c
  3259  0008C4                     l3268:
  3260  0008C4  8E19               	bsf	(___flmul@b+2)^0,7,c
  3261  0008C6  EF6D  F004         	goto	l3272
  3262  0008CA                     l3270:
  3263  0008CA  0E00               	movlw	0
  3264  0008CC  6E17               	movwf	___flmul@b^0,c
  3265  0008CE  0E00               	movlw	0
  3266  0008D0  6E18               	movwf	(___flmul@b+1)^0,c
  3267  0008D2  0E00               	movlw	0
  3268  0008D4  6E19               	movwf	(___flmul@b+2)^0,c
  3269  0008D6  0E00               	movlw	0
  3270  0008D8  6E1A               	movwf	(___flmul@b+3)^0,c
  3271  0008DA                     l3272:
  3272  0008DA  501E               	movf	(___flmul@a+3)^0,w,c
  3273  0008DC  0B80               	andlw	128
  3274  0008DE  1A23               	xorwf	___flmul@sign^0,f,c
  3275  0008E0  501E               	movf	(___flmul@a+3)^0,w,c
  3276  0008E2  241E               	addwf	(___flmul@a+3)^0,w,c
  3277  0008E4  6E28               	movwf	___flmul@aexp^0,c
  3278  0008E6  AE1D               	btfss	(___flmul@a+2)^0,7,c
  3279  0008E8  EF78  F004         	goto	u3481
  3280  0008EC  EF7A  F004         	goto	u3480
  3281  0008F0                     u3481:
  3282  0008F0  EF7B  F004         	goto	l3280
  3283  0008F4                     u3480:
  3284  0008F4  8028               	bsf	___flmul@aexp^0,0,c
  3285  0008F6                     l3280:
  3286  0008F6  5028               	movf	___flmul@aexp^0,w,c
  3287  0008F8  B4D8               	btfsc	status,2,c
  3288  0008FA  EF81  F004         	goto	u3491
  3289  0008FE  EF83  F004         	goto	u3490
  3290  000902                     u3491:
  3291  000902  EF96  F004         	goto	l3288
  3292  000906                     u3490:
  3293  000906  2828               	incf	___flmul@aexp^0,w,c
  3294  000908  A4D8               	btfss	status,2,c
  3295  00090A  EF89  F004         	goto	u3501
  3296  00090E  EF8B  F004         	goto	u3500
  3297  000912                     u3501:
  3298  000912  EF93  F004         	goto	l3286
  3299  000916                     u3500:
  3300  000916  0E00               	movlw	0
  3301  000918  6E1B               	movwf	___flmul@a^0,c
  3302  00091A  0E00               	movlw	0
  3303  00091C  6E1C               	movwf	(___flmul@a+1)^0,c
  3304  00091E  0E00               	movlw	0
  3305  000920  6E1D               	movwf	(___flmul@a+2)^0,c
  3306  000922  0E00               	movlw	0
  3307  000924  6E1E               	movwf	(___flmul@a+3)^0,c
  3308  000926                     l3286:
  3309  000926  8E1D               	bsf	(___flmul@a+2)^0,7,c
  3310  000928  EF9E  F004         	goto	l982
  3311  00092C                     l3288:
  3312  00092C  0E00               	movlw	0
  3313  00092E  6E1B               	movwf	___flmul@a^0,c
  3314  000930  0E00               	movlw	0
  3315  000932  6E1C               	movwf	(___flmul@a+1)^0,c
  3316  000934  0E00               	movlw	0
  3317  000936  6E1D               	movwf	(___flmul@a+2)^0,c
  3318  000938  0E00               	movlw	0
  3319  00093A  6E1E               	movwf	(___flmul@a+3)^0,c
  3320  00093C                     l982:
  3321  00093C  5028               	movf	___flmul@aexp^0,w,c
  3322  00093E  B4D8               	btfsc	status,2,c
  3323  000940  EFA4  F004         	goto	u3511
  3324  000944  EFA6  F004         	goto	u3510
  3325  000948                     u3511:
  3326  000948  EFAE  F004         	goto	l3292
  3327  00094C                     u3510:
  3328  00094C  5029               	movf	___flmul@bexp^0,w,c
  3329  00094E  A4D8               	btfss	status,2,c
  3330  000950  EFAC  F004         	goto	u3521
  3331  000954  EFAE  F004         	goto	u3520
  3332  000958                     u3521:
  3333  000958  EFB8  F004         	goto	l3296
  3334  00095C                     u3520:
  3335  00095C                     l3292:
  3336  00095C  0E00               	movlw	0
  3337  00095E  6E17               	movwf	?___flmul^0,c
  3338  000960  0E00               	movlw	0
  3339  000962  6E18               	movwf	(?___flmul+1)^0,c
  3340  000964  0E00               	movlw	0
  3341  000966  6E19               	movwf	(?___flmul+2)^0,c
  3342  000968  0E00               	movlw	0
  3343  00096A  6E1A               	movwf	(?___flmul+3)^0,c
  3344  00096C  EF50  F006         	goto	l986
  3345  000970                     l3296:
  3346  000970  501D               	movf	(___flmul@a+2)^0,w,c
  3347  000972  0217               	mulwf	___flmul@b^0,c
  3348  000974  CFF3 F02E          	movff	prodl,___flmul@temp
  3349  000978  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3350  00097C  502E               	movf	___flmul@temp^0,w,c
  3351  00097E  6E24               	movwf	___flmul@grs^0,c
  3352  000980  6A25               	clrf	(___flmul@grs+1)^0,c
  3353  000982  6A26               	clrf	(___flmul@grs+2)^0,c
  3354  000984  6A27               	clrf	(___flmul@grs+3)^0,c
  3355  000986  502F               	movf	(___flmul@temp+1)^0,w,c
  3356  000988  6E2A               	movwf	___flmul@prod^0,c
  3357  00098A  6A2B               	clrf	(___flmul@prod+1)^0,c
  3358  00098C  6A2C               	clrf	(___flmul@prod+2)^0,c
  3359  00098E  6A2D               	clrf	(___flmul@prod+3)^0,c
  3360  000990  501C               	movf	(___flmul@a+1)^0,w,c
  3361  000992  0218               	mulwf	(___flmul@b+1)^0,c
  3362  000994  CFF3 F02E          	movff	prodl,___flmul@temp
  3363  000998  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3364  00099C  502E               	movf	___flmul@temp^0,w,c
  3365  00099E  2624               	addwf	___flmul@grs^0,f,c
  3366  0009A0  0E00               	movlw	0
  3367  0009A2  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3368  0009A4  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3369  0009A6  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3370  0009A8  502F               	movf	(___flmul@temp+1)^0,w,c
  3371  0009AA  262A               	addwf	___flmul@prod^0,f,c
  3372  0009AC  0E00               	movlw	0
  3373  0009AE  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3374  0009B0  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3375  0009B2  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3376  0009B4  501B               	movf	___flmul@a^0,w,c
  3377  0009B6  0219               	mulwf	(___flmul@b+2)^0,c
  3378  0009B8  CFF3 F02E          	movff	prodl,___flmul@temp
  3379  0009BC  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3380  0009C0  502E               	movf	___flmul@temp^0,w,c
  3381  0009C2  2624               	addwf	___flmul@grs^0,f,c
  3382  0009C4  0E00               	movlw	0
  3383  0009C6  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3384  0009C8  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3385  0009CA  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3386  0009CC  502F               	movf	(___flmul@temp+1)^0,w,c
  3387  0009CE  262A               	addwf	___flmul@prod^0,f,c
  3388  0009D0  0E00               	movlw	0
  3389  0009D2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3390  0009D4  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3391  0009D6  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3392  0009D8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3393  0009DC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3394  0009E0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3395  0009E4  6A24               	clrf	___flmul@grs^0,c
  3396  0009E6  501B               	movf	___flmul@a^0,w,c
  3397  0009E8  0218               	mulwf	(___flmul@b+1)^0,c
  3398  0009EA  CFF3 F02E          	movff	prodl,___flmul@temp
  3399  0009EE  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3400  0009F2  502E               	movf	___flmul@temp^0,w,c
  3401  0009F4  2624               	addwf	___flmul@grs^0,f,c
  3402  0009F6  502F               	movf	(___flmul@temp+1)^0,w,c
  3403  0009F8  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3404  0009FA  0E00               	movlw	0
  3405  0009FC  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3406  0009FE  0E00               	movlw	0
  3407  000A00  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3408  000A02  501C               	movf	(___flmul@a+1)^0,w,c
  3409  000A04  0217               	mulwf	___flmul@b^0,c
  3410  000A06  CFF3 F02E          	movff	prodl,___flmul@temp
  3411  000A0A  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3412  000A0E  502E               	movf	___flmul@temp^0,w,c
  3413  000A10  2624               	addwf	___flmul@grs^0,f,c
  3414  000A12  502F               	movf	(___flmul@temp+1)^0,w,c
  3415  000A14  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3416  000A16  0E00               	movlw	0
  3417  000A18  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3418  000A1A  0E00               	movlw	0
  3419  000A1C  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3420  000A1E  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3421  000A22  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3422  000A26  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3423  000A2A  6A24               	clrf	___flmul@grs^0,c
  3424  000A2C  501B               	movf	___flmul@a^0,w,c
  3425  000A2E  0217               	mulwf	___flmul@b^0,c
  3426  000A30  CFF3 F02E          	movff	prodl,___flmul@temp
  3427  000A34  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3428  000A38  502E               	movf	___flmul@temp^0,w,c
  3429  000A3A  2624               	addwf	___flmul@grs^0,f,c
  3430  000A3C  502F               	movf	(___flmul@temp+1)^0,w,c
  3431  000A3E  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3432  000A40  0E00               	movlw	0
  3433  000A42  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3434  000A44  0E00               	movlw	0
  3435  000A46  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3436  000A48  501D               	movf	(___flmul@a+2)^0,w,c
  3437  000A4A  0218               	mulwf	(___flmul@b+1)^0,c
  3438  000A4C  CFF3 F02E          	movff	prodl,___flmul@temp
  3439  000A50  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3440  000A54  502E               	movf	___flmul@temp^0,w,c
  3441  000A56  262A               	addwf	___flmul@prod^0,f,c
  3442  000A58  502F               	movf	(___flmul@temp+1)^0,w,c
  3443  000A5A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3444  000A5C  0E00               	movlw	0
  3445  000A5E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3446  000A60  0E00               	movlw	0
  3447  000A62  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3448  000A64  501C               	movf	(___flmul@a+1)^0,w,c
  3449  000A66  0219               	mulwf	(___flmul@b+2)^0,c
  3450  000A68  CFF3 F02E          	movff	prodl,___flmul@temp
  3451  000A6C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3452  000A70  502E               	movf	___flmul@temp^0,w,c
  3453  000A72  262A               	addwf	___flmul@prod^0,f,c
  3454  000A74  502F               	movf	(___flmul@temp+1)^0,w,c
  3455  000A76  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3456  000A78  0E00               	movlw	0
  3457  000A7A  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3458  000A7C  0E00               	movlw	0
  3459  000A7E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3460  000A80  501D               	movf	(___flmul@a+2)^0,w,c
  3461  000A82  0219               	mulwf	(___flmul@b+2)^0,c
  3462  000A84  CFF3 F02E          	movff	prodl,___flmul@temp
  3463  000A88  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3464  000A8C  502E               	movf	___flmul@temp^0,w,c
  3465  000A8E  6E1F               	movwf	??___flmul^0,c
  3466  000A90  502F               	movf	(___flmul@temp+1)^0,w,c
  3467  000A92  6E20               	movwf	(??___flmul+1)^0,c
  3468  000A94  6A21               	clrf	(??___flmul+2)^0,c
  3469  000A96  6A22               	clrf	(??___flmul+3)^0,c
  3470  000A98  C021  F022         	movff	??___flmul+2,??___flmul+3
  3471  000A9C  C020  F021         	movff	??___flmul+1,??___flmul+2
  3472  000AA0  C01F  F020         	movff	??___flmul,??___flmul+1
  3473  000AA4  6A1F               	clrf	??___flmul^0,c
  3474  000AA6  501F               	movf	??___flmul^0,w,c
  3475  000AA8  262A               	addwf	___flmul@prod^0,f,c
  3476  000AAA  5020               	movf	(??___flmul+1)^0,w,c
  3477  000AAC  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3478  000AAE  5021               	movf	(??___flmul+2)^0,w,c
  3479  000AB0  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3480  000AB2  5022               	movf	(??___flmul+3)^0,w,c
  3481  000AB4  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3482  000AB6  C024  F01F         	movff	___flmul@grs,??___flmul
  3483  000ABA  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  3484  000ABE  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  3485  000AC2  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  3486  000AC6  0E19               	movlw	25
  3487  000AC8  EF6B  F005         	goto	u3530
  3488  000ACC                     u3535:
  3489  000ACC  90D8               	bcf	status,0,c
  3490  000ACE  3222               	rrcf	(??___flmul+3)^0,f,c
  3491  000AD0  3221               	rrcf	(??___flmul+2)^0,f,c
  3492  000AD2  3220               	rrcf	(??___flmul+1)^0,f,c
  3493  000AD4  321F               	rrcf	??___flmul^0,f,c
  3494  000AD6                     u3530:
  3495  000AD6  2EE8               	decfsz	wreg,f,c
  3496  000AD8  EF66  F005         	goto	u3535
  3497  000ADC  501F               	movf	??___flmul^0,w,c
  3498  000ADE  262A               	addwf	___flmul@prod^0,f,c
  3499  000AE0  5020               	movf	(??___flmul+1)^0,w,c
  3500  000AE2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3501  000AE4  5021               	movf	(??___flmul+2)^0,w,c
  3502  000AE6  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3503  000AE8  5022               	movf	(??___flmul+3)^0,w,c
  3504  000AEA  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3505  000AEC  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3506  000AF0  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3507  000AF4  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3508  000AF8  6A24               	clrf	___flmul@grs^0,c
  3509  000AFA  5028               	movf	___flmul@aexp^0,w,c
  3510  000AFC  C029  F01F         	movff	___flmul@bexp,??___flmul
  3511  000B00  6A20               	clrf	(??___flmul+1)^0,c
  3512  000B02  261F               	addwf	??___flmul^0,f,c
  3513  000B04  0E00               	movlw	0
  3514  000B06  2220               	addwfc	(??___flmul+1)^0,f,c
  3515  000B08  0E82               	movlw	130
  3516  000B0A  241F               	addwf	??___flmul^0,w,c
  3517  000B0C  6E2E               	movwf	___flmul@temp^0,c
  3518  000B0E  0EFF               	movlw	255
  3519  000B10  2020               	addwfc	(??___flmul+1)^0,w,c
  3520  000B12  6E2F               	movwf	(___flmul@temp+1)^0,c
  3521  000B14  EFA1  F005         	goto	l3344
  3522  000B18                     l3338:
  3523  000B18  90D8               	bcf	status,0,c
  3524  000B1A  362A               	rlcf	___flmul@prod^0,f,c
  3525  000B1C  362B               	rlcf	(___flmul@prod+1)^0,f,c
  3526  000B1E  362C               	rlcf	(___flmul@prod+2)^0,f,c
  3527  000B20  362D               	rlcf	(___flmul@prod+3)^0,f,c
  3528  000B22  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3529  000B24  EF96  F005         	goto	u3541
  3530  000B28  EF98  F005         	goto	u3540
  3531  000B2C                     u3541:
  3532  000B2C  EF99  F005         	goto	l989
  3533  000B30                     u3540:
  3534  000B30  802A               	bsf	___flmul@prod^0,0,c
  3535  000B32                     l989:
  3536  000B32  90D8               	bcf	status,0,c
  3537  000B34  3624               	rlcf	___flmul@grs^0,f,c
  3538  000B36  3625               	rlcf	(___flmul@grs+1)^0,f,c
  3539  000B38  3626               	rlcf	(___flmul@grs+2)^0,f,c
  3540  000B3A  3627               	rlcf	(___flmul@grs+3)^0,f,c
  3541  000B3C  062E               	decf	___flmul@temp^0,f,c
  3542  000B3E  A0D8               	btfss	status,0,c
  3543  000B40  062F               	decf	(___flmul@temp+1)^0,f,c
  3544  000B42                     l3344:
  3545  000B42  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  3546  000B44  EFA6  F005         	goto	u3551
  3547  000B48  EFA8  F005         	goto	u3550
  3548  000B4C                     u3551:
  3549  000B4C  EF8C  F005         	goto	l3338
  3550  000B50                     u3550:
  3551  000B50  0E00               	movlw	0
  3552  000B52  6E28               	movwf	___flmul@aexp^0,c
  3553  000B54  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3554  000B56  EFAF  F005         	goto	u3561
  3555  000B5A  EFB1  F005         	goto	u3560
  3556  000B5E                     u3561:
  3557  000B5E  EFD5  F005         	goto	l991
  3558  000B62                     u3560:
  3559  000B62  0EFF               	movlw	255
  3560  000B64  1424               	andwf	___flmul@grs^0,w,c
  3561  000B66  6E1F               	movwf	??___flmul^0,c
  3562  000B68  0EFF               	movlw	255
  3563  000B6A  1425               	andwf	(___flmul@grs+1)^0,w,c
  3564  000B6C  6E20               	movwf	(??___flmul+1)^0,c
  3565  000B6E  0EFF               	movlw	255
  3566  000B70  1426               	andwf	(___flmul@grs+2)^0,w,c
  3567  000B72  6E21               	movwf	(??___flmul+2)^0,c
  3568  000B74  0E7F               	movlw	127
  3569  000B76  1427               	andwf	(___flmul@grs+3)^0,w,c
  3570  000B78  6E22               	movwf	(??___flmul+3)^0,c
  3571  000B7A  501F               	movf	??___flmul^0,w,c
  3572  000B7C  1020               	iorwf	(??___flmul+1)^0,w,c
  3573  000B7E  1021               	iorwf	(??___flmul+2)^0,w,c
  3574  000B80  1022               	iorwf	(??___flmul+3)^0,w,c
  3575  000B82  B4D8               	btfsc	status,2,c
  3576  000B84  EFC6  F005         	goto	u3571
  3577  000B88  EFC8  F005         	goto	u3570
  3578  000B8C                     u3571:
  3579  000B8C  EFCC  F005         	goto	l992
  3580  000B90                     u3570:
  3581  000B90                     l3352:
  3582  000B90  0E01               	movlw	1
  3583  000B92  6E28               	movwf	___flmul@aexp^0,c
  3584  000B94  EFD5  F005         	goto	l991
  3585  000B98                     l992:
  3586  000B98  A02A               	btfss	___flmul@prod^0,0,c
  3587  000B9A  EFD1  F005         	goto	u3581
  3588  000B9E  EFD3  F005         	goto	u3580
  3589  000BA2                     u3581:
  3590  000BA2  EFD5  F005         	goto	l991
  3591  000BA6                     u3580:
  3592  000BA6  EFC8  F005         	goto	l3352
  3593  000BAA                     l991:
  3594  000BAA  5028               	movf	___flmul@aexp^0,w,c
  3595  000BAC  B4D8               	btfsc	status,2,c
  3596  000BAE  EFDB  F005         	goto	u3591
  3597  000BB2  EFDD  F005         	goto	u3590
  3598  000BB6                     u3591:
  3599  000BB6  EF01  F006         	goto	l3364
  3600  000BBA                     u3590:
  3601  000BBA  0E01               	movlw	1
  3602  000BBC  262A               	addwf	___flmul@prod^0,f,c
  3603  000BBE  0E00               	movlw	0
  3604  000BC0  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3605  000BC2  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3606  000BC4  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3607  000BC6  A02D               	btfss	(___flmul@prod+3)^0,0,c
  3608  000BC8  EFE8  F005         	goto	u3601
  3609  000BCC  EFEA  F005         	goto	u3600
  3610  000BD0                     u3601:
  3611  000BD0  EF01  F006         	goto	l3364
  3612  000BD4                     u3600:
  3613  000BD4  C02A  F01F         	movff	___flmul@prod,??___flmul
  3614  000BD8  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  3615  000BDC  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  3616  000BE0  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  3617  000BE4  3422               	rlcf	(??___flmul+3)^0,w,c
  3618  000BE6  3222               	rrcf	(??___flmul+3)^0,f,c
  3619  000BE8  3221               	rrcf	(??___flmul+2)^0,f,c
  3620  000BEA  3220               	rrcf	(??___flmul+1)^0,f,c
  3621  000BEC  321F               	rrcf	??___flmul^0,f,c
  3622  000BEE  C01F  F02A         	movff	??___flmul,___flmul@prod
  3623  000BF2  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  3624  000BF6  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  3625  000BFA  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  3626  000BFE  4A2E               	infsnz	___flmul@temp^0,f,c
  3627  000C00  2A2F               	incf	(___flmul@temp+1)^0,f,c
  3628  000C02                     l3364:
  3629  000C02  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  3630  000C04  EF0C  F006         	goto	u3611
  3631  000C08  502F               	movf	(___flmul@temp+1)^0,w,c
  3632  000C0A  E108               	bnz	u3610
  3633  000C0C  282E               	incf	___flmul@temp^0,w,c
  3634  000C0E  A0D8               	btfss	status,0,c
  3635  000C10  EF0C  F006         	goto	u3611
  3636  000C14  EF0E  F006         	goto	u3610
  3637  000C18                     u3611:
  3638  000C18  EF18  F006         	goto	l3368
  3639  000C1C                     u3610:
  3640  000C1C  0E00               	movlw	0
  3641  000C1E  6E2A               	movwf	___flmul@prod^0,c
  3642  000C20  0E00               	movlw	0
  3643  000C22  6E2B               	movwf	(___flmul@prod+1)^0,c
  3644  000C24  0E80               	movlw	128
  3645  000C26  6E2C               	movwf	(___flmul@prod+2)^0,c
  3646  000C28  0E7F               	movlw	127
  3647  000C2A  6E2D               	movwf	(___flmul@prod+3)^0,c
  3648  000C2C  EF46  F006         	goto	l3380
  3649  000C30                     l3368:
  3650  000C30  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  3651  000C32  EF25  F006         	goto	u3620
  3652  000C36  502F               	movf	(___flmul@temp+1)^0,w,c
  3653  000C38  E106               	bnz	u3621
  3654  000C3A  042E               	decf	___flmul@temp^0,w,c
  3655  000C3C  B0D8               	btfsc	status,0,c
  3656  000C3E  EF23  F006         	goto	u3621
  3657  000C42  EF25  F006         	goto	u3620
  3658  000C46                     u3621:
  3659  000C46  EF31  F006         	goto	l999
  3660  000C4A                     u3620:
  3661  000C4A  0E00               	movlw	0
  3662  000C4C  6E2A               	movwf	___flmul@prod^0,c
  3663  000C4E  0E00               	movlw	0
  3664  000C50  6E2B               	movwf	(___flmul@prod+1)^0,c
  3665  000C52  0E00               	movlw	0
  3666  000C54  6E2C               	movwf	(___flmul@prod+2)^0,c
  3667  000C56  0E00               	movlw	0
  3668  000C58  6E2D               	movwf	(___flmul@prod+3)^0,c
  3669  000C5A  0E00               	movlw	0
  3670  000C5C  6E23               	movwf	___flmul@sign^0,c
  3671  000C5E  EF46  F006         	goto	l3380
  3672  000C62                     l999:
  3673  000C62  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  3674  000C66  0EFF               	movlw	255
  3675  000C68  162A               	andwf	___flmul@prod^0,f,c
  3676  000C6A  0EFF               	movlw	255
  3677  000C6C  162B               	andwf	(___flmul@prod+1)^0,f,c
  3678  000C6E  0E7F               	movlw	127
  3679  000C70  162C               	andwf	(___flmul@prod+2)^0,f,c
  3680  000C72  0E00               	movlw	0
  3681  000C74  162D               	andwf	(___flmul@prod+3)^0,f,c
  3682  000C76  A029               	btfss	___flmul@bexp^0,0,c
  3683  000C78  EF40  F006         	goto	u3631
  3684  000C7C  EF42  F006         	goto	u3630
  3685  000C80                     u3631:
  3686  000C80  EF43  F006         	goto	l3378
  3687  000C84                     u3630:
  3688  000C84  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  3689  000C86                     l3378:
  3690  000C86  90D8               	bcf	status,0,c
  3691  000C88  3029               	rrcf	___flmul@bexp^0,w,c
  3692  000C8A  6E2D               	movwf	(___flmul@prod+3)^0,c
  3693  000C8C                     l3380:
  3694  000C8C  5023               	movf	___flmul@sign^0,w,c
  3695  000C8E  122D               	iorwf	(___flmul@prod+3)^0,f,c
  3696  000C90  C02A  F017         	movff	___flmul@prod,?___flmul
  3697  000C94  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  3698  000C98  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  3699  000C9C  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  3700  000CA0                     l986:
  3701  000CA0  0012               	return		;funcret
  3702  000CA2                     __end_of___flmul:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function ___flge *****************
  3706 ;; Defined at:
  3707 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  ff1             4    0[COMRAM] unsigned char 
  3710 ;;  ff2             4    4[COMRAM] unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3722 ;;      Params:         8       0       0       0       0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3724 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3725 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3726 ;;Total ram usage:       12 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_SensorTemperatura
  3732 ;;		_SensorLuz
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text11
  3737  00266C                     __ptext11:
  3738                           	callstack 0
  3739  00266C                     ___flge:
  3740                           	callstack 29
  3741  00266C  0E00               	movlw	0
  3742  00266E  1401               	andwf	___flge@ff1^0,w,c
  3743  002670  6E09               	movwf	??___flge^0,c
  3744  002672  0E00               	movlw	0
  3745  002674  1402               	andwf	(___flge@ff1+1)^0,w,c
  3746  002676  6E0A               	movwf	(??___flge+1)^0,c
  3747  002678  0E80               	movlw	128
  3748  00267A  1403               	andwf	(___flge@ff1+2)^0,w,c
  3749  00267C  6E0B               	movwf	(??___flge+2)^0,c
  3750  00267E  0E7F               	movlw	127
  3751  002680  1404               	andwf	(___flge@ff1+3)^0,w,c
  3752  002682  6E0C               	movwf	(??___flge+3)^0,c
  3753  002684  5009               	movf	??___flge^0,w,c
  3754  002686  100A               	iorwf	(??___flge+1)^0,w,c
  3755  002688  100B               	iorwf	(??___flge+2)^0,w,c
  3756  00268A  100C               	iorwf	(??___flge+3)^0,w,c
  3757  00268C  A4D8               	btfss	status,2,c
  3758  00268E  EF4B  F013         	goto	u3641
  3759  002692  EF4D  F013         	goto	u3640
  3760  002696                     u3641:
  3761  002696  EF55  F013         	goto	l3390
  3762  00269A                     u3640:
  3763  00269A  0E00               	movlw	0
  3764  00269C  6E01               	movwf	___flge@ff1^0,c
  3765  00269E  0E00               	movlw	0
  3766  0026A0  6E02               	movwf	(___flge@ff1+1)^0,c
  3767  0026A2  0E00               	movlw	0
  3768  0026A4  6E03               	movwf	(___flge@ff1+2)^0,c
  3769  0026A6  0E00               	movlw	0
  3770  0026A8  6E04               	movwf	(___flge@ff1+3)^0,c
  3771  0026AA                     l3390:
  3772  0026AA  0E00               	movlw	0
  3773  0026AC  1405               	andwf	___flge@ff2^0,w,c
  3774  0026AE  6E09               	movwf	??___flge^0,c
  3775  0026B0  0E00               	movlw	0
  3776  0026B2  1406               	andwf	(___flge@ff2+1)^0,w,c
  3777  0026B4  6E0A               	movwf	(??___flge+1)^0,c
  3778  0026B6  0E80               	movlw	128
  3779  0026B8  1407               	andwf	(___flge@ff2+2)^0,w,c
  3780  0026BA  6E0B               	movwf	(??___flge+2)^0,c
  3781  0026BC  0E7F               	movlw	127
  3782  0026BE  1408               	andwf	(___flge@ff2+3)^0,w,c
  3783  0026C0  6E0C               	movwf	(??___flge+3)^0,c
  3784  0026C2  5009               	movf	??___flge^0,w,c
  3785  0026C4  100A               	iorwf	(??___flge+1)^0,w,c
  3786  0026C6  100B               	iorwf	(??___flge+2)^0,w,c
  3787  0026C8  100C               	iorwf	(??___flge+3)^0,w,c
  3788  0026CA  A4D8               	btfss	status,2,c
  3789  0026CC  EF6A  F013         	goto	u3651
  3790  0026D0  EF6C  F013         	goto	u3650
  3791  0026D4                     u3651:
  3792  0026D4  EF74  F013         	goto	l3394
  3793  0026D8                     u3650:
  3794  0026D8  0E00               	movlw	0
  3795  0026DA  6E05               	movwf	___flge@ff2^0,c
  3796  0026DC  0E00               	movlw	0
  3797  0026DE  6E06               	movwf	(___flge@ff2+1)^0,c
  3798  0026E0  0E00               	movlw	0
  3799  0026E2  6E07               	movwf	(___flge@ff2+2)^0,c
  3800  0026E4  0E00               	movlw	0
  3801  0026E6  6E08               	movwf	(___flge@ff2+3)^0,c
  3802  0026E8                     l3394:
  3803  0026E8  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3804  0026EA  EF79  F013         	goto	u3661
  3805  0026EE  EF7B  F013         	goto	u3660
  3806  0026F2                     u3661:
  3807  0026F2  EF84  F013         	goto	l3398
  3808  0026F6                     u3660:
  3809  0026F6  6C01               	negf	___flge@ff1^0,c
  3810  0026F8  1E02               	comf	(___flge@ff1+1)^0,f,c
  3811  0026FA  B0D8               	btfsc	status,0,c
  3812  0026FC  2A02               	incf	(___flge@ff1+1)^0,f,c
  3813  0026FE  1E03               	comf	(___flge@ff1+2)^0,f,c
  3814  002700  B0D8               	btfsc	status,0,c
  3815  002702  2A03               	incf	(___flge@ff1+2)^0,f,c
  3816  002704  0E80               	movlw	128
  3817  002706  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3818  002708                     l3398:
  3819  002708  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3820  00270A  EF89  F013         	goto	u3671
  3821  00270E  EF8B  F013         	goto	u3670
  3822  002712                     u3671:
  3823  002712  EF94  F013         	goto	l633
  3824  002716                     u3670:
  3825  002716  6C05               	negf	___flge@ff2^0,c
  3826  002718  1E06               	comf	(___flge@ff2+1)^0,f,c
  3827  00271A  B0D8               	btfsc	status,0,c
  3828  00271C  2A06               	incf	(___flge@ff2+1)^0,f,c
  3829  00271E  1E07               	comf	(___flge@ff2+2)^0,f,c
  3830  002720  B0D8               	btfsc	status,0,c
  3831  002722  2A07               	incf	(___flge@ff2+2)^0,f,c
  3832  002724  0E80               	movlw	128
  3833  002726  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3834  002728                     l633:
  3835  002728  0E00               	movlw	0
  3836  00272A  1A01               	xorwf	___flge@ff1^0,f,c
  3837  00272C  0E00               	movlw	0
  3838  00272E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3839  002730  0E00               	movlw	0
  3840  002732  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3841  002734  0E80               	movlw	128
  3842  002736  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3843  002738  0E00               	movlw	0
  3844  00273A  1A05               	xorwf	___flge@ff2^0,f,c
  3845  00273C  0E00               	movlw	0
  3846  00273E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3847  002740  0E00               	movlw	0
  3848  002742  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3849  002744  0E80               	movlw	128
  3850  002746  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3851  002748  5005               	movf	___flge@ff2^0,w,c
  3852  00274A  5C01               	subwf	___flge@ff1^0,w,c
  3853  00274C  5006               	movf	(___flge@ff2+1)^0,w,c
  3854  00274E  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3855  002750  5007               	movf	(___flge@ff2+2)^0,w,c
  3856  002752  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3857  002754  5008               	movf	(___flge@ff2+3)^0,w,c
  3858  002756  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3859  002758  B0D8               	btfsc	status,0,c
  3860  00275A  EFB1  F013         	goto	u3681
  3861  00275E  EFB3  F013         	goto	u3680
  3862  002762                     u3681:
  3863  002762  EFB6  F013         	goto	l3404
  3864  002766                     u3680:
  3865  002766  90D8               	bcf	status,0,c
  3866  002768  EFB7  F013         	goto	l638
  3867  00276C                     l3404:
  3868  00276C  80D8               	bsf	status,0,c
  3869  00276E                     l638:
  3870  00276E  0012               	return		;funcret
  3871  002770                     __end_of___flge:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function ___fldiv *****************
  3875 ;; Defined at:
  3876 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  b               4   47[COMRAM] unsigned char 
  3879 ;;  a               4   51[COMRAM] unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  grs             4   66[COMRAM] unsigned long 
  3882 ;;  rem             4   59[COMRAM] unsigned long 
  3883 ;;  new_exp         2   64[COMRAM] short 
  3884 ;;  aexp            1   71[COMRAM] unsigned char 
  3885 ;;  bexp            1   70[COMRAM] unsigned char 
  3886 ;;  sign            1   63[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  4   47[COMRAM] unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3896 ;;      Params:         8       0       0       0       0       0       0       0       0
  3897 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3898 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3899 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3900 ;;Total ram usage:       25 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_SensorTemperatura
  3906 ;;		_SensorLuz
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text12
  3911  000CA2                     __ptext12:
  3912                           	callstack 0
  3913  000CA2                     ___fldiv:
  3914                           	callstack 29
  3915  000CA2  5033               	movf	(___fldiv@b+3)^0,w,c
  3916  000CA4  0B80               	andlw	128
  3917  000CA6  6E40               	movwf	___fldiv@sign^0,c
  3918  000CA8  5033               	movf	(___fldiv@b+3)^0,w,c
  3919  000CAA  2433               	addwf	(___fldiv@b+3)^0,w,c
  3920  000CAC  6E47               	movwf	___fldiv@bexp^0,c
  3921  000CAE  AE32               	btfss	(___fldiv@b+2)^0,7,c
  3922  000CB0  EF5C  F006         	goto	u3221
  3923  000CB4  EF5E  F006         	goto	u3220
  3924  000CB8                     u3221:
  3925  000CB8  EF5F  F006         	goto	l3124
  3926  000CBC                     u3220:
  3927  000CBC  8047               	bsf	___fldiv@bexp^0,0,c
  3928  000CBE                     l3124:
  3929  000CBE  5047               	movf	___fldiv@bexp^0,w,c
  3930  000CC0  B4D8               	btfsc	status,2,c
  3931  000CC2  EF65  F006         	goto	u3231
  3932  000CC6  EF67  F006         	goto	u3230
  3933  000CCA                     u3231:
  3934  000CCA  EF7C  F006         	goto	l3134
  3935  000CCE                     u3230:
  3936  000CCE  2847               	incf	___fldiv@bexp^0,w,c
  3937  000CD0  A4D8               	btfss	status,2,c
  3938  000CD2  EF6D  F006         	goto	u3241
  3939  000CD6  EF6F  F006         	goto	u3240
  3940  000CDA                     u3241:
  3941  000CDA  EF77  F006         	goto	l3130
  3942  000CDE                     u3240:
  3943  000CDE  0E00               	movlw	0
  3944  000CE0  6E30               	movwf	___fldiv@b^0,c
  3945  000CE2  0E00               	movlw	0
  3946  000CE4  6E31               	movwf	(___fldiv@b+1)^0,c
  3947  000CE6  0E00               	movlw	0
  3948  000CE8  6E32               	movwf	(___fldiv@b+2)^0,c
  3949  000CEA  0E00               	movlw	0
  3950  000CEC  6E33               	movwf	(___fldiv@b+3)^0,c
  3951  000CEE                     l3130:
  3952  000CEE  8E32               	bsf	(___fldiv@b+2)^0,7,c
  3953  000CF0  0E00               	movlw	0
  3954  000CF2  6E33               	movwf	(___fldiv@b+3)^0,c
  3955  000CF4  EF84  F006         	goto	l3136
  3956  000CF8                     l3134:
  3957  000CF8  0E00               	movlw	0
  3958  000CFA  6E30               	movwf	___fldiv@b^0,c
  3959  000CFC  0E00               	movlw	0
  3960  000CFE  6E31               	movwf	(___fldiv@b+1)^0,c
  3961  000D00  0E00               	movlw	0
  3962  000D02  6E32               	movwf	(___fldiv@b+2)^0,c
  3963  000D04  0E00               	movlw	0
  3964  000D06  6E33               	movwf	(___fldiv@b+3)^0,c
  3965  000D08                     l3136:
  3966  000D08  5037               	movf	(___fldiv@a+3)^0,w,c
  3967  000D0A  0B80               	andlw	128
  3968  000D0C  1A40               	xorwf	___fldiv@sign^0,f,c
  3969  000D0E  5037               	movf	(___fldiv@a+3)^0,w,c
  3970  000D10  2437               	addwf	(___fldiv@a+3)^0,w,c
  3971  000D12  6E48               	movwf	___fldiv@aexp^0,c
  3972  000D14  AE36               	btfss	(___fldiv@a+2)^0,7,c
  3973  000D16  EF8F  F006         	goto	u3251
  3974  000D1A  EF91  F006         	goto	u3250
  3975  000D1E                     u3251:
  3976  000D1E  EF92  F006         	goto	l3144
  3977  000D22                     u3250:
  3978  000D22  8048               	bsf	___fldiv@aexp^0,0,c
  3979  000D24                     l3144:
  3980  000D24  5048               	movf	___fldiv@aexp^0,w,c
  3981  000D26  B4D8               	btfsc	status,2,c
  3982  000D28  EF98  F006         	goto	u3261
  3983  000D2C  EF9A  F006         	goto	u3260
  3984  000D30                     u3261:
  3985  000D30  EFAF  F006         	goto	l3154
  3986  000D34                     u3260:
  3987  000D34  2848               	incf	___fldiv@aexp^0,w,c
  3988  000D36  A4D8               	btfss	status,2,c
  3989  000D38  EFA0  F006         	goto	u3271
  3990  000D3C  EFA2  F006         	goto	u3270
  3991  000D40                     u3271:
  3992  000D40  EFAA  F006         	goto	l3150
  3993  000D44                     u3270:
  3994  000D44  0E00               	movlw	0
  3995  000D46  6E34               	movwf	___fldiv@a^0,c
  3996  000D48  0E00               	movlw	0
  3997  000D4A  6E35               	movwf	(___fldiv@a+1)^0,c
  3998  000D4C  0E00               	movlw	0
  3999  000D4E  6E36               	movwf	(___fldiv@a+2)^0,c
  4000  000D50  0E00               	movlw	0
  4001  000D52  6E37               	movwf	(___fldiv@a+3)^0,c
  4002  000D54                     l3150:
  4003  000D54  8E36               	bsf	(___fldiv@a+2)^0,7,c
  4004  000D56  0E00               	movlw	0
  4005  000D58  6E37               	movwf	(___fldiv@a+3)^0,c
  4006  000D5A  EFB7  F006         	goto	l3156
  4007  000D5E                     l3154:
  4008  000D5E  0E00               	movlw	0
  4009  000D60  6E34               	movwf	___fldiv@a^0,c
  4010  000D62  0E00               	movlw	0
  4011  000D64  6E35               	movwf	(___fldiv@a+1)^0,c
  4012  000D66  0E00               	movlw	0
  4013  000D68  6E36               	movwf	(___fldiv@a+2)^0,c
  4014  000D6A  0E00               	movlw	0
  4015  000D6C  6E37               	movwf	(___fldiv@a+3)^0,c
  4016  000D6E                     l3156:
  4017  000D6E  5034               	movf	___fldiv@a^0,w,c
  4018  000D70  1035               	iorwf	(___fldiv@a+1)^0,w,c
  4019  000D72  1036               	iorwf	(___fldiv@a+2)^0,w,c
  4020  000D74  1037               	iorwf	(___fldiv@a+3)^0,w,c
  4021  000D76  A4D8               	btfss	status,2,c
  4022  000D78  EFC0  F006         	goto	u3281
  4023  000D7C  EFC2  F006         	goto	u3280
  4024  000D80                     u3281:
  4025  000D80  EFDA  F006         	goto	l3168
  4026  000D84                     u3280:
  4027  000D84  0E00               	movlw	0
  4028  000D86  6E30               	movwf	___fldiv@b^0,c
  4029  000D88  0E00               	movlw	0
  4030  000D8A  6E31               	movwf	(___fldiv@b+1)^0,c
  4031  000D8C  0E00               	movlw	0
  4032  000D8E  6E32               	movwf	(___fldiv@b+2)^0,c
  4033  000D90  0E00               	movlw	0
  4034  000D92  6E33               	movwf	(___fldiv@b+3)^0,c
  4035  000D94  0E80               	movlw	128
  4036  000D96  1232               	iorwf	(___fldiv@b+2)^0,f,c
  4037  000D98  0E7F               	movlw	127
  4038  000D9A  1233               	iorwf	(___fldiv@b+3)^0,f,c
  4039  000D9C                     l3162:
  4040  000D9C  5040               	movf	___fldiv@sign^0,w,c
  4041  000D9E  1233               	iorwf	(___fldiv@b+3)^0,f,c
  4042  000DA0  C030  F030         	movff	___fldiv@b,?___fldiv
  4043  000DA4  C031  F031         	movff	___fldiv@b+1,?___fldiv+1
  4044  000DA8  C032  F032         	movff	___fldiv@b+2,?___fldiv+2
  4045  000DAC  C033  F033         	movff	___fldiv@b+3,?___fldiv+3
  4046  000DB0  EF1D  F008         	goto	l950
  4047  000DB4                     l3168:
  4048  000DB4  5047               	movf	___fldiv@bexp^0,w,c
  4049  000DB6  A4D8               	btfss	status,2,c
  4050  000DB8  EFE0  F006         	goto	u3291
  4051  000DBC  EFE2  F006         	goto	u3290
  4052  000DC0                     u3291:
  4053  000DC0  EFEC  F006         	goto	l3176
  4054  000DC4                     u3290:
  4055  000DC4  0E00               	movlw	0
  4056  000DC6  6E30               	movwf	?___fldiv^0,c
  4057  000DC8  0E00               	movlw	0
  4058  000DCA  6E31               	movwf	(?___fldiv+1)^0,c
  4059  000DCC  0E00               	movlw	0
  4060  000DCE  6E32               	movwf	(?___fldiv+2)^0,c
  4061  000DD0  0E00               	movlw	0
  4062  000DD2  6E33               	movwf	(?___fldiv+3)^0,c
  4063  000DD4  EF1D  F008         	goto	l950
  4064  000DD8                     l3176:
  4065  000DD8  5048               	movf	___fldiv@aexp^0,w,c
  4066  000DDA  C047  F038         	movff	___fldiv@bexp,??___fldiv
  4067  000DDE  6A39               	clrf	(??___fldiv+1)^0,c
  4068  000DE0  5E38               	subwf	??___fldiv^0,f,c
  4069  000DE2  0E00               	movlw	0
  4070  000DE4  5A39               	subwfb	(??___fldiv+1)^0,f,c
  4071  000DE6  0E7F               	movlw	127
  4072  000DE8  2438               	addwf	??___fldiv^0,w,c
  4073  000DEA  6E41               	movwf	___fldiv@new_exp^0,c
  4074  000DEC  0E00               	movlw	0
  4075  000DEE  2039               	addwfc	(??___fldiv+1)^0,w,c
  4076  000DF0  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4077  000DF2  C030  F03C         	movff	___fldiv@b,___fldiv@rem
  4078  000DF6  C031  F03D         	movff	___fldiv@b+1,___fldiv@rem+1
  4079  000DFA  C032  F03E         	movff	___fldiv@b+2,___fldiv@rem+2
  4080  000DFE  C033  F03F         	movff	___fldiv@b+3,___fldiv@rem+3
  4081  000E02  0E00               	movlw	0
  4082  000E04  6E30               	movwf	___fldiv@b^0,c
  4083  000E06  0E00               	movlw	0
  4084  000E08  6E31               	movwf	(___fldiv@b+1)^0,c
  4085  000E0A  0E00               	movlw	0
  4086  000E0C  6E32               	movwf	(___fldiv@b+2)^0,c
  4087  000E0E  0E00               	movlw	0
  4088  000E10  6E33               	movwf	(___fldiv@b+3)^0,c
  4089  000E12  0E00               	movlw	0
  4090  000E14  6E43               	movwf	___fldiv@grs^0,c
  4091  000E16  0E00               	movlw	0
  4092  000E18  6E44               	movwf	(___fldiv@grs+1)^0,c
  4093  000E1A  0E00               	movlw	0
  4094  000E1C  6E45               	movwf	(___fldiv@grs+2)^0,c
  4095  000E1E  0E00               	movlw	0
  4096  000E20  6E46               	movwf	(___fldiv@grs+3)^0,c
  4097  000E22  0E00               	movlw	0
  4098  000E24  6E48               	movwf	___fldiv@aexp^0,c
  4099  000E26  EF4D  F007         	goto	l952
  4100  000E2A                     l3186:
  4101  000E2A  5048               	movf	___fldiv@aexp^0,w,c
  4102  000E2C  B4D8               	btfsc	status,2,c
  4103  000E2E  EF1B  F007         	goto	u3301
  4104  000E32  EF1D  F007         	goto	u3300
  4105  000E36                     u3301:
  4106  000E36  EF34  F007         	goto	l3194
  4107  000E3A                     u3300:
  4108  000E3A  90D8               	bcf	status,0,c
  4109  000E3C  363C               	rlcf	___fldiv@rem^0,f,c
  4110  000E3E  363D               	rlcf	(___fldiv@rem+1)^0,f,c
  4111  000E40  363E               	rlcf	(___fldiv@rem+2)^0,f,c
  4112  000E42  363F               	rlcf	(___fldiv@rem+3)^0,f,c
  4113  000E44  90D8               	bcf	status,0,c
  4114  000E46  3630               	rlcf	___fldiv@b^0,f,c
  4115  000E48  3631               	rlcf	(___fldiv@b+1)^0,f,c
  4116  000E4A  3632               	rlcf	(___fldiv@b+2)^0,f,c
  4117  000E4C  3633               	rlcf	(___fldiv@b+3)^0,f,c
  4118  000E4E  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4119  000E50  EF2C  F007         	goto	u3311
  4120  000E54  EF2E  F007         	goto	u3310
  4121  000E58                     u3311:
  4122  000E58  EF2F  F007         	goto	l955
  4123  000E5C                     u3310:
  4124  000E5C  8030               	bsf	___fldiv@b^0,0,c
  4125  000E5E                     l955:
  4126  000E5E  90D8               	bcf	status,0,c
  4127  000E60  3643               	rlcf	___fldiv@grs^0,f,c
  4128  000E62  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  4129  000E64  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  4130  000E66  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  4131  000E68                     l3194:
  4132  000E68  5034               	movf	___fldiv@a^0,w,c
  4133  000E6A  5C3C               	subwf	___fldiv@rem^0,w,c
  4134  000E6C  5035               	movf	(___fldiv@a+1)^0,w,c
  4135  000E6E  583D               	subwfb	(___fldiv@rem+1)^0,w,c
  4136  000E70  5036               	movf	(___fldiv@a+2)^0,w,c
  4137  000E72  583E               	subwfb	(___fldiv@rem+2)^0,w,c
  4138  000E74  5037               	movf	(___fldiv@a+3)^0,w,c
  4139  000E76  583F               	subwfb	(___fldiv@rem+3)^0,w,c
  4140  000E78  A0D8               	btfss	status,0,c
  4141  000E7A  EF41  F007         	goto	u3321
  4142  000E7E  EF43  F007         	goto	u3320
  4143  000E82                     u3321:
  4144  000E82  EF4C  F007         	goto	l3200
  4145  000E86                     u3320:
  4146  000E86  8C46               	bsf	(___fldiv@grs+3)^0,6,c
  4147  000E88  5034               	movf	___fldiv@a^0,w,c
  4148  000E8A  5E3C               	subwf	___fldiv@rem^0,f,c
  4149  000E8C  5035               	movf	(___fldiv@a+1)^0,w,c
  4150  000E8E  5A3D               	subwfb	(___fldiv@rem+1)^0,f,c
  4151  000E90  5036               	movf	(___fldiv@a+2)^0,w,c
  4152  000E92  5A3E               	subwfb	(___fldiv@rem+2)^0,f,c
  4153  000E94  5037               	movf	(___fldiv@a+3)^0,w,c
  4154  000E96  5A3F               	subwfb	(___fldiv@rem+3)^0,f,c
  4155  000E98                     l3200:
  4156  000E98  2A48               	incf	___fldiv@aexp^0,f,c
  4157  000E9A                     l952:
  4158  000E9A  0E19               	movlw	25
  4159  000E9C  6448               	cpfsgt	___fldiv@aexp^0,c
  4160  000E9E  EF53  F007         	goto	u3331
  4161  000EA2  EF55  F007         	goto	u3330
  4162  000EA6                     u3331:
  4163  000EA6  EF15  F007         	goto	l3186
  4164  000EAA                     u3330:
  4165  000EAA  503C               	movf	___fldiv@rem^0,w,c
  4166  000EAC  103D               	iorwf	(___fldiv@rem+1)^0,w,c
  4167  000EAE  103E               	iorwf	(___fldiv@rem+2)^0,w,c
  4168  000EB0  103F               	iorwf	(___fldiv@rem+3)^0,w,c
  4169  000EB2  B4D8               	btfsc	status,2,c
  4170  000EB4  EF5E  F007         	goto	u3341
  4171  000EB8  EF60  F007         	goto	u3340
  4172  000EBC                     u3341:
  4173  000EBC  EF78  F007         	goto	l3212
  4174  000EC0                     u3340:
  4175  000EC0  8043               	bsf	___fldiv@grs^0,0,c
  4176  000EC2  EF78  F007         	goto	l3212
  4177  000EC6                     l3206:
  4178  000EC6  90D8               	bcf	status,0,c
  4179  000EC8  3630               	rlcf	___fldiv@b^0,f,c
  4180  000ECA  3631               	rlcf	(___fldiv@b+1)^0,f,c
  4181  000ECC  3632               	rlcf	(___fldiv@b+2)^0,f,c
  4182  000ECE  3633               	rlcf	(___fldiv@b+3)^0,f,c
  4183  000ED0  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4184  000ED2  EF6D  F007         	goto	u3351
  4185  000ED6  EF6F  F007         	goto	u3350
  4186  000EDA                     u3351:
  4187  000EDA  EF70  F007         	goto	l961
  4188  000EDE                     u3350:
  4189  000EDE  8030               	bsf	___fldiv@b^0,0,c
  4190  000EE0                     l961:
  4191  000EE0  90D8               	bcf	status,0,c
  4192  000EE2  3643               	rlcf	___fldiv@grs^0,f,c
  4193  000EE4  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  4194  000EE6  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  4195  000EE8  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  4196  000EEA  0641               	decf	___fldiv@new_exp^0,f,c
  4197  000EEC  A0D8               	btfss	status,0,c
  4198  000EEE  0642               	decf	(___fldiv@new_exp+1)^0,f,c
  4199  000EF0                     l3212:
  4200  000EF0  AE32               	btfss	(___fldiv@b+2)^0,7,c
  4201  000EF2  EF7D  F007         	goto	u3361
  4202  000EF6  EF7F  F007         	goto	u3360
  4203  000EFA                     u3361:
  4204  000EFA  EF63  F007         	goto	l3206
  4205  000EFE                     u3360:
  4206  000EFE  0E00               	movlw	0
  4207  000F00  6E48               	movwf	___fldiv@aexp^0,c
  4208  000F02  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4209  000F04  EF86  F007         	goto	u3371
  4210  000F08  EF88  F007         	goto	u3370
  4211  000F0C                     u3371:
  4212  000F0C  EFAC  F007         	goto	l963
  4213  000F10                     u3370:
  4214  000F10  0EFF               	movlw	255
  4215  000F12  1443               	andwf	___fldiv@grs^0,w,c
  4216  000F14  6E38               	movwf	??___fldiv^0,c
  4217  000F16  0EFF               	movlw	255
  4218  000F18  1444               	andwf	(___fldiv@grs+1)^0,w,c
  4219  000F1A  6E39               	movwf	(??___fldiv+1)^0,c
  4220  000F1C  0EFF               	movlw	255
  4221  000F1E  1445               	andwf	(___fldiv@grs+2)^0,w,c
  4222  000F20  6E3A               	movwf	(??___fldiv+2)^0,c
  4223  000F22  0E7F               	movlw	127
  4224  000F24  1446               	andwf	(___fldiv@grs+3)^0,w,c
  4225  000F26  6E3B               	movwf	(??___fldiv+3)^0,c
  4226  000F28  5038               	movf	??___fldiv^0,w,c
  4227  000F2A  1039               	iorwf	(??___fldiv+1)^0,w,c
  4228  000F2C  103A               	iorwf	(??___fldiv+2)^0,w,c
  4229  000F2E  103B               	iorwf	(??___fldiv+3)^0,w,c
  4230  000F30  B4D8               	btfsc	status,2,c
  4231  000F32  EF9D  F007         	goto	u3381
  4232  000F36  EF9F  F007         	goto	u3380
  4233  000F3A                     u3381:
  4234  000F3A  EFA3  F007         	goto	l964
  4235  000F3E                     u3380:
  4236  000F3E                     l3220:
  4237  000F3E  0E01               	movlw	1
  4238  000F40  6E48               	movwf	___fldiv@aexp^0,c
  4239  000F42  EFAC  F007         	goto	l963
  4240  000F46                     l964:
  4241  000F46  A030               	btfss	___fldiv@b^0,0,c
  4242  000F48  EFA8  F007         	goto	u3391
  4243  000F4C  EFAA  F007         	goto	u3390
  4244  000F50                     u3391:
  4245  000F50  EFAC  F007         	goto	l963
  4246  000F54                     u3390:
  4247  000F54  EF9F  F007         	goto	l3220
  4248  000F58                     l963:
  4249  000F58  5048               	movf	___fldiv@aexp^0,w,c
  4250  000F5A  B4D8               	btfsc	status,2,c
  4251  000F5C  EFB2  F007         	goto	u3401
  4252  000F60  EFB4  F007         	goto	u3400
  4253  000F64                     u3401:
  4254  000F64  EFD8  F007         	goto	l3232
  4255  000F68                     u3400:
  4256  000F68  0E01               	movlw	1
  4257  000F6A  2630               	addwf	___fldiv@b^0,f,c
  4258  000F6C  0E00               	movlw	0
  4259  000F6E  2231               	addwfc	(___fldiv@b+1)^0,f,c
  4260  000F70  2232               	addwfc	(___fldiv@b+2)^0,f,c
  4261  000F72  2233               	addwfc	(___fldiv@b+3)^0,f,c
  4262  000F74  A033               	btfss	(___fldiv@b+3)^0,0,c
  4263  000F76  EFBF  F007         	goto	u3411
  4264  000F7A  EFC1  F007         	goto	u3410
  4265  000F7E                     u3411:
  4266  000F7E  EFD8  F007         	goto	l3232
  4267  000F82                     u3410:
  4268  000F82  C030  F038         	movff	___fldiv@b,??___fldiv
  4269  000F86  C031  F039         	movff	___fldiv@b+1,??___fldiv+1
  4270  000F8A  C032  F03A         	movff	___fldiv@b+2,??___fldiv+2
  4271  000F8E  C033  F03B         	movff	___fldiv@b+3,??___fldiv+3
  4272  000F92  343B               	rlcf	(??___fldiv+3)^0,w,c
  4273  000F94  323B               	rrcf	(??___fldiv+3)^0,f,c
  4274  000F96  323A               	rrcf	(??___fldiv+2)^0,f,c
  4275  000F98  3239               	rrcf	(??___fldiv+1)^0,f,c
  4276  000F9A  3238               	rrcf	??___fldiv^0,f,c
  4277  000F9C  C038  F030         	movff	??___fldiv,___fldiv@b
  4278  000FA0  C039  F031         	movff	??___fldiv+1,___fldiv@b+1
  4279  000FA4  C03A  F032         	movff	??___fldiv+2,___fldiv@b+2
  4280  000FA8  C03B  F033         	movff	??___fldiv+3,___fldiv@b+3
  4281  000FAC  4A41               	infsnz	___fldiv@new_exp^0,f,c
  4282  000FAE  2A42               	incf	(___fldiv@new_exp+1)^0,f,c
  4283  000FB0                     l3232:
  4284  000FB0  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4285  000FB2  EFE3  F007         	goto	u3421
  4286  000FB6  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  4287  000FB8  E108               	bnz	u3420
  4288  000FBA  2841               	incf	___fldiv@new_exp^0,w,c
  4289  000FBC  A0D8               	btfss	status,0,c
  4290  000FBE  EFE3  F007         	goto	u3421
  4291  000FC2  EFE5  F007         	goto	u3420
  4292  000FC6                     u3421:
  4293  000FC6  EFF0  F007         	goto	l3236
  4294  000FCA                     u3420:
  4295  000FCA  0E00               	movlw	0
  4296  000FCC  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4297  000FCE  6841               	setf	___fldiv@new_exp^0,c
  4298  000FD0  0E00               	movlw	0
  4299  000FD2  6E30               	movwf	___fldiv@b^0,c
  4300  000FD4  0E00               	movlw	0
  4301  000FD6  6E31               	movwf	(___fldiv@b+1)^0,c
  4302  000FD8  0E00               	movlw	0
  4303  000FDA  6E32               	movwf	(___fldiv@b+2)^0,c
  4304  000FDC  0E00               	movlw	0
  4305  000FDE  6E33               	movwf	(___fldiv@b+3)^0,c
  4306  000FE0                     l3236:
  4307  000FE0  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4308  000FE2  EFFD  F007         	goto	u3430
  4309  000FE6  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  4310  000FE8  E106               	bnz	u3431
  4311  000FEA  0441               	decf	___fldiv@new_exp^0,w,c
  4312  000FEC  B0D8               	btfsc	status,0,c
  4313  000FEE  EFFB  F007         	goto	u3431
  4314  000FF2  EFFD  F007         	goto	u3430
  4315  000FF6                     u3431:
  4316  000FF6  EF0B  F008         	goto	l3240
  4317  000FFA                     u3430:
  4318  000FFA  0E00               	movlw	0
  4319  000FFC  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4320  000FFE  0E00               	movlw	0
  4321  001000  6E41               	movwf	___fldiv@new_exp^0,c
  4322  001002  0E00               	movlw	0
  4323  001004  6E30               	movwf	___fldiv@b^0,c
  4324  001006  0E00               	movlw	0
  4325  001008  6E31               	movwf	(___fldiv@b+1)^0,c
  4326  00100A  0E00               	movlw	0
  4327  00100C  6E32               	movwf	(___fldiv@b+2)^0,c
  4328  00100E  0E00               	movlw	0
  4329  001010  6E33               	movwf	(___fldiv@b+3)^0,c
  4330  001012  0E00               	movlw	0
  4331  001014  6E40               	movwf	___fldiv@sign^0,c
  4332  001016                     l3240:
  4333  001016  C041  F047         	movff	___fldiv@new_exp,___fldiv@bexp
  4334  00101A  A047               	btfss	___fldiv@bexp^0,0,c
  4335  00101C  EF12  F008         	goto	u3441
  4336  001020  EF14  F008         	goto	u3440
  4337  001024                     u3441:
  4338  001024  EF17  F008         	goto	l3246
  4339  001028                     u3440:
  4340  001028  8E32               	bsf	(___fldiv@b+2)^0,7,c
  4341  00102A  EF18  F008         	goto	l3248
  4342  00102E                     l3246:
  4343  00102E  9E32               	bcf	(___fldiv@b+2)^0,7,c
  4344  001030                     l3248:
  4345  001030  90D8               	bcf	status,0,c
  4346  001032  3047               	rrcf	___fldiv@bexp^0,w,c
  4347  001034  6E33               	movwf	(___fldiv@b+3)^0,c
  4348  001036  EFCE  F006         	goto	l3162
  4349  00103A                     l950:
  4350  00103A  0012               	return		;funcret
  4351  00103C                     __end_of___fldiv:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _ADC_Read *****************
  4355 ;; Defined at:
  4356 ;;		line 32 in file "PIC18F4550_ADC_Source_File.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  channel         2    0[COMRAM] int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  digital         2    6[COMRAM] int 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2    0[COMRAM] int 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         2       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        8 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_SensorTemperatura
  4380 ;;		_SensorLuz
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text13
  4385  0029D8                     __ptext13:
  4386                           	callstack 0
  4387  0029D8                     _ADC_Read:
  4388                           	callstack 29
  4389  0029D8                     
  4390                           ;PIC18F4550_ADC_Source_File.c: 32: int ADC_Read(int channel);PIC18F4550_ADC_Source_File.
      +                          c: 33: {;PIC18F4550_ADC_Source_File.c: 34:     int digital;;PIC18F4550_ADC_Source_File.c
      +                          : 35:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  4391  0029D8  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  4392  0029DC  90D8               	bcf	status,0,c
  4393  0029DE  3603               	rlcf	??_ADC_Read^0,f,c
  4394  0029E0  90D8               	bcf	status,0,c
  4395  0029E2  3603               	rlcf	??_ADC_Read^0,f,c
  4396  0029E4  0E3C               	movlw	60
  4397  0029E6  1603               	andwf	??_ADC_Read^0,f,c
  4398  0029E8  50C2               	movf	194,w,c	;volatile
  4399  0029EA  0BC3               	andlw	195
  4400  0029EC  1003               	iorwf	??_ADC_Read^0,w,c
  4401  0029EE  6EC2               	movwf	194,c	;volatile
  4402                           
  4403                           ;PIC18F4550_ADC_Source_File.c: 37:     ADCON0 |= ((1<<ADON)|(1<<GO));
  4404  0029F0  B2C2               	btfsc	4034,1,c	;volatile
  4405  0029F2  EFFD  F014         	goto	u3031
  4406  0029F6  EF01  F015         	goto	u3030
  4407  0029FA                     u3031:
  4408  0029FA  6A03               	clrf	??_ADC_Read^0,c
  4409  0029FC  2A03               	incf	??_ADC_Read^0,f,c
  4410  0029FE  EF02  F015         	goto	u3048
  4411  002A02                     u3030:
  4412  002A02  6A03               	clrf	??_ADC_Read^0,c
  4413  002A04                     u3048:
  4414  002A04  0E01               	movlw	1
  4415  002A06  6E04               	movwf	(??_ADC_Read+1)^0,c
  4416  002A08  2A03               	incf	??_ADC_Read^0,f,c
  4417  002A0A  EF09  F015         	goto	u3054
  4418  002A0E                     u3055:
  4419  002A0E  90D8               	bcf	status,0,c
  4420  002A10  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  4421  002A12                     u3054:
  4422  002A12  2E03               	decfsz	??_ADC_Read^0,f,c
  4423  002A14  EF07  F015         	goto	u3055
  4424  002A18  B0C2               	btfsc	4034,0,c	;volatile
  4425  002A1A  EF11  F015         	goto	u3061
  4426  002A1E  EF15  F015         	goto	u3060
  4427  002A22                     u3061:
  4428  002A22  6A05               	clrf	(??_ADC_Read+2)^0,c
  4429  002A24  2A05               	incf	(??_ADC_Read+2)^0,f,c
  4430  002A26  EF16  F015         	goto	u3078
  4431  002A2A                     u3060:
  4432  002A2A  6A05               	clrf	(??_ADC_Read+2)^0,c
  4433  002A2C                     u3078:
  4434  002A2C  0E01               	movlw	1
  4435  002A2E  6E06               	movwf	(??_ADC_Read+3)^0,c
  4436  002A30  2A05               	incf	(??_ADC_Read+2)^0,f,c
  4437  002A32  EF1D  F015         	goto	u3084
  4438  002A36                     u3085:
  4439  002A36  90D8               	bcf	status,0,c
  4440  002A38  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  4441  002A3A                     u3084:
  4442  002A3A  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  4443  002A3C  EF1B  F015         	goto	u3085
  4444  002A40  5006               	movf	(??_ADC_Read+3)^0,w,c
  4445  002A42  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  4446  002A44  12C2               	iorwf	194,f,c	;volatile
  4447  002A46                     l24:
  4448  002A46  B2C2               	btfsc	194,1,c	;volatile
  4449  002A48  EF28  F015         	goto	u3091
  4450  002A4C  EF2A  F015         	goto	u3090
  4451  002A50                     u3091:
  4452  002A50  EF23  F015         	goto	l24
  4453  002A54                     u3090:
  4454  002A54                     
  4455                           ;PIC18F4550_ADC_Source_File.c: 39:     digital = (ADRESH*256) | (ADRESL);
  4456  002A54  50C3               	movf	195,w,c	;volatile
  4457  002A56  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  4458  002A5A  6A04               	clrf	(??_ADC_Read+1)^0,c
  4459  002A5C  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  4460  002A60  6A03               	clrf	??_ADC_Read^0,c
  4461  002A62  1003               	iorwf	??_ADC_Read^0,w,c
  4462  002A64  6E07               	movwf	ADC_Read@digital^0,c
  4463  002A66  5004               	movf	(??_ADC_Read+1)^0,w,c
  4464  002A68  6E08               	movwf	(ADC_Read@digital+1)^0,c
  4465  002A6A                     
  4466                           ;PIC18F4550_ADC_Source_File.c: 40:     return(digital);
  4467  002A6A  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  4468  002A6E  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  4469  002A72  0012               	return		;funcret
  4470  002A74                     __end_of_ADC_Read:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _RTC *****************
  4474 ;; Defined at:
  4475 ;;		line 257 in file "Controler.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    8
  4496 ;; This function calls:
  4497 ;;		_I2C_Stop
  4498 ;;		_LCD_String
  4499 ;;		_LCD_String_xy
  4500 ;;		_RTC_Read_Clock
  4501 ;;		_sprintf
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text14
  4508  002B10                     __ptext14:
  4509                           	callstack 0
  4510  002B10                     _RTC:
  4511                           	callstack 22
  4512  002B10                     
  4513                           ;Controler.c: 258:     RTC_Read_Clock(0);
  4514  002B10  0E00               	movlw	0
  4515  002B12  EC4D  F017         	call	_RTC_Read_Clock
  4516  002B16                     
  4517                           ;Controler.c: 259:     I2C_Stop();
  4518  002B16  EC31  F019         	call	_I2C_Stop	;wreg free
  4519  002B1A                     
  4520                           ;Controler.c: 262:     hour = hour & (0x1f);
  4521  002B1A  0E1F               	movlw	31
  4522  002B1C  0100               	movlb	0	; () banked
  4523  002B1E  15BE               	andwf	_hour& (0+255),w,b
  4524  002B20  6FBE               	movwf	_hour& (0+255),b
  4525  002B22  6BBF               	clrf	(_hour+1)& (0+255),b
  4526  002B24                     
  4527                           ; BSR set to: 0
  4528                           ;Controler.c: 263:     sprintf(secs, "%x ", sec);
  4529  002B24  0ED8               	movlw	low _secs
  4530  002B26  6F66               	movwf	sprintf@s& (0+255),b
  4531  002B28  0E00               	movlw	high _secs
  4532  002B2A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4533  002B2C  0E73               	movlw	low STR_13
  4534  002B2E  6F68               	movwf	sprintf@fmt& (0+255),b
  4535  002B30  0E08               	movlw	high STR_13
  4536  002B32  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4537  002B34  C0C2  F06A         	movff	_sec,?_sprintf+4
  4538  002B38  C0C3  F06B         	movff	_sec+1,?_sprintf+5
  4539  002B3C  ECDB  F016         	call	_sprintf	;wreg free
  4540  002B40                     
  4541                           ;Controler.c: 264:     sprintf(mins, "%x:", min);
  4542  002B40  0ECE               	movlw	low _mins
  4543  002B42  0100               	movlb	0	; () banked
  4544  002B44  6F66               	movwf	sprintf@s& (0+255),b
  4545  002B46  0E00               	movlw	high _mins
  4546  002B48  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4547  002B4A  0E31               	movlw	low (STR_15+4)
  4548  002B4C  6F68               	movwf	sprintf@fmt& (0+255),b
  4549  002B4E  0E08               	movlw	high (STR_15+4)
  4550  002B50  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4551  002B52  C0C0  F06A         	movff	_min,?_sprintf+4
  4552  002B56  C0C1  F06B         	movff	_min+1,?_sprintf+5
  4553  002B5A  ECDB  F016         	call	_sprintf	;wreg free
  4554  002B5E                     
  4555                           ;Controler.c: 265:     sprintf(hours, "Tim:%x:", hour);
  4556  002B5E  0EC4               	movlw	low _hours
  4557  002B60  0100               	movlb	0	; () banked
  4558  002B62  6F66               	movwf	sprintf@s& (0+255),b
  4559  002B64  0E00               	movlw	high _hours
  4560  002B66  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4561  002B68  0E2D               	movlw	low STR_15
  4562  002B6A  6F68               	movwf	sprintf@fmt& (0+255),b
  4563  002B6C  0E08               	movlw	high STR_15
  4564  002B6E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4565  002B70  C0BE  F06A         	movff	_hour,?_sprintf+4
  4566  002B74  C0BF  F06B         	movff	_hour+1,?_sprintf+5
  4567  002B78  ECDB  F016         	call	_sprintf	;wreg free
  4568  002B7C                     
  4569                           ;Controler.c: 266:     LCD_String_xy(0, 0, hours);
  4570  002B7C  0E00               	movlw	0
  4571  002B7E  6E0A               	movwf	LCD_String_xy@pos^0,c
  4572  002B80  0EC4               	movlw	low _hours
  4573  002B82  6E0B               	movwf	LCD_String_xy@str^0,c
  4574  002B84  0E00               	movlw	high _hours
  4575  002B86  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  4576  002B88  0E00               	movlw	0
  4577  002B8A  ECD4  F015         	call	_LCD_String_xy
  4578  002B8E                     
  4579                           ;Controler.c: 267:     LCD_String(mins);
  4580  002B8E  0ECE               	movlw	low _mins
  4581  002B90  6E08               	movwf	LCD_String@msg^0,c
  4582  002B92  0E00               	movlw	high _mins
  4583  002B94  6E09               	movwf	(LCD_String@msg+1)^0,c
  4584  002B96  ECAC  F016         	call	_LCD_String	;wreg free
  4585  002B9A                     
  4586                           ;Controler.c: 268:     LCD_String(secs);
  4587  002B9A  0ED8               	movlw	low _secs
  4588  002B9C  6E08               	movwf	LCD_String@msg^0,c
  4589  002B9E  0E00               	movlw	high _secs
  4590  002BA0  6E09               	movwf	(LCD_String@msg+1)^0,c
  4591  002BA2  ECAC  F016         	call	_LCD_String	;wreg free
  4592  002BA6  0012               	return		;funcret
  4593  002BA8                     __end_of_RTC:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _sprintf *****************
  4597 ;; Defined at:
  4598 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  s               2    6[BANK0 ] PTR unsigned char 
  4601 ;;		 -> hours(10), mins(10), secs(10), SensorTemperatura@Temperature(10), 
  4602 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  4603 ;;		 -> STR_15(8), STR_14(4), STR_13(4), STR_2(7), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  f               6   18[BANK0 ] struct _IO_FILE
  4606 ;;  ap              2   16[BANK0 ] PTR void [1]
  4607 ;;		 -> ?_sprintf(2), 
  4608 ;;  ret             2    0        int 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2    6[BANK0 ] int 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4618 ;;      Params:         0       8       0       0       0       0       0       0       0
  4619 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4621 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4622 ;;Total ram usage:       18 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    7
  4625 ;; This function calls:
  4626 ;;		_vfprintf
  4627 ;; This function is called by:
  4628 ;;		_SensorTemperatura
  4629 ;;		_RTC
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text15
  4634  002DB6                     __ptext15:
  4635                           	callstack 0
  4636  002DB6                     _sprintf:
  4637                           	callstack 22
  4638  002DB6  0E6A               	movlw	low (?_sprintf+4)
  4639  002DB8  0100               	movlb	0	; () banked
  4640  002DBA  6F70               	movwf	sprintf@ap& (0+255),b
  4641  002DBC  0E00               	movlw	high (?_sprintf+4)
  4642  002DBE  6F71               	movwf	(sprintf@ap+1)& (0+255),b
  4643  002DC0  C066  F072         	movff	sprintf@s,sprintf@f
  4644  002DC4  C067  F073         	movff	sprintf@s+1,sprintf@f+1
  4645  002DC8                     
  4646                           ; BSR set to: 0
  4647  002DC8  0E00               	movlw	0
  4648  002DCA  6F75               	movwf	(sprintf@f+3)& (0+255),b
  4649  002DCC  0E00               	movlw	0
  4650  002DCE  6F74               	movwf	(sprintf@f+2)& (0+255),b
  4651  002DD0                     
  4652                           ; BSR set to: 0
  4653  002DD0  0E00               	movlw	0
  4654  002DD2  6F77               	movwf	(sprintf@f+5)& (0+255),b
  4655  002DD4  0E00               	movlw	0
  4656  002DD6  6F76               	movwf	(sprintf@f+4)& (0+255),b
  4657  002DD8                     
  4658                           ; BSR set to: 0
  4659  002DD8  0E72               	movlw	low sprintf@f
  4660  002DDA  6F60               	movwf	vfprintf@fp& (0+255),b
  4661  002DDC  0E00               	movlw	high sprintf@f
  4662  002DDE  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  4663  002DE0  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  4664  002DE4  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4665  002DE8  0E70               	movlw	low sprintf@ap
  4666  002DEA  6F64               	movwf	vfprintf@ap& (0+255),b
  4667  002DEC  0E00               	movlw	high sprintf@ap
  4668  002DEE  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  4669  002DF0  EC4C  F016         	call	_vfprintf	;wreg free
  4670  002DF4  0100               	movlb	0	; () banked
  4671  002DF6  5174               	movf	(sprintf@f+2)& (0+255),w,b
  4672  002DF8  2566               	addwf	sprintf@s& (0+255),w,b
  4673  002DFA  6ED9               	movwf	fsr2l,c
  4674  002DFC  5175               	movf	(sprintf@f+3)& (0+255),w,b
  4675  002DFE  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  4676  002E00  6EDA               	movwf	fsr2h,c
  4677  002E02  0E00               	movlw	0
  4678  002E04  6EDF               	movwf	indf2,c
  4679  002E06                     
  4680                           ; BSR set to: 0
  4681  002E06  0012               	return		;funcret
  4682  002E08                     __end_of_sprintf:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function _vfprintf *****************
  4686 ;; Defined at:
  4687 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4690 ;;		 -> sprintf@f(6), 
  4691 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4692 ;;		 -> STR_15(8), STR_14(4), STR_13(4), STR_2(7), 
  4693 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4694 ;;		 -> sprintf@ap(2), 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  4697 ;;		 -> STR_15(8), STR_14(4), STR_13(4), STR_2(7), 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  2    0[BANK0 ] int 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4707 ;;      Params:         0       6       0       0       0       0       0       0       0
  4708 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4710 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4711 ;;Total ram usage:        8 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    6
  4714 ;; This function calls:
  4715 ;;		_vfpfcnvrt
  4716 ;; This function is called by:
  4717 ;;		_sprintf
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text16
  4722  002C98                     __ptext16:
  4723                           	callstack 0
  4724  002C98                     _vfprintf:
  4725                           	callstack 22
  4726  002C98                     
  4727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4728  002C98  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  4729  002C9C  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4730  002CA0                     
  4731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4732  002CA0  0E00               	movlw	0
  4733  002CA2  0100               	movlb	0	; () banked
  4734  002CA4  6FB7               	movwf	(_nout+1)& (0+255),b
  4735  002CA6  0E00               	movlw	0
  4736  002CA8  6FB6               	movwf	_nout& (0+255),b
  4737                           
  4738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4739  002CAA  EF6A  F016         	goto	l3016
  4740  002CAE                     l3014:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4744  002CAE  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4745  002CB2  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4746  002CB6  0E5E               	movlw	low vfprintf@cfmt
  4747  002CB8  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4748  002CBA  0E00               	movlw	high vfprintf@cfmt
  4749  002CBC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4750  002CBE  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4751  002CC2  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4752  002CC6  EC1E  F008         	call	_vfpfcnvrt	;wreg free
  4753  002CCA  5043               	movf	?_vfpfcnvrt^0,w,c
  4754  002CCC  0100               	movlb	0	; () banked
  4755  002CCE  27B6               	addwf	_nout& (0+255),f,b
  4756  002CD0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4757  002CD2  23B7               	addwfc	(_nout+1)& (0+255),f,b
  4758  002CD4                     l3016:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4762  002CD4  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4763  002CD8  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4764  002CDC                     	if	0	;tblptru may be non-zero
  4765  002CDC                     	endif
  4766  002CDC                     	if	0	;tblptru may be non-zero
  4767  002CDC                     	endif
  4768  002CDC  0008               	tblrd		*
  4769  002CDE  50F5               	movf	tablat,w,c
  4770  002CE0  0900               	iorlw	0
  4771  002CE2  A4D8               	btfss	status,2,c
  4772  002CE4  EF76  F016         	goto	u3021
  4773  002CE8  EF78  F016         	goto	u3020
  4774  002CEC                     u3021:
  4775  002CEC  EF57  F016         	goto	l3014
  4776  002CF0                     u3020:
  4777  002CF0                     
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4780  002CF0  C0B6  F060         	movff	_nout,?_vfprintf
  4781  002CF4  C0B7  F061         	movff	_nout+1,?_vfprintf+1
  4782  002CF8                     
  4783                           ; BSR set to: 0
  4784  002CF8  0012               	return		;funcret
  4785  002CFA                     __end_of_vfprintf:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _vfpfcnvrt *****************
  4789 ;; Defined at:
  4790 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4793 ;;		 -> sprintf@f(6), 
  4794 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4795 ;;		 -> vfprintf@cfmt(2), 
  4796 ;;  ap              2   70[COMRAM] PTR PTR void 
  4797 ;;		 -> sprintf@ap(2), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  llu             8   84[COMRAM] unsigned long long 
  4800 ;;  ll              8   76[COMRAM] long long 
  4801 ;;  f               4    0        long long 
  4802 ;;  vp              3    0        PTR void 
  4803 ;;  ct              3    0        unsigned char [3]
  4804 ;;  cp              3    0        PTR unsigned char 
  4805 ;;  i               2    0        int 
  4806 ;;  done            2    0        int 
  4807 ;;  c               1   92[COMRAM] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  2   66[COMRAM] int 
  4810 ;; Registers used:
  4811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4817 ;;      Params:         6       0       0       0       0       0       0       0       0
  4818 ;;      Locals:        17       0       0       0       0       0       0       0       0
  4819 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4820 ;;      Totals:        27       0       0       0       0       0       0       0       0
  4821 ;;Total ram usage:       27 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    5
  4824 ;; This function calls:
  4825 ;;		_ctoa
  4826 ;;		_dtoa
  4827 ;;		_fputc
  4828 ;;		_xtoa
  4829 ;; This function is called by:
  4830 ;;		_vfprintf
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text17
  4835  00103C                     __ptext17:
  4836                           	callstack 0
  4837  00103C                     _vfpfcnvrt:
  4838                           	callstack 22
  4839  00103C                     
  4840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4841  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4842  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4843  001044  CFDE FFF6          	movff	postinc2,tblptrl
  4844  001048  CFDD FFF7          	movff	postdec2,tblptrh
  4845  00104C                     	if	0	;tblptru may be non-zero
  4846  00104C                     	endif
  4847  00104C                     	if	0	;tblptru may be non-zero
  4848  00104C                     	endif
  4849  00104C  0008               	tblrd		*
  4850  00104E  50F5               	movf	tablat,w,c
  4851  001050  0A25               	xorlw	37
  4852  001052  A4D8               	btfss	status,2,c
  4853  001054  EF2E  F008         	goto	u2851
  4854  001058  EF30  F008         	goto	u2850
  4855  00105C                     u2851:
  4856  00105C  EF87  F009         	goto	l2946
  4857  001060                     u2850:
  4858  001060                     
  4859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4860  001060  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4861  001064  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4862  001068  2ADE               	incf	postinc2,f,c
  4863  00106A  0E00               	movlw	0
  4864  00106C  22DD               	addwfc	postdec2,f,c
  4865  00106E                     
  4866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4867  00106E  0E00               	movlw	0
  4868  001070  0100               	movlb	0	; () banked
  4869  001072  6FB9               	movwf	(_width+1)& (0+255),b
  4870  001074  0E00               	movlw	0
  4871  001076  6FB8               	movwf	_width& (0+255),b
  4872  001078  C0B8  F0BC         	movff	_width,_flags
  4873  00107C  C0B9  F0BD         	movff	_width+1,_flags+1
  4874  001080                     
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4877  001080  69BA               	setf	_prec& (0+255),b
  4878  001082  69BB               	setf	(_prec+1)& (0+255),b
  4879  001084                     
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  4882  001084  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4883  001088  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4884  00108C  CFDE FFF6          	movff	postinc2,tblptrl
  4885  001090  CFDD FFF7          	movff	postdec2,tblptrh
  4886  001094                     	if	0	;tblptru may be non-zero
  4887  001094                     	endif
  4888  001094                     	if	0	;tblptru may be non-zero
  4889  001094                     	endif
  4890  001094  0008               	tblrd		*
  4891  001096  50F5               	movf	tablat,w,c
  4892  001098  0A63               	xorlw	99
  4893  00109A  A4D8               	btfss	status,2,c
  4894  00109C  EF52  F008         	goto	u2861
  4895  0010A0  EF54  F008         	goto	u2860
  4896  0010A4                     u2861:
  4897  0010A4  EF7B  F008         	goto	l2906
  4898  0010A8                     u2860:
  4899  0010A8                     
  4900                           ; BSR set to: 0
  4901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  4902  0010A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4903  0010AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4904  0010B0  2ADE               	incf	postinc2,f,c
  4905  0010B2  0E00               	movlw	0
  4906  0010B4  22DD               	addwfc	postdec2,f,c
  4907                           
  4908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4909  0010B6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4910  0010BA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4911  0010BE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4912  0010C2  0E02               	movlw	2
  4913  0010C4  26DE               	addwf	postinc2,f,c
  4914  0010C6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4915  0010CA  0E00               	movlw	0
  4916  0010CC  22DD               	addwfc	postdec2,f,c
  4917  0010CE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4918  0010D2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4919  0010D6  50DF               	movf	indf2,w,c
  4920  0010D8  6E5D               	movwf	vfpfcnvrt@c^0,c
  4921  0010DA                     
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  4924  0010DA  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  4925  0010DE  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4926  0010E2  C05D  F00C         	movff	vfpfcnvrt@c,ctoa@c
  4927  0010E6  ECB8  F013         	call	_ctoa	;wreg free
  4928  0010EA  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  4929  0010EE  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4930  0010F2  EFA2  F009         	goto	l1171
  4931  0010F6                     l2906:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4935  0010F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4936  0010FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4937  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  4938  001102  CFDD FFF7          	movff	postdec2,tblptrh
  4939  001106                     	if	0	;tblptru may be non-zero
  4940  001106                     	endif
  4941  001106                     	if	0	;tblptru may be non-zero
  4942  001106                     	endif
  4943  001106  0008               	tblrd		*
  4944  001108  50F5               	movf	tablat,w,c
  4945  00110A  0A64               	xorlw	100
  4946  00110C  B4D8               	btfsc	status,2,c
  4947  00110E  EF8B  F008         	goto	u2871
  4948  001112  EF8D  F008         	goto	u2870
  4949  001116                     u2871:
  4950  001116  EF9F  F008         	goto	l2910
  4951  00111A                     u2870:
  4952  00111A                     
  4953                           ; BSR set to: 0
  4954  00111A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4955  00111E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4956  001122  CFDE FFF6          	movff	postinc2,tblptrl
  4957  001126  CFDD FFF7          	movff	postdec2,tblptrh
  4958  00112A                     	if	0	;tblptru may be non-zero
  4959  00112A                     	endif
  4960  00112A                     	if	0	;tblptru may be non-zero
  4961  00112A                     	endif
  4962  00112A  0008               	tblrd		*
  4963  00112C  50F5               	movf	tablat,w,c
  4964  00112E  0A69               	xorlw	105
  4965  001130  A4D8               	btfss	status,2,c
  4966  001132  EF9D  F008         	goto	u2881
  4967  001136  EF9F  F008         	goto	u2880
  4968  00113A                     u2881:
  4969  00113A  EFDF  F008         	goto	l2916
  4970  00113E                     u2880:
  4971  00113E                     l2910:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4975  00113E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4976  001142  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4977  001146  2ADE               	incf	postinc2,f,c
  4978  001148  0E00               	movlw	0
  4979  00114A  22DD               	addwfc	postdec2,f,c
  4980                           
  4981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4982  00114C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4983  001150  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4984  001154  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4985  001158  0E02               	movlw	2
  4986  00115A  26DE               	addwf	postinc2,f,c
  4987  00115C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4988  001160  0E00               	movlw	0
  4989  001162  22DD               	addwfc	postdec2,f,c
  4990  001164  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4991  001168  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4992  00116C  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  4993  001170  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  4994  001174  0E00               	movlw	0
  4995  001176  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4996  001178  0EFF               	movlw	-1
  4997  00117A  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  4998  00117C  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  4999  00117E  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  5000  001180  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  5001  001182  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  5002  001184  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  5003  001186                     
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5006  001186  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5007  00118A  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5008  00118E  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5009  001192  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5010  001196  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5011  00119A  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5012  00119E  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5013  0011A2  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5014  0011A6  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5015  0011AA  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5016  0011AE  ECA3  F009         	call	_dtoa	;wreg free
  5017  0011B2  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5018  0011B6  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5019  0011BA  EFA2  F009         	goto	l1171
  5020  0011BE                     l2916:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5024  0011BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5025  0011C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5026  0011C6  CFDE FFF6          	movff	postinc2,tblptrl
  5027  0011CA  CFDD FFF7          	movff	postdec2,tblptrh
  5028  0011CE                     	if	0	;tblptru may be non-zero
  5029  0011CE                     	endif
  5030  0011CE                     	if	0	;tblptru may be non-zero
  5031  0011CE                     	endif
  5032  0011CE  0008               	tblrd		*
  5033  0011D0  50F5               	movf	tablat,w,c
  5034  0011D2  0A78               	xorlw	120
  5035  0011D4  B4D8               	btfsc	status,2,c
  5036  0011D6  EFEF  F008         	goto	u2891
  5037  0011DA  EFF1  F008         	goto	u2890
  5038  0011DE                     u2891:
  5039  0011DE  EF03  F009         	goto	l2920
  5040  0011E2                     u2890:
  5041  0011E2                     
  5042                           ; BSR set to: 0
  5043  0011E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5044  0011E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5045  0011EA  CFDE FFF6          	movff	postinc2,tblptrl
  5046  0011EE  CFDD FFF7          	movff	postdec2,tblptrh
  5047  0011F2                     	if	0	;tblptru may be non-zero
  5048  0011F2                     	endif
  5049  0011F2                     	if	0	;tblptru may be non-zero
  5050  0011F2                     	endif
  5051  0011F2  0008               	tblrd		*
  5052  0011F4  50F5               	movf	tablat,w,c
  5053  0011F6  0A58               	xorlw	88
  5054  0011F8  A4D8               	btfss	status,2,c
  5055  0011FA  EF01  F009         	goto	u2901
  5056  0011FE  EF03  F009         	goto	u2900
  5057  001202                     u2901:
  5058  001202  EF51  F009         	goto	l2930
  5059  001206                     u2900:
  5060  001206                     l2920:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5064  001206  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  00120A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  00120E  CFDE FFF6          	movff	postinc2,tblptrl
  5067  001212  CFDD FFF7          	movff	postdec2,tblptrh
  5068  001216                     	if	0	;tblptru may be non-zero
  5069  001216                     	endif
  5070  001216                     	if	0	;tblptru may be non-zero
  5071  001216                     	endif
  5072  001216  0008               	tblrd		*
  5073  001218  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  5074  00121C                     
  5075                           ; BSR set to: 0
  5076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5077  00121C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5078  001220  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5079  001224  2ADE               	incf	postinc2,f,c
  5080  001226  0E00               	movlw	0
  5081  001228  22DD               	addwfc	postdec2,f,c
  5082  00122A                     
  5083                           ; BSR set to: 0
  5084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5085  00122A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5086  00122E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5087  001232  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5088  001236  0E02               	movlw	2
  5089  001238  26DE               	addwf	postinc2,f,c
  5090  00123A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5091  00123E  0E00               	movlw	0
  5092  001240  22DD               	addwfc	postdec2,f,c
  5093  001242  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5094  001246  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5095  00124A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5096  00124E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5097  001252  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5098  001256  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5099  00125A  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  5100  00125C  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  5101  00125E  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  5102  001260  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  5103  001262  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  5104  001264  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  5105  001266                     
  5106                           ; BSR set to: 0
  5107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5108  001266  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5109  00126A  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5110  00126E  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5111  001272  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5112  001276  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5113  00127A  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5114  00127E  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5115  001282  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5116  001286  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5117  00128A  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5118  00128E  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  5119  001292  EC15  F00B         	call	_xtoa	;wreg free
  5120  001296  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5121  00129A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5122  00129E  EFA2  F009         	goto	l1171
  5123  0012A2                     l2930:
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5127  0012A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5128  0012A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5129  0012AA  CFDE FFF6          	movff	postinc2,tblptrl
  5130  0012AE  CFDD FFF7          	movff	postdec2,tblptrh
  5131  0012B2                     	if	0	;tblptru may be non-zero
  5132  0012B2                     	endif
  5133  0012B2                     	if	0	;tblptru may be non-zero
  5134  0012B2                     	endif
  5135  0012B2  0008               	tblrd		*
  5136  0012B4  50F5               	movf	tablat,w,c
  5137  0012B6  0A25               	xorlw	37
  5138  0012B8  A4D8               	btfss	status,2,c
  5139  0012BA  EF61  F009         	goto	u2911
  5140  0012BE  EF63  F009         	goto	u2910
  5141  0012C2                     u2911:
  5142  0012C2  EF7A  F009         	goto	l2940
  5143  0012C6                     u2910:
  5144  0012C6                     
  5145                           ; BSR set to: 0
  5146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5147  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5148  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5149  0012CE  2ADE               	incf	postinc2,f,c
  5150  0012D0  0E00               	movlw	0
  5151  0012D2  22DD               	addwfc	postdec2,f,c
  5152  0012D4                     
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5155  0012D4  0E00               	movlw	0
  5156  0012D6  6E02               	movwf	(fputc@c+1)^0,c
  5157  0012D8  0E25               	movlw	37
  5158  0012DA  6E01               	movwf	fputc@c^0,c
  5159  0012DC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5160  0012E0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5161  0012E4  EC24  F014         	call	_fputc	;wreg free
  5162  0012E8                     l2936:
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5165  0012E8  0E00               	movlw	0
  5166  0012EA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5167  0012EC  0E01               	movlw	1
  5168  0012EE  6E43               	movwf	?_vfpfcnvrt^0,c
  5169  0012F0  EFA2  F009         	goto	l1171
  5170  0012F4                     l2940:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5174  0012F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5175  0012F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5176  0012FC  2ADE               	incf	postinc2,f,c
  5177  0012FE  0E00               	movlw	0
  5178  001300  22DD               	addwfc	postdec2,f,c
  5179  001302                     
  5180                           ; BSR set to: 0
  5181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5182  001302  0E00               	movlw	0
  5183  001304  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5184  001306  0E00               	movlw	0
  5185  001308  6E43               	movwf	?_vfpfcnvrt^0,c
  5186  00130A  EFA2  F009         	goto	l1171
  5187  00130E                     l2946:
  5188                           
  5189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5190  00130E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5191  001312  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5192  001316  CFDE FFF6          	movff	postinc2,tblptrl
  5193  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  5194  00131E                     	if	0	;tblptru may be non-zero
  5195  00131E                     	endif
  5196  00131E                     	if	0	;tblptru may be non-zero
  5197  00131E                     	endif
  5198  00131E  0008               	tblrd		*
  5199  001320  50F5               	movf	tablat,w,c
  5200  001322  6E01               	movwf	fputc@c^0,c
  5201  001324  6A02               	clrf	(fputc@c+1)^0,c
  5202  001326  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5203  00132A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5204  00132E  EC24  F014         	call	_fputc	;wreg free
  5205  001332                     
  5206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5207  001332  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5208  001336  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5209  00133A  2ADE               	incf	postinc2,f,c
  5210  00133C  0E00               	movlw	0
  5211  00133E  22DD               	addwfc	postdec2,f,c
  5212  001340  EF74  F009         	goto	l2936
  5213  001344                     l1171:
  5214  001344  0012               	return		;funcret
  5215  001346                     __end_of_vfpfcnvrt:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _xtoa *****************
  5219 ;; Defined at:
  5220 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5223 ;;		 -> sprintf@f(6), 
  5224 ;;  d               8   29[COMRAM] unsigned long long 
  5225 ;;  x               1   37[COMRAM] unsigned char 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  n               8   54[COMRAM] unsigned long long 
  5228 ;;  c               2   64[COMRAM] int 
  5229 ;;  i               2   62[COMRAM] int 
  5230 ;;  w               2   52[COMRAM] int 
  5231 ;;  p               2   50[COMRAM] int 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  2   27[COMRAM] int 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5241 ;;      Params:        11       0       0       0       0       0       0       0       0
  5242 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5243 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5244 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5245 ;;Total ram usage:       39 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    4
  5248 ;; This function calls:
  5249 ;;		_isalpha
  5250 ;;		_isupper
  5251 ;;		_pad
  5252 ;;		_toupper
  5253 ;; This function is called by:
  5254 ;;		_vfpfcnvrt
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text18
  5259  00162A                     __ptext18:
  5260                           	callstack 0
  5261  00162A                     _xtoa:
  5262                           	callstack 22
  5263  00162A                     
  5264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5265  00162A  0100               	movlb	0	; () banked
  5266  00162C  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  5267  00162E  EF1B  F00B         	goto	u2651
  5268  001632  EF1D  F00B         	goto	u2650
  5269  001636                     u2651:
  5270  001636  EF1E  F00B         	goto	l2796
  5271  00163A                     u2650:
  5272  00163A                     
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5275  00163A  93BC               	bcf	_flags& (0+255),1,b
  5276  00163C                     l2796:
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5280  00163C  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  5281  00163E  EF2B  F00B         	goto	u2660
  5282  001642  51BB               	movf	(_prec+1)& (0+255),w,b
  5283  001644  E106               	bnz	u2661
  5284  001646  05BA               	decf	_prec& (0+255),w,b
  5285  001648  B0D8               	btfsc	status,0,c
  5286  00164A  EF29  F00B         	goto	u2661
  5287  00164E  EF2B  F00B         	goto	u2660
  5288  001652                     u2661:
  5289  001652  EF31  F00B         	goto	l1141
  5290  001656                     u2660:
  5291  001656                     
  5292                           ; BSR set to: 0
  5293  001656  0E00               	movlw	0
  5294  001658  6E34               	movwf	(xtoa@p+1)^0,c
  5295  00165A  0E01               	movlw	1
  5296  00165C  6E33               	movwf	xtoa@p^0,c
  5297  00165E  EF35  F00B         	goto	l1143
  5298  001662                     l1141:
  5299                           
  5300                           ; BSR set to: 0
  5301  001662  C0BA  F033         	movff	_prec,xtoa@p
  5302  001666  C0BB  F034         	movff	_prec+1,xtoa@p+1
  5303  00166A                     l1143:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5307  00166A  C0B8  F035         	movff	_width,xtoa@w
  5308  00166E  C0B9  F036         	movff	_width+1,xtoa@w+1
  5309                           
  5310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5311  001672  A9BC               	btfss	_flags& (0+255),4,b
  5312  001674  EF3E  F00B         	goto	u2671
  5313  001678  EF40  F00B         	goto	u2670
  5314  00167C                     u2671:
  5315  00167C  EF44  F00B         	goto	l2802
  5316  001680                     u2670:
  5317  001680                     
  5318                           ; BSR set to: 0
  5319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5320  001680  0EFE               	movlw	254
  5321  001682  2635               	addwf	xtoa@w^0,f,c
  5322  001684  0EFF               	movlw	255
  5323  001686  2236               	addwfc	(xtoa@w+1)^0,f,c
  5324  001688                     l2802:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5328  001688  C01E  F037         	movff	xtoa@d,xtoa@n
  5329  00168C  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5330  001690  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5331  001694  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5332  001698  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5333  00169C  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5334  0016A0  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5335  0016A4  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5336  0016A8                     
  5337                           ; BSR set to: 0
  5338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5339  0016A8  0E00               	movlw	0
  5340  0016AA  6E40               	movwf	(xtoa@i+1)^0,c
  5341  0016AC  0E1F               	movlw	31
  5342  0016AE  6E3F               	movwf	xtoa@i^0,c
  5343  0016B0                     
  5344                           ; BSR set to: 0
  5345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5346  0016B0  0E00               	movlw	0
  5347  0016B2  0101               	movlb	1	; () banked
  5348  0016B4  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5349                           
  5350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5351  0016B6  EF10  F00C         	goto	l2838
  5352  0016BA                     l2808:
  5353                           
  5354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  5355  0016BA  063F               	decf	xtoa@i^0,f,c
  5356  0016BC  A0D8               	btfss	status,0,c
  5357  0016BE  0640               	decf	(xtoa@i+1)^0,f,c
  5358  0016C0                     
  5359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5360  0016C0  0E0F               	movlw	15
  5361  0016C2  1437               	andwf	xtoa@n^0,w,c
  5362  0016C4  6E41               	movwf	xtoa@c^0,c
  5363  0016C6  6A42               	clrf	(xtoa@c+1)^0,c
  5364  0016C8                     
  5365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5366  0016C8  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5367  0016CA  EF70  F00B         	goto	u2681
  5368  0016CE  5042               	movf	(xtoa@c+1)^0,w,c
  5369  0016D0  E109               	bnz	u2680
  5370  0016D2  0E0A               	movlw	10
  5371  0016D4  5C41               	subwf	xtoa@c^0,w,c
  5372  0016D6  A0D8               	btfss	status,0,c
  5373  0016D8  EF70  F00B         	goto	u2681
  5374  0016DC  EF72  F00B         	goto	u2680
  5375  0016E0                     u2681:
  5376  0016E0  EF7A  F00B         	goto	l2816
  5377  0016E4                     u2680:
  5378  0016E4  0E57               	movlw	87
  5379  0016E6  2441               	addwf	xtoa@c^0,w,c
  5380  0016E8  6E41               	movwf	xtoa@c^0,c
  5381  0016EA  0E00               	movlw	0
  5382  0016EC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5383  0016EE  6E42               	movwf	(xtoa@c+1)^0,c
  5384  0016F0  EF80  F00B         	goto	l1150
  5385  0016F4                     l2816:
  5386  0016F4  0E30               	movlw	48
  5387  0016F6  2441               	addwf	xtoa@c^0,w,c
  5388  0016F8  6E41               	movwf	xtoa@c^0,c
  5389  0016FA  0E00               	movlw	0
  5390  0016FC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5391  0016FE  6E42               	movwf	(xtoa@c+1)^0,c
  5392  001700                     l1150:
  5393  001700  0EBF               	movlw	191
  5394  001702  6E27               	movwf	??_xtoa^0,c
  5395  001704  0EFF               	movlw	255
  5396  001706  6E28               	movwf	(??_xtoa+1)^0,c
  5397  001708  5026               	movf	xtoa@x^0,w,c
  5398  00170A  6E29               	movwf	(??_xtoa+2)^0,c
  5399  00170C  6A2A               	clrf	(??_xtoa+3)^0,c
  5400  00170E  5027               	movf	??_xtoa^0,w,c
  5401  001710  2629               	addwf	(??_xtoa+2)^0,f,c
  5402  001712  5028               	movf	(??_xtoa+1)^0,w,c
  5403  001714  222A               	addwfc	(??_xtoa+3)^0,f,c
  5404  001716  502A               	movf	(??_xtoa+3)^0,w,c
  5405  001718  E10A               	bnz	u2690
  5406  00171A  0E1A               	movlw	26
  5407  00171C  5C29               	subwf	(??_xtoa+2)^0,w,c
  5408  00171E  A0D8               	btfss	status,0,c
  5409  001720  EF94  F00B         	goto	u2691
  5410  001724  EF97  F00B         	goto	u2690
  5411  001728                     u2691:
  5412  001728  0E01               	movlw	1
  5413  00172A  EF98  F00B         	goto	u2700
  5414  00172E                     u2690:
  5415  00172E  0E00               	movlw	0
  5416  001730                     u2700:
  5417  001730  6E2F               	movwf	_xtoa$1501^0,c
  5418  001732  6A30               	clrf	(_xtoa$1501+1)^0,c
  5419  001734  502F               	movf	_xtoa$1501^0,w,c
  5420  001736  1030               	iorwf	(_xtoa$1501+1)^0,w,c
  5421  001738  B4D8               	btfsc	status,2,c
  5422  00173A  EFA1  F00B         	goto	u2711
  5423  00173E  EFA3  F00B         	goto	u2710
  5424  001742                     u2711:
  5425  001742  EFD3  F00B         	goto	l2830
  5426  001746                     u2710:
  5427  001746  0E9F               	movlw	159
  5428  001748  6E27               	movwf	??_xtoa^0,c
  5429  00174A  0EFF               	movlw	255
  5430  00174C  6E28               	movwf	(??_xtoa+1)^0,c
  5431  00174E  0E20               	movlw	32
  5432  001750  1041               	iorwf	xtoa@c^0,w,c
  5433  001752  6E29               	movwf	(??_xtoa+2)^0,c
  5434  001754  0E00               	movlw	0
  5435  001756  1042               	iorwf	(xtoa@c+1)^0,w,c
  5436  001758  6E2A               	movwf	(??_xtoa+3)^0,c
  5437  00175A  5027               	movf	??_xtoa^0,w,c
  5438  00175C  2629               	addwf	(??_xtoa+2)^0,f,c
  5439  00175E  5028               	movf	(??_xtoa+1)^0,w,c
  5440  001760  222A               	addwfc	(??_xtoa+3)^0,f,c
  5441  001762  502A               	movf	(??_xtoa+3)^0,w,c
  5442  001764  E10A               	bnz	u2720
  5443  001766  0E1A               	movlw	26
  5444  001768  5C29               	subwf	(??_xtoa+2)^0,w,c
  5445  00176A  A0D8               	btfss	status,0,c
  5446  00176C  EFBA  F00B         	goto	u2721
  5447  001770  EFBD  F00B         	goto	u2720
  5448  001774                     u2721:
  5449  001774  0E01               	movlw	1
  5450  001776  EFBE  F00B         	goto	u2730
  5451  00177A                     u2720:
  5452  00177A  0E00               	movlw	0
  5453  00177C                     u2730:
  5454  00177C  6E31               	movwf	_xtoa$1502^0,c
  5455  00177E  6A32               	clrf	(_xtoa$1502+1)^0,c
  5456  001780  5031               	movf	_xtoa$1502^0,w,c
  5457  001782  1032               	iorwf	(_xtoa$1502+1)^0,w,c
  5458  001784  B4D8               	btfsc	status,2,c
  5459  001786  EFC7  F00B         	goto	u2741
  5460  00178A  EFC9  F00B         	goto	u2740
  5461  00178E                     u2741:
  5462  00178E  EFD3  F00B         	goto	l2830
  5463  001792                     u2740:
  5464  001792                     
  5465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5466  001792  C041  F007         	movff	xtoa@c,toupper@c
  5467  001796  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5468  00179A  EC7D  F016         	call	_toupper	;wreg free
  5469  00179E  C007  F041         	movff	?_toupper,xtoa@c
  5470  0017A2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5471  0017A6                     l2830:
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5474  0017A6  0E9B               	movlw	low _dbuf
  5475  0017A8  243F               	addwf	xtoa@i^0,w,c
  5476  0017AA  6ED9               	movwf	fsr2l,c
  5477  0017AC  0E01               	movlw	high _dbuf
  5478  0017AE  2040               	addwfc	(xtoa@i+1)^0,w,c
  5479  0017B0  6EDA               	movwf	fsr2h,c
  5480  0017B2  C041  FFDF         	movff	xtoa@c,indf2
  5481  0017B6                     
  5482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  5483  0017B6  0633               	decf	xtoa@p^0,f,c
  5484  0017B8  A0D8               	btfss	status,0,c
  5485  0017BA  0634               	decf	(xtoa@p+1)^0,f,c
  5486  0017BC                     
  5487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  5488  0017BC  0635               	decf	xtoa@w^0,f,c
  5489  0017BE  A0D8               	btfss	status,0,c
  5490  0017C0  0636               	decf	(xtoa@w+1)^0,f,c
  5491  0017C2                     
  5492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5493  0017C2  C037  F027         	movff	xtoa@n,??_xtoa
  5494  0017C6  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5495  0017CA  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5496  0017CE  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5497  0017D2  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5498  0017D6  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5499  0017DA  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5500  0017DE  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5501  0017E2  0E05               	movlw	5
  5502  0017E4  EFFD  F00B         	goto	u2750
  5503  0017E8                     u2755:
  5504  0017E8  90D8               	bcf	status,0,c
  5505  0017EA  322E               	rrcf	(??_xtoa+7)^0,f,c
  5506  0017EC  322D               	rrcf	(??_xtoa+6)^0,f,c
  5507  0017EE  322C               	rrcf	(??_xtoa+5)^0,f,c
  5508  0017F0  322B               	rrcf	(??_xtoa+4)^0,f,c
  5509  0017F2  322A               	rrcf	(??_xtoa+3)^0,f,c
  5510  0017F4  3229               	rrcf	(??_xtoa+2)^0,f,c
  5511  0017F6  3228               	rrcf	(??_xtoa+1)^0,f,c
  5512  0017F8  3227               	rrcf	??_xtoa^0,f,c
  5513  0017FA                     u2750:
  5514  0017FA  2EE8               	decfsz	wreg,f,c
  5515  0017FC  EFF4  F00B         	goto	u2755
  5516  001800  C027  F037         	movff	??_xtoa,xtoa@n
  5517  001804  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5518  001808  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5519  00180C  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5520  001810  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5521  001814  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5522  001818  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5523  00181C  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5524  001820                     l2838:
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5527  001820  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5528  001822  EF1C  F00C         	goto	u2761
  5529  001826  5040               	movf	(xtoa@i+1)^0,w,c
  5530  001828  E109               	bnz	u2760
  5531  00182A  0E02               	movlw	2
  5532  00182C  5C3F               	subwf	xtoa@i^0,w,c
  5533  00182E  A0D8               	btfss	status,0,c
  5534  001830  EF1C  F00C         	goto	u2761
  5535  001834  EF1E  F00C         	goto	u2760
  5536  001838                     u2761:
  5537  001838  EF4F  F00C         	goto	l1164
  5538  00183C                     u2760:
  5539  00183C  5037               	movf	xtoa@n^0,w,c
  5540  00183E  1038               	iorwf	(xtoa@n+1)^0,w,c
  5541  001840  1039               	iorwf	(xtoa@n+2)^0,w,c
  5542  001842  103A               	iorwf	(xtoa@n+3)^0,w,c
  5543  001844  103B               	iorwf	(xtoa@n+4)^0,w,c
  5544  001846  103C               	iorwf	(xtoa@n+5)^0,w,c
  5545  001848  103D               	iorwf	(xtoa@n+6)^0,w,c
  5546  00184A  103E               	iorwf	(xtoa@n+7)^0,w,c
  5547  00184C  A4D8               	btfss	status,2,c
  5548  00184E  EF2B  F00C         	goto	u2771
  5549  001852  EF2D  F00C         	goto	u2770
  5550  001856                     u2771:
  5551  001856  EF5D  F00B         	goto	l2808
  5552  00185A                     u2770:
  5553  00185A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5554  00185C  EF3A  F00C         	goto	u2780
  5555  001860  5034               	movf	(xtoa@p+1)^0,w,c
  5556  001862  E106               	bnz	u2781
  5557  001864  0433               	decf	xtoa@p^0,w,c
  5558  001866  B0D8               	btfsc	status,0,c
  5559  001868  EF38  F00C         	goto	u2781
  5560  00186C  EF3A  F00C         	goto	u2780
  5561  001870                     u2781:
  5562  001870  EF5D  F00B         	goto	l2808
  5563  001874                     u2780:
  5564  001874  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5565  001876  EF45  F00C         	goto	u2791
  5566  00187A  5036               	movf	(xtoa@w+1)^0,w,c
  5567  00187C  E108               	bnz	u2790
  5568  00187E  0435               	decf	xtoa@w^0,w,c
  5569  001880  A0D8               	btfss	status,0,c
  5570  001882  EF45  F00C         	goto	u2791
  5571  001886  EF47  F00C         	goto	u2790
  5572  00188A                     u2791:
  5573  00188A  EF4F  F00C         	goto	l1164
  5574  00188E                     u2790:
  5575  00188E  0100               	movlb	0	; () banked
  5576  001890  B3BC               	btfsc	_flags& (0+255),1,b
  5577  001892  EF4D  F00C         	goto	u2801
  5578  001896  EF4F  F00C         	goto	u2800
  5579  00189A                     u2801:
  5580  00189A  EF5D  F00B         	goto	l2808
  5581  00189E                     u2800:
  5582  00189E                     l1164:
  5583                           
  5584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5585  00189E  0100               	movlb	0	; () banked
  5586  0018A0  A9BC               	btfss	_flags& (0+255),4,b
  5587  0018A2  EF55  F00C         	goto	u2811
  5588  0018A6  EF57  F00C         	goto	u2810
  5589  0018AA                     u2811:
  5590  0018AA  EF6D  F00C         	goto	l2854
  5591  0018AE                     u2810:
  5592  0018AE                     
  5593                           ; BSR set to: 0
  5594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  5595  0018AE  063F               	decf	xtoa@i^0,f,c
  5596  0018B0  A0D8               	btfss	status,0,c
  5597  0018B2  0640               	decf	(xtoa@i+1)^0,f,c
  5598  0018B4                     
  5599                           ; BSR set to: 0
  5600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5601  0018B4  0E9B               	movlw	low _dbuf
  5602  0018B6  243F               	addwf	xtoa@i^0,w,c
  5603  0018B8  6ED9               	movwf	fsr2l,c
  5604  0018BA  0E01               	movlw	high _dbuf
  5605  0018BC  2040               	addwfc	(xtoa@i+1)^0,w,c
  5606  0018BE  6EDA               	movwf	fsr2h,c
  5607  0018C0  C026  FFDF         	movff	xtoa@x,indf2
  5608  0018C4                     
  5609                           ; BSR set to: 0
  5610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  5611  0018C4  063F               	decf	xtoa@i^0,f,c
  5612  0018C6  A0D8               	btfss	status,0,c
  5613  0018C8  0640               	decf	(xtoa@i+1)^0,f,c
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5616  0018CA  0E9B               	movlw	low _dbuf
  5617  0018CC  243F               	addwf	xtoa@i^0,w,c
  5618  0018CE  6ED9               	movwf	fsr2l,c
  5619  0018D0  0E01               	movlw	high _dbuf
  5620  0018D2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5621  0018D4  6EDA               	movwf	fsr2h,c
  5622  0018D6  0E30               	movlw	48
  5623  0018D8  6EDF               	movwf	indf2,c
  5624  0018DA                     l2854:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5628  0018DA  C01C  F011         	movff	xtoa@fp,pad@fp
  5629  0018DE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5630  0018E2  0E9B               	movlw	low _dbuf
  5631  0018E4  243F               	addwf	xtoa@i^0,w,c
  5632  0018E6  6E13               	movwf	pad@buf^0,c
  5633  0018E8  0E01               	movlw	high _dbuf
  5634  0018EA  2040               	addwfc	(xtoa@i+1)^0,w,c
  5635  0018EC  6E14               	movwf	(pad@buf+1)^0,c
  5636  0018EE  C035  F015         	movff	xtoa@w,pad@p
  5637  0018F2  C036  F016         	movff	xtoa@w+1,pad@p+1
  5638  0018F6  EC89  F014         	call	_pad	;wreg free
  5639  0018FA  C011  F01C         	movff	?_pad,?_xtoa
  5640  0018FE  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5641  001902  0012               	return		;funcret
  5642  001904                     __end_of_xtoa:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _toupper *****************
  5646 ;; Defined at:
  5647 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  c               2    6[COMRAM] int 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2    6[COMRAM] int 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5661 ;;      Params:         2       0       0       0       0       0       0       0       0
  5662 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5663 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5664 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5665 ;;Total ram usage:        8 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    1
  5668 ;; This function calls:
  5669 ;;		_islower
  5670 ;; This function is called by:
  5671 ;;		_xtoa
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text19
  5676  002CFA                     __ptext19:
  5677                           	callstack 0
  5678  002CFA                     _toupper:
  5679                           	callstack 24
  5680  002CFA  0E9F               	movlw	159
  5681  002CFC  6E09               	movwf	??_toupper^0,c
  5682  002CFE  0EFF               	movlw	255
  5683  002D00  6E0A               	movwf	(??_toupper+1)^0,c
  5684  002D02  C007  F00B         	movff	toupper@c,??_toupper+2
  5685  002D06  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5686  002D0A  5009               	movf	??_toupper^0,w,c
  5687  002D0C  260B               	addwf	(??_toupper+2)^0,f,c
  5688  002D0E  500A               	movf	(??_toupper+1)^0,w,c
  5689  002D10  220C               	addwfc	(??_toupper+3)^0,f,c
  5690  002D12  500C               	movf	(??_toupper+3)^0,w,c
  5691  002D14  E10A               	bnz	u2390
  5692  002D16  0E1A               	movlw	26
  5693  002D18  5C0B               	subwf	(??_toupper+2)^0,w,c
  5694  002D1A  A0D8               	btfss	status,0,c
  5695  002D1C  EF92  F016         	goto	u2391
  5696  002D20  EF95  F016         	goto	u2390
  5697  002D24                     u2391:
  5698  002D24  0E01               	movlw	1
  5699  002D26  EF96  F016         	goto	u2400
  5700  002D2A                     u2390:
  5701  002D2A  0E00               	movlw	0
  5702  002D2C                     u2400:
  5703  002D2C  6E0D               	movwf	_toupper$1601^0,c
  5704  002D2E  6A0E               	clrf	(_toupper$1601+1)^0,c
  5705  002D30  500D               	movf	_toupper$1601^0,w,c
  5706  002D32  100E               	iorwf	(_toupper$1601+1)^0,w,c
  5707  002D34  B4D8               	btfsc	status,2,c
  5708  002D36  EF9F  F016         	goto	u2411
  5709  002D3A  EFA1  F016         	goto	u2410
  5710  002D3E                     u2411:
  5711  002D3E  EFA7  F016         	goto	l1250
  5712  002D42                     u2410:
  5713  002D42  0E5F               	movlw	95
  5714  002D44  1407               	andwf	toupper@c^0,w,c
  5715  002D46  6E07               	movwf	?_toupper^0,c
  5716  002D48  6A08               	clrf	(?_toupper+1)^0,c
  5717  002D4A  EFAB  F016         	goto	l1255
  5718  002D4E                     l1250:
  5719  002D4E  C007  F007         	movff	toupper@c,?_toupper
  5720  002D52  C008  F008         	movff	toupper@c+1,?_toupper+1
  5721  002D56                     l1255:
  5722  002D56  0012               	return		;funcret
  5723  002D58                     __end_of_toupper:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function _islower *****************
  5727 ;; Defined at:
  5728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  c               2    0[COMRAM] int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    0[COMRAM] int 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5742 ;;      Params:         2       0       0       0       0       0       0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5744 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5745 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5746 ;;Total ram usage:        6 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_toupper
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text20
  5756  003058                     __ptext20:
  5757                           	callstack 0
  5758  003058                     _islower:
  5759                           	callstack 24
  5760  003058  0E9F               	movlw	159
  5761  00305A  6E03               	movwf	??_islower^0,c
  5762  00305C  0EFF               	movlw	255
  5763  00305E  6E04               	movwf	(??_islower+1)^0,c
  5764  003060  C001  F005         	movff	islower@c,??_islower+2
  5765  003064  C002  F006         	movff	islower@c+1,??_islower+3
  5766  003068  5003               	movf	??_islower^0,w,c
  5767  00306A  2605               	addwf	(??_islower+2)^0,f,c
  5768  00306C  5004               	movf	(??_islower+1)^0,w,c
  5769  00306E  2206               	addwfc	(??_islower+3)^0,f,c
  5770  003070  5006               	movf	(??_islower+3)^0,w,c
  5771  003072  E10A               	bnz	u2150
  5772  003074  0E1A               	movlw	26
  5773  003076  5C05               	subwf	(??_islower+2)^0,w,c
  5774  003078  A0D8               	btfss	status,0,c
  5775  00307A  EF41  F018         	goto	u2151
  5776  00307E  EF44  F018         	goto	u2150
  5777  003082                     u2151:
  5778  003082  0E01               	movlw	1
  5779  003084  EF45  F018         	goto	u2160
  5780  003088                     u2150:
  5781  003088  0E00               	movlw	0
  5782  00308A                     u2160:
  5783  00308A  6E01               	movwf	?_islower^0,c
  5784  00308C  6A02               	clrf	(?_islower+1)^0,c
  5785  00308E  0012               	return		;funcret
  5786  003090                     __end_of_islower:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function _isupper *****************
  5790 ;; Defined at:
  5791 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  c               2    0[COMRAM] int 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  2    0[COMRAM] int 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5805 ;;      Params:         2       0       0       0       0       0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5807 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5808 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5809 ;;Total ram usage:        6 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		_xtoa
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text21
  5819  003090                     __ptext21:
  5820                           	callstack 0
  5821  003090                     _isupper:
  5822                           	callstack 25
  5823  003090  0EBF               	movlw	191
  5824  003092  6E03               	movwf	??_isupper^0,c
  5825  003094  0EFF               	movlw	255
  5826  003096  6E04               	movwf	(??_isupper+1)^0,c
  5827  003098  C001  F005         	movff	isupper@c,??_isupper+2
  5828  00309C  C002  F006         	movff	isupper@c+1,??_isupper+3
  5829  0030A0  5003               	movf	??_isupper^0,w,c
  5830  0030A2  2605               	addwf	(??_isupper+2)^0,f,c
  5831  0030A4  5004               	movf	(??_isupper+1)^0,w,c
  5832  0030A6  2206               	addwfc	(??_isupper+3)^0,f,c
  5833  0030A8  5006               	movf	(??_isupper+3)^0,w,c
  5834  0030AA  E10A               	bnz	u2350
  5835  0030AC  0E1A               	movlw	26
  5836  0030AE  5C05               	subwf	(??_isupper+2)^0,w,c
  5837  0030B0  A0D8               	btfss	status,0,c
  5838  0030B2  EF5D  F018         	goto	u2351
  5839  0030B6  EF60  F018         	goto	u2350
  5840  0030BA                     u2351:
  5841  0030BA  0E01               	movlw	1
  5842  0030BC  EF61  F018         	goto	u2360
  5843  0030C0                     u2350:
  5844  0030C0  0E00               	movlw	0
  5845  0030C2                     u2360:
  5846  0030C2  6E01               	movwf	?_isupper^0,c
  5847  0030C4  6A02               	clrf	(?_isupper+1)^0,c
  5848  0030C6  0012               	return		;funcret
  5849  0030C8                     __end_of_isupper:
  5850                           	callstack 0
  5851                           
  5852 ;; *************** function _isalpha *****************
  5853 ;; Defined at:
  5854 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  c               2    0[COMRAM] int 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    0[COMRAM] int 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5868 ;;      Params:         2       0       0       0       0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5870 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5871 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5872 ;;Total ram usage:        6 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_xtoa
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text22
  5882  002FE2                     __ptext22:
  5883                           	callstack 0
  5884  002FE2                     _isalpha:
  5885                           	callstack 25
  5886  002FE2  0E9F               	movlw	159
  5887  002FE4  6E03               	movwf	??_isalpha^0,c
  5888  002FE6  0EFF               	movlw	255
  5889  002FE8  6E04               	movwf	(??_isalpha+1)^0,c
  5890  002FEA  0E20               	movlw	32
  5891  002FEC  1001               	iorwf	isalpha@c^0,w,c
  5892  002FEE  6E05               	movwf	(??_isalpha+2)^0,c
  5893  002FF0  0E00               	movlw	0
  5894  002FF2  1002               	iorwf	(isalpha@c+1)^0,w,c
  5895  002FF4  6E06               	movwf	(??_isalpha+3)^0,c
  5896  002FF6  5003               	movf	??_isalpha^0,w,c
  5897  002FF8  2605               	addwf	(??_isalpha+2)^0,f,c
  5898  002FFA  5004               	movf	(??_isalpha+1)^0,w,c
  5899  002FFC  2206               	addwfc	(??_isalpha+3)^0,f,c
  5900  002FFE  5006               	movf	(??_isalpha+3)^0,w,c
  5901  003000  E10A               	bnz	u2370
  5902  003002  0E1A               	movlw	26
  5903  003004  5C05               	subwf	(??_isalpha+2)^0,w,c
  5904  003006  A0D8               	btfss	status,0,c
  5905  003008  EF08  F018         	goto	u2371
  5906  00300C  EF0B  F018         	goto	u2370
  5907  003010                     u2371:
  5908  003010  0E01               	movlw	1
  5909  003012  EF0C  F018         	goto	u2380
  5910  003016                     u2370:
  5911  003016  0E00               	movlw	0
  5912  003018                     u2380:
  5913  003018  6E01               	movwf	?_isalpha^0,c
  5914  00301A  6A02               	clrf	(?_isalpha+1)^0,c
  5915  00301C  0012               	return		;funcret
  5916  00301E                     __end_of_isalpha:
  5917                           	callstack 0
  5918                           
  5919 ;; *************** function _dtoa *****************
  5920 ;; Defined at:
  5921 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5924 ;;		 -> sprintf@f(6), 
  5925 ;;  d               8   29[COMRAM] long long 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  n               8   53[COMRAM] long long 
  5928 ;;  i               2   61[COMRAM] int 
  5929 ;;  s               2   51[COMRAM] int 
  5930 ;;  w               2   49[COMRAM] int 
  5931 ;;  p               2   47[COMRAM] int 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  2   27[COMRAM] int 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5941 ;;      Params:        10       0       0       0       0       0       0       0       0
  5942 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5943 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5944 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5945 ;;Total ram usage:       36 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    4
  5948 ;; This function calls:
  5949 ;;		___aodiv
  5950 ;;		___aomod
  5951 ;;		_abs
  5952 ;;		_pad
  5953 ;; This function is called by:
  5954 ;;		_vfpfcnvrt
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text23
  5959  001346                     __ptext23:
  5960                           	callstack 0
  5961  001346                     _dtoa:
  5962                           	callstack 22
  5963  001346                     
  5964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5965  001346  C01E  F036         	movff	dtoa@d,dtoa@n
  5966  00134A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5967  00134E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5968  001352  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5969  001356  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5970  00135A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5971  00135E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5972  001362  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5973  001366                     
  5974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5975  001366  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5976  001368  EFB8  F009         	goto	u2501
  5977  00136C  EFBB  F009         	goto	u2500
  5978  001370                     u2501:
  5979  001370  0E01               	movlw	1
  5980  001372  EFBC  F009         	goto	u2510
  5981  001376                     u2500:
  5982  001376  0E00               	movlw	0
  5983  001378                     u2510:
  5984  001378  6E34               	movwf	dtoa@s^0,c
  5985  00137A  6A35               	clrf	(dtoa@s+1)^0,c
  5986                           
  5987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5988  00137C  5034               	movf	dtoa@s^0,w,c
  5989  00137E  1035               	iorwf	(dtoa@s+1)^0,w,c
  5990  001380  B4D8               	btfsc	status,2,c
  5991  001382  EFC5  F009         	goto	u2521
  5992  001386  EFC7  F009         	goto	u2520
  5993  00138A                     u2521:
  5994  00138A  EFD7  F009         	goto	l2736
  5995  00138E                     u2520:
  5996  00138E                     
  5997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5998  00138E  1E3D               	comf	(dtoa@n+7)^0,f,c
  5999  001390  1E3C               	comf	(dtoa@n+6)^0,f,c
  6000  001392  1E3B               	comf	(dtoa@n+5)^0,f,c
  6001  001394  1E3A               	comf	(dtoa@n+4)^0,f,c
  6002  001396  1E39               	comf	(dtoa@n+3)^0,f,c
  6003  001398  1E38               	comf	(dtoa@n+2)^0,f,c
  6004  00139A  1E37               	comf	(dtoa@n+1)^0,f,c
  6005  00139C  6C36               	negf	dtoa@n^0,c
  6006  00139E  0E00               	movlw	0
  6007  0013A0  2237               	addwfc	(dtoa@n+1)^0,f,c
  6008  0013A2  2238               	addwfc	(dtoa@n+2)^0,f,c
  6009  0013A4  2239               	addwfc	(dtoa@n+3)^0,f,c
  6010  0013A6  223A               	addwfc	(dtoa@n+4)^0,f,c
  6011  0013A8  223B               	addwfc	(dtoa@n+5)^0,f,c
  6012  0013AA  223C               	addwfc	(dtoa@n+6)^0,f,c
  6013  0013AC  223D               	addwfc	(dtoa@n+7)^0,f,c
  6014  0013AE                     l2736:
  6015                           
  6016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6017  0013AE  0100               	movlb	0	; () banked
  6018  0013B0  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  6019  0013B2  EFDD  F009         	goto	u2531
  6020  0013B6  EFDF  F009         	goto	u2530
  6021  0013BA                     u2531:
  6022  0013BA  EFE0  F009         	goto	l2740
  6023  0013BE                     u2530:
  6024  0013BE                     
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6027  0013BE  93BC               	bcf	_flags& (0+255),1,b
  6028  0013C0                     l2740:
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6032  0013C0  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  6033  0013C2  EFED  F009         	goto	u2540
  6034  0013C6  51BB               	movf	(_prec+1)& (0+255),w,b
  6035  0013C8  E106               	bnz	u2541
  6036  0013CA  05BA               	decf	_prec& (0+255),w,b
  6037  0013CC  B0D8               	btfsc	status,0,c
  6038  0013CE  EFEB  F009         	goto	u2541
  6039  0013D2  EFED  F009         	goto	u2540
  6040  0013D6                     u2541:
  6041  0013D6  EFF3  F009         	goto	l1116
  6042  0013DA                     u2540:
  6043  0013DA                     
  6044                           ; BSR set to: 0
  6045  0013DA  0E00               	movlw	0
  6046  0013DC  6E31               	movwf	(dtoa@p+1)^0,c
  6047  0013DE  0E01               	movlw	1
  6048  0013E0  6E30               	movwf	dtoa@p^0,c
  6049  0013E2  EFF7  F009         	goto	l1118
  6050  0013E6                     l1116:
  6051                           
  6052                           ; BSR set to: 0
  6053  0013E6  C0BA  F030         	movff	_prec,dtoa@p
  6054  0013EA  C0BB  F031         	movff	_prec+1,dtoa@p+1
  6055  0013EE                     l1118:
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6059  0013EE  C0B8  F032         	movff	_width,dtoa@w
  6060  0013F2  C0B9  F033         	movff	_width+1,dtoa@w+1
  6061  0013F6                     
  6062                           ; BSR set to: 0
  6063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6064  0013F6  5034               	movf	dtoa@s^0,w,c
  6065  0013F8  1035               	iorwf	(dtoa@s+1)^0,w,c
  6066  0013FA  A4D8               	btfss	status,2,c
  6067  0013FC  EF02  F00A         	goto	u2551
  6068  001400  EF04  F00A         	goto	u2550
  6069  001404                     u2551:
  6070  001404  EF0B  F00A         	goto	l2748
  6071  001408                     u2550:
  6072  001408                     
  6073                           ; BSR set to: 0
  6074  001408  A5BC               	btfss	_flags& (0+255),2,b
  6075  00140A  EF09  F00A         	goto	u2561
  6076  00140E  EF0B  F00A         	goto	u2560
  6077  001412                     u2561:
  6078  001412  EF0E  F00A         	goto	l2750
  6079  001416                     u2560:
  6080  001416                     l2748:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6084  001416  0632               	decf	dtoa@w^0,f,c
  6085  001418  A0D8               	btfss	status,0,c
  6086  00141A  0633               	decf	(dtoa@w+1)^0,f,c
  6087  00141C                     l2750:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6091  00141C  0E00               	movlw	0
  6092  00141E  6E3F               	movwf	(dtoa@i+1)^0,c
  6093  001420  0E1F               	movlw	31
  6094  001422  6E3E               	movwf	dtoa@i^0,c
  6095  001424                     
  6096                           ; BSR set to: 0
  6097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6098  001424  0E00               	movlw	0
  6099  001426  0101               	movlb	1	; () banked
  6100  001428  6FBA               	movwf	(_dbuf+31)& (0+255),b
  6101                           
  6102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6103  00142A  EF93  F00A         	goto	l2764
  6104  00142E                     l2754:
  6105                           
  6106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6107  00142E  063E               	decf	dtoa@i^0,f,c
  6108  001430  A0D8               	btfss	status,0,c
  6109  001432  063F               	decf	(dtoa@i+1)^0,f,c
  6110  001434                     
  6111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6112  001434  0E9B               	movlw	low _dbuf
  6113  001436  243E               	addwf	dtoa@i^0,w,c
  6114  001438  6ED9               	movwf	fsr2l,c
  6115  00143A  0E01               	movlw	high _dbuf
  6116  00143C  203F               	addwfc	(dtoa@i+1)^0,w,c
  6117  00143E  6EDA               	movwf	fsr2h,c
  6118  001440  C036  F001         	movff	dtoa@n,___aomod@dividend
  6119  001444  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6120  001448  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6121  00144C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6122  001450  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6123  001454  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6124  001458  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6125  00145C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6126  001460  0E0A               	movlw	10
  6127  001462  6E09               	movwf	___aomod@divisor^0,c
  6128  001464  0E00               	movlw	0
  6129  001466  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6130  001468  0E00               	movlw	0
  6131  00146A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6132  00146C  0E00               	movlw	0
  6133  00146E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6134  001470  0E00               	movlw	0
  6135  001472  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6136  001474  0E00               	movlw	0
  6137  001476  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6138  001478  0E00               	movlw	0
  6139  00147A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6140  00147C  0E00               	movlw	0
  6141  00147E  6E10               	movwf	(___aomod@divisor+7)^0,c
  6142  001480  EC01  F012         	call	___aomod	;wreg free
  6143  001484  C001  F026         	movff	?___aomod,??_dtoa
  6144  001488  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6145  00148C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6146  001490  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6147  001494  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6148  001498  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6149  00149C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6150  0014A0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6151  0014A4  C026  F013         	movff	??_dtoa,abs@a
  6152  0014A8  C028  F014         	movff	??_dtoa+2,abs@a+1
  6153  0014AC  ECB2  F017         	call	_abs	;wreg free
  6154  0014B0  5013               	movf	?_abs^0,w,c
  6155  0014B2  0F30               	addlw	48
  6156  0014B4  6EDF               	movwf	indf2,c
  6157  0014B6                     
  6158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6159  0014B6  0630               	decf	dtoa@p^0,f,c
  6160  0014B8  A0D8               	btfss	status,0,c
  6161  0014BA  0631               	decf	(dtoa@p+1)^0,f,c
  6162  0014BC                     
  6163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6164  0014BC  0632               	decf	dtoa@w^0,f,c
  6165  0014BE  A0D8               	btfss	status,0,c
  6166  0014C0  0633               	decf	(dtoa@w+1)^0,f,c
  6167  0014C2                     
  6168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6169  0014C2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6170  0014C6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6171  0014CA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6172  0014CE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6173  0014D2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6174  0014D6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6175  0014DA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6176  0014DE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6177  0014E2  0E0A               	movlw	10
  6178  0014E4  6E09               	movwf	___aodiv@divisor^0,c
  6179  0014E6  0E00               	movlw	0
  6180  0014E8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6181  0014EA  0E00               	movlw	0
  6182  0014EC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6183  0014EE  0E00               	movlw	0
  6184  0014F0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6185  0014F2  0E00               	movlw	0
  6186  0014F4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6187  0014F6  0E00               	movlw	0
  6188  0014F8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6189  0014FA  0E00               	movlw	0
  6190  0014FC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6191  0014FE  0E00               	movlw	0
  6192  001500  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6193  001502  EC82  F010         	call	___aodiv	;wreg free
  6194  001506  C001  F036         	movff	?___aodiv,dtoa@n
  6195  00150A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6196  00150E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6197  001512  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6198  001516  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6199  00151A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6200  00151E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6201  001522  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6202  001526                     l2764:
  6203                           
  6204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6205  001526  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6206  001528  EF9E  F00A         	goto	u2571
  6207  00152C  503F               	movf	(dtoa@i+1)^0,w,c
  6208  00152E  E108               	bnz	u2570
  6209  001530  043E               	decf	dtoa@i^0,w,c
  6210  001532  A0D8               	btfss	status,0,c
  6211  001534  EF9E  F00A         	goto	u2571
  6212  001538  EFA0  F00A         	goto	u2570
  6213  00153C                     u2571:
  6214  00153C  EFD1  F00A         	goto	l2774
  6215  001540                     u2570:
  6216  001540  5036               	movf	dtoa@n^0,w,c
  6217  001542  1037               	iorwf	(dtoa@n+1)^0,w,c
  6218  001544  1038               	iorwf	(dtoa@n+2)^0,w,c
  6219  001546  1039               	iorwf	(dtoa@n+3)^0,w,c
  6220  001548  103A               	iorwf	(dtoa@n+4)^0,w,c
  6221  00154A  103B               	iorwf	(dtoa@n+5)^0,w,c
  6222  00154C  103C               	iorwf	(dtoa@n+6)^0,w,c
  6223  00154E  103D               	iorwf	(dtoa@n+7)^0,w,c
  6224  001550  A4D8               	btfss	status,2,c
  6225  001552  EFAD  F00A         	goto	u2581
  6226  001556  EFAF  F00A         	goto	u2580
  6227  00155A                     u2581:
  6228  00155A  EF17  F00A         	goto	l2754
  6229  00155E                     u2580:
  6230  00155E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6231  001560  EFBC  F00A         	goto	u2590
  6232  001564  5031               	movf	(dtoa@p+1)^0,w,c
  6233  001566  E106               	bnz	u2591
  6234  001568  0430               	decf	dtoa@p^0,w,c
  6235  00156A  B0D8               	btfsc	status,0,c
  6236  00156C  EFBA  F00A         	goto	u2591
  6237  001570  EFBC  F00A         	goto	u2590
  6238  001574                     u2591:
  6239  001574  EF17  F00A         	goto	l2754
  6240  001578                     u2590:
  6241  001578  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6242  00157A  EFC7  F00A         	goto	u2601
  6243  00157E  5033               	movf	(dtoa@w+1)^0,w,c
  6244  001580  E108               	bnz	u2600
  6245  001582  0432               	decf	dtoa@w^0,w,c
  6246  001584  A0D8               	btfss	status,0,c
  6247  001586  EFC7  F00A         	goto	u2601
  6248  00158A  EFC9  F00A         	goto	u2600
  6249  00158E                     u2601:
  6250  00158E  EFD1  F00A         	goto	l2774
  6251  001592                     u2600:
  6252  001592  0100               	movlb	0	; () banked
  6253  001594  B3BC               	btfsc	_flags& (0+255),1,b
  6254  001596  EFCF  F00A         	goto	u2611
  6255  00159A  EFD1  F00A         	goto	u2610
  6256  00159E                     u2611:
  6257  00159E  EF17  F00A         	goto	l2754
  6258  0015A2                     u2610:
  6259  0015A2                     l2774:
  6260                           
  6261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6262  0015A2  5034               	movf	dtoa@s^0,w,c
  6263  0015A4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6264  0015A6  A4D8               	btfss	status,2,c
  6265  0015A8  EFD8  F00A         	goto	u2621
  6266  0015AC  EFDA  F00A         	goto	u2620
  6267  0015B0                     u2621:
  6268  0015B0  EFE2  F00A         	goto	l2778
  6269  0015B4                     u2620:
  6270  0015B4  0100               	movlb	0	; () banked
  6271  0015B6  A5BC               	btfss	_flags& (0+255),2,b
  6272  0015B8  EFE0  F00A         	goto	u2631
  6273  0015BC  EFE2  F00A         	goto	u2630
  6274  0015C0                     u2631:
  6275  0015C0  EF00  F00B         	goto	l2788
  6276  0015C4                     u2630:
  6277  0015C4                     l2778:
  6278                           
  6279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6280  0015C4  063E               	decf	dtoa@i^0,f,c
  6281  0015C6  A0D8               	btfss	status,0,c
  6282  0015C8  063F               	decf	(dtoa@i+1)^0,f,c
  6283  0015CA                     
  6284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6285  0015CA  5034               	movf	dtoa@s^0,w,c
  6286  0015CC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6287  0015CE  A4D8               	btfss	status,2,c
  6288  0015D0  EFEC  F00A         	goto	u2641
  6289  0015D4  EFEE  F00A         	goto	u2640
  6290  0015D8                     u2641:
  6291  0015D8  EFF4  F00A         	goto	l2784
  6292  0015DC                     u2640:
  6293  0015DC  0E00               	movlw	0
  6294  0015DE  6E2F               	movwf	(_dtoa$1490+1)^0,c
  6295  0015E0  0E2B               	movlw	43
  6296  0015E2  6E2E               	movwf	_dtoa$1490^0,c
  6297  0015E4  EFF8  F00A         	goto	l2786
  6298  0015E8                     l2784:
  6299  0015E8  0E00               	movlw	0
  6300  0015EA  6E2F               	movwf	(_dtoa$1490+1)^0,c
  6301  0015EC  0E2D               	movlw	45
  6302  0015EE  6E2E               	movwf	_dtoa$1490^0,c
  6303  0015F0                     l2786:
  6304  0015F0  0E9B               	movlw	low _dbuf
  6305  0015F2  243E               	addwf	dtoa@i^0,w,c
  6306  0015F4  6ED9               	movwf	fsr2l,c
  6307  0015F6  0E01               	movlw	high _dbuf
  6308  0015F8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6309  0015FA  6EDA               	movwf	fsr2h,c
  6310  0015FC  C02E  FFDF         	movff	_dtoa$1490,indf2
  6311  001600                     l2788:
  6312                           
  6313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6314  001600  C01C  F011         	movff	dtoa@fp,pad@fp
  6315  001604  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6316  001608  0E9B               	movlw	low _dbuf
  6317  00160A  243E               	addwf	dtoa@i^0,w,c
  6318  00160C  6E13               	movwf	pad@buf^0,c
  6319  00160E  0E01               	movlw	high _dbuf
  6320  001610  203F               	addwfc	(dtoa@i+1)^0,w,c
  6321  001612  6E14               	movwf	(pad@buf+1)^0,c
  6322  001614  C032  F015         	movff	dtoa@w,pad@p
  6323  001618  C033  F016         	movff	dtoa@w+1,pad@p+1
  6324  00161C  EC89  F014         	call	_pad	;wreg free
  6325  001620  C011  F01C         	movff	?_pad,?_dtoa
  6326  001624  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6327  001628  0012               	return		;funcret
  6328  00162A                     __end_of_dtoa:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function _pad *****************
  6332 ;; Defined at:
  6333 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6336 ;;		 -> sprintf@f(6), 
  6337 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6338 ;;		 -> dbuf(32), 
  6339 ;;  p               2   20[COMRAM] int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  w               2   25[COMRAM] int 
  6342 ;;  i               2   23[COMRAM] int 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  2   16[COMRAM] int 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6352 ;;      Params:         6       0       0       0       0       0       0       0       0
  6353 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6354 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6355 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6356 ;;Total ram usage:       11 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    3
  6359 ;; This function calls:
  6360 ;;		_fputc
  6361 ;;		_fputs
  6362 ;;		_strlen
  6363 ;; This function is called by:
  6364 ;;		_dtoa
  6365 ;;		_xtoa
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text24
  6370  002912                     __ptext24:
  6371                           	callstack 0
  6372  002912                     _pad:
  6373                           	callstack 22
  6374  002912                     
  6375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6376  002912  0100               	movlb	0	; () banked
  6377  002914  A1BC               	btfss	_flags& (0+255),0,b
  6378  002916  EF8F  F014         	goto	u2301
  6379  00291A  EF91  F014         	goto	u2300
  6380  00291E                     u2301:
  6381  00291E  EF9B  F014         	goto	l2644
  6382  002922                     u2300:
  6383  002922                     
  6384                           ; BSR set to: 0
  6385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6386  002922  C013  F00A         	movff	pad@buf,fputs@s
  6387  002926  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6388  00292A  C011  F00C         	movff	pad@fp,fputs@fp
  6389  00292E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6390  002932  EC70  F017         	call	_fputs	;wreg free
  6391  002936                     l2644:
  6392                           
  6393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6394  002936  BE16               	btfsc	(pad@p+1)^0,7,c
  6395  002938  EFA0  F014         	goto	u2311
  6396  00293C  EFA2  F014         	goto	u2310
  6397  002940                     u2311:
  6398  002940  EFA8  F014         	goto	l2648
  6399  002944                     u2310:
  6400  002944  C015  F01A         	movff	pad@p,pad@w
  6401  002948  C016  F01B         	movff	pad@p+1,pad@w+1
  6402  00294C  EFAC  F014         	goto	l1089
  6403  002950                     l2648:
  6404  002950  0E00               	movlw	0
  6405  002952  6E1B               	movwf	(pad@w+1)^0,c
  6406  002954  0E00               	movlw	0
  6407  002956  6E1A               	movwf	pad@w^0,c
  6408  002958                     l1089:
  6409                           
  6410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6411  002958  0E00               	movlw	0
  6412  00295A  6E19               	movwf	(pad@i+1)^0,c
  6413  00295C  0E00               	movlw	0
  6414  00295E  6E18               	movwf	pad@i^0,c
  6415                           
  6416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6417  002960  EFBE  F014         	goto	l2654
  6418  002964                     l2650:
  6419                           
  6420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6421  002964  0E00               	movlw	0
  6422  002966  6E02               	movwf	(fputc@c+1)^0,c
  6423  002968  0E20               	movlw	32
  6424  00296A  6E01               	movwf	fputc@c^0,c
  6425  00296C  C011  F003         	movff	pad@fp,fputc@fp
  6426  002970  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6427  002974  EC24  F014         	call	_fputc	;wreg free
  6428  002978                     
  6429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6430  002978  4A18               	infsnz	pad@i^0,f,c
  6431  00297A  2A19               	incf	(pad@i+1)^0,f,c
  6432  00297C                     l2654:
  6433                           
  6434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6435  00297C  501A               	movf	pad@w^0,w,c
  6436  00297E  5C18               	subwf	pad@i^0,w,c
  6437  002980  5019               	movf	(pad@i+1)^0,w,c
  6438  002982  0A80               	xorlw	128
  6439  002984  6E17               	movwf	??_pad^0,c
  6440  002986  501B               	movf	(pad@w+1)^0,w,c
  6441  002988  0A80               	xorlw	128
  6442  00298A  5817               	subwfb	??_pad^0,w,c
  6443  00298C  A0D8               	btfss	status,0,c
  6444  00298E  EFCB  F014         	goto	u2321
  6445  002992  EFCD  F014         	goto	u2320
  6446  002996                     u2321:
  6447  002996  EFB2  F014         	goto	l2650
  6448  00299A                     u2320:
  6449  00299A                     
  6450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6451  00299A  0100               	movlb	0	; () banked
  6452  00299C  B1BC               	btfsc	_flags& (0+255),0,b
  6453  00299E  EFD3  F014         	goto	u2331
  6454  0029A2  EFD5  F014         	goto	u2330
  6455  0029A6                     u2331:
  6456  0029A6  EFDF  F014         	goto	l2658
  6457  0029AA                     u2330:
  6458  0029AA                     
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6461  0029AA  C013  F00A         	movff	pad@buf,fputs@s
  6462  0029AE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6463  0029B2  C011  F00C         	movff	pad@fp,fputs@fp
  6464  0029B6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6465  0029BA  EC70  F017         	call	_fputs	;wreg free
  6466  0029BE                     l2658:
  6467                           
  6468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6469  0029BE  C013  F001         	movff	pad@buf,strlen@s
  6470  0029C2  C014  F002         	movff	pad@buf+1,strlen@s+1
  6471  0029C6  EC64  F018         	call	_strlen	;wreg free
  6472  0029CA  501A               	movf	pad@w^0,w,c
  6473  0029CC  2401               	addwf	?_strlen^0,w,c
  6474  0029CE  6E11               	movwf	?_pad^0,c
  6475  0029D0  501B               	movf	(pad@w+1)^0,w,c
  6476  0029D2  2002               	addwfc	(?_strlen+1)^0,w,c
  6477  0029D4  6E12               	movwf	(?_pad+1)^0,c
  6478  0029D6  0012               	return		;funcret
  6479  0029D8                     __end_of_pad:
  6480                           	callstack 0
  6481                           
  6482 ;; *************** function _strlen *****************
  6483 ;; Defined at:
  6484 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6487 ;;		 -> dbuf(32), SensorMovimiento@buf(20), 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6490 ;;		 -> dbuf(32), SensorMovimiento@buf(20), 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  2    0[COMRAM] unsigned int 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6500 ;;      Params:         2       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        4 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_pad
  6510 ;;		_strcat
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text25
  6515  0030C8                     __ptext25:
  6516                           	callstack 0
  6517  0030C8                     _strlen:
  6518                           	callstack 24
  6519  0030C8  C001  F003         	movff	strlen@s,strlen@a
  6520  0030CC  C002  F004         	movff	strlen@s+1,strlen@a+1
  6521  0030D0  EF6C  F018         	goto	l2550
  6522  0030D4                     l2548:
  6523  0030D4  4A01               	infsnz	strlen@s^0,f,c
  6524  0030D6  2A02               	incf	(strlen@s+1)^0,f,c
  6525  0030D8                     l2550:
  6526  0030D8  C001  FFD9         	movff	strlen@s,fsr2l
  6527  0030DC  C002  FFDA         	movff	strlen@s+1,fsr2h
  6528  0030E0  50DF               	movf	indf2,w,c
  6529  0030E2  A4D8               	btfss	status,2,c
  6530  0030E4  EF76  F018         	goto	u2141
  6531  0030E8  EF78  F018         	goto	u2140
  6532  0030EC                     u2141:
  6533  0030EC  EF6A  F018         	goto	l2548
  6534  0030F0                     u2140:
  6535  0030F0  5003               	movf	strlen@a^0,w,c
  6536  0030F2  5C01               	subwf	strlen@s^0,w,c
  6537  0030F4  6E01               	movwf	?_strlen^0,c
  6538  0030F6  5004               	movf	(strlen@a+1)^0,w,c
  6539  0030F8  5802               	subwfb	(strlen@s+1)^0,w,c
  6540  0030FA  6E02               	movwf	(?_strlen+1)^0,c
  6541  0030FC  0012               	return		;funcret
  6542  0030FE                     __end_of_strlen:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function _fputs *****************
  6546 ;; Defined at:
  6547 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6550 ;;		 -> dbuf(32), 
  6551 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6552 ;;		 -> sprintf@f(6), 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  i               2   14[COMRAM] int 
  6555 ;;  c               1   13[COMRAM] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2    9[COMRAM] int 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6565 ;;      Params:         4       0       0       0       0       0       0       0       0
  6566 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6568 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6569 ;;Total ram usage:        7 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    2
  6572 ;; This function calls:
  6573 ;;		_fputc
  6574 ;; This function is called by:
  6575 ;;		_pad
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text26
  6580  002EE0                     __ptext26:
  6581                           	callstack 0
  6582  002EE0                     _fputs:
  6583                           	callstack 22
  6584  002EE0  0E00               	movlw	0
  6585  002EE2  6E10               	movwf	(fputs@i+1)^0,c
  6586  002EE4  0E00               	movlw	0
  6587  002EE6  6E0F               	movwf	fputs@i^0,c
  6588  002EE8  EF81  F017         	goto	l2544
  6589  002EEC                     l2540:
  6590  002EEC  C00E  F001         	movff	fputs@c,fputc@c
  6591  002EF0  6A02               	clrf	(fputc@c+1)^0,c
  6592  002EF2  C00C  F003         	movff	fputs@fp,fputc@fp
  6593  002EF6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6594  002EFA  EC24  F014         	call	_fputc	;wreg free
  6595  002EFE  4A0F               	infsnz	fputs@i^0,f,c
  6596  002F00  2A10               	incf	(fputs@i+1)^0,f,c
  6597  002F02                     l2544:
  6598  002F02  500F               	movf	fputs@i^0,w,c
  6599  002F04  240A               	addwf	fputs@s^0,w,c
  6600  002F06  6ED9               	movwf	fsr2l,c
  6601  002F08  5010               	movf	(fputs@i+1)^0,w,c
  6602  002F0A  200B               	addwfc	(fputs@s+1)^0,w,c
  6603  002F0C  6EDA               	movwf	fsr2h,c
  6604  002F0E  50DF               	movf	indf2,w,c
  6605  002F10  6E0E               	movwf	fputs@c^0,c
  6606  002F12  500E               	movf	fputs@c^0,w,c
  6607  002F14  A4D8               	btfss	status,2,c
  6608  002F16  EF8F  F017         	goto	u2131
  6609  002F1A  EF91  F017         	goto	u2130
  6610  002F1E                     u2131:
  6611  002F1E  EF76  F017         	goto	l2540
  6612  002F22                     u2130:
  6613  002F22  0012               	return		;funcret
  6614  002F24                     __end_of_fputs:
  6615                           	callstack 0
  6616                           
  6617 ;; *************** function _abs *****************
  6618 ;; Defined at:
  6619 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  a               2   18[COMRAM] int 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2   18[COMRAM] int 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6633 ;;      Params:         2       0       0       0       0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6635 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6636 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6637 ;;Total ram usage:        4 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_dtoa
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text27
  6647  002F64                     __ptext27:
  6648                           	callstack 0
  6649  002F64                     _abs:
  6650                           	callstack 25
  6651  002F64  BE14               	btfsc	(abs@a+1)^0,7,c
  6652  002F66  EFBF  F017         	goto	u2340
  6653  002F6A  5014               	movf	(abs@a+1)^0,w,c
  6654  002F6C  E106               	bnz	u2341
  6655  002F6E  0413               	decf	abs@a^0,w,c
  6656  002F70  B0D8               	btfsc	status,0,c
  6657  002F72  EFBD  F017         	goto	u2341
  6658  002F76  EFBF  F017         	goto	u2340
  6659  002F7A                     u2341:
  6660  002F7A  EFCD  F017         	goto	l1188
  6661  002F7E                     u2340:
  6662  002F7E  C013  F015         	movff	abs@a,??_abs
  6663  002F82  C014  F016         	movff	abs@a+1,??_abs+1
  6664  002F86  1E15               	comf	??_abs^0,f,c
  6665  002F88  1E16               	comf	(??_abs+1)^0,f,c
  6666  002F8A  4A15               	infsnz	??_abs^0,f,c
  6667  002F8C  2A16               	incf	(??_abs+1)^0,f,c
  6668  002F8E  C015  F013         	movff	??_abs,?_abs
  6669  002F92  C016  F014         	movff	??_abs+1,?_abs+1
  6670  002F96  EFD1  F017         	goto	l1191
  6671  002F9A                     l1188:
  6672  002F9A  C013  F013         	movff	abs@a,?_abs
  6673  002F9E  C014  F014         	movff	abs@a+1,?_abs+1
  6674  002FA2                     l1191:
  6675  002FA2  0012               	return		;funcret
  6676  002FA4                     __end_of_abs:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function ___aomod *****************
  6680 ;; Defined at:
  6681 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  dividend        8    0[COMRAM] long long 
  6684 ;;  divisor         8    8[COMRAM] long long 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  sign            1   17[COMRAM] unsigned char 
  6687 ;;  counter         1   16[COMRAM] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  8    0[COMRAM] long long 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6697 ;;      Params:        16       0       0       0       0       0       0       0       0
  6698 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6700 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6701 ;;Total ram usage:       18 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_dtoa
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text28
  6711  002402                     __ptext28:
  6712                           	callstack 0
  6713  002402                     ___aomod:
  6714                           	callstack 25
  6715  002402  0E00               	movlw	0
  6716  002404  6E12               	movwf	___aomod@sign^0,c
  6717  002406  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6718  002408  EF0A  F012         	goto	u2240
  6719  00240C  EF08  F012         	goto	u2241
  6720  002410                     u2241:
  6721  002410  EF1C  F012         	goto	l2612
  6722  002414                     u2240:
  6723  002414  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6724  002416  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6725  002418  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6726  00241A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6727  00241C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6728  00241E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6729  002420  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6730  002422  6C01               	negf	___aomod@dividend^0,c
  6731  002424  0E00               	movlw	0
  6732  002426  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6733  002428  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6734  00242A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6735  00242C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6736  00242E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6737  002430  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6738  002432  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6739  002434  0E01               	movlw	1
  6740  002436  6E12               	movwf	___aomod@sign^0,c
  6741  002438                     l2612:
  6742  002438  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6743  00243A  EF23  F012         	goto	u2250
  6744  00243E  EF21  F012         	goto	u2251
  6745  002442                     u2251:
  6746  002442  EF33  F012         	goto	l2616
  6747  002446                     u2250:
  6748  002446  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6749  002448  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6750  00244A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6751  00244C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6752  00244E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6753  002450  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6754  002452  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6755  002454  6C09               	negf	___aomod@divisor^0,c
  6756  002456  0E00               	movlw	0
  6757  002458  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6758  00245A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6759  00245C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6760  00245E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6761  002460  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6762  002462  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6763  002464  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6764  002466                     l2616:
  6765  002466  5009               	movf	___aomod@divisor^0,w,c
  6766  002468  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6767  00246A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6768  00246C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6769  00246E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6770  002470  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6771  002472  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6772  002474  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6773  002476  B4D8               	btfsc	status,2,c
  6774  002478  EF40  F012         	goto	u2261
  6775  00247C  EF42  F012         	goto	u2260
  6776  002480                     u2261:
  6777  002480  EF8A  F012         	goto	l2632
  6778  002484                     u2260:
  6779  002484  0E01               	movlw	1
  6780  002486  6E11               	movwf	___aomod@counter^0,c
  6781  002488  EF50  F012         	goto	l2622
  6782  00248C                     l2620:
  6783  00248C  90D8               	bcf	status,0,c
  6784  00248E  3609               	rlcf	___aomod@divisor^0,f,c
  6785  002490  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6786  002492  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6787  002494  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6788  002496  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6789  002498  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6790  00249A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6791  00249C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6792  00249E  2A11               	incf	___aomod@counter^0,f,c
  6793  0024A0                     l2622:
  6794  0024A0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6795  0024A2  EF55  F012         	goto	u2271
  6796  0024A6  EF57  F012         	goto	u2270
  6797  0024AA                     u2271:
  6798  0024AA  EF46  F012         	goto	l2620
  6799  0024AE                     u2270:
  6800  0024AE                     l2624:
  6801  0024AE  5009               	movf	___aomod@divisor^0,w,c
  6802  0024B0  5C01               	subwf	___aomod@dividend^0,w,c
  6803  0024B2  500A               	movf	(___aomod@divisor+1)^0,w,c
  6804  0024B4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6805  0024B6  500B               	movf	(___aomod@divisor+2)^0,w,c
  6806  0024B8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6807  0024BA  500C               	movf	(___aomod@divisor+3)^0,w,c
  6808  0024BC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6809  0024BE  500D               	movf	(___aomod@divisor+4)^0,w,c
  6810  0024C0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6811  0024C2  500E               	movf	(___aomod@divisor+5)^0,w,c
  6812  0024C4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6813  0024C6  500F               	movf	(___aomod@divisor+6)^0,w,c
  6814  0024C8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6815  0024CA  5010               	movf	(___aomod@divisor+7)^0,w,c
  6816  0024CC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6817  0024CE  A0D8               	btfss	status,0,c
  6818  0024D0  EF6C  F012         	goto	u2281
  6819  0024D4  EF6E  F012         	goto	u2280
  6820  0024D8                     u2281:
  6821  0024D8  EF7E  F012         	goto	l2628
  6822  0024DC                     u2280:
  6823  0024DC  5009               	movf	___aomod@divisor^0,w,c
  6824  0024DE  5E01               	subwf	___aomod@dividend^0,f,c
  6825  0024E0  500A               	movf	(___aomod@divisor+1)^0,w,c
  6826  0024E2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6827  0024E4  500B               	movf	(___aomod@divisor+2)^0,w,c
  6828  0024E6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6829  0024E8  500C               	movf	(___aomod@divisor+3)^0,w,c
  6830  0024EA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6831  0024EC  500D               	movf	(___aomod@divisor+4)^0,w,c
  6832  0024EE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6833  0024F0  500E               	movf	(___aomod@divisor+5)^0,w,c
  6834  0024F2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6835  0024F4  500F               	movf	(___aomod@divisor+6)^0,w,c
  6836  0024F6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6837  0024F8  5010               	movf	(___aomod@divisor+7)^0,w,c
  6838  0024FA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6839  0024FC                     l2628:
  6840  0024FC  90D8               	bcf	status,0,c
  6841  0024FE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6842  002500  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6843  002502  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6844  002504  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6845  002506  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6846  002508  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6847  00250A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6848  00250C  3209               	rrcf	___aomod@divisor^0,f,c
  6849  00250E  2E11               	decfsz	___aomod@counter^0,f,c
  6850  002510  EF57  F012         	goto	l2624
  6851  002514                     l2632:
  6852  002514  5012               	movf	___aomod@sign^0,w,c
  6853  002516  B4D8               	btfsc	status,2,c
  6854  002518  EF90  F012         	goto	u2291
  6855  00251C  EF92  F012         	goto	u2290
  6856  002520                     u2291:
  6857  002520  EFA2  F012         	goto	l2636
  6858  002524                     u2290:
  6859  002524  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6860  002526  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6861  002528  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6862  00252A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6863  00252C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6864  00252E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6865  002530  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6866  002532  6C01               	negf	___aomod@dividend^0,c
  6867  002534  0E00               	movlw	0
  6868  002536  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6869  002538  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6870  00253A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6871  00253C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6872  00253E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6873  002540  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6874  002542  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6875  002544                     l2636:
  6876  002544  C001  F001         	movff	___aomod@dividend,?___aomod
  6877  002548  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6878  00254C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6879  002550  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6880  002554  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6881  002558  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6882  00255C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6883  002560  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6884  002564  0012               	return		;funcret
  6885  002566                     __end_of___aomod:
  6886                           	callstack 0
  6887                           
  6888 ;; *************** function ___aodiv *****************
  6889 ;; Defined at:
  6890 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  dividend        8    0[COMRAM] long long 
  6893 ;;  divisor         8    8[COMRAM] long long 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  quotient        8   18[COMRAM] long long 
  6896 ;;  sign            1   17[COMRAM] unsigned char 
  6897 ;;  counter         1   16[COMRAM] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  8    0[COMRAM] long long 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6907 ;;      Params:        16       0       0       0       0       0       0       0       0
  6908 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6910 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6911 ;;Total ram usage:       26 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_dtoa
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text29
  6921  002104                     __ptext29:
  6922                           	callstack 0
  6923  002104                     ___aodiv:
  6924                           	callstack 25
  6925  002104  0E00               	movlw	0
  6926  002106  6E12               	movwf	___aodiv@sign^0,c
  6927  002108  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6928  00210A  EF8B  F010         	goto	u2170
  6929  00210E  EF89  F010         	goto	u2171
  6930  002112                     u2171:
  6931  002112  EF9D  F010         	goto	l2568
  6932  002116                     u2170:
  6933  002116  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6934  002118  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6935  00211A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6936  00211C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6937  00211E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6938  002120  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6939  002122  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6940  002124  6C09               	negf	___aodiv@divisor^0,c
  6941  002126  0E00               	movlw	0
  6942  002128  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6943  00212A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6944  00212C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6945  00212E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6946  002130  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6947  002132  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6948  002134  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6949  002136  0E01               	movlw	1
  6950  002138  6E12               	movwf	___aodiv@sign^0,c
  6951  00213A                     l2568:
  6952  00213A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6953  00213C  EFA4  F010         	goto	u2180
  6954  002140  EFA2  F010         	goto	u2181
  6955  002144                     u2181:
  6956  002144  EFB6  F010         	goto	l2574
  6957  002148                     u2180:
  6958  002148  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6959  00214A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6960  00214C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6961  00214E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6962  002150  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6963  002152  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6964  002154  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6965  002156  6C01               	negf	___aodiv@dividend^0,c
  6966  002158  0E00               	movlw	0
  6967  00215A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6968  00215C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6969  00215E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6970  002160  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6971  002162  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6972  002164  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6973  002166  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6974  002168  0E01               	movlw	1
  6975  00216A  1A12               	xorwf	___aodiv@sign^0,f,c
  6976  00216C                     l2574:
  6977  00216C  EE20  F013         	lfsr	2,___aodiv@quotient
  6978  002170  0E07               	movlw	7
  6979  002172                     u2191:
  6980  002172  6ADE               	clrf	postinc2,c
  6981  002174  06E8               	decf	wreg,f,c
  6982  002176  E2FD               	bc	u2191
  6983  002178  5009               	movf	___aodiv@divisor^0,w,c
  6984  00217A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6985  00217C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6986  00217E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6987  002180  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6988  002182  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6989  002184  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6990  002186  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6991  002188  B4D8               	btfsc	status,2,c
  6992  00218A  EFC9  F010         	goto	u2201
  6993  00218E  EFCB  F010         	goto	u2200
  6994  002192                     u2201:
  6995  002192  EF1D  F011         	goto	l2596
  6996  002196                     u2200:
  6997  002196  0E01               	movlw	1
  6998  002198  6E11               	movwf	___aodiv@counter^0,c
  6999  00219A  EFD9  F010         	goto	l2582
  7000  00219E                     l2580:
  7001  00219E  90D8               	bcf	status,0,c
  7002  0021A0  3609               	rlcf	___aodiv@divisor^0,f,c
  7003  0021A2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7004  0021A4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7005  0021A6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7006  0021A8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7007  0021AA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7008  0021AC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7009  0021AE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7010  0021B0  2A11               	incf	___aodiv@counter^0,f,c
  7011  0021B2                     l2582:
  7012  0021B2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7013  0021B4  EFDE  F010         	goto	u2211
  7014  0021B8  EFE0  F010         	goto	u2210
  7015  0021BC                     u2211:
  7016  0021BC  EFCF  F010         	goto	l2580
  7017  0021C0                     u2210:
  7018  0021C0                     l2584:
  7019  0021C0  90D8               	bcf	status,0,c
  7020  0021C2  3613               	rlcf	___aodiv@quotient^0,f,c
  7021  0021C4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7022  0021C6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7023  0021C8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7024  0021CA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7025  0021CC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7026  0021CE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7027  0021D0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7028  0021D2  5009               	movf	___aodiv@divisor^0,w,c
  7029  0021D4  5C01               	subwf	___aodiv@dividend^0,w,c
  7030  0021D6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7031  0021D8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7032  0021DA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7033  0021DC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7034  0021DE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7035  0021E0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7036  0021E2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7037  0021E4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7038  0021E6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7039  0021E8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7040  0021EA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7041  0021EC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7042  0021EE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7043  0021F0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7044  0021F2  A0D8               	btfss	status,0,c
  7045  0021F4  EFFE  F010         	goto	u2221
  7046  0021F8  EF00  F011         	goto	u2220
  7047  0021FC                     u2221:
  7048  0021FC  EF11  F011         	goto	l2592
  7049  002200                     u2220:
  7050  002200  5009               	movf	___aodiv@divisor^0,w,c
  7051  002202  5E01               	subwf	___aodiv@dividend^0,f,c
  7052  002204  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7053  002206  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7054  002208  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7055  00220A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7056  00220C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7057  00220E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7058  002210  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7059  002212  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7060  002214  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7061  002216  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7062  002218  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7063  00221A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7064  00221C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7065  00221E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7066  002220  8013               	bsf	___aodiv@quotient^0,0,c
  7067  002222                     l2592:
  7068  002222  90D8               	bcf	status,0,c
  7069  002224  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7070  002226  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7071  002228  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7072  00222A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7073  00222C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7074  00222E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7075  002230  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7076  002232  3209               	rrcf	___aodiv@divisor^0,f,c
  7077  002234  2E11               	decfsz	___aodiv@counter^0,f,c
  7078  002236  EFE0  F010         	goto	l2584
  7079  00223A                     l2596:
  7080  00223A  5012               	movf	___aodiv@sign^0,w,c
  7081  00223C  B4D8               	btfsc	status,2,c
  7082  00223E  EF23  F011         	goto	u2231
  7083  002242  EF25  F011         	goto	u2230
  7084  002246                     u2231:
  7085  002246  EF35  F011         	goto	l2600
  7086  00224A                     u2230:
  7087  00224A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7088  00224C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7089  00224E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7090  002250  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7091  002252  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7092  002254  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7093  002256  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7094  002258  6C13               	negf	___aodiv@quotient^0,c
  7095  00225A  0E00               	movlw	0
  7096  00225C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7097  00225E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7098  002260  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7099  002262  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7100  002264  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7101  002266  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7102  002268  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7103  00226A                     l2600:
  7104  00226A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7105  00226E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7106  002272  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7107  002276  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7108  00227A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7109  00227E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7110  002282  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7111  002286  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7112  00228A  0012               	return		;funcret
  7113  00228C                     __end_of___aodiv:
  7114                           	callstack 0
  7115                           
  7116 ;; *************** function _ctoa *****************
  7117 ;; Defined at:
  7118 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7121 ;;		 -> sprintf@f(6), 
  7122 ;;  c               1   11[COMRAM] unsigned char 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  w               2   15[COMRAM] int 
  7125 ;;  l               2   13[COMRAM] int 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  2    9[COMRAM] int 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7135 ;;      Params:         3       0       0       0       0       0       0       0       0
  7136 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7137 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7138 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7139 ;;Total ram usage:        8 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    2
  7142 ;; This function calls:
  7143 ;;		_fputc
  7144 ;; This function is called by:
  7145 ;;		_vfpfcnvrt
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text30
  7150  002770                     __ptext30:
  7151                           	callstack 0
  7152  002770                     _ctoa:
  7153                           	callstack 24
  7154  002770                     
  7155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  7156  002770  0100               	movlb	0	; () banked
  7157  002772  51B8               	movf	_width& (0+255),w,b
  7158  002774  11B9               	iorwf	(_width+1)& (0+255),w,b
  7159  002776  A4D8               	btfss	status,2,c
  7160  002778  EFC0  F013         	goto	u2451
  7161  00277C  EFC2  F013         	goto	u2450
  7162  002780                     u2451:
  7163  002780  EFC8  F013         	goto	l2706
  7164  002784                     u2450:
  7165  002784                     
  7166                           ; BSR set to: 0
  7167  002784  C0B8  F010         	movff	_width,ctoa@w
  7168  002788  C0B9  F011         	movff	_width+1,ctoa@w+1
  7169  00278C  EFCE  F013         	goto	l2708
  7170  002790                     l2706:
  7171                           
  7172                           ; BSR set to: 0
  7173  002790  0EFF               	movlw	255
  7174  002792  25B8               	addwf	_width& (0+255),w,b
  7175  002794  6E10               	movwf	ctoa@w^0,c
  7176  002796  0EFF               	movlw	255
  7177  002798  21B9               	addwfc	(_width+1)& (0+255),w,b
  7178  00279A  6E11               	movwf	(ctoa@w+1)^0,c
  7179  00279C                     l2708:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  7183  00279C  A1BC               	btfss	_flags& (0+255),0,b
  7184  00279E  EFD3  F013         	goto	u2461
  7185  0027A2  EFD5  F013         	goto	u2460
  7186  0027A6                     u2461:
  7187  0027A6  EFDE  F013         	goto	l2712
  7188  0027AA                     u2460:
  7189  0027AA                     
  7190                           ; BSR set to: 0
  7191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  7192  0027AA  C00C  F001         	movff	ctoa@c,fputc@c
  7193  0027AE  6A02               	clrf	(fputc@c+1)^0,c
  7194  0027B0  C00A  F003         	movff	ctoa@fp,fputc@fp
  7195  0027B4  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7196  0027B8  EC24  F014         	call	_fputc	;wreg free
  7197  0027BC                     l2712:
  7198                           
  7199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  7200  0027BC  BE11               	btfsc	(ctoa@w+1)^0,7,c
  7201  0027BE  EFE3  F013         	goto	u2471
  7202  0027C2  EFE5  F013         	goto	u2470
  7203  0027C6                     u2471:
  7204  0027C6  EFE7  F013         	goto	l2716
  7205  0027CA                     u2470:
  7206  0027CA  EFEB  F013         	goto	l1105
  7207  0027CE                     l2716:
  7208  0027CE  0E00               	movlw	0
  7209  0027D0  6E11               	movwf	(ctoa@w+1)^0,c
  7210  0027D2  0E00               	movlw	0
  7211  0027D4  6E10               	movwf	ctoa@w^0,c
  7212  0027D6                     l1105:
  7213                           
  7214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  7215  0027D6  0E00               	movlw	0
  7216  0027D8  6E0F               	movwf	(ctoa@l+1)^0,c
  7217  0027DA  0E00               	movlw	0
  7218  0027DC  6E0E               	movwf	ctoa@l^0,c
  7219                           
  7220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7221  0027DE  EFFD  F013         	goto	l2722
  7222  0027E2                     l2718:
  7223                           
  7224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  7225  0027E2  0E00               	movlw	0
  7226  0027E4  6E02               	movwf	(fputc@c+1)^0,c
  7227  0027E6  0E20               	movlw	32
  7228  0027E8  6E01               	movwf	fputc@c^0,c
  7229  0027EA  C00A  F003         	movff	ctoa@fp,fputc@fp
  7230  0027EE  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7231  0027F2  EC24  F014         	call	_fputc	;wreg free
  7232  0027F6                     
  7233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  7234  0027F6  4A0E               	infsnz	ctoa@l^0,f,c
  7235  0027F8  2A0F               	incf	(ctoa@l+1)^0,f,c
  7236  0027FA                     l2722:
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7239  0027FA  5010               	movf	ctoa@w^0,w,c
  7240  0027FC  5C0E               	subwf	ctoa@l^0,w,c
  7241  0027FE  500F               	movf	(ctoa@l+1)^0,w,c
  7242  002800  0A80               	xorlw	128
  7243  002802  6E0D               	movwf	??_ctoa^0,c
  7244  002804  5011               	movf	(ctoa@w+1)^0,w,c
  7245  002806  0A80               	xorlw	128
  7246  002808  580D               	subwfb	??_ctoa^0,w,c
  7247  00280A  A0D8               	btfss	status,0,c
  7248  00280C  EF0A  F014         	goto	u2481
  7249  002810  EF0C  F014         	goto	u2480
  7250  002814                     u2481:
  7251  002814  EFF1  F013         	goto	l2718
  7252  002818                     u2480:
  7253  002818                     
  7254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  7255  002818  0100               	movlb	0	; () banked
  7256  00281A  B1BC               	btfsc	_flags& (0+255),0,b
  7257  00281C  EF12  F014         	goto	u2491
  7258  002820  EF14  F014         	goto	u2490
  7259  002824                     u2491:
  7260  002824  EF1D  F014         	goto	l2726
  7261  002828                     u2490:
  7262  002828                     
  7263                           ; BSR set to: 0
  7264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  7265  002828  C00C  F001         	movff	ctoa@c,fputc@c
  7266  00282C  6A02               	clrf	(fputc@c+1)^0,c
  7267  00282E  C00A  F003         	movff	ctoa@fp,fputc@fp
  7268  002832  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7269  002836  EC24  F014         	call	_fputc	;wreg free
  7270  00283A                     l2726:
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  7273  00283A  0E01               	movlw	1
  7274  00283C  240E               	addwf	ctoa@l^0,w,c
  7275  00283E  6E0A               	movwf	?_ctoa^0,c
  7276  002840  0E00               	movlw	0
  7277  002842  200F               	addwfc	(ctoa@l+1)^0,w,c
  7278  002844  6E0B               	movwf	(?_ctoa+1)^0,c
  7279  002846  0012               	return		;funcret
  7280  002848                     __end_of_ctoa:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function _fputc *****************
  7284 ;; Defined at:
  7285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  c               2    0[COMRAM] int 
  7288 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7289 ;;		 -> sprintf@f(6), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;		None
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  2    0[COMRAM] int 
  7294 ;; Registers used:
  7295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7301 ;;      Params:         4       0       0       0       0       0       0       0       0
  7302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7303 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7304 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7305 ;;Total ram usage:        9 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    1
  7308 ;; This function calls:
  7309 ;;		_putch
  7310 ;; This function is called by:
  7311 ;;		_pad
  7312 ;;		_ctoa
  7313 ;;		_vfpfcnvrt
  7314 ;;		_fputs
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text31
  7319  002848                     __ptext31:
  7320                           	callstack 0
  7321  002848                     _fputc:
  7322                           	callstack 22
  7323  002848  5003               	movf	fputc@fp^0,w,c
  7324  00284A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7325  00284C  B4D8               	btfsc	status,2,c
  7326  00284E  EF2B  F014         	goto	u2091
  7327  002852  EF2D  F014         	goto	u2090
  7328  002856                     u2091:
  7329  002856  EF36  F014         	goto	l2528
  7330  00285A                     u2090:
  7331  00285A  5003               	movf	fputc@fp^0,w,c
  7332  00285C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7333  00285E  A4D8               	btfss	status,2,c
  7334  002860  EF34  F014         	goto	u2101
  7335  002864  EF36  F014         	goto	u2100
  7336  002868                     u2101:
  7337  002868  EF3B  F014         	goto	l2530
  7338  00286C                     u2100:
  7339  00286C                     l2528:
  7340  00286C  5001               	movf	fputc@c^0,w,c
  7341  00286E  EC4C  F019         	call	_putch
  7342  002872  EF88  F014         	goto	l1215
  7343  002876                     l2530:
  7344  002876  EE20 F004          	lfsr	2,4
  7345  00287A  5003               	movf	fputc@fp^0,w,c
  7346  00287C  26D9               	addwf	fsr2l,f,c
  7347  00287E  5004               	movf	(fputc@fp+1)^0,w,c
  7348  002880  22DA               	addwfc	fsr2h,f,c
  7349  002882  50DE               	movf	postinc2,w,c
  7350  002884  10DE               	iorwf	postinc2,w,c
  7351  002886  B4D8               	btfsc	status,2,c
  7352  002888  EF48  F014         	goto	u2111
  7353  00288C  EF4A  F014         	goto	u2110
  7354  002890                     u2111:
  7355  002890  EF65  F014         	goto	l2534
  7356  002894                     u2110:
  7357  002894  EE20 F004          	lfsr	2,4
  7358  002898  5003               	movf	fputc@fp^0,w,c
  7359  00289A  26D9               	addwf	fsr2l,f,c
  7360  00289C  5004               	movf	(fputc@fp+1)^0,w,c
  7361  00289E  22DA               	addwfc	fsr2h,f,c
  7362  0028A0  EE10 F002          	lfsr	1,2
  7363  0028A4  5003               	movf	fputc@fp^0,w,c
  7364  0028A6  26E1               	addwf	fsr1l,f,c
  7365  0028A8  5004               	movf	(fputc@fp+1)^0,w,c
  7366  0028AA  22E2               	addwfc	fsr1h,f,c
  7367  0028AC  50DE               	movf	postinc2,w,c
  7368  0028AE  5CE6               	subwf	postinc1,w,c
  7369  0028B0  50E6               	movf	postinc1,w,c
  7370  0028B2  0A80               	xorlw	128
  7371  0028B4  6E09               	movwf	(??_fputc+4)^0,c
  7372  0028B6  50DE               	movf	postinc2,w,c
  7373  0028B8  0A80               	xorlw	128
  7374  0028BA  5809               	subwfb	(??_fputc+4)^0,w,c
  7375  0028BC  B0D8               	btfsc	status,0,c
  7376  0028BE  EF63  F014         	goto	u2121
  7377  0028C2  EF65  F014         	goto	u2120
  7378  0028C6                     u2121:
  7379  0028C6  EF88  F014         	goto	l1215
  7380  0028CA                     u2120:
  7381  0028CA                     l2534:
  7382  0028CA  EE20 F002          	lfsr	2,2
  7383  0028CE  5003               	movf	fputc@fp^0,w,c
  7384  0028D0  26D9               	addwf	fsr2l,f,c
  7385  0028D2  5004               	movf	(fputc@fp+1)^0,w,c
  7386  0028D4  22DA               	addwfc	fsr2h,f,c
  7387  0028D6  CFDE F005          	movff	postinc2,??_fputc
  7388  0028DA  CFDD F006          	movff	postdec2,??_fputc+1
  7389  0028DE  C003  FFD9         	movff	fputc@fp,fsr2l
  7390  0028E2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7391  0028E6  CFDE F007          	movff	postinc2,??_fputc+2
  7392  0028EA  CFDD F008          	movff	postdec2,??_fputc+3
  7393  0028EE  5005               	movf	??_fputc^0,w,c
  7394  0028F0  2407               	addwf	(??_fputc+2)^0,w,c
  7395  0028F2  6ED9               	movwf	fsr2l,c
  7396  0028F4  5006               	movf	(??_fputc+1)^0,w,c
  7397  0028F6  2008               	addwfc	(??_fputc+3)^0,w,c
  7398  0028F8  6EDA               	movwf	fsr2h,c
  7399  0028FA  C001  FFDF         	movff	fputc@c,indf2
  7400  0028FE  EE20 F002          	lfsr	2,2
  7401  002902  5003               	movf	fputc@fp^0,w,c
  7402  002904  26D9               	addwf	fsr2l,f,c
  7403  002906  5004               	movf	(fputc@fp+1)^0,w,c
  7404  002908  22DA               	addwfc	fsr2h,f,c
  7405  00290A  2ADE               	incf	postinc2,f,c
  7406  00290C  0E00               	movlw	0
  7407  00290E  22DD               	addwfc	postdec2,f,c
  7408  002910                     l1215:
  7409  002910  0012               	return		;funcret
  7410  002912                     __end_of_fputc:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function _putch *****************
  7414 ;; Defined at:
  7415 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  c               1    wreg     unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  c               1    0[COMRAM] unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7433 ;;Total ram usage:        0 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_fputc
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text32
  7443  003298                     __ptext32:
  7444                           	callstack 0
  7445  003298                     _putch:
  7446                           	callstack 22
  7447  003298  0012               	return		;funcret
  7448  00329A                     __end_of_putch:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _RTC_Read_Clock *****************
  7452 ;; Defined at:
  7453 ;;		line 244 in file "Controler.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  read_clock_a    1    wreg     unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0
  7468 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7469 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7470 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7471 ;;Total ram usage:        2 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    3
  7474 ;; This function calls:
  7475 ;;		_I2C_Read
  7476 ;;		_I2C_Repeated_Start
  7477 ;;		_I2C_Start
  7478 ;;		_I2C_Write
  7479 ;; This function is called by:
  7480 ;;		_RTC
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text33
  7485  002E9A                     __ptext33:
  7486                           	callstack 0
  7487  002E9A                     _RTC_Read_Clock:
  7488                           	callstack 26
  7489                           
  7490                           ;incstack = 0
  7491                           ;RTC_Read_Clock@read_clock_address stored from wreg
  7492  002E9A  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  7493  002E9C                     
  7494                           ;Controler.c: 245:     I2C_Start(0xD0);
  7495  002E9C  0ED0               	movlw	208
  7496  002E9E  EC7F  F018         	call	_I2C_Start
  7497                           
  7498                           ;Controler.c: 246:     I2C_Write(read_clock_address);
  7499  002EA2  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  7500  002EA4  ECD7  F018         	call	_I2C_Write
  7501                           
  7502                           ;Controler.c: 247:     I2C_Repeated_Start(0xD1);
  7503  002EA8  0ED1               	movlw	209
  7504  002EAA  EC96  F018         	call	_I2C_Repeated_Start
  7505  002EAE                     
  7506                           ;Controler.c: 248:     sec = I2C_Read(0);
  7507  002EAE  0E00               	movlw	0
  7508  002EB0  EC0F  F018         	call	_I2C_Read
  7509  002EB4  6E03               	movwf	??_RTC_Read_Clock^0,c
  7510  002EB6  5003               	movf	??_RTC_Read_Clock^0,w,c
  7511  002EB8  0100               	movlb	0	; () banked
  7512  002EBA  6FC2               	movwf	_sec& (0+255),b
  7513  002EBC  6BC3               	clrf	(_sec+1)& (0+255),b
  7514  002EBE                     
  7515                           ; BSR set to: 0
  7516                           ;Controler.c: 249:     min = I2C_Read(0);
  7517  002EBE  0E00               	movlw	0
  7518  002EC0  EC0F  F018         	call	_I2C_Read
  7519  002EC4  6E03               	movwf	??_RTC_Read_Clock^0,c
  7520  002EC6  5003               	movf	??_RTC_Read_Clock^0,w,c
  7521  002EC8  0100               	movlb	0	; () banked
  7522  002ECA  6FC0               	movwf	_min& (0+255),b
  7523  002ECC  6BC1               	clrf	(_min+1)& (0+255),b
  7524  002ECE                     
  7525                           ; BSR set to: 0
  7526                           ;Controler.c: 250:     hour = I2C_Read(1);
  7527  002ECE  0E01               	movlw	1
  7528  002ED0  EC0F  F018         	call	_I2C_Read
  7529  002ED4  6E03               	movwf	??_RTC_Read_Clock^0,c
  7530  002ED6  5003               	movf	??_RTC_Read_Clock^0,w,c
  7531  002ED8  0100               	movlb	0	; () banked
  7532  002EDA  6FBE               	movwf	_hour& (0+255),b
  7533  002EDC  6BBF               	clrf	(_hour+1)& (0+255),b
  7534  002EDE                     
  7535                           ; BSR set to: 0
  7536  002EDE  0012               	return		;funcret
  7537  002EE0                     __end_of_RTC_Read_Clock:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _I2C_Start *****************
  7541 ;; Defined at:
  7542 ;;		line 81 in file "./I2C_Master_File_3.h"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  slave_write_    1    wreg     unsigned char 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  slave_write_    1    1[COMRAM] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      unsigned char 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0
  7557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7559 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7560 ;;Total ram usage:        1 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    2
  7563 ;; This function calls:
  7564 ;;		_I2C_Write
  7565 ;; This function is called by:
  7566 ;;		_RTC_Read_Clock
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text34
  7571  0030FE                     __ptext34:
  7572                           	callstack 0
  7573  0030FE                     _I2C_Start:
  7574                           	callstack 26
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;incstack = 0
  7578                           ;I2C_Start@slave_write_address stored from wreg
  7579  0030FE  6E02               	movwf	I2C_Start@slave_write_address^0,c
  7580  003100                     
  7581                           ;./I2C_Master_File_3.h: 82:     SSPCON2bits.SEN=1;
  7582  003100  80C5               	bsf	197,0,c	;volatile
  7583  003102                     l228:
  7584  003102  B0C5               	btfsc	197,0,c	;volatile
  7585  003104  EF86  F018         	goto	u2971
  7586  003108  EF88  F018         	goto	u2970
  7587  00310C                     u2971:
  7588  00310C  EF81  F018         	goto	l228
  7589  003110                     u2970:
  7590  003110                     
  7591                           ;./I2C_Master_File_3.h: 84:  SSPIF=0;
  7592  003110  969E               	bcf	3998,3,c	;volatile
  7593                           
  7594                           ;./I2C_Master_File_3.h: 85:     if(!SSPSTATbits.S)
  7595  003112  B6C7               	btfsc	199,3,c	;volatile
  7596  003114  EF8E  F018         	goto	u2981
  7597  003118  EF90  F018         	goto	u2980
  7598  00311C                     u2981:
  7599  00311C  EF92  F018         	goto	l2990
  7600  003120                     u2980:
  7601  003120  EF95  F018         	goto	l232
  7602  003124                     l2990:
  7603                           
  7604                           ;./I2C_Master_File_3.h: 87:     return (I2C_Write(slave_write_address));;	Return value o
      +                          f _I2C_Start is never used
  7605  003124  5002               	movf	I2C_Start@slave_write_address^0,w,c
  7606  003126  ECD7  F018         	call	_I2C_Write
  7607  00312A                     l232:
  7608  00312A  0012               	return		;funcret
  7609  00312C                     __end_of_I2C_Start:
  7610                           	callstack 0
  7611                           
  7612 ;; *************** function _I2C_Repeated_Start *****************
  7613 ;; Defined at:
  7614 ;;		line 90 in file "./I2C_Master_File_3.h"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  slave_read_a    1    wreg     unsigned char 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      unsigned char 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0
  7629 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7631 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7632 ;;Total ram usage:        1 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    2
  7635 ;; This function calls:
  7636 ;;		_I2C_Write
  7637 ;; This function is called by:
  7638 ;;		_RTC_Read_Clock
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text35
  7643  00312C                     __ptext35:
  7644                           	callstack 0
  7645  00312C                     _I2C_Repeated_Start:
  7646                           	callstack 26
  7647                           
  7648                           ;incstack = 0
  7649                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  7650  00312C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  7651  00312E                     
  7652                           ;./I2C_Master_File_3.h: 91:     RSEN = 1;
  7653  00312E  82C5               	bsf	4037,1,c	;volatile
  7654  003130                     l235:
  7655  003130  B2C5               	btfsc	4037,1,c	;volatile
  7656  003132  EF9D  F018         	goto	u2991
  7657  003136  EF9F  F018         	goto	u2990
  7658  00313A                     u2991:
  7659  00313A  EF98  F018         	goto	l235
  7660  00313E                     u2990:
  7661  00313E                     
  7662                           ;./I2C_Master_File_3.h: 93:     SSPIF = 0;
  7663  00313E  969E               	bcf	3998,3,c	;volatile
  7664                           
  7665                           ;./I2C_Master_File_3.h: 94:  if(!SSPSTATbits.S)
  7666  003140  B6C7               	btfsc	199,3,c	;volatile
  7667  003142  EFA5  F018         	goto	u3001
  7668  003146  EFA7  F018         	goto	u3000
  7669  00314A                     u3001:
  7670  00314A  EFA9  F018         	goto	l2998
  7671  00314E                     u3000:
  7672  00314E  EFAC  F018         	goto	l239
  7673  003152                     l2998:
  7674                           
  7675                           ;./I2C_Master_File_3.h: 96:     I2C_Write(slave_read_address);
  7676  003152  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  7677  003154  ECD7  F018         	call	_I2C_Write
  7678  003158                     l239:
  7679  003158  0012               	return		;funcret
  7680  00315A                     __end_of_I2C_Repeated_Start:
  7681                           	callstack 0
  7682                           
  7683 ;; *************** function _I2C_Write *****************
  7684 ;; Defined at:
  7685 ;;		line 110 in file "./I2C_Master_File_3.h"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  data            1    wreg     unsigned char 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  data            1    0[COMRAM] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      unsigned char 
  7692 ;; Registers used:
  7693 ;;		wreg, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7699 ;;      Params:         0       0       0       0       0       0       0       0       0
  7700 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7702 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7703 ;;Total ram usage:        1 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    1
  7706 ;; This function calls:
  7707 ;;		_I2C_Ready
  7708 ;; This function is called by:
  7709 ;;		_I2C_Start
  7710 ;;		_I2C_Repeated_Start
  7711 ;;		_RTC_Read_Clock
  7712 ;;		_I2C_Start_Wait
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text36
  7717  0031AE                     __ptext36:
  7718                           	callstack 0
  7719  0031AE                     _I2C_Write:
  7720                           	callstack 27
  7721                           
  7722                           ;incstack = 0
  7723                           ;I2C_Write@data stored from wreg
  7724  0031AE  6E01               	movwf	I2C_Write@data^0,c
  7725  0031B0                     
  7726                           ;./I2C_Master_File_3.h: 111:       SSPBUF = data;
  7727  0031B0  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  7728  0031B4                     
  7729                           ;./I2C_Master_File_3.h: 112:       I2C_Ready();
  7730  0031B4  EC3B  F019         	call	_I2C_Ready	;wreg free
  7731  0031B8                     
  7732                           ;./I2C_Master_File_3.h: 113:       if (ACKSTAT)
  7733  0031B8  ACC5               	btfss	4037,6,c	;volatile
  7734  0031BA  EFE1  F018         	goto	u2841
  7735  0031BE  EFE3  F018         	goto	u2840
  7736  0031C2                     u2841:
  7737  0031C2  EFE6  F018         	goto	l2886
  7738  0031C6                     u2840:
  7739  0031C6                     
  7740                           ;./I2C_Master_File_3.h: 114:         return 1;
  7741  0031C6  0E01               	movlw	1
  7742  0031C8  EFE7  F018         	goto	l252
  7743  0031CC                     l2886:
  7744                           
  7745                           ;./I2C_Master_File_3.h: 116:         return 2;
  7746  0031CC  0E02               	movlw	2
  7747  0031CE                     l252:
  7748  0031CE  0012               	return		;funcret
  7749  0031D0                     __end_of_I2C_Write:
  7750                           	callstack 0
  7751                           
  7752 ;; *************** function _I2C_Read *****************
  7753 ;; Defined at:
  7754 ;;		line 31 in file "./I2C_Master_File_3.h"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  flag            1    wreg     unsigned char 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;  flag            1    0[COMRAM] unsigned char 
  7759 ;;  buffer          1    1[COMRAM] unsigned char 
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      unsigned char 
  7762 ;; Registers used:
  7763 ;;		wreg, status,2, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0
  7770 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7772 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7773 ;;Total ram usage:        2 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:    1
  7776 ;; This function calls:
  7777 ;;		_I2C_Ack
  7778 ;;		_I2C_Nack
  7779 ;;		_I2C_Ready
  7780 ;; This function is called by:
  7781 ;;		_RTC_Read_Clock
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text37
  7786  00301E                     __ptext37:
  7787                           	callstack 0
  7788  00301E                     _I2C_Read:
  7789                           	callstack 27
  7790                           
  7791                           ;incstack = 0
  7792                           ;I2C_Read@flag stored from wreg
  7793  00301E  6E01               	movwf	I2C_Read@flag^0,c
  7794  003020                     
  7795                           ;./I2C_Master_File_3.h: 32:         char buffer;;./I2C_Master_File_3.h: 33:         RCEN
      +                           = 1;
  7796  003020  86C5               	bsf	4037,3,c	;volatile
  7797  003022                     l200:
  7798  003022  A0C7               	btfss	199,0,c	;volatile
  7799  003024  EF16  F018         	goto	u2951
  7800  003028  EF18  F018         	goto	u2950
  7801  00302C                     u2951:
  7802  00302C  EF11  F018         	goto	l200
  7803  003030                     u2950:
  7804  003030                     
  7805                           ;./I2C_Master_File_3.h: 36:         buffer = SSPBUF;
  7806  003030  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  7807  003034                     
  7808                           ;./I2C_Master_File_3.h: 38:         if(flag==0)
  7809  003034  5001               	movf	I2C_Read@flag^0,w,c
  7810  003036  A4D8               	btfss	status,2,c
  7811  003038  EF20  F018         	goto	u2961
  7812  00303C  EF22  F018         	goto	u2960
  7813  003040                     u2961:
  7814  003040  EF26  F018         	goto	l2980
  7815  003044                     u2960:
  7816  003044                     
  7817                           ;./I2C_Master_File_3.h: 39:             I2C_Ack();
  7818  003044  EC27  F019         	call	_I2C_Ack	;wreg free
  7819  003048  EF28  F018         	goto	l204
  7820  00304C                     l2980:
  7821                           
  7822                           ;./I2C_Master_File_3.h: 41:             I2C_Nack();
  7823  00304C  EC1D  F019         	call	_I2C_Nack	;wreg free
  7824  003050                     l204:
  7825                           
  7826                           ;./I2C_Master_File_3.h: 42:         I2C_Ready();
  7827  003050  EC3B  F019         	call	_I2C_Ready	;wreg free
  7828  003054                     
  7829                           ;./I2C_Master_File_3.h: 43:         return(buffer);
  7830  003054  5002               	movf	I2C_Read@buffer^0,w,c
  7831  003056  0012               	return		;funcret
  7832  003058                     __end_of_I2C_Read:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function _I2C_Ready *****************
  7836 ;; Defined at:
  7837 ;;		line 59 in file "./I2C_Master_File_3.h"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		None
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7851 ;;      Params:         0       0       0       0       0       0       0       0       0
  7852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7854 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7855 ;;Total ram usage:        0 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_I2C_Read
  7861 ;;		_I2C_Write
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text38
  7866  003276                     __ptext38:
  7867                           	callstack 0
  7868  003276                     _I2C_Ready:
  7869                           	callstack 27
  7870  003276                     l211:
  7871  003276  A69E               	btfss	3998,3,c	;volatile
  7872  003278  EF40  F019         	goto	u2441
  7873  00327C  EF42  F019         	goto	u2440
  7874  003280                     u2441:
  7875  003280  EF3B  F019         	goto	l211
  7876  003284                     u2440:
  7877  003284                     
  7878                           ;./I2C_Master_File_3.h: 61:     SSPIF=0;
  7879  003284  969E               	bcf	3998,3,c	;volatile
  7880  003286  0012               	return		;funcret
  7881  003288                     __end_of_I2C_Ready:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function _I2C_Nack *****************
  7885 ;; Defined at:
  7886 ;;		line 125 in file "./I2C_Master_File_3.h"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		None
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7904 ;;Total ram usage:        0 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_I2C_Read
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text39
  7914  00323A                     __ptext39:
  7915                           	callstack 0
  7916  00323A                     _I2C_Nack:
  7917                           	callstack 27
  7918  00323A                     
  7919                           ;./I2C_Master_File_3.h: 126:     ACKDT=1;
  7920  00323A  8AC5               	bsf	4037,5,c	;volatile
  7921                           
  7922                           ;./I2C_Master_File_3.h: 127:  ACKEN=1;
  7923  00323C  88C5               	bsf	4037,4,c	;volatile
  7924  00323E                     l262:
  7925  00323E  B8C5               	btfsc	4037,4,c	;volatile
  7926  003240  EF24  F019         	goto	u2831
  7927  003244  EF26  F019         	goto	u2830
  7928  003248                     u2831:
  7929  003248  EF1F  F019         	goto	l262
  7930  00324C                     u2830:
  7931  00324C  0012               	return		;funcret
  7932  00324E                     __end_of_I2C_Nack:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function _I2C_Ack *****************
  7936 ;; Defined at:
  7937 ;;		line 119 in file "./I2C_Master_File_3.h"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		None
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7951 ;;      Params:         0       0       0       0       0       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7954 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7955 ;;Total ram usage:        0 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_I2C_Read
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text40
  7965  00324E                     __ptext40:
  7966                           	callstack 0
  7967  00324E                     _I2C_Ack:
  7968                           	callstack 27
  7969  00324E                     
  7970                           ;./I2C_Master_File_3.h: 120:     ACKDT=0;
  7971  00324E  9AC5               	bcf	4037,5,c	;volatile
  7972                           
  7973                           ;./I2C_Master_File_3.h: 121:  ACKEN=1;
  7974  003250  88C5               	bsf	4037,4,c	;volatile
  7975  003252                     l256:
  7976  003252  B8C5               	btfsc	4037,4,c	;volatile
  7977  003254  EF2E  F019         	goto	u2821
  7978  003258  EF30  F019         	goto	u2820
  7979  00325C                     u2821:
  7980  00325C  EF29  F019         	goto	l256
  7981  003260                     u2820:
  7982  003260  0012               	return		;funcret
  7983  003262                     __end_of_I2C_Ack:
  7984                           	callstack 0
  7985                           
  7986 ;; *************** function _LCD_String_xy *****************
  7987 ;; Defined at:
  7988 ;;		line 82 in file "LCD_20x4.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  row             1    wreg     unsigned char 
  7991 ;;  pos             1    9[COMRAM] unsigned char 
  7992 ;;  str             2   10[COMRAM] PTR const unsigned char 
  7993 ;;		 -> hours(10), SensorMovimiento@buf(20), STR_6(22), STR_5(22), 
  7994 ;;		 -> STR_4(6), STR_3(6), SensorTemperatura@Temperature(10), STR_1(7), 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  row             1   12[COMRAM] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8006 ;;      Params:         3       0       0       0       0       0       0       0       0
  8007 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8009 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8010 ;;Total ram usage:        4 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    3
  8013 ;; This function calls:
  8014 ;;		_LCD_Command
  8015 ;;		_LCD_String
  8016 ;; This function is called by:
  8017 ;;		_SensorTemperatura
  8018 ;;		_SensorLuz
  8019 ;;		_SensorMovimiento
  8020 ;;		_RTC
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text41
  8025  002BA8                     __ptext41:
  8026                           	callstack 0
  8027  002BA8                     _LCD_String_xy:
  8028                           	callstack 26
  8029                           
  8030                           ;incstack = 0
  8031                           ;LCD_String_xy@row stored from wreg
  8032  002BA8  6E0D               	movwf	LCD_String_xy@row^0,c
  8033  002BAA                     
  8034                           ;LCD_20x4.c: 82: void LCD_String_xy(char row,char pos,const char *str);LCD_20x4.c: 83: {
      +                          ;LCD_20x4.c: 84:     if (row == 1)
  8035  002BAA  040D               	decf	LCD_String_xy@row^0,w,c
  8036  002BAC  A4D8               	btfss	status,2,c
  8037  002BAE  EFDB  F015         	goto	u3101
  8038  002BB2  EFDD  F015         	goto	u3100
  8039  002BB6                     u3101:
  8040  002BB6  EFE4  F015         	goto	l3030
  8041  002BBA                     u3100:
  8042  002BBA                     
  8043                           ;LCD_20x4.c: 85:   LCD_Command((pos & 0x0F)|0x80);
  8044  002BBA  500A               	movf	LCD_String_xy@pos^0,w,c
  8045  002BBC  0B0F               	andlw	15
  8046  002BBE  0980               	iorlw	128
  8047  002BC0  ECF6  F018         	call	_LCD_Command
  8048  002BC4  EF14  F016         	goto	l3042
  8049  002BC8                     l3030:
  8050  002BC8  0E02               	movlw	2
  8051  002BCA  180D               	xorwf	LCD_String_xy@row^0,w,c
  8052  002BCC  A4D8               	btfss	status,2,c
  8053  002BCE  EFEB  F015         	goto	u3111
  8054  002BD2  EFED  F015         	goto	u3110
  8055  002BD6                     u3111:
  8056  002BD6  EFF4  F015         	goto	l3034
  8057  002BDA                     u3110:
  8058  002BDA                     
  8059                           ;LCD_20x4.c: 87:   LCD_Command((pos & 0x0F)|0xC0);
  8060  002BDA  500A               	movf	LCD_String_xy@pos^0,w,c
  8061  002BDC  0B0F               	andlw	15
  8062  002BDE  09C0               	iorlw	192
  8063  002BE0  ECF6  F018         	call	_LCD_Command
  8064  002BE4  EF14  F016         	goto	l3042
  8065  002BE8                     l3034:
  8066  002BE8  0E03               	movlw	3
  8067  002BEA  180D               	xorwf	LCD_String_xy@row^0,w,c
  8068  002BEC  A4D8               	btfss	status,2,c
  8069  002BEE  EFFB  F015         	goto	u3121
  8070  002BF2  EFFD  F015         	goto	u3120
  8071  002BF6                     u3121:
  8072  002BF6  EF04  F016         	goto	l3038
  8073  002BFA                     u3120:
  8074  002BFA                     
  8075                           ;LCD_20x4.c: 89:   LCD_Command((pos & 0x0F)|0x94);
  8076  002BFA  500A               	movf	LCD_String_xy@pos^0,w,c
  8077  002BFC  0B0F               	andlw	15
  8078  002BFE  0994               	iorlw	148
  8079  002C00  ECF6  F018         	call	_LCD_Command
  8080  002C04  EF14  F016         	goto	l3042
  8081  002C08                     l3038:
  8082  002C08  0E04               	movlw	4
  8083  002C0A  180D               	xorwf	LCD_String_xy@row^0,w,c
  8084  002C0C  A4D8               	btfss	status,2,c
  8085  002C0E  EF0B  F016         	goto	u3131
  8086  002C12  EF0D  F016         	goto	u3130
  8087  002C16                     u3131:
  8088  002C16  EF14  F016         	goto	l67
  8089  002C1A                     u3130:
  8090  002C1A                     
  8091                           ;LCD_20x4.c: 91:   LCD_Command((pos & 0x0F)|0xD4);
  8092  002C1A  500A               	movf	LCD_String_xy@pos^0,w,c
  8093  002C1C  0B0F               	andlw	15
  8094  002C1E  09D4               	iorlw	212
  8095  002C20  ECF6  F018         	call	_LCD_Command
  8096  002C24  EF14  F016         	goto	l3042
  8097  002C28                     l67:
  8098  002C28                     l3042:
  8099                           
  8100                           ;LCD_20x4.c: 92:  LCD_String(str);
  8101  002C28  C00B  F008         	movff	LCD_String_xy@str,LCD_String@msg
  8102  002C2C  C00C  F009         	movff	LCD_String_xy@str+1,LCD_String@msg+1
  8103  002C30  ECAC  F016         	call	_LCD_String	;wreg free
  8104  002C34  0012               	return		;funcret
  8105  002C36                     __end_of_LCD_String_xy:
  8106                           	callstack 0
  8107                           
  8108 ;; *************** function _LCD_String *****************
  8109 ;; Defined at:
  8110 ;;		line 72 in file "LCD_20x4.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  8113 ;;		 -> hours(10), mins(10), secs(10), SensorMovimiento@buf(20), 
  8114 ;;		 -> STR_6(22), STR_5(22), STR_4(6), STR_3(6), 
  8115 ;;		 -> SensorTemperatura@Temperature(10), STR_1(7), 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8127 ;;      Params:         2       0       0       0       0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8130 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8131 ;;Total ram usage:        2 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    2
  8134 ;; This function calls:
  8135 ;;		_LCD_Char
  8136 ;; This function is called by:
  8137 ;;		_LCD_String_xy
  8138 ;;		_RTC
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text42
  8143  002D58                     __ptext42:
  8144                           	callstack 0
  8145  002D58                     _LCD_String:
  8146                           	callstack 26
  8147  002D58                     
  8148                           ;LCD_20x4.c: 72: void LCD_String(const char *msg);LCD_20x4.c: 73: {;LCD_20x4.c: 74:  whi
      +                          le((*msg)!=0)
  8149  002D58  EFC2  F016         	goto	l2972
  8150  002D5C                     l2968:
  8151                           
  8152                           ;LCD_20x4.c: 75:  {;LCD_20x4.c: 76:    LCD_Char(*msg);
  8153  002D5C  C008  FFF6         	movff	LCD_String@msg,tblptrl
  8154  002D60  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  8155  002D64  6AF8               	clrf	tblptru,c
  8156  002D66  0E07               	movlw	(high __ramtop+-1)
  8157  002D68  64F7               	cpfsgt	tblptrh,c
  8158  002D6A  D003               	bra	u2927
  8159  002D6C  0008               	tblrd		*
  8160  002D6E  50F5               	movf	tablat,w,c
  8161  002D70  D005               	bra	u2920
  8162  002D72                     u2927:
  8163  002D72  CFF6 FFE1          	movff	tblptrl,fsr1l
  8164  002D76  CFF7 FFE2          	movff	tblptrh,fsr1h
  8165  002D7A  50E7               	movf	indf1,w,c
  8166  002D7C                     u2920:
  8167  002D7C  ECE8  F018         	call	_LCD_Char
  8168  002D80                     
  8169                           ;LCD_20x4.c: 77:    msg++;
  8170  002D80  4A08               	infsnz	LCD_String@msg^0,f,c
  8171  002D82  2A09               	incf	(LCD_String@msg+1)^0,f,c
  8172  002D84                     l2972:
  8173                           
  8174                           ;LCD_20x4.c: 74:  while((*msg)!=0)
  8175  002D84  C008  FFF6         	movff	LCD_String@msg,tblptrl
  8176  002D88  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  8177  002D8C  6AF8               	clrf	tblptru,c
  8178  002D8E  0E07               	movlw	(high __ramtop+-1)
  8179  002D90  64F7               	cpfsgt	tblptrh,c
  8180  002D92  D003               	bra	u2937
  8181  002D94  0008               	tblrd		*
  8182  002D96  50F5               	movf	tablat,w,c
  8183  002D98  D005               	bra	u2930
  8184  002D9A                     u2937:
  8185  002D9A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8186  002D9E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8187  002DA2  50E7               	movf	indf1,w,c
  8188  002DA4                     u2930:
  8189  002DA4  0900               	iorlw	0
  8190  002DA6  A4D8               	btfss	status,2,c
  8191  002DA8  EFD8  F016         	goto	u2941
  8192  002DAC  EFDA  F016         	goto	u2940
  8193  002DB0                     u2941:
  8194  002DB0  EFAE  F016         	goto	l2968
  8195  002DB4                     u2940:
  8196  002DB4  0012               	return		;funcret
  8197  002DB6                     __end_of_LCD_String:
  8198                           	callstack 0
  8199                           
  8200 ;; *************** function _LCD_Char *****************
  8201 ;; Defined at:
  8202 ;;		line 60 in file "LCD_20x4.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  char_data       1    wreg     unsigned char 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  char_data       1    6[COMRAM] unsigned char 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0
  8217 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8219 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8220 ;;Total ram usage:        1 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    1
  8223 ;; This function calls:
  8224 ;;		_MSdelay
  8225 ;; This function is called by:
  8226 ;;		_LCD_String
  8227 ;;		_LCD_Custom_Char
  8228 ;;		_SensorTemperatura
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text43
  8233  0031D0                     __ptext43:
  8234                           	callstack 0
  8235  0031D0                     _LCD_Char:
  8236                           	callstack 26
  8237                           
  8238                           ;incstack = 0
  8239                           ;LCD_Char@char_data stored from wreg
  8240  0031D0  6E07               	movwf	LCD_Char@char_data^0,c
  8241  0031D2                     
  8242                           ;LCD_20x4.c: 60: void LCD_Char(char char_data);LCD_20x4.c: 61: {;LCD_20x4.c: 62:  LATD =
      +                           char_data;
  8243  0031D2  C007  FF8C         	movff	LCD_Char@char_data,3980	;volatile
  8244  0031D6                     
  8245                           ;LCD_20x4.c: 63:  LATE1 = 1;
  8246  0031D6  828D               	bsf	3981,1,c	;volatile
  8247  0031D8                     
  8248                           ;LCD_20x4.c: 65:     LATE2 = 1;
  8249  0031D8  848D               	bsf	3981,2,c	;volatile
  8250  0031DA                     
  8251                           ;LCD_20x4.c: 66:  __nop();
  8252  0031DA  F000               	nop	
  8253  0031DC                     
  8254                           ;LCD_20x4.c: 67:  LATE2 = 0;
  8255  0031DC  948D               	bcf	3981,2,c	;volatile
  8256  0031DE                     
  8257                           ;LCD_20x4.c: 68:  MSdelay(3);
  8258  0031DE  0E00               	movlw	0
  8259  0031E0  6E02               	movwf	(MSdelay@val+1)^0,c
  8260  0031E2  0E03               	movlw	3
  8261  0031E4  6E01               	movwf	MSdelay@val^0,c
  8262  0031E6  EC04  F017         	call	_MSdelay	;wreg free
  8263  0031EA  0012               	return		;funcret
  8264  0031EC                     __end_of_LCD_Char:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function _I2C_Stop *****************
  8268 ;; Defined at:
  8269 ;;		line 103 in file "./I2C_Master_File_3.h"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      unsigned char 
  8276 ;; Registers used:
  8277 ;;		wreg
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		_RTC
  8293 ;;		_I2C_Start_Wait
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text44
  8298  003262                     __ptext44:
  8299                           	callstack 0
  8300  003262                     _I2C_Stop:
  8301                           	callstack 29
  8302  003262                     
  8303                           ;./I2C_Master_File_3.h: 104:     PEN = 1;
  8304  003262  84C5               	bsf	4037,2,c	;volatile
  8305  003264                     l244:
  8306  003264  B4C5               	btfsc	4037,2,c	;volatile
  8307  003266  EF37  F019         	goto	u3161
  8308  00326A  EF39  F019         	goto	u3160
  8309  00326E                     u3161:
  8310  00326E  EF32  F019         	goto	l244
  8311  003272                     u3160:
  8312  003272                     
  8313                           ;./I2C_Master_File_3.h: 106:     if(!SSPSTATbits.P);
  8314  003272  50C7               	movf	199,w,c	;volatile
  8315  003274  0012               	return		;funcret
  8316  003276                     __end_of_I2C_Stop:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _LCD_Init *****************
  8320 ;; Defined at:
  8321 ;;		line 28 in file "LCD_20x4.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    2
  8342 ;; This function calls:
  8343 ;;		_LCD_Command
  8344 ;;		_MSdelay
  8345 ;; This function is called by:
  8346 ;;		_main
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text45
  8351  00315A                     __ptext45:
  8352                           	callstack 0
  8353  00315A                     _LCD_Init:
  8354                           	callstack 28
  8355  00315A                     
  8356                           ;LCD_20x4.c: 30:     TRISE = 0;
  8357  00315A  0E00               	movlw	0
  8358  00315C  6E96               	movwf	150,c	;volatile
  8359                           
  8360                           ;LCD_20x4.c: 31:  TRISD = 0x00;
  8361  00315E  0E00               	movlw	0
  8362  003160  6E95               	movwf	149,c	;volatile
  8363  003162                     
  8364                           ;LCD_20x4.c: 33:  MSdelay(20);
  8365  003162  0E00               	movlw	0
  8366  003164  6E02               	movwf	(MSdelay@val+1)^0,c
  8367  003166  0E14               	movlw	20
  8368  003168  6E01               	movwf	MSdelay@val^0,c
  8369  00316A  EC04  F017         	call	_MSdelay	;wreg free
  8370  00316E                     
  8371                           ;LCD_20x4.c: 34:  LCD_Command(0x38);
  8372  00316E  0E38               	movlw	56
  8373  003170  ECF6  F018         	call	_LCD_Command
  8374  003174                     
  8375                           ;LCD_20x4.c: 35:     LCD_Command(0x01);
  8376  003174  0E01               	movlw	1
  8377  003176  ECF6  F018         	call	_LCD_Command
  8378  00317A                     
  8379                           ;LCD_20x4.c: 36:     LCD_Command(0x0c);
  8380  00317A  0E0C               	movlw	12
  8381  00317C  ECF6  F018         	call	_LCD_Command
  8382  003180                     
  8383                           ;LCD_20x4.c: 37:     LCD_Command(0x06);
  8384  003180  0E06               	movlw	6
  8385  003182  ECF6  F018         	call	_LCD_Command
  8386  003186  0012               	return		;funcret
  8387  003188                     __end_of_LCD_Init:
  8388                           	callstack 0
  8389                           
  8390 ;; *************** function _LCD_Command *****************
  8391 ;; Defined at:
  8392 ;;		line 49 in file "LCD_20x4.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  cmd             1    wreg     unsigned char 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  cmd             1    6[COMRAM] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0
  8407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8409 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8410 ;;Total ram usage:        1 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:    1
  8413 ;; This function calls:
  8414 ;;		_MSdelay
  8415 ;; This function is called by:
  8416 ;;		_LCD_Init
  8417 ;;		_LCD_String_xy
  8418 ;;		_LCD_Custom_Char
  8419 ;;		_SensorTemperatura
  8420 ;;		_SensorLuz
  8421 ;;		_LCD_Clear
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text46
  8426  0031EC                     __ptext46:
  8427                           	callstack 0
  8428  0031EC                     _LCD_Command:
  8429                           	callstack 27
  8430                           
  8431                           ;incstack = 0
  8432                           ;LCD_Command@cmd stored from wreg
  8433  0031EC  6E07               	movwf	LCD_Command@cmd^0,c
  8434  0031EE                     
  8435                           ;LCD_20x4.c: 49: void LCD_Command(char cmd );LCD_20x4.c: 50: {;LCD_20x4.c: 51:  LATD = c
      +                          md;
  8436  0031EE  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  8437  0031F2                     
  8438                           ;LCD_20x4.c: 52:  LATE1 = 0;
  8439  0031F2  928D               	bcf	3981,1,c	;volatile
  8440  0031F4                     
  8441                           ;LCD_20x4.c: 54:     LATE2 = 1;
  8442  0031F4  848D               	bsf	3981,2,c	;volatile
  8443  0031F6                     
  8444                           ;LCD_20x4.c: 55:  __nop();
  8445  0031F6  F000               	nop	
  8446  0031F8                     
  8447                           ;LCD_20x4.c: 56:  LATE2 = 0;
  8448  0031F8  948D               	bcf	3981,2,c	;volatile
  8449  0031FA                     
  8450                           ;LCD_20x4.c: 57:  MSdelay(3);
  8451  0031FA  0E00               	movlw	0
  8452  0031FC  6E02               	movwf	(MSdelay@val+1)^0,c
  8453  0031FE  0E03               	movlw	3
  8454  003200  6E01               	movwf	MSdelay@val^0,c
  8455  003202  EC04  F017         	call	_MSdelay	;wreg free
  8456  003206  0012               	return		;funcret
  8457  003208                     __end_of_LCD_Command:
  8458                           	callstack 0
  8459                           
  8460 ;; *************** function _MSdelay *****************
  8461 ;; Defined at:
  8462 ;;		line 108 in file "LCD_20x4.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  val             2    0[COMRAM] unsigned int 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  j               2    4[COMRAM] unsigned int 
  8467 ;;  i               2    2[COMRAM] unsigned int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8477 ;;      Params:         2       0       0       0       0       0       0       0       0
  8478 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8480 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8481 ;;Total ram usage:        6 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_LCD_Init
  8487 ;;		_LCD_Command
  8488 ;;		_LCD_Char
  8489 ;;		_SensorTemperatura
  8490 ;;		_SensorLuz
  8491 ;;		_LCD_Clear
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text47
  8496  002E08                     __ptext47:
  8497                           	callstack 0
  8498  002E08                     _MSdelay:
  8499                           	callstack 29
  8500  002E08                     
  8501                           ;LCD_20x4.c: 108: void MSdelay(unsigned int val);LCD_20x4.c: 109: {;LCD_20x4.c: 110:    
      +                            unsigned int i,j;;LCD_20x4.c: 111:         for(i=0;i<=val;i++)
  8502  002E08  0E00               	movlw	0
  8503  002E0A  6E04               	movwf	(MSdelay@i+1)^0,c
  8504  002E0C  0E00               	movlw	0
  8505  002E0E  6E03               	movwf	MSdelay@i^0,c
  8506  002E10  EF1D  F017         	goto	l2698
  8507  002E14                     l2686:
  8508                           
  8509                           ;LCD_20x4.c: 112:             for(j=0;j<165;j++);
  8510  002E14  0E00               	movlw	0
  8511  002E16  6E06               	movwf	(MSdelay@j+1)^0,c
  8512  002E18  0E00               	movlw	0
  8513  002E1A  6E05               	movwf	MSdelay@j^0,c
  8514  002E1C                     l2692:
  8515  002E1C  4A05               	infsnz	MSdelay@j^0,f,c
  8516  002E1E  2A06               	incf	(MSdelay@j+1)^0,f,c
  8517  002E20  5006               	movf	(MSdelay@j+1)^0,w,c
  8518  002E22  E109               	bnz	u2420
  8519  002E24  0EA5               	movlw	165
  8520  002E26  5C05               	subwf	MSdelay@j^0,w,c
  8521  002E28  A0D8               	btfss	status,0,c
  8522  002E2A  EF19  F017         	goto	u2421
  8523  002E2E  EF1B  F017         	goto	u2420
  8524  002E32                     u2421:
  8525  002E32  EF0E  F017         	goto	l2692
  8526  002E36                     u2420:
  8527  002E36  4A03               	infsnz	MSdelay@i^0,f,c
  8528  002E38  2A04               	incf	(MSdelay@i+1)^0,f,c
  8529  002E3A                     l2698:
  8530  002E3A  5003               	movf	MSdelay@i^0,w,c
  8531  002E3C  5C01               	subwf	MSdelay@val^0,w,c
  8532  002E3E  5004               	movf	(MSdelay@i+1)^0,w,c
  8533  002E40  5802               	subwfb	(MSdelay@val+1)^0,w,c
  8534  002E42  B0D8               	btfsc	status,0,c
  8535  002E44  EF26  F017         	goto	u2431
  8536  002E48  EF28  F017         	goto	u2430
  8537  002E4C                     u2431:
  8538  002E4C  EF0A  F017         	goto	l2686
  8539  002E50                     u2430:
  8540  002E50  0012               	return		;funcret
  8541  002E52                     __end_of_MSdelay:
  8542                           	callstack 0
  8543                           
  8544 ;; *************** function _I2C_Init *****************
  8545 ;; Defined at:
  8546 ;;		line 46 in file "./I2C_Master_File_3.h"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;		None
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;		None
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, status,2
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8560 ;;      Params:         0       0       0       0       0       0       0       0       0
  8561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8564 ;;Total ram usage:        0 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; This function calls:
  8567 ;;		Nothing
  8568 ;; This function is called by:
  8569 ;;		_main
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text48
  8574  003208                     __ptext48:
  8575                           	callstack 0
  8576  003208                     _I2C_Init:
  8577                           	callstack 30
  8578  003208                     
  8579                           ;./I2C_Master_File_3.h: 47:     TRISB0 =1;
  8580  003208  8093               	bsf	3987,0,c	;volatile
  8581                           
  8582                           ;./I2C_Master_File_3.h: 48:  TRISB1 =1;
  8583  00320A  8293               	bsf	3987,1,c	;volatile
  8584  00320C                     
  8585                           ;./I2C_Master_File_3.h: 49:  SSPSTAT=80;
  8586  00320C  0E50               	movlw	80
  8587  00320E  6EC7               	movwf	199,c	;volatile
  8588                           
  8589                           ;./I2C_Master_File_3.h: 50:     SSPCON1=0x28;
  8590  003210  0E28               	movlw	40
  8591  003212  6EC6               	movwf	198,c	;volatile
  8592                           
  8593                           ;./I2C_Master_File_3.h: 52:  SSPCON2=0;
  8594  003214  0E00               	movlw	0
  8595  003216  6EC5               	movwf	197,c	;volatile
  8596                           
  8597                           ;./I2C_Master_File_3.h: 53:     SSPADD=((8000000/(4*100000))-1);
  8598  003218  0E13               	movlw	19
  8599  00321A  6EC8               	movwf	200,c	;volatile
  8600  00321C                     
  8601                           ;./I2C_Master_File_3.h: 54:     SSPIE=1;
  8602  00321C  869D               	bsf	3997,3,c	;volatile
  8603  00321E                     
  8604                           ;./I2C_Master_File_3.h: 55:     SSPIF=0;
  8605  00321E  969E               	bcf	3998,3,c	;volatile
  8606  003220  0012               	return		;funcret
  8607  003222                     __end_of_I2C_Init:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _ADC_Init *****************
  8611 ;; Defined at:
  8612 ;;		line 22 in file "PIC18F4550_ADC_Source_File.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8626 ;;      Params:         0       0       0       0       0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8630 ;;Total ram usage:        0 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		_main
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text49
  8640  003222                     __ptext49:
  8641                           	callstack 0
  8642  003222                     _ADC_Init:
  8643                           	callstack 30
  8644  003222                     
  8645                           ;PIC18F4550_ADC_Source_File.c: 24:     TRISA = 0xff;
  8646  003222  6892               	setf	146,c	;volatile
  8647  003224                     
  8648                           ;PIC18F4550_ADC_Source_File.c: 25:     ADCON0 = 0x85;
  8649  003224  0E85               	movlw	133
  8650  003226  6EC2               	movwf	194,c	;volatile
  8651                           
  8652                           ;PIC18F4550_ADC_Source_File.c: 26:     ADCON1 = 0xC0;
  8653  003228  0EC0               	movlw	192
  8654  00322A  6EC1               	movwf	193,c	;volatile
  8655                           
  8656                           ;PIC18F4550_ADC_Source_File.c: 27:     ADCON2 = 0x92;
  8657  00322C  0E92               	movlw	146
  8658  00322E  6EC0               	movwf	192,c	;volatile
  8659                           
  8660                           ;PIC18F4550_ADC_Source_File.c: 28:     ADRESH = 0;
  8661  003230  0E00               	movlw	0
  8662  003232  6EC4               	movwf	196,c	;volatile
  8663                           
  8664                           ;PIC18F4550_ADC_Source_File.c: 29:     ADRESL = 0;
  8665  003234  0E00               	movlw	0
  8666  003236  6EC3               	movwf	195,c	;volatile
  8667  003238  0012               	return		;funcret
  8668  00323A                     __end_of_ADC_Init:
  8669                           	callstack 0
  8670                           
  8671                           	psect	rparam
  8672  0000                     
  8673                           	psect	idloc
  8674                           
  8675                           ;Config register IDLOC0 @ 0x200000
  8676                           ;	unspecified, using default values
  8677  200000                     	org	2097152
  8678  200000  FF                 	db	255
  8679                           
  8680                           ;Config register IDLOC1 @ 0x200001
  8681                           ;	unspecified, using default values
  8682  200001                     	org	2097153
  8683  200001  FF                 	db	255
  8684                           
  8685                           ;Config register IDLOC2 @ 0x200002
  8686                           ;	unspecified, using default values
  8687  200002                     	org	2097154
  8688  200002  FF                 	db	255
  8689                           
  8690                           ;Config register IDLOC3 @ 0x200003
  8691                           ;	unspecified, using default values
  8692  200003                     	org	2097155
  8693  200003  FF                 	db	255
  8694                           
  8695                           ;Config register IDLOC4 @ 0x200004
  8696                           ;	unspecified, using default values
  8697  200004                     	org	2097156
  8698  200004  FF                 	db	255
  8699                           
  8700                           ;Config register IDLOC5 @ 0x200005
  8701                           ;	unspecified, using default values
  8702  200005                     	org	2097157
  8703  200005  FF                 	db	255
  8704                           
  8705                           ;Config register IDLOC6 @ 0x200006
  8706                           ;	unspecified, using default values
  8707  200006                     	org	2097158
  8708  200006  FF                 	db	255
  8709                           
  8710                           ;Config register IDLOC7 @ 0x200007
  8711                           ;	unspecified, using default values
  8712  200007                     	org	2097159
  8713  200007  FF                 	db	255
  8714                           
  8715                           	psect	config
  8716                           
  8717                           ;Config register CONFIG1L @ 0x300000
  8718                           ;	PLL Prescaler Selection bits
  8719                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8720                           ;	System Clock Postscaler Selection bits
  8721                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8722                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8723                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8724  300000                     	org	3145728
  8725  300000  00                 	db	0
  8726                           
  8727                           ;Config register CONFIG1H @ 0x300001
  8728                           ;	Oscillator Selection bits
  8729                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8730                           ;	Fail-Safe Clock Monitor Enable bit
  8731                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8732                           ;	Internal/External Oscillator Switchover bit
  8733                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8734  300001                     	org	3145729
  8735  300001  09                 	db	9
  8736                           
  8737                           ;Config register CONFIG2L @ 0x300002
  8738                           ;	Power-up Timer Enable bit
  8739                           ;	PWRT = OFF, PWRT disabled
  8740                           ;	Brown-out Reset Enable bits
  8741                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8742                           ;	Brown-out Reset Voltage bits
  8743                           ;	BORV = 3, Minimum setting 2.05V
  8744                           ;	USB Voltage Regulator Enable bit
  8745                           ;	VREGEN = OFF, USB voltage regulator disabled
  8746  300002                     	org	3145730
  8747  300002  19                 	db	25
  8748                           
  8749                           ;Config register CONFIG2H @ 0x300003
  8750                           ;	Watchdog Timer Enable bit
  8751                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8752                           ;	Watchdog Timer Postscale Select bits
  8753                           ;	WDTPS = 32768, 1:32768
  8754  300003                     	org	3145731
  8755  300003  1E                 	db	30
  8756                           
  8757                           ; Padding undefined space
  8758  300004                     	org	3145732
  8759  300004  FF                 	db	255
  8760                           
  8761                           ;Config register CONFIG3H @ 0x300005
  8762                           ;	CCP2 MUX bit
  8763                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8764                           ;	PORTB A/D Enable bit
  8765                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8766                           ;	Low-Power Timer 1 Oscillator Enable bit
  8767                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8768                           ;	MCLR Pin Enable bit
  8769                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8770  300005                     	org	3145733
  8771  300005  01                 	db	1
  8772                           
  8773                           ;Config register CONFIG4L @ 0x300006
  8774                           ;	Stack Full/Underflow Reset Enable bit
  8775                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8776                           ;	Single-Supply ICSP Enable bit
  8777                           ;	LVP = OFF, Single-Supply ICSP disabled
  8778                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8779                           ;	ICPRT = OFF, ICPORT disabled
  8780                           ;	Extended Instruction Set Enable bit
  8781                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8782                           ;	Background Debugger Enable bit
  8783                           ;	DEBUG = 0x1, unprogrammed default
  8784  300006                     	org	3145734
  8785  300006  81                 	db	129
  8786                           
  8787                           ; Padding undefined space
  8788  300007                     	org	3145735
  8789  300007  FF                 	db	255
  8790                           
  8791                           ;Config register CONFIG5L @ 0x300008
  8792                           ;	Code Protection bit
  8793                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8794                           ;	Code Protection bit
  8795                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8796                           ;	Code Protection bit
  8797                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8798                           ;	Code Protection bit
  8799                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8800  300008                     	org	3145736
  8801  300008  0F                 	db	15
  8802                           
  8803                           ;Config register CONFIG5H @ 0x300009
  8804                           ;	Boot Block Code Protection bit
  8805                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8806                           ;	Data EEPROM Code Protection bit
  8807                           ;	CPD = OFF, Data EEPROM is not code-protected
  8808  300009                     	org	3145737
  8809  300009  C0                 	db	192
  8810                           
  8811                           ;Config register CONFIG6L @ 0x30000A
  8812                           ;	Write Protection bit
  8813                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8814                           ;	Write Protection bit
  8815                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8816                           ;	Write Protection bit
  8817                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8818                           ;	Write Protection bit
  8819                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8820  30000A                     	org	3145738
  8821  30000A  0F                 	db	15
  8822                           
  8823                           ;Config register CONFIG6H @ 0x30000B
  8824                           ;	Configuration Register Write Protection bit
  8825                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8826                           ;	Boot Block Write Protection bit
  8827                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8828                           ;	Data EEPROM Write Protection bit
  8829                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8830  30000B                     	org	3145739
  8831  30000B  E0                 	db	224
  8832                           
  8833                           ;Config register CONFIG7L @ 0x30000C
  8834                           ;	Table Read Protection bit
  8835                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8836                           ;	Table Read Protection bit
  8837                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8838                           ;	Table Read Protection bit
  8839                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8840                           ;	Table Read Protection bit
  8841                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8842  30000C                     	org	3145740
  8843  30000C  0F                 	db	15
  8844                           
  8845                           ;Config register CONFIG7H @ 0x30000D
  8846                           ;	Boot Block Table Read Protection bit
  8847                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8848  30000D                     	org	3145741
  8849  30000D  40                 	db	64
  8850                           tosu	equ	0xFFF
  8851                           tosh	equ	0xFFE
  8852                           tosl	equ	0xFFD
  8853                           stkptr	equ	0xFFC
  8854                           pclatu	equ	0xFFB
  8855                           pclath	equ	0xFFA
  8856                           pcl	equ	0xFF9
  8857                           tblptru	equ	0xFF8
  8858                           tblptrh	equ	0xFF7
  8859                           tblptrl	equ	0xFF6
  8860                           tablat	equ	0xFF5
  8861                           prodh	equ	0xFF4
  8862                           prodl	equ	0xFF3
  8863                           indf0	equ	0xFEF
  8864                           postinc0	equ	0xFEE
  8865                           postdec0	equ	0xFED
  8866                           preinc0	equ	0xFEC
  8867                           plusw0	equ	0xFEB
  8868                           fsr0h	equ	0xFEA
  8869                           fsr0l	equ	0xFE9
  8870                           wreg	equ	0xFE8
  8871                           indf1	equ	0xFE7
  8872                           postinc1	equ	0xFE6
  8873                           postdec1	equ	0xFE5
  8874                           preinc1	equ	0xFE4
  8875                           plusw1	equ	0xFE3
  8876                           fsr1h	equ	0xFE2
  8877                           fsr1l	equ	0xFE1
  8878                           bsr	equ	0xFE0
  8879                           indf2	equ	0xFDF
  8880                           postinc2	equ	0xFDE
  8881                           postdec2	equ	0xFDD
  8882                           preinc2	equ	0xFDC
  8883                           plusw2	equ	0xFDB
  8884                           fsr2h	equ	0xFDA
  8885                           fsr2l	equ	0xFD9
  8886                           status	equ	0xFD8

Data Sizes:
    Strings     118
    Constant    0
    Data        171
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     86     146
    BANK1           256      0     187
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), SensorMovimiento@buf(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), SensorMovimiento@buf(BANK0[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), 
		 -> STR_8(CODE[7]), STR_7(CODE[7]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), 
		 -> STR_8(CODE[7]), STR_7(CODE[7]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), SensorTemperatura@Temperature(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[4]), STR_13(CODE[4]), STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[4]), STR_13(CODE[4]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[4]), STR_13(CODE[4]), STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), SensorTemperatura@Temperature(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1397_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), SensorTemperatura@Temperature(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), SensorTemperatura@Temperature(BANK0[10]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character2(BANK0[8]), character1(BANK0[8]), 

    LCD_String_xy@str	PTR const unsigned char  size(2) Largest target is 22
		 -> hours(BANK0[10]), SensorMovimiento@buf(BANK0[20]), STR_6(CODE[22]), STR_5(CODE[22]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), SensorTemperatura@Temperature(BANK0[10]), STR_1(CODE[7]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 22
		 -> hours(BANK0[10]), mins(BANK0[10]), secs(BANK0[10]), SensorMovimiento@buf(BANK0[20]), 
		 -> STR_6(CODE[22]), STR_5(CODE[22]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> SensorTemperatura@Temperature(BANK0[10]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _SensorMovimiento->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _SensorLuz->___fldiv
    ___xxtofl->_ADC_Read
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_SensorMovimiento
    _main->_SensorTemperatura
    _SensorTemperatura->_sprintf
    _RTC->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66229
                           _ADC_Init
                           _I2C_Init
                           _LCD_Init
                                _RTC
                          _SensorLuz
                   _SensorMovimiento
                  _SensorTemperatura
 ---------------------------------------------------------------------------------
 (1) _SensorTemperatura                                   62    62      0   29386
                                             24 BANK0     62    62      0
                           _ADC_Read
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _MSdelay
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1730
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _SensorMovimiento                                    86    86      0    5593
                                              0 BANK0     86    86      0
                      _LCD_String_xy
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1474
                                             12 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     552
                                              4 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _SensorLuz                                           39    39      0    9516
                                              0 BANK0     39    39      0
                           _ADC_Read
                        _LCD_Command
                      _LCD_String_xy
                            _MSdelay
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              8 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             22 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             47 COMRAM    25    17      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTC                                                  0     0      0   20312
                           _I2C_Stop
                         _LCD_String
                      _LCD_String_xy
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   16009
                                              6 BANK0     18    10      8
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15198
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   14836
                                             66 COMRAM    27    21      6
                               _ctoa
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5479
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     1      3    3131
                                              9 COMRAM     4     1      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     995
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     722
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1422
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     722
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _RTC
     _I2C_Stop
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       ___fltol (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _SensorLuz
     _ADC_Read
     _LCD_Command
       _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     ___fldiv
       _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
   _SensorMovimiento
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
   _SensorTemperatura
     _ADC_Read
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
     _LCD_Custom_Char
       _LCD_Char
         _MSdelay
       _LCD_Command
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     ___fldiv
       _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fltol
     ___xxtofl
       _ADC_Read (ARG)
     _memset
     _sprintf
       ___fltol (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BB       7       73.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      92       5       91.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      20        0.0%
DATA                 0      0     1AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Dec 15 10:21:05 2020

                        ___fldiv@aexp 0048                          ___fldiv@bexp 0047  
                  __size_of_I2C_Ready 0012                          ___fldiv@sign 0040  
                  __size_of_I2C_Start 002E                          ?_LCD_Command 0001  
                         _SSPSTATbits 000FC7                    __size_of_I2C_Write 0022  
                                  l21 3238                                    l24 2A46  
                                  l27 2A72                                    l52 3206  
                                  l61 2DB4                                    l46 3186  
                                  l55 31EA                                    l71 2C34  
                                  l67 2C28                                    l85 2E50  
                                  l77 2E98                                    _GO 007E11  
                         ?_LCD_String 0008                       _LCD_Custom_Char 2E52  
                                 l200 3022                                   l202 3030  
                                 l211 3276                                   l204 3050  
                                 l213 3284                                   l205 3056  
                                 l214 3286                                   l230 3110  
                                 l208 3220                                   l232 312A  
                                 l305 1B5C                                   l235 3130  
                                 l244 3264                                   l252 31CE  
                                 l228 3102                                   l324 20BE  
                                 l316 203E                                   l332 1C48  
                                 l308 1BA0                                   l237 313E  
                                 l341 1CE2                                   l246 3272  
                                 l262 323E                                   l350 1D7C  
                                 l239 3158                                   l327 2102  
                                 l248 3274                                   l256 3252  
                                 l265 324C                                   l337 1C04  
                                 l362 2EDE                                   l346 1C9E  
                                 l259 3260                                   l355 1D38  
                                 l292 1B10                                   l365 2BA6  
                                 l359 1DA4                                   l633 2728  
                                 l297 1AC0                                   l482 228A  
                                 l638 276E                                   l495 2564  
                                 l665 266A                                   l950 103A  
                                 l952 0E9A                                   l961 0EE0  
                                 l963 0F58                                   l955 0E5E  
                                 l964 0F46                                   l982 093C  
                                 l991 0BAA                                   l992 0B98  
                                 l986 0CA0                                   l989 0B32  
                                 l999 0C62                                   _PEN 007E2A  
                                 _RTC 2B10                                   _abs 2F64  
                     __end_of_I2C_Ack 3262                                   _pad 2912  
                                 _min 00C0                                   _sec 00C2  
                                 wreg 000FE8                          ___flmul@aexp 0028  
                        ___flmul@bexp 0029                          ___flmul@sign 0023  
                        ___flmul@temp 002E                          ___flmul@prod 002A  
                                ?_RTC 0001                          ___fltol@exp1 000A  
                                l1110 2846                                  l1030 1E94  
                                l1023 1DFC                                  l1200 30C6  
                                l1105 27D6                                  l1026 1F58  
                                l1043 2400                                  ?_abs 0013  
                                l1108 2818                                  l1116 13E6  
                                l1141 1662                                  l1037 1EF0  
                                l1118 13EE                                  l1150 1700  
                                l1215 2910                                  l1223 2F22  
                                l1143 166A                                  l3000 3158  
                                l1136 1628                                  l1056 2E06  
                                l1233 31AC                                  l1226 3298  
                                l1250 2D4E                                  l3010 2C98  
                                l1171 1344                                  l1092 299A  
                                l1164 189E                                  l3012 2CA0  
                                l3020 2A54                                  l3100 23E4  
                                l1245 30FC                                  l1261 308E  
                                l3030 2BC8                                  l3110 2E9C  
                                l1094 29D6                                  l1166 1902  
                                l3014 2CAE                                  l3022 2A6A  
                                l3006 2F24                                  l3102 23EA  
                                l1191 2FA2                                  l1255 2D56  
                                l1183 2CF0                                  l1239 2F62  
                                l2240 3222                                  l3040 2C1A  
                                l3032 2BDA                                  l3112 2EAE  
                                l1184 2CF8                                  l3016 2CD4  
                                l3200 0E98                                  l3120 0CAE  
                                l3008 2F34                                  l3104 23EE  
                                l1089 2958                                  l2242 3224  
                                l3034 2BE8                                  l3042 2C28  
                                l3026 2BAA                                  l3114 2EBE  
                                l1194 301C                                  l3018 29D8  
                                l3210 0EDE                                  l3202 0EAA  
                                l3130 0CEE                                  l3122 0CBC  
                                l3106 3188                                  l2260 321C  
                                l3060 3262                                  l3036 2BFA  
                                l3028 2BBA                                  l3116 2ECE  
                                l1188 2F9A                                  l3220 0F3E  
                                l3204 0EC0                                  l3212 0EF0  
                                l3140 0D14                                  l3132 0CF0  
                                l3124 0CBE                                  l3300 0986  
                                l3044 2E54                                  l2262 321E  
                                l3038 2C08                                  l3070 2DF4  
                                l3062 2DB6                                  l3230 0FAC  
                                l3214 0EFE                                  l3206 0EC6  
                                l3150 0D54                                  l3142 0D22  
                                l3126 0CCE                                  l3134 0CF8  
                                l3118 0CA2                                  l3310 09D8  
                                l3302 099C                                  l3054 2E74  
                                l3046 2E64                                  l2256 3208  
                                l2600 226A                                  l3064 2DC8  
                                l3240 1016                                  l3224 0F68  
                                l3232 0FB0                                  l3216 0F02  
                                l3208 0ED0                                  l3160 0D94  
                                l3152 0D56                                  l3144 0D24  
                                l3136 0D08                                  l3128 0CDE  
                                l3400 2716                                  l3320 0A1E  
                                l3312 09E6                                  l3304 09A8  
                                l3056 2E86                                  l3048 2E70  
                                l3080 22B6                                  l2258 320C  
                                l2530 2876                                  l2610 2434  
                                l3066 2DD0                                  l3242 101A  
                                l3234 0FCA                                  l3226 0F74  
                                l3218 0F10                                  l3170 0DC4  
                                l3162 0D9C                                  l3146 0D34  
                                l3154 0D5E                                  l3138 0D0E  
                                l3402 2766                                  l3330 0A8C  
                                l3322 0A38                                  l3314 09F2  
                                l3306 09C0                                  l3058 2E88  
                                l3410 257C                                  l3090 235E  
                                l3074 228C                                  l3500 3162  
                                l2700 3276                                  l2532 2894  
                                l2524 2848                                  l2620 248C  
                                l2612 2438                                  l2604 2402  
                                l2540 2EEC                                  l3068 2DD8  
                                l3244 1028                                  l3236 0FE0  
                                l3228 0F82                                  l3180 0E02  
                                l3172 0DC4                                  l3164 0DA0  
                                l3156 0D6E                                  l3148 0D44  
                                l3404 276C                                  l3340 0B22  
                                l3332 0AB6                                  l3324 0A48  
                                l3316 0A02                                  l3308 09CC  
                                l3260 0892                                  l3420 25CC  
                                l3092 238A                                  l3084 22EC  
                                l3502 316E                                  l2534 28CA  
                                l2526 285A                                  l2710 27AA  
                                l2702 2770                                  l2630 250E  
                                l2622 24A0                                  l2614 2446  
                                l2606 2406                                  l2542 2EFE  
                                l2550 30D8                                  l3510 2B10  
                                l3246 102E                                  l3238 0FFA  
                                l3190 0E4E                                  l3182 0E12  
                                l3158 0D84                                  l3350 0B62  
                                l3342 0B30                                  l3334 0AEC  
                                l3326 0A64                                  l3318 0A0E  
                                l3270 08CA                                  l3262 0894  
                                l3430 25F6                                  l3422 25D0  
                                l3414 2590                                  l3086 2344  
                                l3078 22AA                                  l3504 3174  
                                l2528 286C                                  l2720 27F6  
                                l2712 27BC                                  l2704 2784  
                                l2560 2104                                  l2624 24AE  
                                l2632 2514                                  l2616 2466  
                                l2608 2414                                  l2544 2F02  
                                l2552 30F0                                  l2640 2912  
                                l2800 1680                                  l3520 2B5E  
                                l3512 2B16                                  l3248 1030  
                                l3192 0E5C                                  l3184 0E22  
                                l3176 0DD8                                  l3168 0DB4  
                                l3360 0BD4                                  l3352 0B90  
                                l3344 0B42                                  l3336 0AFA  
                                l3328 0A70                                  l3280 08F6  
                                l3272 08DA                                  l3264 08A4  
                                l3256 0878                                  l3600 1BA8  
                                l3440 261E                                  l3432 2600  
                                l3424 25DE                                  l3416 25BA  
                                l3408 2566                                  l3096 23A4  
                                l3506 317A                                  l2722 27FA  
                                l2706 2790                                  l2570 2148  
                                l2562 2108                                  l2634 2524  
                                l2626 24DC                                  l2618 2484  
                                l2538 2EE0                                  l2546 30C8  
                                l2650 2964                                  l2642 2922  
                                l2730 1346                                  l2810 16C0  
                                l2802 1688                                  l3522 2B7C  
                                l3514 2B1A                                  l3194 0E68  
                                l3186 0E2A                                  l3178 0DF2  
                                l3370 0C4A                                  l3362 0BFE  
                                l3346 0B50                                  l3338 0B18  
                                l3290 094C                                  l3282 0906  
                                l3274 08E0                                  l3266 08B4  
                                l3258 0884                                  l3610 1BB2  
                                l3602 1BAA                                  l3442 262A  
                                l3434 260A                                  l3418 25BC  
                                l3098 23D8                                  l3530 1908  
                                l3508 3180                                  l2724 2828  
                                l2716 27CE                                  l2708 279C  
                                l2580 219E                                  l2572 2168  
                                l2564 2116                                  l2636 2544  
                                l2628 24FC                                  l2548 30D4  
                                l2652 2978                                  l2644 2936  
                                l2740 13C0                                  l2732 1366  
                                l2556 3058                                  l2820 1734  
                                l2812 16C8                                  l2804 16A8  
                                l2900 10A8                                  l3524 2B8E  
                                l3516 2B24                                  l3196 0E86  
                                l3188 0E3A                                  l3372 0C66  
                                l3380 0C8C                                  l3356 0BBA  
                                l3364 0C02                                  l3348 0B54  
                                l3292 095C                                  l3284 0916  
                                l3276 08E6                                  l3268 08C4  
                                l3460 1E22                                  l3452 1DA8  
                                l3700 205E                                  l3620 1BFA  
                                l3612 1BC4                                  l3604 1BAC  
                                l3444 263A                                  l3540 19F4  
                                l3532 191A                                  l2726 283A  
                                l2718 27E2                                  l2590 2220  
                                l2582 21B2                                  l2574 216C  
                                l2566 2136                                  l2662 2F64  
                                l2654 297C                                  l2646 2944  
                                l2750 141C                                  l2742 13DA  
                                l2734 138E                                  l2670 2FE2  
                                l2822 1746                                  l2830 17A6  
                                l2814 16E4                                  l2806 16B0  
                                l2910 113E                                  l2902 10DA  
                                l3526 2B9A                                  l3518 2B40  
                                l3198 0E88                                  l3390 26AA  
                                l3382 0C90                                  l3374 0C76  
                                l3366 0C1C                                  l3358 0BC6  
                                l3286 0926                                  l3278 08F4  
                                l3470 1E7C                                  l3454 1DB8  
                                l3710 20A2                                  l3702 2062  
                                l3630 1C28                                  l3614 1BD2  
                                l3606 1BAE                                  l3446 264A  
                                l3550 1A8A                                  l3542 1A10  
                                l3534 1972                                  l2592 2222  
                                l2584 21C0                                  l2576 2178  
                                l2568 213A                                  l2664 2F7E  
                                l2656 29AA                                  l2648 2950  
                                l2760 14BC                                  l2752 1424  
                                l2744 13F6                                  l2736 13AE  
                                l2680 2D42                                  l2840 183C  
                                l2832 17B6                                  l2816 16F4  
                                l2808 16BA                                  l2920 1206  
                                l2912 1186                                  l3392 26D8  
                                l3376 0C84                                  l3368 0C30  
                                l3296 0970                                  l3288 092C  
                                l3480 1EE0                                  l3472 1E7E  
                                l3464 1E36                                  l3456 1DC6  
                                l3720 20DE                                  l3712 20B4  
                                l3704 207E                                  l3640 1C82  
                                l3632 1C4A                                  l3616 1BD4  
                                l3608 1BB0                                  l3448 265A  
                                l3552 1A98                                  l3544 1A42  
                                l3536 19A6                                  l3528 1904  
                                l2594 2234                                  l2586 21D2  
                                l2578 2196                                  l2658 29BE  
                                l2770 1578                                  l2762 14C2  
                                l2754 142E                                  l2746 1408  
                                l2738 13BE                                  l2666 3090  
                                l2674 2CFA                                  l2850 18B4  
                                l2842 185A                                  l2834 17BC  
                                l2826 1780                                  l2922 121C  
                                l2930 12A2                                  l2906 10F6  
                                l3394 26E8                                  l3386 266C  
                                l3378 0C86                                  l3298 097C  
                                l3490 1F38                                  l3482 1EFE  
                                l3474 1E8A                                  l3466 1E3E  
                                l3458 1E0C                                  l3722 20E2  
                                l3706 208E                                  l3650 1CBE  
                                l3642 1C94                                  l3634 1C5E  
                                l3626 1C12                                  l3618 1BE8  
                                l3570 1B00                                  l3554 1A9E  
                                l3546 1A74                                  l3538 19E2  
                                l2692 2E1C                                  l2684 2E08  
                                l2860 31D6                                  l2588 2200  
                                l2596 223A                                  l2780 15CA  
                                l2772 1592                                  l2756 1434  
                                l2764 1526                                  l2748 1416  
                                l2852 18C4                                  l2844 1874  
                                l2836 17C2                                  l2828 1792  
                                l2932 12C6                                  l2940 12F4  
                                l2924 122A                                  l2916 11BE  
                                l2908 111A                                  l3396 26F6  
                                l3388 269A                                  l3492 1F46  
                                l3484 1F00                                  l3476 1EC6  
                                l3468 1E4A                                  l3708 20A0  
                                l3660 1D08                                  l3652 1CC2  
                                l3636 1C6C                                  l3628 1C24  
                                l3580 1B40                                  l3572 1B14  
                                l3564 1ACE                                  l3556 1AA4  
                                l3548 1A78                                  l3740 2FAC  
                                l2694 2E20                                  l2686 2E14  
                                l2862 31D8                                  l2870 324E  
                                l2598 224A                                  l2782 15DC  
                                l2766 1540                                  l2774 15A2  
                                l2758 14B6                                  l2678 2D30  
                                l2854 18DA                                  l2846 188E  
                                l2838 1820                                  l2942 1302  
                                l2934 12D4                                  l2926 1266  
                                l2918 11E2                                  l3398 2708  
                                l3494 1F48                                  l3486 1F04  
                                l3478 1ED2                                  l3718 20CC  
                                l3670 1D46                                  l3662 1D1C  
                                l3654 1CE4                                  l3638 1C6E  
                                l3590 1B7C                                  l3582 1B52  
                                l3574 1B26                                  l3566 1AE0  
                                l3558 1AB6                                  l3750 2FBC  
                                l3742 2FB0                                  ?_pad 0011  
                                l2696 2E36                                  l2960 31F6  
                                l2864 31DA                                  l2872 323A  
                                l2880 31C6                                  l2784 15E8  
                                l2776 15B4                                  l2768 155E  
                                l2848 18AE                                  l2792 162A  
                                l2936 12E8                                  l3488 1F28  
                                l3680 1F5A                                  l3672 1D58  
                                l3664 1D2E                                  l3656 1CF8  
                                l3648 1CAC                                  l3592 1B80  
                                l3576 1B34                                  l3568 1AE4  
                                l3760 2FC6                                  l3752 2FBE  
                                l3744 2FB4                                  l3736 2FA4  
                                l2698 2E3A                                  l2962 31F8  
                                l2954 31EE                                  l3498 315A  
                                l2866 31DC                                  l2858 31D2  
                                l2970 2D80                                  l2874 31B0  
                                l2786 15F0                                  l2778 15C4  
                                l2794 163A                                  l2946 130E  
                                l2890 103C                                  l3690 2022  
                                l3682 1F60                                  l3674 1D5C  
                                l3658 1D06                                  l3578 1B3A  
                                l3762 2FCA                                  l3754 2FC0  
                                l3746 2FB8                                  l3738 2FA8  
                                l2964 31FA                                  l2956 31F2  
                                l2868 31DE                                  l2972 2D84  
                                l2980 304C                                  l2876 31B4  
                                l2788 1600                                  l2796 163C  
                                l2948 1332                                  l2892 1060  
                                l3692 2034                                  l3684 1FDC  
                                l3676 1D7E                                  l3596 1BA2  
                                l3588 1B6A                                  l3764 2FCE  
                                l3756 2FC2                                  l3748 2FBA  
                                l2958 31F4                                  l2966 2D58  
                                l2982 3054                                  l2974 3020  
                                l2886 31CC                                  l2878 31B8  
                                l2990 3124                                  l2798 1656  
                                l2894 106E                                  l3686 200E  
                                l3678 1D92                                  l3598 1BA6  
                                l3766 2FD2                                  l3758 2FC4  
                                l2968 2D5C                                  l2976 3034  
                                l2896 1080                                  l3688 2020  
                                l3768 2FD6                                  l2978 3044  
                                l2994 312E                                  l2986 3100  
                                l2898 1084                                  l3698 204C  
                                l2998 3152                                  _ADON 007E10  
                                STR_1 084A                                  STR_2 0851  
                                STR_3 086D                                  STR_4 086D  
                                STR_5 0817                                  STR_6 0801  
                                STR_7 0835                                  STR_8 0858  
                                STR_9 083C                                  u2100 286C  
                                u2101 2868                                  u2110 2894  
                                u2111 2890                                  u3000 314E  
                                u2120 28CA                                  u2200 2196  
                                u3001 314A                                  u2121 28C6  
                                u2201 2192                                  u2210 21C0  
                                u2130 2F22                                  u3010 2F62  
                                u2211 21BC                                  u2131 2F1E  
                                u3011 2F5E                                  u3100 2BBA  
                                u2220 2200                                  u2140 30F0  
                                u2300 2922                                  u3020 2CF0  
                                u3101 2BB6                                  u2221 21FC  
                                u2141 30EC                                  u2301 291E  
                                u3021 2CEC                                  u3110 2BDA  
                                u2230 224A                                  u2310 2944  
                                u2150 3088                                  u3030 2A02  
                                u3111 2BD6                                  u2231 2246  
                                u2311 2940                                  u2151 3082  
                                u3031 29FA                                  u3120 2BFA  
                                u2240 2414                                  u2320 299A  
                                u2160 308A                                  u2400 2D2C  
                                u3200 23A0                                  _LATD 000F8C  
                                u3121 2BF6                                  u2241 2410  
                                u2321 2996                                  u4001 1C8C  
                                u3201 239C                                  u3130 2C1A  
                                u2090 285A                                  u2170 2116  
                                u2250 2446                                  u2330 29AA  
                                u2410 2D42                                  u4010 1CAC  
                                u3210 2400                                  u3131 2C16  
                                u2091 2856                                  u2171 2112  
                                u2251 2442                                  u2331 29A6  
                                u2411 2D3E                                  u4011 1CA8  
                                u3211 23FC                                  u2420 2E36  
                                u2180 2148                                  u2260 2484  
                                u2340 2F7E                                  u2500 1376  
                                u3060 2A2A                                  u3300 0E3A  
                                u3220 0CBC                                  u4100 207E  
                                u4020 1CDE                                  u3140 2E64  
                                u2421 2E32                                  u2181 2144  
                                u2261 2480                                  u2341 2F7A  
                                u2501 1370                                  u3061 2A22  
                                u3301 0E36                                  u3221 0CB8  
                                u4101 207A                                  u4021 1CDA  
                                u3141 2E60                                  u2430 2E50  
                                u2270 24AE                                  u2510 1378  
                                u2350 30C0                                  u3054 2A12  
                                u3310 0E5C                                  u3230 0CCE  
                                u4030 1D06                                  u3150 2E98  
                                u2431 2E4C                                  u2191 2172  
                                u2271 24AA                                  u2351 30BA  
                                u3055 2A0E                                  u3311 0E58  
                                u3231 0CCA                                  u4111 20AC  
                                u4031 1D02                                  u3151 2E94  
                                u3160 3272                                  u2440 3284  
                                u2280 24DC                                  u2600 1592  
                                u2520 138E                                  u2360 30C2  
                                u3048 2A04                                  u3400 0F68  
                                u3320 0E86                                  u3240 0CDE  
                                u4120 20CC                                  u3161 326E  
                                u2441 3280                                  u2281 24D8  
                                u2601 158E                                  u2521 138A  
                                u3401 0F64                                  u3321 0E82  
                                u3241 0CDA                                  u4121 20C8  
                                u4041 1D26                                  u2450 2784  
                                u2290 2524                                  u2610 15A2  
                                u2530 13BE                                  u2370 3016  
                                u3090 2A54                                  u3410 0F82  
                                u3330 0EAA                                  u3250 0D22  
                                u4130 20FE                                  u4050 1D46  
                                u3170 22A6                                  u2451 2780  
                                u2291 2520                                  u2611 159E  
                                u2531 13BA                                  u2371 3010  
                                u3091 2A50                                  u3411 0F7E  
                                u3331 0EA6                                  u3251 0D1E  
                                u4131 20FA                                  u4051 1D42  
                                u3171 22A2                                  u2460 27AA  
                                u2620 15B4                                  u2540 13DA  
                                u2380 3018                                  u2700 1730  
                                u3084 2A3A                                  u3420 0FCA  
                                u3340 0EC0                                  u3260 0D34  
                                u3500 0916                                  u4060 1D78  
                                u3180 22E8                                  u2461 27A6  
                                u2621 15B0                                  u2541 13D6  
                                u3085 2A36                                  u3421 0FC6  
                                u3341 0EBC                                  u3261 0D30  
                                u3501 0912                                  u4061 1D74  
                                u3181 22E4                                  u2470 27CA  
                                u2630 15C4                                  u2550 1408  
                                u2390 2D2A                                  u2710 1746  
                                u3078 2A2C                                  u3430 0FFA  
                                u3350 0EDE                                  u3270 0D44  
                                u3510 094C                                  u4070 200E  
                                u3190 235A                                  u2471 27C6  
                                u2631 15C0                                  u2551 1404  
                                u2391 2D24                                  u2711 1742  
                                u3431 0FF6                                  u3351 0EDA  
                                u3271 0D40                                  u3511 0948  
                                u4071 200A                                  u3191 2356  
                                u2480 2818                                  u2640 15DC  
                                u2560 1416                                  u2800 189E  
                                u2720 177A                                  u3440 1028  
                                u3360 0EFE                                  u3280 0D84  
                                u3600 0BD4                                  u3520 095C  
                                u2481 2814                                  u2641 15D8  
                                u2561 1412                                  u2801 189A  
                                u2721 1774                                  u3441 1024  
                                u3361 0EFA                                  u3281 0D80  
                                u3601 0BD0                                  u3521 0958  
                                u4081 202C                                  u2490 2828  
                                u2570 1540                                  u2810 18AE  
                                u2730 177C                                  u2650 163A  
                                u3370 0F10                                  u3290 0DC4  
                                u3610 0C1C                                  u3530 0AD6  
                                u3450 0892                                  u4090 204C  
                                u2491 2824                                  u2571 153C  
                                u2811 18AA                                  u2651 1636  
                                u3371 0F0C                                  u3291 0DC0  
                                u3611 0C18                                  u3451 088E  
                                u4091 2048                                  u2820 3260  
                                u2580 155E                                  u2740 1792  
                                u2660 1656                                  u2900 1206  
                                u3380 0F3E                                  u3620 0C4A  
                                u3540 0B30                                  u3460 08A4  
                                u3700 25B0                                  u2821 325C  
                                u2581 155A                                  u2741 178E  
                                u2661 1652                                  u2901 1202  
                                u3381 0F3A                                  u3621 0C46  
                                u3541 0B2C                                  u3461 08A0  
                                u2830 324C                                  u2590 1578  
                                u2750 17FA                                  u2670 1680  
                                u2910 12C6                                  u3390 0F54  
                                u3630 0C84                                  u3550 0B50  
                                u3470 08B4                                  u3710 25DE  
                                u2831 3248                                  u2591 1574  
                                u2671 167C                                  u2911 12C2  
                                u3391 0F50                                  u3631 0C80  
                                u3551 0B4C                                  u3535 0ACC  
                                u3471 08B0                                  u3711 25DA  
                                u2920 2D7C                                  u2840 31C6  
                                u2760 183C                                  u2680 16E4  
                                u3640 269A                                  u3560 0B62  
                                u3480 08F4                                  u3800 1EC2  
                                u3720 25F2                                  u2841 31C2  
                                u2761 1838                                  u2681 16E0  
                                u3641 2696                                  u3561 0B5E  
                                u3481 08F0                                  u3801 1EBE  
                                u3721 25EE                                  u3705 25A6  
                                u2930 2DA4                                  u2770 185A  
                                u2690 172E                                  u2850 1060  
                                u3650 26D8                                  u3570 0B90  
                                u3490 0906                                  u3810 1EE0  
                                u3730 261A                                  u2771 1856  
                                u2755 17E8                                  u2691 1728  
                                u2851 105C                                  u3651 26D4  
                                u3571 0B8C                                  u3491 0902  
                                u3811 1EDC                                  u3731 2616  
                                u2940 2DB4                                  u2780 1874  
                                u2860 10A8                                  u3660 26F6  
                                u3580 0BA6                                  u3820 1EF0  
                                u3740 263A                                  u3900 1B00  
                                u2941 2DB0                                  u2781 1870  
                                u2861 10A4                                  u3661 26F2  
                                u3581 0BA2                                  u3821 1EEC  
                                u3741 2636                                  u3901 1AFC  
                                u2950 3030                                  u2790 188E  
                                u2870 111A                                  u3670 2716  
                                u3590 0BBA                                  u3830 1EFE  
                                u3750 264A                                  u2927 2D72  
                                u2951 302C                                  u2791 188A  
                                u2871 1116                                  u3671 2712  
                                u3591 0BB6                                  u3831 1EFA  
                                u3751 2646                                  u3911 1B4A  
                                u2960 3044                                  u2880 113E  
                                u3680 2766                                  u3840 1F38  
                                u3760 1DB8                                  u3920 1B6A  
                                u2937 2D9A                                  u2961 3040  
                                u2881 113A                                  u3681 2762  
                                u3841 1F34                                  u3761 1DB4  
                                u3921 1B66                                  u2970 3110  
                                u2890 11E2                                  u3850 1F46  
                                u3770 1DC6                                  u3690 257C  
                                u3930 1B9C                                  u2971 310C  
                                u2891 11DE                                  u3851 1F42  
                                u3771 1DC2                                  u3691 2578  
                                u3931 1B98                                  u2980 3120  
                                u3780 1E22                                  u3860 1A42  
                                _RCEN 007E2B                                  u2981 311C  
                                u3781 1E1E                                  u3941 1BBC  
                                u3861 1A3E                                  u2990 313E  
                                u3790 1E78                                  u3950 1BD2  
                                u3870 1A74                                  u2991 313A  
                                u3791 1E74                                  u3951 1BCE  
                                u3871 1A70                                  u3961 1BF2  
                                u3881 1AAE                                  u3970 1C12  
                                u3890 1ACE                                  u3971 1C0E  
                                u3891 1ACA                                  u3980 1C44  
                                u3981 1C40                                  u3990 1C6C  
                                u3991 1C68                                  _RSEN 007E29  
                                abs@a 0013                                  _dbuf 019B  
                                _ctoa 2770                                  _main 2FA4  
                                _dtoa 1346                       ?_RTC_Read_Clock 0001  
                                _hour 00BE                      __end_of_I2C_Nack 324E  
                                _mins 00CE                                  _secs 00D8  
                                _prec 00BA                      __end_of_I2C_Init 3222  
                    __end_of_I2C_Read 3058                                  _nout 00B6  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  _xtoa 162A  
                    __end_of_I2C_Stop 3276                      __end_of_ADC_Init 323A  
                    __end_of_ADC_Read 2A74                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                     __end_of_MSdelay 2E52                       ___fldiv@new_exp 0041  
                       _LCD_String_xy 2BA8                          ___param_bank 000000  
                               ??_RTC 0060      RTC_Read_Clock@read_clock_address 0004  
                               ??_abs 0015                                 ??_pad 0017  
                    __end_of_LCD_Char 31EC                      __end_of_LCD_Init 3188  
                       ___fltol@sign1 0009                       __end_of___aodiv 228C  
                               ?_ctoa 000A                                 ?_main 0001  
                               ?_dtoa 001C                       __end_of___aomod 2566  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___fldiv 103C                                 STR_10 085F  
                               STR_11 0843                                 STR_12 0866  
                               STR_13 0873                                 STR_14 0831  
                               STR_15 082D                       __end_of___flmul 0CA2  
                     __end_of___fltol 266C                                 ?_xtoa 001C  
                               _LATB2 007C52                                 _LATC0 007C58  
                               _LATB3 007C53                                 _LATC1 007C59  
                               _LATC2 007C5A                                 _LATE1 007C69  
                               _LATE2 007C6A                          vfpfcnvrt@fmt 0045  
                        vfpfcnvrt@llu 0055                                 _SPBRG 000FAF  
                               _TRISA 000F92                                 _TRISD 000F95  
                               _SSPIE 007CEB                                 _TRISE 000F96  
                               _SSPIF 007CF3                                 _TXREG 000FAD  
                               _flags 00BC                                 _fputc 2848  
                     __end_of_isalpha 301E                                 _fputs 2EE0  
                               _hours 00C4                        SensorLuz@F3722 017C  
                      SensorLuz@F3725 018C                     __end_of_I2C_Ready 3288  
                               pad@fp 0011                                 _width 00B8  
                               ctoa@c 000C                                 _putch 3298  
                               ctoa@l 000E                                 ctoa@w 0010  
                               dtoa@d 001E                                 dtoa@i 003E  
                               dtoa@n 0036                                 dtoa@p 0030  
                               dtoa@s 0034                                 dtoa@w 0032  
                     __end_of_islower 3090                     __end_of_I2C_Start 312C  
                   __end_of_I2C_Write 31D0                       __end_of_isupper 30C8  
                               tablat 000FF5                                 plusw1 000FE3  
                               plusw2 000FDB                                 status 000FD8  
                 __size_of_LCD_String 005E                       __end_of_sprintf 2E08  
                               xtoa@c 0041                                 xtoa@d 001E  
                               xtoa@i 003F                                 xtoa@n 0037  
                               xtoa@p 0033                                 xtoa@w 0035  
                               xtoa@x 0026                     SensorMovimiento@i 00B0  
                     __end_of_toupper 2D58                        SensorLuz@i_910 0085  
                      ?_LCD_String_xy 000A                          _toupper$1601 000D  
             __end_of_LCD_Custom_Char 2E9A                       __initialization 2C36  
                        __end_of_ctoa 2848                          __end_of_main 2FE2  
                        __end_of_dtoa 162A                          __end_of_xtoa 1904  
                           ??_I2C_Ack 0001                   SensorLuz@buffer_TX3 0060  
                 SensorLuz@buffer_TX4 0070                                ??_ctoa 000D  
                              ??_main 0060                                ??_dtoa 0026  
                              ??_xtoa 0027                         __activetblptr 000002  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                                ?_fputc 0001  
                              ?_fputs 000A                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                ?_putch 0001  
                    LCD_String_xy@pos 000A                      LCD_String_xy@row 000D  
                    LCD_String_xy@str 000B                             ??_MSdelay 0003  
                              _OSCCON 000FD3                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                      __end_of___xxtofl 1F5A  
                          SensorLuz@i 0083                      _SensorMovimiento 1BA2  
                        vfprintf@cfmt 005E                                ___flge 266C  
                           ??___aodiv 0011                             ??___aomod 0011  
                           ??___fldiv 0038                             ??___flmul 001F  
                           ??___fltol 0005                       ADC_Read@channel 0001  
                              _memset 228C                       ADC_Read@digital 0007  
                              clear_0 2C7C                                clear_1 2C88  
                  _I2C_Repeated_Start 312C                                pad@buf 0013  
                              ctoa@fp 000A                  __size_of_LCD_Command 001C  
                              _strcat 3188                                dtoa@fp 001C  
                              _strcpy 2F24                                _strlen 30C8  
                  __size_of_SensorLuz 01AA                                fputc@c 0001  
                              fputs@c 000E                      LCD_Custom_Char@i 000B  
                              fputs@i 000F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ?_I2C_Init 0001                             ?_I2C_Read 0001  
                           ?_I2C_Stop 0001                             ?_ADC_Init 0001  
                           ?_ADC_Read 0001                             ??_islower 0003  
                        __mediumconst 0000                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 2CFA  
                           ??_sprintf 0060                                xtoa@fp 001C  
                           ??_toupper 0009                            ___flge@ff1 0001  
                          ___flge@ff2 0005                          ___xxtofl@arg 0013  
                        ___xxtofl@exp 0012                          ___xxtofl@val 0009  
                           ?_LCD_Char 0001                            __accesstop 0060  
             __end_of__initialization 2C8E                             ?_LCD_Init 0001  
                     ??_LCD_String_xy 000D                         ___rparam_used 000001  
                          ___fltol@f1 0001                  ??_I2C_Repeated_Start 0002  
                    ?_LCD_Custom_Char 0008                        __pcstackCOMRAM 0001  
                        __pidataBANK0 3288                          __pidataBANK1 2A74  
                  SensorTemperatura@i 00AE                         __end_of_fputc 2912  
                       __end_of_fputs 2F24                         __end_of_putch 329A  
                        ??_LCD_String 000A                            ??_I2C_Nack 0001  
                          ??_I2C_Init 0001                            ??_I2C_Read 0001  
                          ??_I2C_Stop 0001                            ??_ADC_Init 0001  
                          ??_ADC_Read 0003          SensorTemperatura@Temperature 00A4  
                    ??_RTC_Read_Clock 0003                               ??_fputc 0005  
                             ??_fputs 000E                               ??_putch 0001  
                          __pbssBANK0 00B6                            __pbssBANK1 019B  
                          ??_LCD_Char 0007                            _character1 00EA  
                          _character2 00E2                            ??_LCD_Init 0008  
                   __end_of_SensorLuz 2104                    __end_of_LCD_String 2DB6  
                        I2C_Read@flag 0001                               ?___flge 0001  
                      I2C_Read@buffer 0002                SensorTemperatura@F3714 0100  
              SensorTemperatura@F3717 0117                               _I2C_Ack 324E  
                             _ACKSTAT 007E2E                               ?_memset 0001  
                             ?_strcat 000D                               ?_strcpy 0005  
                             ?_strlen 0001                SensorTemperatura@i_894 00B0  
                           ?___xxtofl 0009                    __size_of_vfpfcnvrt 030A  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                               _MSdelay 2E08  
                           _I2C_Ready 3276                             _I2C_Start 30FE  
                           _I2C_Write 31AE                         LCD_String@msg 0008  
                             __Hparam 0000                               __Lparam 0000  
                     __size_of___flge 0104                               ___aodiv 2104  
                             ___aomod 2402                               ___fldiv 0CA2  
                             ___flmul 0878                     _SensorTemperatura 1904  
                             ___fltol 2566                             ?_vfprintf 0060  
                        __psmallconst 0800                               __pcinit 2C36  
                  ?_SensorTemperatura 0001                       __size_of_memset 0176  
                             __ramtop 0800                               __ptext0 2FA4  
                             __ptext1 1904                               __ptext2 228C  
                             __ptext3 2566                               __ptext4 2E52  
                             __ptext5 1BA2                               __ptext6 3188  
                             __ptext7 2F24                               __ptext8 1F5A  
                             __ptext9 1DA6                       __size_of_strcat 0026  
                     __size_of_strcpy 0040                       __size_of_strlen 0036  
                        __size_of_RTC 0098                          __size_of_abs 0040  
                        __size_of_pad 00C6                               _isalpha 2FE2  
                          ??___xxtofl 000D                               _islower 3058  
                 ??_SensorTemperatura 0060                               _isupper 3090  
            __end_of_SensorMovimiento 1DA6                               _sprintf 2DB6  
            SensorTemperatura@celsius 00B2                               _toupper 2CFA  
                end_of_initialization 2C8E                               fputc@fp 0003  
                             memset@c 0003                               memset@k 0009  
                             memset@n 0005                               memset@s 000B  
                      LCD_Command@cmd 0007                         __Lmediumconst 0000  
                             fputs@fp 000C                            ?_I2C_Ready 0001  
                          ?_I2C_Start 0001                            ?_I2C_Write 0001  
           __end_of_SensorTemperatura 1BA2                     __end_of_vfpfcnvrt 1346  
                           _RCSTAbits 000FAB                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 005E                               strcpy@d 000B  
                             strlen@a 0003                               strcpy@s 0009  
                             strlen@s 0001                             _PORTAbits 000F80  
                           _PORTEbits 000F84                   SensorMovimiento@buf 009C  
                       ___xxtofl@sign 0011                             _TRISAbits 000F92  
                           _TRISBbits 000F93                             _TRISCbits 000F94  
                   __size_of_I2C_Nack 0014                     __size_of_I2C_Init 001A  
                   __size_of_I2C_Read 003A                           ___fldiv@grs 0043  
                         ___fldiv@rem 003C                     __size_of_I2C_Stop 0014  
                   __size_of_ADC_Init 0018                     __size_of_ADC_Read 009C  
         SensorTemperatura@buffer_TX1 0078           SensorTemperatura@buffer_TX2 008F  
                         ___flmul@grs 0024                             _TXSTAbits 000FAC  
                   __size_of_LCD_Char 001C                     __size_of_LCD_Init 002E  
                       ??_LCD_Command 0007                        __end_of___flge 2770  
                   LCD_Char@char_data 0007                           vfpfcnvrt@ap 0047  
                         vfpfcnvrt@fp 0043                           vfpfcnvrt@ll 004D  
                         _BAUDCONbits 000FB8                        __end_of_memset 2402  
                      __end_of_strcat 31AE                        __end_of_strcpy 2F64  
                      __end_of_strlen 30FE                   start_initialization 2C36  
                         __end_of_RTC 2BA8                           __end_of_abs 2FA4  
                         __end_of_pad 29D8  I2C_Repeated_Start@slave_read_address 0002  
                         ??_I2C_Ready 0001                           ??_I2C_Start 0002  
                         ??_I2C_Write 0001                 __end_of_LCD_String_xy 2C36  
          __size_of_SensorTemperatura 029E                           vfprintf@fmt 0062  
         __size_of_I2C_Repeated_Start 002E                              ??___flge 0009  
                           _SensorLuz 1F5A                           __pdataBANK0 00E2  
                         __pdataBANK1 0100                              ?_I2C_Ack 0001  
                            ??_memset 0007                            memset@dest 0001  
                            ??_strcat 0011                              ??_strcpy 0009  
                            ??_strlen 0003              __size_of_LCD_Custom_Char 0048  
                           ___fldiv@a 0034                             ___fldiv@b 0030  
                 __end_of_LCD_Command 3208                             ___flmul@a 001B  
                           ___flmul@b 0017                         __pcstackBANK0 0060  
                    ___aodiv@dividend 0001                     __size_of___xxtofl 01B4  
                            ?_MSdelay 0001                             _dtoa$1490 002E  
                          ?_SensorLuz 0001                              ?___aodiv 0001  
                            ?___aomod 0001                              ?___fldiv 0030  
                    ___aodiv@quotient 0013                              ?___flmul 0017  
                            ?___fltol 0001                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 323A  
                            ?_isalpha 0001                              _I2C_Init 3208  
                            _I2C_Read 301E                              _I2C_Stop 3262  
                            _ADC_Init 3222                              _ADC_Read 29D8  
                            ?_islower 0001                              ?_isupper 0001  
                   ?_SensorMovimiento 0001                              ?_sprintf 0066  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                  ??_SensorMovimiento 0011                              MSdelay@i 0003  
                            MSdelay@j 0005                              _LCD_Char 31D0  
                            _LCD_Init 315A               __size_of_RTC_Read_Clock 0046  
                         _LCD_Command 31EC                             _vfpfcnvrt 103C  
                           _xtoa$1501 002F                             _xtoa$1502 0031  
                    __size_of_I2C_Ack 0014                            _ADCON0bits 000FC2  
                   ??_LCD_Custom_Char 000A                            vfpfcnvrt@c 005D  
                           copy_data0 2C4A                             copy_data1 2C6A  
        I2C_Start@slave_write_address 0002                          SensorLuz@val 007F  
                    __size_of_MSdelay 004A                              __Hrparam 0000  
          SensorMovimiento@buffer_TX5 0060            SensorMovimiento@buffer_TX6 0074  
          SensorMovimiento@buffer_TX7 0088                            vfprintf@ap 0064  
                            __Lrparam 0000                            vfprintf@fp 0060  
                         ??_SensorLuz 0049                         I2C_Write@data 0001  
                    __size_of___aodiv 0188                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___flmul 042A  
                    __size_of___fltol 0106                            ?_vfpfcnvrt 0043  
                     ___aodiv@divisor 0009                       ___aodiv@counter 0011  
                          sprintf@fmt 0068                              ___xxtofl 1DA6  
                          strcat@dest 000D                      __size_of_isalpha 003C  
                    __size_of_islower 0038                              __ptext10 0878  
                            __ptext11 266C                              __ptext20 3058  
                            __ptext12 0CA2                              __ptext21 3090  
                            __ptext13 29D8                              __ptext30 2770  
                            __ptext22 2FE2                              __ptext14 2B10  
                            __ptext31 2848                              __ptext23 1346  
                            __ptext15 2DB6                              __ptext40 324E  
                            __ptext32 3298                              __ptext24 2912  
                            __ptext16 2C98                              __ptext41 2BA8  
                            __ptext33 2E9A                              __ptext25 30C8  
                            __ptext17 103C                              __ptext42 2D58  
                            __ptext34 30FE                              __ptext26 2EE0  
                            __ptext18 162A                              __ptext43 31D0  
                            __ptext35 312C                              __ptext27 2F64  
                            __ptext19 2CFA                              __ptext44 3262  
                            __ptext36 31AE                              __ptext28 2402  
                            __ptext45 315A                              __ptext37 301E  
                            __ptext29 2104                              __ptext46 31EC  
                            __ptext38 3276                              __ptext47 2E08  
                            __ptext39 323A                              __ptext48 3208  
                            __ptext49 3222                      __size_of_isupper 0038  
                    __size_of_sprintf 0052                            strcpy@dest 0005  
                    __size_of_toupper 005E                         __size_of_ctoa 00D8  
                       __size_of_main 003E                         __size_of_dtoa 02E4  
                       __size_of_xtoa 02DA                            MSdelay@val 0001  
                            _vfprintf 2C98                            _LCD_String 2D58  
                    ___aomod@dividend 0001                              isalpha@c 0001  
                  LCD_Custom_Char@loc 000A                    LCD_Custom_Char@msg 0008  
                           sprintf@ap 0070                             strcat@src 000F  
                            islower@c 0001                             strcpy@src 0007  
          __end_of_I2C_Repeated_Start 315A                              isupper@c 0001  
                      _RTC_Read_Clock 2E9A                 SensorMovimiento@F3731 0154  
               SensorMovimiento@F3734 0140                 SensorMovimiento@F3729 0168  
               SensorMovimiento@F3737 012C                       ___aomod@divisor 0009  
                         ??_vfpfcnvrt 0049                       ___aomod@counter 0011  
               SensorMovimiento@i_941 00B4                 SensorMovimiento@i_936 00B2  
                            sprintf@f 0072                              sprintf@s 0066  
                            toupper@c 0007                __size_of_LCD_String_xy 008E  
                         _SSPCON2bits 000FC5                          ___aodiv@sign 0012  
              __end_of_RTC_Read_Clock 2EE0                          ___aomod@sign 0012  
           __size_of_SensorMovimiento 0204  
