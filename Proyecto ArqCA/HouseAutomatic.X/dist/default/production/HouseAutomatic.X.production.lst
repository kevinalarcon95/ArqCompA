

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 23:51:51 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 12/02/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  0032C8                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _character1
   112  0032C8  00                 	db	0
   113  0032C9  00                 	db	0
   114  0032CA  04                 	db	4
   115  0032CB  0E                 	db	14
   116  0032CC  1F                 	db	31
   117  0032CD  04                 	db	4
   118  0032CE  04                 	db	4
   119  0032CF  04                 	db	4
   120                           
   121                           	psect	idataBANK1
   122  0029B8                     __pidataBANK1:
   123                           	callstack 0
   124                           
   125                           ;initializer for SensorMovimiento@F3734
   126  0029B8  53                 	db	83
   127  0029B9  65                 	db	101
   128  0029BA  20                 	db	32
   129  0029BB  64                 	db	100
   130  0029BC  65                 	db	101
   131  0029BD  74                 	db	116
   132  0029BE  65                 	db	101
   133  0029BF  63                 	db	99
   134  0029C0  74                 	db	116
   135  0029C1  6F                 	db	111
   136  0029C2  20                 	db	32
   137  0029C3  70                 	db	112
   138  0029C4  72                 	db	114
   139  0029C5  65                 	db	101
   140  0029C6  73                 	db	115
   141  0029C7  65                 	db	101
   142  0029C8  6E                 	db	110
   143  0029C9  63                 	db	99
   144  0029CA  69                 	db	105
   145  0029CB  61                 	db	97
   146  0029CC  20                 	db	32
   147  0029CD  68                 	db	104
   148  0029CE  61                 	db	97
   149  0029CF  62                 	db	98
   150  0029D0  69                 	db	105
   151  0029D1  74                 	db	116
   152  0029D2  61                 	db	97
   153  0029D3  63                 	db	99
   154  0029D4  69                 	db	105
   155  0029D5  6F                 	db	111
   156  0029D6  6E                 	db	110
   157  0029D7  20                 	db	32
   158  0029D8  32                 	db	50
   159  0029D9  0D                 	db	13
   160  0029DA  00                 	db	0
   161                           
   162                           ;initializer for SensorMovimiento@F3731
   163  0029DB  53                 	db	83
   164  0029DC  65                 	db	101
   165  0029DD  20                 	db	32
   166  0029DE  64                 	db	100
   167  0029DF  65                 	db	101
   168  0029E0  74                 	db	116
   169  0029E1  65                 	db	101
   170  0029E2  63                 	db	99
   171  0029E3  74                 	db	116
   172  0029E4  6F                 	db	111
   173  0029E5  20                 	db	32
   174  0029E6  70                 	db	112
   175  0029E7  72                 	db	114
   176  0029E8  65                 	db	101
   177  0029E9  73                 	db	115
   178  0029EA  65                 	db	101
   179  0029EB  6E                 	db	110
   180  0029EC  63                 	db	99
   181  0029ED  69                 	db	105
   182  0029EE  61                 	db	97
   183  0029EF  20                 	db	32
   184  0029F0  68                 	db	104
   185  0029F1  61                 	db	97
   186  0029F2  62                 	db	98
   187  0029F3  69                 	db	105
   188  0029F4  74                 	db	116
   189  0029F5  61                 	db	97
   190  0029F6  63                 	db	99
   191  0029F7  69                 	db	105
   192  0029F8  6F                 	db	111
   193  0029F9  6E                 	db	110
   194  0029FA  20                 	db	32
   195  0029FB  31                 	db	49
   196  0029FC  0D                 	db	13
   197  0029FD  00                 	db	0
   198                           
   199                           ;initializer for SensorTemperatura@F3714
   200  0029FE  43                 	db	67
   201  0029FF  61                 	db	97
   202  002A00  6C                 	db	108
   203  002A01  65                 	db	101
   204  002A02  66                 	db	102
   205  002A03  61                 	db	97
   206  002A04  63                 	db	99
   207  002A05  63                 	db	99
   208  002A06  69                 	db	105
   209  002A07  6F                 	db	111
   210  002A08  6E                 	db	110
   211  002A09  20                 	db	32
   212  002A0A  65                 	db	101
   213  002A0B  6E                 	db	110
   214  002A0C  63                 	db	99
   215  002A0D  65                 	db	101
   216  002A0E  6E                 	db	110
   217  002A0F  64                 	db	100
   218  002A10  69                 	db	105
   219  002A11  64                 	db	100
   220  002A12  61                 	db	97
   221  002A13  0D                 	db	13
   222  002A14  00                 	db	0
   223                           
   224                           ;initializer for SensorLuz@F3722
   225  002A15  53                 	db	83
   226  002A16  65                 	db	101
   227  002A17  20                 	db	32
   228  002A18  73                 	db	115
   229  002A19  75                 	db	117
   230  002A1A  62                 	db	98
   231  002A1B  69                 	db	105
   232  002A1C  6F                 	db	111
   233  002A1D  20                 	db	32
   234  002A1E  6C                 	db	108
   235  002A1F  61                 	db	97
   236  002A20  20                 	db	32
   237  002A21  63                 	db	99
   238  002A22  6F                 	db	111
   239  002A23  72                 	db	114
   240  002A24  74                 	db	116
   241  002A25  69                 	db	105
   242  002A26  6E                 	db	110
   243  002A27  61                 	db	97
   244  002A28  0D                 	db	13
   245  002A29  00                 	db	0
   246                           
   247                           ;initializer for SensorTemperatura@F3717
   248  002A2A  43                 	db	67
   249  002A2B  61                 	db	97
   250  002A2C  6C                 	db	108
   251  002A2D  65                 	db	101
   252  002A2E  66                 	db	102
   253  002A2F  61                 	db	97
   254  002A30  63                 	db	99
   255  002A31  63                 	db	99
   256  002A32  69                 	db	105
   257  002A33  6F                 	db	111
   258  002A34  6E                 	db	110
   259  002A35  20                 	db	32
   260  002A36  61                 	db	97
   261  002A37  70                 	db	112
   262  002A38  61                 	db	97
   263  002A39  67                 	db	103
   264  002A3A  61                 	db	97
   265  002A3B  64                 	db	100
   266  002A3C  61                 	db	97
   267  002A3D  0D                 	db	13
   268  002A3E  00                 	db	0
   269                           
   270                           ;initializer for SensorMovimiento@F3729
   271  002A3F  30                 	db	48
   272  002A40  00                 	db	0
   273  002A41  00                 	db	0
   274  002A42  00                 	db	0
   275  002A43  00                 	db	0
   276  002A44  00                 	db	0
   277  002A45  00                 	db	0
   278  002A46  00                 	db	0
   279  002A47  00                 	db	0
   280  002A48  00                 	db	0
   281  002A49  00                 	db	0
   282  002A4A  00                 	db	0
   283  002A4B  00                 	db	0
   284  002A4C  00                 	db	0
   285  002A4D  00                 	db	0
   286  002A4E  00                 	db	0
   287  002A4F  00                 	db	0
   288  002A50  00                 	db	0
   289  002A51  00                 	db	0
   290  002A52  00                 	db	0
   291                           
   292                           ;initializer for SensorLuz@F3725
   293  002A53  53                 	db	83
   294  002A54  65                 	db	101
   295  002A55  20                 	db	32
   296  002A56  62                 	db	98
   297  002A57  61                 	db	97
   298  002A58  6A                 	db	106
   299  002A59  6F                 	db	111
   300  002A5A  20                 	db	32
   301  002A5B  6C                 	db	108
   302  002A5C  61                 	db	97
   303  002A5D  20                 	db	32
   304  002A5E  63                 	db	99
   305  002A5F  6F                 	db	111
   306  002A60  72                 	db	114
   307  002A61  74                 	db	116
   308  002A62  69                 	db	105
   309  002A63  6E                 	db	110
   310  002A64  61                 	db	97
   311  002A65  0D                 	db	13
   312  002A66  00                 	db	0
   313                           
   314                           ;initializer for _character2
   315  002A67  00                 	db	0
   316  002A68  00                 	db	0
   317  002A69  04                 	db	4
   318  002A6A  04                 	db	4
   319  002A6B  04                 	db	4
   320  002A6C  1F                 	db	31
   321  002A6D  0E                 	db	14
   322  002A6E  04                 	db	4
   323                           
   324                           	psect	idataBANK2
   325  0031CA                     __pidataBANK2:
   326                           	callstack 0
   327                           
   328                           ;initializer for SensorMovimiento@F3737
   329  0031CA  53                 	db	83
   330  0031CB  65                 	db	101
   331  0031CC  20                 	db	32
   332  0031CD  64                 	db	100
   333  0031CE  65                 	db	101
   334  0031CF  74                 	db	116
   335  0031D0  65                 	db	101
   336  0031D1  63                 	db	99
   337  0031D2  74                 	db	116
   338  0031D3  6F                 	db	111
   339  0031D4  20                 	db	32
   340  0031D5  70                 	db	112
   341  0031D6  72                 	db	114
   342  0031D7  65                 	db	101
   343  0031D8  73                 	db	115
   344  0031D9  65                 	db	101
   345  0031DA  6E                 	db	110
   346  0031DB  63                 	db	99
   347  0031DC  69                 	db	105
   348  0031DD  61                 	db	97
   349  0031DE  20                 	db	32
   350  0031DF  68                 	db	104
   351  0031E0  61                 	db	97
   352  0031E1  62                 	db	98
   353  0031E2  69                 	db	105
   354  0031E3  74                 	db	116
   355  0031E4  61                 	db	97
   356  0031E5  63                 	db	99
   357  0031E6  69                 	db	105
   358  0031E7  6F                 	db	111
   359  0031E8  6E                 	db	110
   360  0031E9  20                 	db	32
   361  0031EA  33                 	db	51
   362  0031EB  0D                 	db	13
   363  0031EC  00                 	db	0
   364  0000                     _PORTAbits	set	3968
   365  0000                     _TRISAbits	set	3986
   366  0000                     _PORTEbits	set	3972
   367  0000                     _TXREG	set	4013
   368  0000                     _TRISBbits	set	3987
   369  0000                     _SPBRG	set	4015
   370  0000                     _RCSTAbits	set	4011
   371  0000                     _BAUDCONbits	set	4024
   372  0000                     _TXSTAbits	set	4012
   373  0000                     _TRISCbits	set	3988
   374  0000                     _OSCCON	set	4051
   375  0000                     _SSPCON2bits	set	4037
   376  0000                     _SSPADD	set	4040
   377  0000                     _SSPCON2	set	4037
   378  0000                     _SSPCON1	set	4038
   379  0000                     _SSPSTAT	set	4039
   380  0000                     _SSPBUF	set	4041
   381  0000                     _SSPSTATbits	set	4039
   382  0000                     _LATD	set	3980
   383  0000                     _TRISD	set	3989
   384  0000                     _TRISE	set	3990
   385  0000                     _ADCON0bits	set	4034
   386  0000                     _ADRESL	set	4035
   387  0000                     _ADRESH	set	4036
   388  0000                     _ADCON2	set	4032
   389  0000                     _ADCON1	set	4033
   390  0000                     _ADCON0	set	4034
   391  0000                     _TRISA	set	3986
   392  0000                     _LATC2	set	31834
   393  0000                     _LATC1	set	31833
   394  0000                     _LATC0	set	31832
   395  0000                     _LATB3	set	31827
   396  0000                     _LATB2	set	31826
   397  0000                     _ACKEN	set	32300
   398  0000                     _ACKDT	set	32301
   399  0000                     _PEN	set	32298
   400  0000                     _RSEN	set	32297
   401  0000                     _ACKSTAT	set	32302
   402  0000                     _SSPIF	set	31987
   403  0000                     _SSPIE	set	31979
   404  0000                     _TRISB1	set	31897
   405  0000                     _TRISB0	set	31896
   406  0000                     _RCEN	set	32299
   407  0000                     _LATE2	set	31850
   408  0000                     _LATE1	set	31849
   409  0000                     _GO	set	32273
   410  0000                     _ADON	set	32272
   411                           
   412                           	psect	smallconst
   413  000800                     __psmallconst:
   414                           	callstack 0
   415  000800  00                 	db	0
   416  000801                     STR_6:
   417  000801  43                 	db	67	;'C'
   418  000802  6F                 	db	111	;'o'
   419  000803  72                 	db	114	;'r'
   420  000804  74                 	db	116	;'t'
   421  000805  69                 	db	105	;'i'
   422  000806  6E                 	db	110	;'n'
   423  000807  61                 	db	97	;'a'
   424  000808  20                 	db	32
   425  000809  41                 	db	65	;'A'
   426  00080A  62                 	db	98	;'b'
   427  00080B  61                 	db	97	;'a'
   428  00080C  6A                 	db	106	;'j'
   429  00080D  6F                 	db	111	;'o'
   430  00080E  20                 	db	32
   431  00080F  20                 	db	32
   432  000810  20                 	db	32
   433  000811  20                 	db	32
   434  000812  20                 	db	32
   435  000813  20                 	db	32
   436  000814  20                 	db	32
   437  000815  20                 	db	32
   438  000816  00                 	db	0
   439  000817                     STR_5:
   440  000817  43                 	db	67	;'C'
   441  000818  6F                 	db	111	;'o'
   442  000819  72                 	db	114	;'r'
   443  00081A  74                 	db	116	;'t'
   444  00081B  69                 	db	105	;'i'
   445  00081C  6E                 	db	110	;'n'
   446  00081D  61                 	db	97	;'a'
   447  00081E  20                 	db	32
   448  00081F  41                 	db	65	;'A'
   449  000820  72                 	db	114	;'r'
   450  000821  72                 	db	114	;'r'
   451  000822  69                 	db	105	;'i'
   452  000823  62                 	db	98	;'b'
   453  000824  61                 	db	97	;'a'
   454  000825  20                 	db	32
   455  000826  20                 	db	32
   456  000827  20                 	db	32
   457  000828  20                 	db	32
   458  000829  20                 	db	32
   459  00082A  20                 	db	32
   460  00082B  20                 	db	32
   461  00082C  00                 	db	0
   462  00082D                     STR_15:
   463  00082D  54                 	db	84	;'T'
   464  00082E  69                 	db	105	;'i'
   465  00082F  6D                 	db	109	;'m'
   466  000830  3A                 	db	58	;':'
   467  000831  25                 	db	37
   468  000832  78                 	db	120	;'x'
   469  000833  3A                 	db	58	;':'
   470  000834  00                 	db	0
   471  000835                     STR_7:
   472  000835  31                 	db	49	;'1'
   473  000836  3A                 	db	58	;':'
   474  000837  4F                 	db	79	;'O'
   475  000838  4E                 	db	78	;'N'
   476  000839  20                 	db	32
   477  00083A  20                 	db	32
   478  00083B  00                 	db	0
   479  00083C                     STR_9:
   480  00083C  32                 	db	50	;'2'
   481  00083D  3A                 	db	58	;':'
   482  00083E  4F                 	db	79	;'O'
   483  00083F  4E                 	db	78	;'N'
   484  000840  20                 	db	32
   485  000841  20                 	db	32
   486  000842  00                 	db	0
   487  000843                     STR_11:
   488  000843  33                 	db	51	;'3'
   489  000844  3A                 	db	58	;':'
   490  000845  4F                 	db	79	;'O'
   491  000846  4E                 	db	78	;'N'
   492  000847  20                 	db	32
   493  000848  20                 	db	32
   494  000849  00                 	db	0
   495  00084A                     STR_1:
   496  00084A  54                 	db	84	;'T'
   497  00084B  65                 	db	101	;'e'
   498  00084C  6D                 	db	109	;'m'
   499  00084D  70                 	db	112	;'p'
   500  00084E  3A                 	db	58	;':'
   501  00084F  20                 	db	32
   502  000850  00                 	db	0
   503  000851                     STR_2:
   504  000851  25                 	db	37
   505  000852  64                 	db	100	;'d'
   506  000853  25                 	db	37
   507  000854  63                 	db	99	;'c'
   508  000855  43                 	db	67	;'C'
   509  000856  20                 	db	32
   510  000857  00                 	db	0
   511  000858                     STR_8:
   512  000858  31                 	db	49	;'1'
   513  000859  3A                 	db	58	;':'
   514  00085A  4F                 	db	79	;'O'
   515  00085B  46                 	db	70	;'F'
   516  00085C  46                 	db	70	;'F'
   517  00085D  20                 	db	32
   518  00085E  00                 	db	0
   519  00085F                     STR_10:
   520  00085F  32                 	db	50	;'2'
   521  000860  3A                 	db	58	;':'
   522  000861  4F                 	db	79	;'O'
   523  000862  46                 	db	70	;'F'
   524  000863  46                 	db	70	;'F'
   525  000864  20                 	db	32
   526  000865  00                 	db	0
   527  000866                     STR_12:
   528  000866  33                 	db	51	;'3'
   529  000867  3A                 	db	58	;':'
   530  000868  4F                 	db	79	;'O'
   531  000869  46                 	db	70	;'F'
   532  00086A  46                 	db	70	;'F'
   533  00086B  20                 	db	32
   534  00086C  00                 	db	0
   535  00086D                     STR_3:
   536  00086D  43                 	db	67	;'C'
   537  00086E  61                 	db	97	;'a'
   538  00086F  6C                 	db	108	;'l'
   539  000870  3A                 	db	58	;':'
   540  000871  20                 	db	32
   541  000872  00                 	db	0
   542  000873                     STR_13:
   543  000873  25                 	db	37
   544  000874  78                 	db	120	;'x'
   545  000875  20                 	db	32
   546  000876  00                 	db	0
   547  000877  00                 	db	0	; dummy byte at the end
   548  0000                     
   549                           ; #config settings
   550                           
   551                           	psect	cinit
   552  002C32                     __pcinit:
   553                           	callstack 0
   554  002C32                     start_initialization:
   555                           	callstack 0
   556  002C32                     __initialization:
   557                           	callstack 0
   558                           
   559                           ; Initialize objects allocated to BANK2 (35 bytes)
   560                           ; load TBLPTR registers with __pidataBANK2
   561  002C32  0ECA               	movlw	low __pidataBANK2
   562  002C34  6EF6               	movwf	tblptrl,c
   563  002C36  0E31               	movlw	high __pidataBANK2
   564  002C38  6EF7               	movwf	tblptrh,c
   565  002C3A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   566  002C3C  6EF8               	movwf	tblptru,c
   567  002C3E  EE02  F000         	lfsr	0,__pdataBANK2
   568  002C42  EE10 F023          	lfsr	1,35
   569  002C46                     copy_data0:
   570  002C46  0009               	tblrd		*+
   571  002C48  CFF5 FFEE          	movff	tablat,postinc0
   572  002C4C  50E5               	movf	postdec1,w,c
   573  002C4E  50E1               	movf	fsr1l,w,c
   574  002C50  E1FA               	bnz	copy_data0
   575                           
   576                           ; Initialize objects allocated to BANK1 (183 bytes)
   577                           ; load TBLPTR registers with __pidataBANK1
   578  002C52  0EB8               	movlw	low __pidataBANK1
   579  002C54  6EF6               	movwf	tblptrl,c
   580  002C56  0E29               	movlw	high __pidataBANK1
   581  002C58  6EF7               	movwf	tblptrh,c
   582  002C5A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   583  002C5C  6EF8               	movwf	tblptru,c
   584  002C5E  EE01  F000         	lfsr	0,__pdataBANK1
   585  002C62  EE10 F0B7          	lfsr	1,183
   586  002C66                     copy_data1:
   587  002C66  0009               	tblrd		*+
   588  002C68  CFF5 FFEE          	movff	tablat,postinc0
   589  002C6C  50E5               	movf	postdec1,w,c
   590  002C6E  50E1               	movf	fsr1l,w,c
   591  002C70  E1FA               	bnz	copy_data1
   592                           
   593                           ; Initialize objects allocated to BANK0 (8 bytes)
   594                           ; load TBLPTR registers with __pidataBANK0
   595  002C72  0EC8               	movlw	low __pidataBANK0
   596  002C74  6EF6               	movwf	tblptrl,c
   597  002C76  0E32               	movlw	high __pidataBANK0
   598  002C78  6EF7               	movwf	tblptrh,c
   599  002C7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   600  002C7C  6EF8               	movwf	tblptru,c
   601  002C7E  EE00  F0F1         	lfsr	0,__pdataBANK0
   602  002C82  EE10 F008          	lfsr	1,8
   603  002C86                     copy_data2:
   604  002C86  0009               	tblrd		*+
   605  002C88  CFF5 FFEE          	movff	tablat,postinc0
   606  002C8C  50E5               	movf	postdec1,w,c
   607  002C8E  50E1               	movf	fsr1l,w,c
   608  002C90  E1FA               	bnz	copy_data2
   609                           
   610                           ; Clear objects allocated to BANK1 (62 bytes)
   611  002C92  EE01  F0B7         	lfsr	0,__pbssBANK1
   612  002C96  0E3E               	movlw	62
   613  002C98                     clear_0:
   614  002C98  6AEE               	clrf	postinc0,c
   615  002C9A  06E8               	decf	wreg,f,c
   616  002C9C  E1FD               	bnz	clear_0
   617                           
   618                           ; Clear objects allocated to BANK0 (14 bytes)
   619  002C9E  EE00  F0E3         	lfsr	0,__pbssBANK0
   620  002CA2  0E0E               	movlw	14
   621  002CA4                     clear_1:
   622  002CA4  6AEE               	clrf	postinc0,c
   623  002CA6  06E8               	decf	wreg,f,c
   624  002CA8  E1FD               	bnz	clear_1
   625  002CAA                     end_of_initialization:
   626                           	callstack 0
   627  002CAA                     __end_of__initialization:
   628                           	callstack 0
   629  002CAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   630  002CAC  6EF8               	movwf	tblptru,c
   631  002CAE  0100               	movlb	0
   632  002CB0  EFE0  F017         	goto	_main	;jump to C main() function
   633                           
   634                           	psect	bssBANK0
   635  0000E3                     __pbssBANK0:
   636                           	callstack 0
   637  0000E3                     _nout:
   638                           	callstack 0
   639  0000E3                     	ds	2
   640  0000E5                     _width:
   641                           	callstack 0
   642  0000E5                     	ds	2
   643  0000E7                     _prec:
   644                           	callstack 0
   645  0000E7                     	ds	2
   646  0000E9                     _flags:
   647                           	callstack 0
   648  0000E9                     	ds	2
   649  0000EB                     _hour:
   650                           	callstack 0
   651  0000EB                     	ds	2
   652  0000ED                     _min:
   653                           	callstack 0
   654  0000ED                     	ds	2
   655  0000EF                     _sec:
   656                           	callstack 0
   657  0000EF                     	ds	2
   658                           
   659                           	psect	dataBANK0
   660  0000F1                     __pdataBANK0:
   661                           	callstack 0
   662  0000F1                     _character1:
   663                           	callstack 0
   664  0000F1                     	ds	8
   665                           
   666                           	psect	bssBANK1
   667  0001B7                     __pbssBANK1:
   668                           	callstack 0
   669  0001B7                     _dbuf:
   670                           	callstack 0
   671  0001B7                     	ds	32
   672  0001D7                     _hours:
   673                           	callstack 0
   674  0001D7                     	ds	10
   675  0001E1                     _mins:
   676                           	callstack 0
   677  0001E1                     	ds	10
   678  0001EB                     _secs:
   679                           	callstack 0
   680  0001EB                     	ds	10
   681                           
   682                           	psect	dataBANK1
   683  000100                     __pdataBANK1:
   684                           	callstack 0
   685  000100                     SensorMovimiento@F3734:
   686                           	callstack 0
   687  000100                     	ds	35
   688  000123                     SensorMovimiento@F3731:
   689                           	callstack 0
   690  000123                     	ds	35
   691  000146                     SensorTemperatura@F3714:
   692                           	callstack 0
   693  000146                     	ds	23
   694  00015D                     SensorLuz@F3722:
   695                           	callstack 0
   696  00015D                     	ds	21
   697  000172                     SensorTemperatura@F3717:
   698                           	callstack 0
   699  000172                     	ds	21
   700  000187                     SensorMovimiento@F3729:
   701                           	callstack 0
   702  000187                     	ds	20
   703  00019B                     SensorLuz@F3725:
   704                           	callstack 0
   705  00019B                     	ds	20
   706  0001AF                     _character2:
   707                           	callstack 0
   708  0001AF                     	ds	8
   709                           
   710                           	psect	dataBANK2
   711  000200                     __pdataBANK2:
   712                           	callstack 0
   713  000200                     SensorMovimiento@F3737:
   714                           	callstack 0
   715  000200                     	ds	35
   716                           
   717                           	psect	cstackBANK0
   718  000060                     __pcstackBANK0:
   719                           	callstack 0
   720  000060                     ?_vfprintf:
   721                           	callstack 0
   722  000060                     vfprintf@fp:
   723                           	callstack 0
   724  000060                     SensorLuz@buffer_TX3:
   725                           	callstack 0
   726  000060                     SensorMovimiento@buffer_TX5:
   727                           	callstack 0
   728                           
   729                           ; 35 bytes @ 0x0
   730  000060                     	ds	2
   731  000062                     vfprintf@fmt:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x2
   735  000062                     	ds	2
   736  000064                     vfprintf@ap:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x4
   740  000064                     	ds	2
   741  000066                     ?_sprintf:
   742                           	callstack 0
   743  000066                     sprintf@s:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x6
   747  000066                     	ds	2
   748  000068                     sprintf@fmt:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x8
   752  000068                     	ds	8
   753  000070                     sprintf@ap:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x10
   757  000070                     	ds	2
   758  000072                     sprintf@f:
   759                           	callstack 0
   760                           
   761                           ; 6 bytes @ 0x12
   762  000072                     	ds	3
   763  000075                     SensorLuz@buffer_TX4:
   764                           	callstack 0
   765                           
   766                           ; 20 bytes @ 0x15
   767  000075                     	ds	3
   768  000078                     SensorTemperatura@buffer_TX1:
   769                           	callstack 0
   770                           
   771                           ; 23 bytes @ 0x18
   772  000078                     	ds	11
   773  000083                     SensorMovimiento@buffer_TX6:
   774                           	callstack 0
   775                           
   776                           ; 35 bytes @ 0x23
   777  000083                     	ds	6
   778  000089                     SensorLuz@val:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x29
   782  000089                     	ds	4
   783  00008D                     SensorLuz@i:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2D
   787  00008D                     	ds	2
   788  00008F                     SensorLuz@i_909:
   789                           	callstack 0
   790  00008F                     SensorTemperatura@buffer_TX2:
   791                           	callstack 0
   792                           
   793                           ; 21 bytes @ 0x2F
   794  00008F                     	ds	21
   795  0000A4                     SensorTemperatura@Temperature:
   796                           	callstack 0
   797                           
   798                           ; 10 bytes @ 0x44
   799  0000A4                     	ds	2
   800  0000A6                     SensorMovimiento@buffer_TX7:
   801                           	callstack 0
   802                           
   803                           ; 35 bytes @ 0x46
   804  0000A6                     	ds	8
   805  0000AE                     SensorTemperatura@i:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x4E
   809  0000AE                     	ds	2
   810  0000B0                     SensorTemperatura@i_892:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x50
   814  0000B0                     	ds	2
   815  0000B2                     SensorTemperatura@celsius:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x52
   819  0000B2                     	ds	23
   820  0000C9                     SensorMovimiento@buf:
   821                           	callstack 0
   822                           
   823                           ; 20 bytes @ 0x69
   824  0000C9                     	ds	20
   825  0000DD                     SensorMovimiento@i:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x7D
   829  0000DD                     	ds	2
   830  0000DF                     SensorMovimiento@i_935:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x7F
   834  0000DF                     	ds	2
   835  0000E1                     SensorMovimiento@i_940:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x81
   839  0000E1                     	ds	2
   840                           
   841                           	psect	cstackCOMRAM
   842  000001                     __pcstackCOMRAM:
   843                           	callstack 0
   844  000001                     ?_strlen:
   845                           	callstack 0
   846  000001                     ?_isupper:
   847                           	callstack 0
   848  000001                     ?_isalpha:
   849                           	callstack 0
   850  000001                     ?_islower:
   851                           	callstack 0
   852  000001                     ?_ADC_Read:
   853                           	callstack 0
   854  000001                     ?___fltol:
   855                           	callstack 0
   856  000001                     ?___aodiv:
   857                           	callstack 0
   858  000001                     ?___aomod:
   859                           	callstack 0
   860  000001                     I2C_Read@flag:
   861                           	callstack 0
   862  000001                     I2C_Write@data:
   863                           	callstack 0
   864  000001                     ADC_Read@channel:
   865                           	callstack 0
   866  000001                     MSdelay@val:
   867                           	callstack 0
   868  000001                     memset@dest:
   869                           	callstack 0
   870  000001                     isalpha@c:
   871                           	callstack 0
   872  000001                     isupper@c:
   873                           	callstack 0
   874  000001                     fputc@c:
   875                           	callstack 0
   876  000001                     strlen@s:
   877                           	callstack 0
   878  000001                     islower@c:
   879                           	callstack 0
   880  000001                     ___flge@ff1:
   881                           	callstack 0
   882  000001                     ___fltol@f1:
   883                           	callstack 0
   884  000001                     ___aodiv@dividend:
   885                           	callstack 0
   886  000001                     ___aomod@dividend:
   887                           	callstack 0
   888                           
   889                           ; 8 bytes @ 0x0
   890  000001                     	ds	1
   891  000002                     I2C_Read@buffer:
   892                           	callstack 0
   893  000002                     I2C_Start@slave_write_address:
   894                           	callstack 0
   895  000002                     I2C_Repeated_Start@slave_read_address:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x1
   899  000002                     	ds	1
   900  000003                     ??_isupper:
   901  000003                     ??_isalpha:
   902  000003                     ??_islower:
   903  000003                     ??_ADC_Read:
   904  000003                     ??_RTC_Read_Clock:
   905  000003                     MSdelay@i:
   906                           	callstack 0
   907  000003                     memset@c:
   908                           	callstack 0
   909  000003                     fputc@fp:
   910                           	callstack 0
   911  000003                     strlen@a:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x2
   915  000003                     	ds	1
   916  000004                     RTC_Read_Clock@read_clock_address:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x3
   920  000004                     	ds	1
   921  000005                     ??_fputc:
   922  000005                     ??___fltol:
   923  000005                     MSdelay@j:
   924                           	callstack 0
   925  000005                     memset@n:
   926                           	callstack 0
   927  000005                     strcpy@dest:
   928                           	callstack 0
   929  000005                     ___flge@ff2:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x4
   933  000005                     	ds	2
   934  000007                     ??_memset:
   935  000007                     ?_toupper:
   936                           	callstack 0
   937  000007                     LCD_Command@cmd:
   938                           	callstack 0
   939  000007                     LCD_Char@char_data:
   940                           	callstack 0
   941  000007                     ADC_Read@digital:
   942                           	callstack 0
   943  000007                     strcpy@src:
   944                           	callstack 0
   945  000007                     toupper@c:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x6
   949  000007                     	ds	1
   950  000008                     LCD_String@msg:
   951                           	callstack 0
   952  000008                     LCD_Custom_Char@msg:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x7
   956  000008                     	ds	1
   957  000009                     ??_toupper:
   958  000009                     ??___flge:
   959  000009                     ?___xxtofl:
   960                           	callstack 0
   961  000009                     ___fltol@sign1:
   962                           	callstack 0
   963  000009                     memset@k:
   964                           	callstack 0
   965  000009                     strcpy@s:
   966                           	callstack 0
   967  000009                     ___xxtofl@val:
   968                           	callstack 0
   969  000009                     ___aodiv@divisor:
   970                           	callstack 0
   971  000009                     ___aomod@divisor:
   972                           	callstack 0
   973                           
   974                           ; 8 bytes @ 0x8
   975  000009                     	ds	1
   976  00000A                     ?_ctoa:
   977                           	callstack 0
   978  00000A                     LCD_String_xy@pos:
   979                           	callstack 0
   980  00000A                     LCD_Custom_Char@loc:
   981                           	callstack 0
   982  00000A                     ___fltol@exp1:
   983                           	callstack 0
   984  00000A                     ctoa@fp:
   985                           	callstack 0
   986  00000A                     fputs@s:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x9
   990  00000A                     	ds	1
   991  00000B                     LCD_Custom_Char@i:
   992                           	callstack 0
   993  00000B                     LCD_String_xy@str:
   994                           	callstack 0
   995  00000B                     memset@s:
   996                           	callstack 0
   997  00000B                     strcpy@d:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xA
  1001  00000B                     	ds	1
  1002  00000C                     ctoa@c:
  1003                           	callstack 0
  1004  00000C                     fputs@fp:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0xB
  1008  00000C                     	ds	1
  1009  00000D                     ??___xxtofl:
  1010  00000D                     ??_ctoa:
  1011  00000D                     LCD_String_xy@row:
  1012                           	callstack 0
  1013  00000D                     strcat@dest:
  1014                           	callstack 0
  1015  00000D                     _toupper$1600:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0xC
  1019  00000D                     	ds	1
  1020  00000E                     fputs@c:
  1021                           	callstack 0
  1022  00000E                     ctoa@l:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0xD
  1026  00000E                     	ds	1
  1027  00000F                     fputs@i:
  1028                           	callstack 0
  1029  00000F                     strcat@src:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0xE
  1033  00000F                     	ds	1
  1034  000010                     ctoa@w:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0xF
  1038  000010                     	ds	1
  1039  000011                     ?_pad:
  1040                           	callstack 0
  1041  000011                     ___aodiv@counter:
  1042                           	callstack 0
  1043  000011                     ___aomod@counter:
  1044                           	callstack 0
  1045  000011                     ___xxtofl@sign:
  1046                           	callstack 0
  1047  000011                     pad@fp:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x10
  1051  000011                     	ds	1
  1052  000012                     ___aodiv@sign:
  1053                           	callstack 0
  1054  000012                     ___aomod@sign:
  1055                           	callstack 0
  1056  000012                     ___xxtofl@exp:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x11
  1060  000012                     	ds	1
  1061  000013                     ?_abs:
  1062                           	callstack 0
  1063  000013                     pad@buf:
  1064                           	callstack 0
  1065  000013                     abs@a:
  1066                           	callstack 0
  1067  000013                     ___xxtofl@arg:
  1068                           	callstack 0
  1069  000013                     ___aodiv@quotient:
  1070                           	callstack 0
  1071                           
  1072                           ; 8 bytes @ 0x12
  1073  000013                     	ds	2
  1074  000015                     ??_abs:
  1075  000015                     pad@p:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x14
  1079  000015                     	ds	2
  1080  000017                     ??_pad:
  1081  000017                     ?___flmul:
  1082                           	callstack 0
  1083  000017                     ___flmul@b:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x16
  1087  000017                     	ds	1
  1088  000018                     pad@i:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x17
  1092  000018                     	ds	2
  1093  00001A                     pad@w:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x19
  1097  00001A                     	ds	1
  1098  00001B                     ___flmul@a:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x1A
  1102  00001B                     	ds	1
  1103  00001C                     ?_dtoa:
  1104                           	callstack 0
  1105  00001C                     ?_xtoa:
  1106                           	callstack 0
  1107  00001C                     dtoa@fp:
  1108                           	callstack 0
  1109  00001C                     xtoa@fp:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x1B
  1113  00001C                     	ds	2
  1114  00001E                     dtoa@d:
  1115                           	callstack 0
  1116  00001E                     xtoa@d:
  1117                           	callstack 0
  1118                           
  1119                           ; 8 bytes @ 0x1D
  1120  00001E                     	ds	1
  1121  00001F                     ??___flmul:
  1122                           
  1123                           ; 1 bytes @ 0x1E
  1124  00001F                     	ds	4
  1125  000023                     ___flmul@sign:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x22
  1129  000023                     	ds	1
  1130  000024                     ___flmul@grs:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x23
  1134  000024                     	ds	2
  1135  000026                     ??_dtoa:
  1136  000026                     xtoa@x:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x25
  1140  000026                     	ds	1
  1141  000027                     ??_xtoa:
  1142                           
  1143                           ; 1 bytes @ 0x26
  1144  000027                     	ds	1
  1145  000028                     ___flmul@aexp:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x27
  1149  000028                     	ds	1
  1150  000029                     ___flmul@bexp:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x28
  1154  000029                     	ds	1
  1155  00002A                     ___flmul@prod:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x29
  1159  00002A                     	ds	4
  1160  00002E                     ___flmul@temp:
  1161                           	callstack 0
  1162  00002E                     _dtoa$1489:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x2D
  1166  00002E                     	ds	1
  1167  00002F                     _xtoa$1500:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x2E
  1171  00002F                     	ds	1
  1172  000030                     ?___fldiv:
  1173                           	callstack 0
  1174  000030                     dtoa@p:
  1175                           	callstack 0
  1176  000030                     ___fldiv@b:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x2F
  1180  000030                     	ds	1
  1181  000031                     _xtoa$1501:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x30
  1185  000031                     	ds	1
  1186  000032                     dtoa@w:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x31
  1190  000032                     	ds	1
  1191  000033                     xtoa@p:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x32
  1195  000033                     	ds	1
  1196  000034                     dtoa@s:
  1197                           	callstack 0
  1198  000034                     ___fldiv@a:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x33
  1202  000034                     	ds	1
  1203  000035                     xtoa@w:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x34
  1207  000035                     	ds	1
  1208  000036                     dtoa@n:
  1209                           	callstack 0
  1210                           
  1211                           ; 8 bytes @ 0x35
  1212  000036                     	ds	1
  1213  000037                     xtoa@n:
  1214                           	callstack 0
  1215                           
  1216                           ; 8 bytes @ 0x36
  1217  000037                     	ds	1
  1218  000038                     ??___fldiv:
  1219                           
  1220                           ; 1 bytes @ 0x37
  1221  000038                     	ds	4
  1222  00003C                     ___fldiv@rem:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x3B
  1226  00003C                     	ds	2
  1227  00003E                     dtoa@i:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x3D
  1231  00003E                     	ds	1
  1232  00003F                     xtoa@i:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x3E
  1236  00003F                     	ds	1
  1237  000040                     ___fldiv@sign:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x3F
  1241  000040                     	ds	1
  1242  000041                     ___fldiv@new_exp:
  1243                           	callstack 0
  1244  000041                     xtoa@c:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x40
  1248  000041                     	ds	2
  1249  000043                     ?_vfpfcnvrt:
  1250                           	callstack 0
  1251  000043                     vfpfcnvrt@fp:
  1252                           	callstack 0
  1253  000043                     ___fldiv@grs:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x42
  1257  000043                     	ds	2
  1258  000045                     vfpfcnvrt@fmt:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x44
  1262  000045                     	ds	2
  1263  000047                     ___fldiv@bexp:
  1264                           	callstack 0
  1265  000047                     vfpfcnvrt@ap:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x46
  1269  000047                     	ds	1
  1270  000048                     ___fldiv@aexp:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x47
  1274  000048                     	ds	1
  1275  000049                     ??_vfpfcnvrt:
  1276                           
  1277                           ; 1 bytes @ 0x48
  1278  000049                     	ds	4
  1279  00004D                     vfpfcnvrt@ll:
  1280                           	callstack 0
  1281                           
  1282                           ; 8 bytes @ 0x4C
  1283  00004D                     	ds	8
  1284  000055                     vfpfcnvrt@llu:
  1285                           	callstack 0
  1286                           
  1287                           ; 8 bytes @ 0x54
  1288  000055                     	ds	8
  1289  00005D                     vfpfcnvrt@c:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x5C
  1293  00005D                     	ds	1
  1294  00005E                     vfprintf@cfmt:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x5D
  1298  00005E                     	ds	2
  1299  000060                     
  1300                           ; 1 bytes @ 0x5F
  1301 ;;
  1302 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1303 ;;
  1304 ;; *************** function _main *****************
  1305 ;; Defined at:
  1306 ;;		line 58 in file "Controler.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels required when called:    9
  1326 ;; This function calls:
  1327 ;;		_ADC_Init
  1328 ;;		_I2C_Init
  1329 ;;		_LCD_Init
  1330 ;;		_RTC
  1331 ;;		_SensorLuz
  1332 ;;		_SensorMovimiento
  1333 ;;		_SensorTemperatura
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340  002FC0                     __ptext0:
  1341                           	callstack 0
  1342  002FC0                     _main:
  1343                           	callstack 22
  1344  002FC0                     
  1345                           ;Controler.c: 60:     OSCCON = 0x72;
  1346  002FC0  0E72               	movlw	114
  1347  002FC2  6ED3               	movwf	211,c	;volatile
  1348  002FC4                     
  1349                           ;Controler.c: 61:     I2C_Init();
  1350  002FC4  EC24  F019         	call	_I2C_Init	;wreg free
  1351  002FC8                     
  1352                           ;Controler.c: 62:     LCD_Init();
  1353  002FC8  ECBB  F018         	call	_LCD_Init	;wreg free
  1354  002FCC                     
  1355                           ;Controler.c: 63:     ADC_Init();
  1356  002FCC  EC31  F019         	call	_ADC_Init	;wreg free
  1357  002FD0                     
  1358                           ;Controler.c: 64:     ADCON1 = 0x0F;
  1359  002FD0  0E0F               	movlw	15
  1360  002FD2  6EC1               	movwf	193,c	;volatile
  1361  002FD4                     
  1362                           ;Controler.c: 67:     TRISCbits.RC6 = 0;
  1363  002FD4  9C94               	bcf	148,6,c	;volatile
  1364  002FD6                     
  1365                           ;Controler.c: 68:     TXSTAbits.TX9 = 0;
  1366  002FD6  9CAC               	bcf	172,6,c	;volatile
  1367  002FD8                     
  1368                           ;Controler.c: 69:     TXSTAbits.TXEN = 1;
  1369  002FD8  8AAC               	bsf	172,5,c	;volatile
  1370  002FDA                     
  1371                           ;Controler.c: 70:     TXSTAbits.SYNC = 0;
  1372  002FDA  98AC               	bcf	172,4,c	;volatile
  1373  002FDC                     
  1374                           ;Controler.c: 71:     TXSTAbits.BRGH = 0;
  1375  002FDC  94AC               	bcf	172,2,c	;volatile
  1376  002FDE                     
  1377                           ;Controler.c: 72:     BAUDCONbits.BRG16 = 0;
  1378  002FDE  96B8               	bcf	184,3,c	;volatile
  1379  002FE0                     
  1380                           ;Controler.c: 73:     RCSTAbits.SPEN = 1;
  1381  002FE0  8EAB               	bsf	171,7,c	;volatile
  1382  002FE2                     
  1383                           ;Controler.c: 74:     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1384  002FE2  0E0C               	movlw	12
  1385  002FE4  6EAF               	movwf	175,c	;volatile
  1386  002FE6                     l3744:
  1387                           
  1388                           ;Controler.c: 78:         RTC();
  1389  002FE6  EC86  F015         	call	_RTC	;wreg free
  1390  002FEA                     
  1391                           ;Controler.c: 79:         SensorTemperatura();
  1392  002FEA  EC82  F00C         	call	_SensorTemperatura	;wreg free
  1393  002FEE                     
  1394                           ;Controler.c: 80:         SensorMovimiento();
  1395  002FEE  ECC9  F00D         	call	_SensorMovimiento	;wreg free
  1396  002FF2                     
  1397                           ;Controler.c: 81:         SensorLuz();
  1398  002FF2  ECA5  F00F         	call	_SensorLuz	;wreg free
  1399  002FF6  EFF3  F017         	goto	l3744
  1400  002FFA  EF00  F000         	goto	start
  1401  002FFE                     __end_of_main:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _SensorTemperatura *****************
  1405 ;; Defined at:
  1406 ;;		line 91 in file "Controler.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  i               2   80[BANK0 ] int 
  1411 ;;  i               2   78[BANK0 ] int 
  1412 ;;  buffer_TX2     21   47[BANK0 ] unsigned char [21]
  1413 ;;  buffer_TX1     23   24[BANK0 ] unsigned char [23]
  1414 ;;  Temperature    10   68[BANK0 ] unsigned char [10]
  1415 ;;  celsius         4   82[BANK0 ] float 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0      62       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         0      62       0       0       0       0       0       0       0
  1429 ;;Total ram usage:       62 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    8
  1432 ;; This function calls:
  1433 ;;		_ADC_Read
  1434 ;;		_LCD_Char
  1435 ;;		_LCD_Command
  1436 ;;		_LCD_Custom_Char
  1437 ;;		_LCD_String_xy
  1438 ;;		___fldiv
  1439 ;;		___flge
  1440 ;;		___flmul
  1441 ;;		___fltol
  1442 ;;		___xxtofl
  1443 ;;		_memset
  1444 ;;		_sprintf
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text1
  1451  001904                     __ptext1:
  1452                           	callstack 0
  1453  001904                     _SensorTemperatura:
  1454                           	callstack 22
  1455  001904                     
  1456                           ;Controler.c: 92:     char Temperature[10];;Controler.c: 93:     float celsius;;Controle
      +                          r.c: 94:     TRISBbits.RB2 = 0;
  1457  001904  9493               	bcf	147,2,c	;volatile
  1458                           
  1459                           ;Controler.c: 95:     TRISBbits.RB3 = 0;
  1460  001906  9693               	bcf	147,3,c	;volatile
  1461  001908                     
  1462                           ;Controler.c: 97:     LCD_String_xy(2, 0, "Temp: ");
  1463  001908  0E00               	movlw	0
  1464  00190A  6E0A               	movwf	LCD_String_xy@pos^0,c
  1465  00190C  0E4A               	movlw	low STR_1
  1466  00190E  6E0B               	movwf	LCD_String_xy@str^0,c
  1467  001910  0E08               	movlw	high STR_1
  1468  001912  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1469  001914  0E02               	movlw	2
  1470  001916  ECD2  F015         	call	_LCD_String_xy
  1471  00191A                     
  1472                           ;Controler.c: 98:     celsius = (ADC_Read(0)*4.88);
  1473  00191A  0E00               	movlw	0
  1474  00191C  6E02               	movwf	(ADC_Read@channel+1)^0,c
  1475  00191E  0E00               	movlw	0
  1476  001920  6E01               	movwf	ADC_Read@channel^0,c
  1477  001922  EC38  F015         	call	_ADC_Read	;wreg free
  1478  001926  C001  F009         	movff	?_ADC_Read,___xxtofl@val
  1479  00192A  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
  1480  00192E  0E00               	movlw	0
  1481  001930  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  1482  001932  0EFF               	movlw	-1
  1483  001934  6E0B               	movwf	(___xxtofl@val+2)^0,c
  1484  001936  6E0C               	movwf	(___xxtofl@val+3)^0,c
  1485  001938  0E01               	movlw	1
  1486  00193A  ECCB  F00E         	call	___xxtofl
  1487  00193E  C009  F017         	movff	?___xxtofl,___flmul@b
  1488  001942  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  1489  001946  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  1490  00194A  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  1491  00194E  0EF6               	movlw	246
  1492  001950  6E1B               	movwf	___flmul@a^0,c
  1493  001952  0E28               	movlw	40
  1494  001954  6E1C               	movwf	(___flmul@a+1)^0,c
  1495  001956  0E9C               	movlw	156
  1496  001958  6E1D               	movwf	(___flmul@a+2)^0,c
  1497  00195A  0E40               	movlw	64
  1498  00195C  6E1E               	movwf	(___flmul@a+3)^0,c
  1499  00195E  EC3C  F004         	call	___flmul	;wreg free
  1500  001962  C017  F0B2         	movff	?___flmul,SensorTemperatura@celsius
  1501  001966  C018  F0B3         	movff	?___flmul+1,SensorTemperatura@celsius+1
  1502  00196A  C019  F0B4         	movff	?___flmul+2,SensorTemperatura@celsius+2
  1503  00196E  C01A  F0B5         	movff	?___flmul+3,SensorTemperatura@celsius+3
  1504  001972                     
  1505                           ;Controler.c: 99:     celsius = (celsius / 10.00);
  1506  001972  C0B2  F030         	movff	SensorTemperatura@celsius,___fldiv@b
  1507  001976  C0B3  F031         	movff	SensorTemperatura@celsius+1,___fldiv@b+1
  1508  00197A  C0B4  F032         	movff	SensorTemperatura@celsius+2,___fldiv@b+2
  1509  00197E  C0B5  F033         	movff	SensorTemperatura@celsius+3,___fldiv@b+3
  1510  001982  0E00               	movlw	0
  1511  001984  6E34               	movwf	___fldiv@a^0,c
  1512  001986  0E00               	movlw	0
  1513  001988  6E35               	movwf	(___fldiv@a+1)^0,c
  1514  00198A  0E20               	movlw	32
  1515  00198C  6E36               	movwf	(___fldiv@a+2)^0,c
  1516  00198E  0E41               	movlw	65
  1517  001990  6E37               	movwf	(___fldiv@a+3)^0,c
  1518  001992  EC51  F006         	call	___fldiv	;wreg free
  1519  001996  C030  F0B2         	movff	?___fldiv,SensorTemperatura@celsius
  1520  00199A  C031  F0B3         	movff	?___fldiv+1,SensorTemperatura@celsius+1
  1521  00199E  C032  F0B4         	movff	?___fldiv+2,SensorTemperatura@celsius+2
  1522  0019A2  C033  F0B5         	movff	?___fldiv+3,SensorTemperatura@celsius+3
  1523  0019A6                     
  1524                           ;Controler.c: 100:     sprintf(Temperature, "%d%cC ", (int) celsius, 0xdf);
  1525  0019A6  0EA4               	movlw	low SensorTemperatura@Temperature
  1526  0019A8  0100               	movlb	0	; () banked
  1527  0019AA  6F66               	movwf	sprintf@s& (0+255),b
  1528  0019AC  0E00               	movlw	high SensorTemperatura@Temperature
  1529  0019AE  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1530  0019B0  0E51               	movlw	low STR_2
  1531  0019B2  6F68               	movwf	sprintf@fmt& (0+255),b
  1532  0019B4  0E08               	movlw	high STR_2
  1533  0019B6  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1534  0019B8  C0B2  F001         	movff	SensorTemperatura@celsius,___fltol@f1
  1535  0019BC  C0B3  F002         	movff	SensorTemperatura@celsius+1,___fltol@f1+1
  1536  0019C0  C0B4  F003         	movff	SensorTemperatura@celsius+2,___fltol@f1+2
  1537  0019C4  C0B5  F004         	movff	SensorTemperatura@celsius+3,___fltol@f1+3
  1538  0019C8  ECA3  F012         	call	___fltol	;wreg free
  1539  0019CC  C001  F06A         	movff	?___fltol,?_sprintf+4
  1540  0019D0  C002  F06B         	movff	?___fltol+1,?_sprintf+5
  1541  0019D4  0E00               	movlw	0
  1542  0019D6  0100               	movlb	0	; () banked
  1543  0019D8  6F6D               	movwf	(?_sprintf+7)& (0+255),b
  1544  0019DA  0EDF               	movlw	223
  1545  0019DC  6F6C               	movwf	(?_sprintf+6)& (0+255),b
  1546  0019DE  ECE9  F016         	call	_sprintf	;wreg free
  1547  0019E2                     
  1548                           ;Controler.c: 101:     LCD_String_xy(2, 6, Temperature);
  1549  0019E2  0E06               	movlw	6
  1550  0019E4  6E0A               	movwf	LCD_String_xy@pos^0,c
  1551  0019E6  0EA4               	movlw	low SensorTemperatura@Temperature
  1552  0019E8  6E0B               	movwf	LCD_String_xy@str^0,c
  1553  0019EA  0E00               	movlw	high SensorTemperatura@Temperature
  1554  0019EC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1555  0019EE  0E02               	movlw	2
  1556  0019F0  ECD2  F015         	call	_LCD_String_xy
  1557  0019F4                     
  1558                           ;Controler.c: 104:     memset(Temperature, 0, 10);
  1559  0019F4  0EA4               	movlw	low SensorTemperatura@Temperature
  1560  0019F6  6E01               	movwf	memset@dest^0,c
  1561  0019F8  0E00               	movlw	high SensorTemperatura@Temperature
  1562  0019FA  6E02               	movwf	(memset@dest+1)^0,c
  1563  0019FC  0E00               	movlw	0
  1564  0019FE  6E04               	movwf	(memset@c+1)^0,c
  1565  001A00  0E00               	movlw	0
  1566  001A02  6E03               	movwf	memset@c^0,c
  1567  001A04  0E00               	movlw	0
  1568  001A06  6E06               	movwf	(memset@n+1)^0,c
  1569  001A08  0E0A               	movlw	10
  1570  001A0A  6E05               	movwf	memset@n^0,c
  1571  001A0C  EC36  F011         	call	_memset	;wreg free
  1572  001A10                     
  1573                           ;Controler.c: 106:     if (celsius >= 20 && celsius <= 25) {
  1574  001A10  C0B2  F001         	movff	SensorTemperatura@celsius,___flge@ff1
  1575  001A14  C0B3  F002         	movff	SensorTemperatura@celsius+1,___flge@ff1+1
  1576  001A18  C0B4  F003         	movff	SensorTemperatura@celsius+2,___flge@ff1+2
  1577  001A1C  C0B5  F004         	movff	SensorTemperatura@celsius+3,___flge@ff1+3
  1578  001A20  0E00               	movlw	0
  1579  001A22  6E05               	movwf	___flge@ff2^0,c
  1580  001A24  0E00               	movlw	0
  1581  001A26  6E06               	movwf	(___flge@ff2+1)^0,c
  1582  001A28  0EA0               	movlw	160
  1583  001A2A  6E07               	movwf	(___flge@ff2+2)^0,c
  1584  001A2C  0E41               	movlw	65
  1585  001A2E  6E08               	movwf	(___flge@ff2+3)^0,c
  1586  001A30  EC26  F013         	call	___flge	;wreg free
  1587  001A34  A0D8               	btfss	status,0,c
  1588  001A36  EF1F  F00D         	goto	u3861
  1589  001A3A  EF21  F00D         	goto	u3860
  1590  001A3E                     u3861:
  1591  001A3E  EF82  F00D         	goto	l290
  1592  001A42                     u3860:
  1593  001A42  0E00               	movlw	0
  1594  001A44  6E01               	movwf	___flge@ff1^0,c
  1595  001A46  0E00               	movlw	0
  1596  001A48  6E02               	movwf	(___flge@ff1+1)^0,c
  1597  001A4A  0EC8               	movlw	200
  1598  001A4C  6E03               	movwf	(___flge@ff1+2)^0,c
  1599  001A4E  0E41               	movlw	65
  1600  001A50  6E04               	movwf	(___flge@ff1+3)^0,c
  1601  001A52  C0B2  F005         	movff	SensorTemperatura@celsius,___flge@ff2
  1602  001A56  C0B3  F006         	movff	SensorTemperatura@celsius+1,___flge@ff2+1
  1603  001A5A  C0B4  F007         	movff	SensorTemperatura@celsius+2,___flge@ff2+2
  1604  001A5E  C0B5  F008         	movff	SensorTemperatura@celsius+3,___flge@ff2+3
  1605  001A62  EC26  F013         	call	___flge	;wreg free
  1606  001A66  A0D8               	btfss	status,0,c
  1607  001A68  EF38  F00D         	goto	u3871
  1608  001A6C  EF3A  F00D         	goto	u3870
  1609  001A70                     u3871:
  1610  001A70  EF82  F00D         	goto	l290
  1611  001A74                     u3870:
  1612  001A74                     
  1613                           ;Controler.c: 107:         LATB2 = 1;
  1614  001A74  848A               	bsf	3978,2,c	;volatile
  1615                           
  1616                           ;Controler.c: 108:         LATB3 = 0;
  1617  001A76  968A               	bcf	3978,3,c	;volatile
  1618  001A78                     
  1619                           ;Controler.c: 109:         char buffer_TX1[] = "Calefaccion encendida\r";
  1620  001A78  EE21  F046         	lfsr	2,SensorTemperatura@F3714
  1621  001A7C  EE10  F078         	lfsr	1,SensorTemperatura@buffer_TX1
  1622  001A80  0E16               	movlw	22
  1623  001A82                     u3881:
  1624  001A82  CFDB FFE3          	movff	plusw2,plusw1
  1625  001A86  06E8               	decf	wreg,f,c
  1626  001A88  E2FC               	bc	u3881
  1627  001A8A                     
  1628                           ;Controler.c: 110:         for (int i = 0; i < 40; i++) {
  1629  001A8A  0E00               	movlw	0
  1630  001A8C  0100               	movlb	0	; () banked
  1631  001A8E  6FAF               	movwf	(SensorTemperatura@i+1)& (0+255),b
  1632  001A90  0E00               	movlw	0
  1633  001A92  6FAE               	movwf	SensorTemperatura@i& (0+255),b
  1634  001A94                     l295:
  1635                           
  1636                           ;Controler.c: 111:             while (!TXSTAbits.TRMT) {
  1637  001A94  A2AC               	btfss	172,1,c	;volatile
  1638  001A96  EF4F  F00D         	goto	u3891
  1639  001A9A  EF51  F00D         	goto	u3890
  1640  001A9E                     u3891:
  1641  001A9E  EF4A  F00D         	goto	l295
  1642  001AA2                     u3890:
  1643  001AA2                     
  1644                           ;Controler.c: 113:             TXREG = buffer_TX1[i];
  1645  001AA2  0E78               	movlw	low SensorTemperatura@buffer_TX1
  1646  001AA4  0100               	movlb	0	; () banked
  1647  001AA6  25AE               	addwf	SensorTemperatura@i& (0+255),w,b
  1648  001AA8  6ED9               	movwf	fsr2l,c
  1649  001AAA  0E00               	movlw	high SensorTemperatura@buffer_TX1
  1650  001AAC  21AF               	addwfc	(SensorTemperatura@i+1)& (0+255),w,b
  1651  001AAE  6EDA               	movwf	fsr2h,c
  1652  001AB0  50DF               	movf	indf2,w,c
  1653  001AB2  6EAD               	movwf	173,c	;volatile
  1654  001AB4                     
  1655                           ; BSR set to: 0
  1656                           ;Controler.c: 114:         }
  1657  001AB4  4BAE               	infsnz	SensorTemperatura@i& (0+255),f,b
  1658  001AB6  2BAF               	incf	(SensorTemperatura@i+1)& (0+255),f,b
  1659  001AB8                     
  1660                           ; BSR set to: 0
  1661  001AB8  BFAF               	btfsc	(SensorTemperatura@i+1)& (0+255),7,b
  1662  001ABA  EF68  F00D         	goto	u3901
  1663  001ABE  51AF               	movf	(SensorTemperatura@i+1)& (0+255),w,b
  1664  001AC0  E109               	bnz	u3900
  1665  001AC2  0E28               	movlw	40
  1666  001AC4  5DAE               	subwf	SensorTemperatura@i& (0+255),w,b
  1667  001AC6  A0D8               	btfss	status,0,c
  1668  001AC8  EF68  F00D         	goto	u3901
  1669  001ACC  EF6A  F00D         	goto	u3900
  1670  001AD0                     u3901:
  1671  001AD0  EF4A  F00D         	goto	l295
  1672  001AD4                     u3900:
  1673  001AD4                     
  1674                           ; BSR set to: 0
  1675                           ;Controler.c: 115:         LCD_String_xy(2,13,"Cal: ");
  1676  001AD4  0E0D               	movlw	13
  1677  001AD6  6E0A               	movwf	LCD_String_xy@pos^0,c
  1678  001AD8  0E6D               	movlw	low STR_3
  1679  001ADA  6E0B               	movwf	LCD_String_xy@str^0,c
  1680  001ADC  0E08               	movlw	high STR_3
  1681  001ADE  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1682  001AE0  0E02               	movlw	2
  1683  001AE2  ECD2  F015         	call	_LCD_String_xy
  1684  001AE6                     
  1685                           ;Controler.c: 116:         LCD_Custom_Char(0,character1);
  1686  001AE6  0EF1               	movlw	low _character1
  1687  001AE8  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1688  001AEA  0E00               	movlw	high _character1
  1689  001AEC  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1690  001AEE  0E00               	movlw	0
  1691  001AF0  EC37  F017         	call	_LCD_Custom_Char
  1692  001AF4                     
  1693                           ;Controler.c: 117:         LCD_Command(0xc0|(17));
  1694  001AF4  0ED1               	movlw	209
  1695  001AF6  EC16  F019         	call	_LCD_Command
  1696  001AFA                     
  1697                           ;Controler.c: 118:         LCD_Char(0);
  1698  001AFA  0E00               	movlw	0
  1699  001AFC  EC08  F019         	call	_LCD_Char
  1700                           
  1701                           ;Controler.c: 120:     } else {
  1702  001B00  EFC8  F00D         	goto	l306
  1703  001B04                     l290:
  1704                           
  1705                           ;Controler.c: 121:         LATB2 = 0;
  1706  001B04  948A               	bcf	3978,2,c	;volatile
  1707                           
  1708                           ;Controler.c: 122:         LATB3 = 1;
  1709  001B06  868A               	bsf	3978,3,c	;volatile
  1710  001B08                     
  1711                           ;Controler.c: 123:         char buffer_TX2[] = "Calefaccion apagada\r";
  1712  001B08  EE21  F072         	lfsr	2,SensorTemperatura@F3717
  1713  001B0C  EE10  F08F         	lfsr	1,SensorTemperatura@buffer_TX2
  1714  001B10  0E14               	movlw	20
  1715  001B12                     u3911:
  1716  001B12  CFDB FFE3          	movff	plusw2,plusw1
  1717  001B16  06E8               	decf	wreg,f,c
  1718  001B18  E2FC               	bc	u3911
  1719  001B1A                     
  1720                           ;Controler.c: 124:         for (int i = 0; i < 40; i++) {
  1721  001B1A  0E00               	movlw	0
  1722  001B1C  0100               	movlb	0	; () banked
  1723  001B1E  6FB1               	movwf	(SensorTemperatura@i_892+1)& (0+255),b
  1724  001B20  0E00               	movlw	0
  1725  001B22  6FB0               	movwf	SensorTemperatura@i_892& (0+255),b
  1726  001B24                     l303:
  1727                           
  1728                           ;Controler.c: 125:             while (!TXSTAbits.TRMT) {
  1729  001B24  A2AC               	btfss	172,1,c	;volatile
  1730  001B26  EF97  F00D         	goto	u3921
  1731  001B2A  EF99  F00D         	goto	u3920
  1732  001B2E                     u3921:
  1733  001B2E  EF92  F00D         	goto	l303
  1734  001B32                     u3920:
  1735  001B32                     
  1736                           ;Controler.c: 127:             TXREG = buffer_TX2[i];
  1737  001B32  0E8F               	movlw	low SensorTemperatura@buffer_TX2
  1738  001B34  0100               	movlb	0	; () banked
  1739  001B36  25B0               	addwf	SensorTemperatura@i_892& (0+255),w,b
  1740  001B38  6ED9               	movwf	fsr2l,c
  1741  001B3A  0E00               	movlw	high SensorTemperatura@buffer_TX2
  1742  001B3C  21B1               	addwfc	(SensorTemperatura@i_892+1)& (0+255),w,b
  1743  001B3E  6EDA               	movwf	fsr2h,c
  1744  001B40  50DF               	movf	indf2,w,c
  1745  001B42  6EAD               	movwf	173,c	;volatile
  1746  001B44                     
  1747                           ; BSR set to: 0
  1748                           ;Controler.c: 128:         }
  1749  001B44  4BB0               	infsnz	SensorTemperatura@i_892& (0+255),f,b
  1750  001B46  2BB1               	incf	(SensorTemperatura@i_892+1)& (0+255),f,b
  1751  001B48                     
  1752                           ; BSR set to: 0
  1753  001B48  BFB1               	btfsc	(SensorTemperatura@i_892+1)& (0+255),7,b
  1754  001B4A  EFB0  F00D         	goto	u3931
  1755  001B4E  51B1               	movf	(SensorTemperatura@i_892+1)& (0+255),w,b
  1756  001B50  E109               	bnz	u3930
  1757  001B52  0E28               	movlw	40
  1758  001B54  5DB0               	subwf	SensorTemperatura@i_892& (0+255),w,b
  1759  001B56  A0D8               	btfss	status,0,c
  1760  001B58  EFB0  F00D         	goto	u3931
  1761  001B5C  EFB2  F00D         	goto	u3930
  1762  001B60                     u3931:
  1763  001B60  EF92  F00D         	goto	l303
  1764  001B64                     u3930:
  1765  001B64                     
  1766                           ; BSR set to: 0
  1767                           ;Controler.c: 130:         LCD_String_xy(2,13,"Cal: ");
  1768  001B64  0E0D               	movlw	13
  1769  001B66  6E0A               	movwf	LCD_String_xy@pos^0,c
  1770  001B68  0E6D               	movlw	low STR_3
  1771  001B6A  6E0B               	movwf	LCD_String_xy@str^0,c
  1772  001B6C  0E08               	movlw	high STR_3
  1773  001B6E  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  1774  001B70  0E02               	movlw	2
  1775  001B72  ECD2  F015         	call	_LCD_String_xy
  1776  001B76                     
  1777                           ;Controler.c: 131:         LCD_Custom_Char(0,character2);
  1778  001B76  0EAF               	movlw	low _character2
  1779  001B78  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1780  001B7A  0E01               	movlw	high _character2
  1781  001B7C  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1782  001B7E  0E00               	movlw	0
  1783  001B80  EC37  F017         	call	_LCD_Custom_Char
  1784  001B84                     
  1785                           ;Controler.c: 132:         LCD_Command(0xc0|(17));
  1786  001B84  0ED1               	movlw	209
  1787  001B86  EC16  F019         	call	_LCD_Command
  1788  001B8A                     
  1789                           ;Controler.c: 133:         LCD_Char(0);
  1790  001B8A  0E00               	movlw	0
  1791  001B8C  EC08  F019         	call	_LCD_Char
  1792  001B90                     l306:
  1793  001B90  0012               	return		;funcret
  1794  001B92                     __end_of_SensorTemperatura:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _memset *****************
  1798 ;; Defined at:
  1799 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  dest            2    0[COMRAM] PTR void 
  1802 ;;		 -> SensorTemperatura@Temperature(10), 
  1803 ;;  c               2    2[COMRAM] int 
  1804 ;;  n               2    4[COMRAM] unsigned int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  s               2   10[COMRAM] PTR unsigned char 
  1807 ;;		 -> SensorTemperatura@Temperature(10), 
  1808 ;;  k               2    8[COMRAM] unsigned int 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2    0[COMRAM] PTR void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1818 ;;      Params:         6       0       0       0       0       0       0       0       0
  1819 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1820 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1821 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1822 ;;Total ram usage:       12 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_SensorTemperatura
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text2
  1832  00226C                     __ptext2:
  1833                           	callstack 0
  1834  00226C                     _memset:
  1835                           	callstack 29
  1836  00226C  C001  F00B         	movff	memset@dest,memset@s
  1837  002270  C002  F00C         	movff	memset@dest+1,memset@s+1
  1838  002274  5005               	movf	memset@n^0,w,c
  1839  002276  1006               	iorwf	(memset@n+1)^0,w,c
  1840  002278  A4D8               	btfss	status,2,c
  1841  00227A  EF41  F011         	goto	u3171
  1842  00227E  EF43  F011         	goto	u3170
  1843  002282                     u3171:
  1844  002282  EF45  F011         	goto	l3068
  1845  002286                     u3170:
  1846  002286  EFF0  F011         	goto	l1041
  1847  00228A                     l3068:
  1848  00228A  C00B  FFD9         	movff	memset@s,fsr2l
  1849  00228E  C00C  FFDA         	movff	memset@s+1,fsr2h
  1850  002292  C003  FFDF         	movff	memset@c,indf2
  1851  002296  5005               	movf	memset@n^0,w,c
  1852  002298  240B               	addwf	memset@s^0,w,c
  1853  00229A  6E07               	movwf	??_memset^0,c
  1854  00229C  5006               	movf	(memset@n+1)^0,w,c
  1855  00229E  200C               	addwfc	(memset@s+1)^0,w,c
  1856  0022A0  6E08               	movwf	(??_memset+1)^0,c
  1857  0022A2  0EFF               	movlw	255
  1858  0022A4  2407               	addwf	??_memset^0,w,c
  1859  0022A6  6ED9               	movwf	fsr2l,c
  1860  0022A8  0EFF               	movlw	255
  1861  0022AA  2008               	addwfc	(??_memset+1)^0,w,c
  1862  0022AC  6EDA               	movwf	fsr2h,c
  1863  0022AE  C003  FFDF         	movff	memset@c,indf2
  1864  0022B2  5006               	movf	(memset@n+1)^0,w,c
  1865  0022B4  E107               	bnz	u3181
  1866  0022B6  0E03               	movlw	3
  1867  0022B8  5C05               	subwf	memset@n^0,w,c
  1868  0022BA  B0D8               	btfsc	status,0,c
  1869  0022BC  EF62  F011         	goto	u3181
  1870  0022C0  EF64  F011         	goto	u3180
  1871  0022C4                     u3181:
  1872  0022C4  EF66  F011         	goto	l3074
  1873  0022C8                     u3180:
  1874  0022C8  EFF0  F011         	goto	l1041
  1875  0022CC                     l3074:
  1876  0022CC  EE20 F001          	lfsr	2,1
  1877  0022D0  500B               	movf	memset@s^0,w,c
  1878  0022D2  26D9               	addwf	fsr2l,f,c
  1879  0022D4  500C               	movf	(memset@s+1)^0,w,c
  1880  0022D6  22DA               	addwfc	fsr2h,f,c
  1881  0022D8  C003  FFDF         	movff	memset@c,indf2
  1882  0022DC  EE20 F002          	lfsr	2,2
  1883  0022E0  500B               	movf	memset@s^0,w,c
  1884  0022E2  26D9               	addwf	fsr2l,f,c
  1885  0022E4  500C               	movf	(memset@s+1)^0,w,c
  1886  0022E6  22DA               	addwfc	fsr2h,f,c
  1887  0022E8  C003  FFDF         	movff	memset@c,indf2
  1888  0022EC  5005               	movf	memset@n^0,w,c
  1889  0022EE  240B               	addwf	memset@s^0,w,c
  1890  0022F0  6E07               	movwf	??_memset^0,c
  1891  0022F2  5006               	movf	(memset@n+1)^0,w,c
  1892  0022F4  200C               	addwfc	(memset@s+1)^0,w,c
  1893  0022F6  6E08               	movwf	(??_memset+1)^0,c
  1894  0022F8  0EFE               	movlw	254
  1895  0022FA  2407               	addwf	??_memset^0,w,c
  1896  0022FC  6ED9               	movwf	fsr2l,c
  1897  0022FE  0EFF               	movlw	255
  1898  002300  2008               	addwfc	(??_memset+1)^0,w,c
  1899  002302  6EDA               	movwf	fsr2h,c
  1900  002304  C003  FFDF         	movff	memset@c,indf2
  1901  002308  5005               	movf	memset@n^0,w,c
  1902  00230A  240B               	addwf	memset@s^0,w,c
  1903  00230C  6E07               	movwf	??_memset^0,c
  1904  00230E  5006               	movf	(memset@n+1)^0,w,c
  1905  002310  200C               	addwfc	(memset@s+1)^0,w,c
  1906  002312  6E08               	movwf	(??_memset+1)^0,c
  1907  002314  0EFD               	movlw	253
  1908  002316  2407               	addwf	??_memset^0,w,c
  1909  002318  6ED9               	movwf	fsr2l,c
  1910  00231A  0EFF               	movlw	255
  1911  00231C  2008               	addwfc	(??_memset+1)^0,w,c
  1912  00231E  6EDA               	movwf	fsr2h,c
  1913  002320  C003  FFDF         	movff	memset@c,indf2
  1914  002324  5006               	movf	(memset@n+1)^0,w,c
  1915  002326  E107               	bnz	u3191
  1916  002328  0E07               	movlw	7
  1917  00232A  5C05               	subwf	memset@n^0,w,c
  1918  00232C  B0D8               	btfsc	status,0,c
  1919  00232E  EF9B  F011         	goto	u3191
  1920  002332  EF9D  F011         	goto	u3190
  1921  002336                     u3191:
  1922  002336  EF9F  F011         	goto	l3080
  1923  00233A                     u3190:
  1924  00233A  EFF0  F011         	goto	l1041
  1925  00233E                     l3080:
  1926  00233E  EE20 F003          	lfsr	2,3
  1927  002342  500B               	movf	memset@s^0,w,c
  1928  002344  26D9               	addwf	fsr2l,f,c
  1929  002346  500C               	movf	(memset@s+1)^0,w,c
  1930  002348  22DA               	addwfc	fsr2h,f,c
  1931  00234A  C003  FFDF         	movff	memset@c,indf2
  1932  00234E  5005               	movf	memset@n^0,w,c
  1933  002350  240B               	addwf	memset@s^0,w,c
  1934  002352  6E07               	movwf	??_memset^0,c
  1935  002354  5006               	movf	(memset@n+1)^0,w,c
  1936  002356  200C               	addwfc	(memset@s+1)^0,w,c
  1937  002358  6E08               	movwf	(??_memset+1)^0,c
  1938  00235A  0EFC               	movlw	252
  1939  00235C  2407               	addwf	??_memset^0,w,c
  1940  00235E  6ED9               	movwf	fsr2l,c
  1941  002360  0EFF               	movlw	255
  1942  002362  2008               	addwfc	(??_memset+1)^0,w,c
  1943  002364  6EDA               	movwf	fsr2h,c
  1944  002366  C003  FFDF         	movff	memset@c,indf2
  1945  00236A  5006               	movf	(memset@n+1)^0,w,c
  1946  00236C  E107               	bnz	u3201
  1947  00236E  0E09               	movlw	9
  1948  002370  5C05               	subwf	memset@n^0,w,c
  1949  002372  B0D8               	btfsc	status,0,c
  1950  002374  EFBE  F011         	goto	u3201
  1951  002378  EFC0  F011         	goto	u3200
  1952  00237C                     u3201:
  1953  00237C  EFC2  F011         	goto	l3086
  1954  002380                     u3200:
  1955  002380  EFF0  F011         	goto	l1041
  1956  002384                     l3086:
  1957  002384  C00B  F007         	movff	memset@s,??_memset
  1958  002388  C00C  F008         	movff	memset@s+1,??_memset+1
  1959  00238C  1E07               	comf	??_memset^0,f,c
  1960  00238E  1E08               	comf	(??_memset+1)^0,f,c
  1961  002390  4A07               	infsnz	??_memset^0,f,c
  1962  002392  2A08               	incf	(??_memset+1)^0,f,c
  1963  002394  0E03               	movlw	3
  1964  002396  1407               	andwf	??_memset^0,w,c
  1965  002398  6E09               	movwf	memset@k^0,c
  1966  00239A  6A0A               	clrf	(memset@k+1)^0,c
  1967  00239C  5009               	movf	memset@k^0,w,c
  1968  00239E  260B               	addwf	memset@s^0,f,c
  1969  0023A0  500A               	movf	(memset@k+1)^0,w,c
  1970  0023A2  220C               	addwfc	(memset@s+1)^0,f,c
  1971  0023A4  5009               	movf	memset@k^0,w,c
  1972  0023A6  5E05               	subwf	memset@n^0,f,c
  1973  0023A8  500A               	movf	(memset@k+1)^0,w,c
  1974  0023AA  5A06               	subwfb	(memset@n+1)^0,f,c
  1975  0023AC  0EFC               	movlw	252
  1976  0023AE  1605               	andwf	memset@n^0,f,c
  1977  0023B0  0EFF               	movlw	255
  1978  0023B2  1606               	andwf	(memset@n+1)^0,f,c
  1979  0023B4  EFE7  F011         	goto	l3094
  1980  0023B8                     l3088:
  1981  0023B8  C00B  FFD9         	movff	memset@s,fsr2l
  1982  0023BC  C00C  FFDA         	movff	memset@s+1,fsr2h
  1983  0023C0  C003  FFDF         	movff	memset@c,indf2
  1984  0023C4  0605               	decf	memset@n^0,f,c
  1985  0023C6  A0D8               	btfss	status,0,c
  1986  0023C8  0606               	decf	(memset@n+1)^0,f,c
  1987  0023CA  4A0B               	infsnz	memset@s^0,f,c
  1988  0023CC  2A0C               	incf	(memset@s+1)^0,f,c
  1989  0023CE                     l3094:
  1990  0023CE  5005               	movf	memset@n^0,w,c
  1991  0023D0  1006               	iorwf	(memset@n+1)^0,w,c
  1992  0023D2  A4D8               	btfss	status,2,c
  1993  0023D4  EFEE  F011         	goto	u3211
  1994  0023D8  EFF0  F011         	goto	u3210
  1995  0023DC                     u3211:
  1996  0023DC  EFDC  F011         	goto	l3088
  1997  0023E0                     u3210:
  1998  0023E0                     l1041:
  1999  0023E0  0012               	return		;funcret
  2000  0023E2                     __end_of_memset:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function ___fltol *****************
  2004 ;; Defined at:
  2005 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  f1              4    0[COMRAM] PTR void 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  exp1            1    9[COMRAM] unsigned char 
  2010 ;;  sign1           1    8[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  4    0[COMRAM] long 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2020 ;;      Params:         4       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2023 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:       10 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_SensorTemperatura
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text3
  2034  002546                     __ptext3:
  2035                           	callstack 0
  2036  002546                     ___fltol:
  2037                           	callstack 29
  2038  002546  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2039  002548  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2040  00254A  6E0A               	movwf	___fltol@exp1^0,c
  2041  00254C  500A               	movf	___fltol@exp1^0,w,c
  2042  00254E  A4D8               	btfss	status,2,c
  2043  002550  EFAC  F012         	goto	u3691
  2044  002554  EFAE  F012         	goto	u3690
  2045  002558                     u3691:
  2046  002558  EFB8  F012         	goto	l3404
  2047  00255C                     u3690:
  2048  00255C                     l3400:
  2049  00255C  0E00               	movlw	0
  2050  00255E  6E01               	movwf	?___fltol^0,c
  2051  002560  0E00               	movlw	0
  2052  002562  6E02               	movwf	(?___fltol+1)^0,c
  2053  002564  0E00               	movlw	0
  2054  002566  6E03               	movwf	(?___fltol+2)^0,c
  2055  002568  0E00               	movlw	0
  2056  00256A  6E04               	movwf	(?___fltol+3)^0,c
  2057  00256C  EF25  F013         	goto	l663
  2058  002570                     l3404:
  2059  002570  C001  F005         	movff	___fltol@f1,??___fltol
  2060  002574  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2061  002578  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2062  00257C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2063  002580  0E20               	movlw	32
  2064  002582  EFC8  F012         	goto	u3700
  2065  002586                     u3705:
  2066  002586  90D8               	bcf	status,0,c
  2067  002588  3208               	rrcf	(??___fltol+3)^0,f,c
  2068  00258A  3207               	rrcf	(??___fltol+2)^0,f,c
  2069  00258C  3206               	rrcf	(??___fltol+1)^0,f,c
  2070  00258E  3205               	rrcf	??___fltol^0,f,c
  2071  002590                     u3700:
  2072  002590  2EE8               	decfsz	wreg,f,c
  2073  002592  EFC3  F012         	goto	u3705
  2074  002596  5005               	movf	??___fltol^0,w,c
  2075  002598  6E09               	movwf	___fltol@sign1^0,c
  2076  00259A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2077  00259C  0EFF               	movlw	255
  2078  00259E  1601               	andwf	___fltol@f1^0,f,c
  2079  0025A0  0EFF               	movlw	255
  2080  0025A2  1602               	andwf	(___fltol@f1+1)^0,f,c
  2081  0025A4  0EFF               	movlw	255
  2082  0025A6  1603               	andwf	(___fltol@f1+2)^0,f,c
  2083  0025A8  0E00               	movlw	0
  2084  0025AA  1604               	andwf	(___fltol@f1+3)^0,f,c
  2085  0025AC  0E96               	movlw	150
  2086  0025AE  5E0A               	subwf	___fltol@exp1^0,f,c
  2087  0025B0  BE0A               	btfsc	___fltol@exp1^0,7,c
  2088  0025B2  EFDF  F012         	goto	u3710
  2089  0025B6  EFDD  F012         	goto	u3711
  2090  0025BA                     u3711:
  2091  0025BA  EFF5  F012         	goto	l3424
  2092  0025BE                     u3710:
  2093  0025BE  500A               	movf	___fltol@exp1^0,w,c
  2094  0025C0  0A80               	xorlw	128
  2095  0025C2  0F97               	addlw	151
  2096  0025C4  B0D8               	btfsc	status,0,c
  2097  0025C6  EFE7  F012         	goto	u3721
  2098  0025CA  EFE9  F012         	goto	u3720
  2099  0025CE                     u3721:
  2100  0025CE  EFEB  F012         	goto	l3420
  2101  0025D2                     u3720:
  2102  0025D2  EFAE  F012         	goto	l3400
  2103  0025D6                     l3420:
  2104  0025D6  90D8               	bcf	status,0,c
  2105  0025D8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2106  0025DA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2107  0025DC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2108  0025DE  3201               	rrcf	___fltol@f1^0,f,c
  2109  0025E0  3E0A               	incfsz	___fltol@exp1^0,f,c
  2110  0025E2  EFEB  F012         	goto	l3420
  2111  0025E6  EF0D  F013         	goto	l3434
  2112  0025EA                     l3424:
  2113  0025EA  0E1F               	movlw	31
  2114  0025EC  640A               	cpfsgt	___fltol@exp1^0,c
  2115  0025EE  EFFB  F012         	goto	u3731
  2116  0025F2  EFFD  F012         	goto	u3730
  2117  0025F6                     u3731:
  2118  0025F6  EF05  F013         	goto	l3432
  2119  0025FA                     u3730:
  2120  0025FA  EFAE  F012         	goto	l3400
  2121  0025FE                     l3430:
  2122  0025FE  90D8               	bcf	status,0,c
  2123  002600  3601               	rlcf	___fltol@f1^0,f,c
  2124  002602  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2125  002604  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2126  002606  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2127  002608  060A               	decf	___fltol@exp1^0,f,c
  2128  00260A                     l3432:
  2129  00260A  500A               	movf	___fltol@exp1^0,w,c
  2130  00260C  A4D8               	btfss	status,2,c
  2131  00260E  EF0B  F013         	goto	u3741
  2132  002612  EF0D  F013         	goto	u3740
  2133  002616                     u3741:
  2134  002616  EFFF  F012         	goto	l3430
  2135  00261A                     u3740:
  2136  00261A                     l3434:
  2137  00261A  5009               	movf	___fltol@sign1^0,w,c
  2138  00261C  B4D8               	btfsc	status,2,c
  2139  00261E  EF13  F013         	goto	u3751
  2140  002622  EF15  F013         	goto	u3750
  2141  002626                     u3751:
  2142  002626  EF1D  F013         	goto	l3438
  2143  00262A                     u3750:
  2144  00262A  1E04               	comf	(___fltol@f1+3)^0,f,c
  2145  00262C  1E03               	comf	(___fltol@f1+2)^0,f,c
  2146  00262E  1E02               	comf	(___fltol@f1+1)^0,f,c
  2147  002630  6C01               	negf	___fltol@f1^0,c
  2148  002632  0E00               	movlw	0
  2149  002634  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2150  002636  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2151  002638  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2152  00263A                     l3438:
  2153  00263A  C001  F001         	movff	___fltol@f1,?___fltol
  2154  00263E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2155  002642  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2156  002646  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2157  00264A                     l663:
  2158  00264A  0012               	return		;funcret
  2159  00264C                     __end_of___fltol:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _LCD_Custom_Char *****************
  2163 ;; Defined at:
  2164 ;;		line 95 in file "LCD_20x4.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  loc             1    wreg     unsigned char 
  2167 ;;  msg             2    7[COMRAM] PTR unsigned char 
  2168 ;;		 -> character2(8), character1(8), 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  loc             1    9[COMRAM] unsigned char 
  2171 ;;  i               1   10[COMRAM] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2181 ;;      Params:         2       0       0       0       0       0       0       0       0
  2182 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2184 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        4 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    2
  2188 ;; This function calls:
  2189 ;;		_LCD_Char
  2190 ;;		_LCD_Command
  2191 ;; This function is called by:
  2192 ;;		_SensorTemperatura
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text4
  2197  002E6E                     __ptext4:
  2198                           	callstack 0
  2199  002E6E                     _LCD_Custom_Char:
  2200                           	callstack 27
  2201                           
  2202                           ;incstack = 0
  2203                           ;LCD_Custom_Char@loc stored from wreg
  2204  002E6E  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  2205  002E70                     
  2206                           ;LCD_20x4.c: 95: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD_20x4.c: 
      +                          96: {;LCD_20x4.c: 97:     unsigned char i;;LCD_20x4.c: 98:     if(loc<8)
  2207  002E70  0E08               	movlw	8
  2208  002E72  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  2209  002E74  EF3E  F017         	goto	u3141
  2210  002E78  EF40  F017         	goto	u3140
  2211  002E7C                     u3141:
  2212  002E7C  EF5A  F017         	goto	l77
  2213  002E80                     u3140:
  2214  002E80                     
  2215                           ;LCD_20x4.c: 99:     {;LCD_20x4.c: 100:      LCD_Command(0x40+(loc*8));
  2216  002E80  500A               	movf	LCD_Custom_Char@loc^0,w,c
  2217  002E82  0D08               	mullw	8
  2218  002E84  50F3               	movf	243,w,c
  2219  002E86  0F40               	addlw	64
  2220  002E88  EC16  F019         	call	_LCD_Command
  2221  002E8C                     
  2222                           ;LCD_20x4.c: 101:        for(i=0;i<8;i++)
  2223  002E8C  0E00               	movlw	0
  2224  002E8E  6E0B               	movwf	LCD_Custom_Char@i^0,c
  2225  002E90                     l3044:
  2226                           
  2227                           ;LCD_20x4.c: 102:            LCD_Char(msg[i]);
  2228  002E90  500B               	movf	LCD_Custom_Char@i^0,w,c
  2229  002E92  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  2230  002E94  6ED9               	movwf	fsr2l,c
  2231  002E96  0E00               	movlw	0
  2232  002E98  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  2233  002E9A  6EDA               	movwf	fsr2h,c
  2234  002E9C  50DF               	movf	indf2,w,c
  2235  002E9E  EC08  F019         	call	_LCD_Char
  2236  002EA2  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  2237  002EA4  0E07               	movlw	7
  2238  002EA6  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  2239  002EA8  EF58  F017         	goto	u3151
  2240  002EAC  EF5A  F017         	goto	u3150
  2241  002EB0                     u3151:
  2242  002EB0  EF48  F017         	goto	l3044
  2243  002EB4                     u3150:
  2244  002EB4                     l77:
  2245  002EB4  0012               	return		;funcret
  2246  002EB6                     __end_of_LCD_Custom_Char:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _SensorMovimiento *****************
  2250 ;; Defined at:
  2251 ;;		line 173 in file "Controler.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               2  129[BANK0 ] int 
  2256 ;;  i               2  127[BANK0 ] int 
  2257 ;;  i               2  125[BANK0 ] int 
  2258 ;;  buffer_TX7     35   70[BANK0 ] unsigned char [35]
  2259 ;;  buffer_TX6     35   35[BANK0 ] unsigned char [35]
  2260 ;;  buffer_TX5     35    0[BANK0 ] unsigned char [35]
  2261 ;;  buf            20  105[BANK0 ] unsigned char [20]
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0
  2272 ;;      Locals:         0     131       0       0       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2274 ;;      Totals:         0     131       0       0       0       0       0       0       0
  2275 ;;Total ram usage:      131 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    4
  2278 ;; This function calls:
  2279 ;;		_LCD_String_xy
  2280 ;;		_strcat
  2281 ;;		_strcpy
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text5
  2288  001B92                     __ptext5:
  2289                           	callstack 0
  2290  001B92                     _SensorMovimiento:
  2291                           	callstack 26
  2292  001B92                     
  2293                           ;Controler.c: 174:     ADCON1 = 0x0F;
  2294  001B92  0E0F               	movlw	15
  2295  001B94  6EC1               	movwf	193,c	;volatile
  2296  001B96                     
  2297                           ;Controler.c: 175:     TRISAbits.RA2 = 1;
  2298  001B96  8492               	bsf	146,2,c	;volatile
  2299  001B98                     
  2300                           ;Controler.c: 176:     TRISAbits.RA3 = 1;
  2301  001B98  8692               	bsf	146,3,c	;volatile
  2302  001B9A                     
  2303                           ;Controler.c: 177:     TRISAbits.RA4 = 1;
  2304  001B9A  8892               	bsf	146,4,c	;volatile
  2305  001B9C                     
  2306                           ;Controler.c: 178:     TRISCbits.RC0 = 0;
  2307  001B9C  9094               	bcf	148,0,c	;volatile
  2308  001B9E                     
  2309                           ;Controler.c: 179:     TRISCbits.RC1 = 0;
  2310  001B9E  9294               	bcf	148,1,c	;volatile
  2311  001BA0                     
  2312                           ;Controler.c: 180:     TRISCbits.RC2 = 0;
  2313  001BA0  9494               	bcf	148,2,c	;volatile
  2314  001BA2                     
  2315                           ;Controler.c: 181:     char buf[20] = "0";
  2316  001BA2  EE21  F087         	lfsr	2,SensorMovimiento@F3729
  2317  001BA6  EE10  F0C9         	lfsr	1,SensorMovimiento@buf
  2318  001BAA  0E13               	movlw	19
  2319  001BAC                     u3941:
  2320  001BAC  CFDB FFE3          	movff	plusw2,plusw1
  2321  001BB0  06E8               	decf	wreg,f,c
  2322  001BB2  E2FC               	bc	u3941
  2323  001BB4                     
  2324                           ;Controler.c: 183:     if (PORTAbits.RA2) {
  2325  001BB4  A480               	btfss	128,2,c	;volatile
  2326  001BB6  EFDF  F00D         	goto	u3951
  2327  001BBA  EFE1  F00D         	goto	u3950
  2328  001BBE                     u3951:
  2329  001BBE  EF1C  F00E         	goto	l330
  2330  001BC2                     u3950:
  2331  001BC2                     
  2332                           ;Controler.c: 184:         LATC0 = 1;
  2333  001BC2  808B               	bsf	3979,0,c	;volatile
  2334  001BC4                     
  2335                           ;Controler.c: 185:         strcpy(buf,"1:ON  ");
  2336  001BC4  0EC9               	movlw	low SensorMovimiento@buf
  2337  001BC6  6E05               	movwf	strcpy@dest^0,c
  2338  001BC8  0E00               	movlw	high SensorMovimiento@buf
  2339  001BCA  6E06               	movwf	(strcpy@dest+1)^0,c
  2340  001BCC  0E35               	movlw	low STR_7
  2341  001BCE  6E07               	movwf	strcpy@src^0,c
  2342  001BD0  0E08               	movlw	high STR_7
  2343  001BD2  6E08               	movwf	(strcpy@src+1)^0,c
  2344  001BD4  ECA0  F017         	call	_strcpy	;wreg free
  2345  001BD8                     
  2346                           ;Controler.c: 187:         char buffer_TX5[] = "Se detecto presencia habitacion 1\r";
  2347  001BD8  EE21  F023         	lfsr	2,SensorMovimiento@F3731
  2348  001BDC  EE10  F060         	lfsr	1,SensorMovimiento@buffer_TX5
  2349  001BE0  0E22               	movlw	34
  2350  001BE2                     u3961:
  2351  001BE2  CFDB FFE3          	movff	plusw2,plusw1
  2352  001BE6  06E8               	decf	wreg,f,c
  2353  001BE8  E2FC               	bc	u3961
  2354  001BEA                     
  2355                           ;Controler.c: 188:         for (int i = 0; i < 40; i++) {
  2356  001BEA  0E00               	movlw	0
  2357  001BEC  0100               	movlb	0	; () banked
  2358  001BEE  6FDE               	movwf	(SensorMovimiento@i+1)& (0+255),b
  2359  001BF0  0E00               	movlw	0
  2360  001BF2  6FDD               	movwf	SensorMovimiento@i& (0+255),b
  2361  001BF4                     l335:
  2362                           
  2363                           ;Controler.c: 189:             while (!TXSTAbits.TRMT) {
  2364  001BF4  A2AC               	btfss	172,1,c	;volatile
  2365  001BF6  EFFF  F00D         	goto	u3971
  2366  001BFA  EF01  F00E         	goto	u3970
  2367  001BFE                     u3971:
  2368  001BFE  EFFA  F00D         	goto	l335
  2369  001C02                     u3970:
  2370  001C02                     
  2371                           ;Controler.c: 191:             TXREG = buffer_TX5[i];
  2372  001C02  0E60               	movlw	low SensorMovimiento@buffer_TX5
  2373  001C04  0100               	movlb	0	; () banked
  2374  001C06  25DD               	addwf	SensorMovimiento@i& (0+255),w,b
  2375  001C08  6ED9               	movwf	fsr2l,c
  2376  001C0A  0E00               	movlw	high SensorMovimiento@buffer_TX5
  2377  001C0C  21DE               	addwfc	(SensorMovimiento@i+1)& (0+255),w,b
  2378  001C0E  6EDA               	movwf	fsr2h,c
  2379  001C10  50DF               	movf	indf2,w,c
  2380  001C12  6EAD               	movwf	173,c	;volatile
  2381  001C14                     
  2382                           ; BSR set to: 0
  2383                           ;Controler.c: 192:         }
  2384  001C14  4BDD               	infsnz	SensorMovimiento@i& (0+255),f,b
  2385  001C16  2BDE               	incf	(SensorMovimiento@i+1)& (0+255),f,b
  2386  001C18                     
  2387                           ; BSR set to: 0
  2388  001C18  BFDE               	btfsc	(SensorMovimiento@i+1)& (0+255),7,b
  2389  001C1A  EF18  F00E         	goto	u3981
  2390  001C1E  51DE               	movf	(SensorMovimiento@i+1)& (0+255),w,b
  2391  001C20  E109               	bnz	u3980
  2392  001C22  0E28               	movlw	40
  2393  001C24  5DDD               	subwf	SensorMovimiento@i& (0+255),w,b
  2394  001C26  A0D8               	btfss	status,0,c
  2395  001C28  EF18  F00E         	goto	u3981
  2396  001C2C  EF1A  F00E         	goto	u3980
  2397  001C30                     u3981:
  2398  001C30  EFFA  F00D         	goto	l335
  2399  001C34                     u3980:
  2400  001C34  EF27  F00E         	goto	l3620
  2401  001C38                     l330:
  2402                           
  2403                           ;Controler.c: 195:         LATC0 = 0;
  2404  001C38  908B               	bcf	3979,0,c	;volatile
  2405  001C3A                     
  2406                           ;Controler.c: 196:         strcpy(buf,"1:OFF ");
  2407  001C3A  0EC9               	movlw	low SensorMovimiento@buf
  2408  001C3C  6E05               	movwf	strcpy@dest^0,c
  2409  001C3E  0E00               	movlw	high SensorMovimiento@buf
  2410  001C40  6E06               	movwf	(strcpy@dest+1)^0,c
  2411  001C42  0E58               	movlw	low STR_8
  2412  001C44  6E07               	movwf	strcpy@src^0,c
  2413  001C46  0E08               	movlw	high STR_8
  2414  001C48  6E08               	movwf	(strcpy@src+1)^0,c
  2415  001C4A  ECA0  F017         	call	_strcpy	;wreg free
  2416  001C4E                     l3620:
  2417                           
  2418                           ;Controler.c: 200:     if (PORTAbits.RA3) {
  2419  001C4E  A680               	btfss	128,3,c	;volatile
  2420  001C50  EF2C  F00E         	goto	u3991
  2421  001C54  EF2E  F00E         	goto	u3990
  2422  001C58                     u3991:
  2423  001C58  EF69  F00E         	goto	l339
  2424  001C5C                     u3990:
  2425  001C5C                     
  2426                           ;Controler.c: 201:         LATC1 = 1;
  2427  001C5C  828B               	bsf	3979,1,c	;volatile
  2428  001C5E                     
  2429                           ;Controler.c: 202:         strcat(buf,"2:ON  ");
  2430  001C5E  0EC9               	movlw	low SensorMovimiento@buf
  2431  001C60  6E0D               	movwf	strcat@dest^0,c
  2432  001C62  0E00               	movlw	high SensorMovimiento@buf
  2433  001C64  6E0E               	movwf	(strcat@dest+1)^0,c
  2434  001C66  0E3C               	movlw	low STR_9
  2435  001C68  6E0F               	movwf	strcat@src^0,c
  2436  001C6A  0E08               	movlw	high STR_9
  2437  001C6C  6E10               	movwf	(strcat@src+1)^0,c
  2438  001C6E  ECD2  F018         	call	_strcat	;wreg free
  2439  001C72                     
  2440                           ;Controler.c: 204:         char buffer_TX6[] = "Se detecto presencia habitacion 2\r";
  2441  001C72  EE21  F000         	lfsr	2,SensorMovimiento@F3734
  2442  001C76  EE10  F083         	lfsr	1,SensorMovimiento@buffer_TX6
  2443  001C7A  0E22               	movlw	34
  2444  001C7C                     u4001:
  2445  001C7C  CFDB FFE3          	movff	plusw2,plusw1
  2446  001C80  06E8               	decf	wreg,f,c
  2447  001C82  E2FC               	bc	u4001
  2448  001C84                     
  2449                           ;Controler.c: 205:         for (int i = 0; i < 40; i++) {
  2450  001C84  0E00               	movlw	0
  2451  001C86  0100               	movlb	0	; () banked
  2452  001C88  6FE0               	movwf	(SensorMovimiento@i_935+1)& (0+255),b
  2453  001C8A  0E00               	movlw	0
  2454  001C8C  6FDF               	movwf	SensorMovimiento@i_935& (0+255),b
  2455  001C8E                     l344:
  2456                           
  2457                           ;Controler.c: 206:             while (!TXSTAbits.TRMT) {
  2458  001C8E  A2AC               	btfss	172,1,c	;volatile
  2459  001C90  EF4C  F00E         	goto	u4011
  2460  001C94  EF4E  F00E         	goto	u4010
  2461  001C98                     u4011:
  2462  001C98  EF47  F00E         	goto	l344
  2463  001C9C                     u4010:
  2464  001C9C                     
  2465                           ;Controler.c: 208:             TXREG = buffer_TX6[i];
  2466  001C9C  0E83               	movlw	low SensorMovimiento@buffer_TX6
  2467  001C9E  0100               	movlb	0	; () banked
  2468  001CA0  25DF               	addwf	SensorMovimiento@i_935& (0+255),w,b
  2469  001CA2  6ED9               	movwf	fsr2l,c
  2470  001CA4  0E00               	movlw	high SensorMovimiento@buffer_TX6
  2471  001CA6  21E0               	addwfc	(SensorMovimiento@i_935+1)& (0+255),w,b
  2472  001CA8  6EDA               	movwf	fsr2h,c
  2473  001CAA  50DF               	movf	indf2,w,c
  2474  001CAC  6EAD               	movwf	173,c	;volatile
  2475  001CAE                     
  2476                           ; BSR set to: 0
  2477                           ;Controler.c: 209:         }
  2478  001CAE  4BDF               	infsnz	SensorMovimiento@i_935& (0+255),f,b
  2479  001CB0  2BE0               	incf	(SensorMovimiento@i_935+1)& (0+255),f,b
  2480  001CB2                     
  2481                           ; BSR set to: 0
  2482  001CB2  BFE0               	btfsc	(SensorMovimiento@i_935+1)& (0+255),7,b
  2483  001CB4  EF65  F00E         	goto	u4021
  2484  001CB8  51E0               	movf	(SensorMovimiento@i_935+1)& (0+255),w,b
  2485  001CBA  E109               	bnz	u4020
  2486  001CBC  0E28               	movlw	40
  2487  001CBE  5DDF               	subwf	SensorMovimiento@i_935& (0+255),w,b
  2488  001CC0  A0D8               	btfss	status,0,c
  2489  001CC2  EF65  F00E         	goto	u4021
  2490  001CC6  EF67  F00E         	goto	u4020
  2491  001CCA                     u4021:
  2492  001CCA  EF47  F00E         	goto	l344
  2493  001CCE                     u4020:
  2494  001CCE  EF74  F00E         	goto	l3642
  2495  001CD2                     l339:
  2496                           
  2497                           ;Controler.c: 212:         LATC1 = 0;
  2498  001CD2  928B               	bcf	3979,1,c	;volatile
  2499  001CD4                     
  2500                           ;Controler.c: 213:         strcat(buf,"2:OFF ");
  2501  001CD4  0EC9               	movlw	low SensorMovimiento@buf
  2502  001CD6  6E0D               	movwf	strcat@dest^0,c
  2503  001CD8  0E00               	movlw	high SensorMovimiento@buf
  2504  001CDA  6E0E               	movwf	(strcat@dest+1)^0,c
  2505  001CDC  0E5F               	movlw	low STR_10
  2506  001CDE  6E0F               	movwf	strcat@src^0,c
  2507  001CE0  0E08               	movlw	high STR_10
  2508  001CE2  6E10               	movwf	(strcat@src+1)^0,c
  2509  001CE4  ECD2  F018         	call	_strcat	;wreg free
  2510  001CE8                     l3642:
  2511                           
  2512                           ;Controler.c: 217:     if (PORTAbits.RA4) {
  2513  001CE8  A880               	btfss	128,4,c	;volatile
  2514  001CEA  EF79  F00E         	goto	u4031
  2515  001CEE  EF7B  F00E         	goto	u4030
  2516  001CF2                     u4031:
  2517  001CF2  EFB6  F00E         	goto	l348
  2518  001CF6                     u4030:
  2519  001CF6                     
  2520                           ;Controler.c: 218:         LATC2 = 1;
  2521  001CF6  848B               	bsf	3979,2,c	;volatile
  2522  001CF8                     
  2523                           ;Controler.c: 219:         strcat(buf,"3:ON  ");
  2524  001CF8  0EC9               	movlw	low SensorMovimiento@buf
  2525  001CFA  6E0D               	movwf	strcat@dest^0,c
  2526  001CFC  0E00               	movlw	high SensorMovimiento@buf
  2527  001CFE  6E0E               	movwf	(strcat@dest+1)^0,c
  2528  001D00  0E43               	movlw	low STR_11
  2529  001D02  6E0F               	movwf	strcat@src^0,c
  2530  001D04  0E08               	movlw	high STR_11
  2531  001D06  6E10               	movwf	(strcat@src+1)^0,c
  2532  001D08  ECD2  F018         	call	_strcat	;wreg free
  2533  001D0C                     
  2534                           ;Controler.c: 221:         char buffer_TX7[] = "Se detecto presencia habitacion 3\r";
  2535  001D0C  EE22  F000         	lfsr	2,SensorMovimiento@F3737
  2536  001D10  EE10  F0A6         	lfsr	1,SensorMovimiento@buffer_TX7
  2537  001D14  0E22               	movlw	34
  2538  001D16                     u4041:
  2539  001D16  CFDB FFE3          	movff	plusw2,plusw1
  2540  001D1A  06E8               	decf	wreg,f,c
  2541  001D1C  E2FC               	bc	u4041
  2542  001D1E                     
  2543                           ;Controler.c: 222:         for (int i = 0; i < 40; i++) {
  2544  001D1E  0E00               	movlw	0
  2545  001D20  0100               	movlb	0	; () banked
  2546  001D22  6FE2               	movwf	(SensorMovimiento@i_940+1)& (0+255),b
  2547  001D24  0E00               	movlw	0
  2548  001D26  6FE1               	movwf	SensorMovimiento@i_940& (0+255),b
  2549  001D28                     l353:
  2550                           
  2551                           ;Controler.c: 223:             while (!TXSTAbits.TRMT) {
  2552  001D28  A2AC               	btfss	172,1,c	;volatile
  2553  001D2A  EF99  F00E         	goto	u4051
  2554  001D2E  EF9B  F00E         	goto	u4050
  2555  001D32                     u4051:
  2556  001D32  EF94  F00E         	goto	l353
  2557  001D36                     u4050:
  2558  001D36                     
  2559                           ;Controler.c: 225:             TXREG = buffer_TX7[i];
  2560  001D36  0EA6               	movlw	low SensorMovimiento@buffer_TX7
  2561  001D38  0100               	movlb	0	; () banked
  2562  001D3A  25E1               	addwf	SensorMovimiento@i_940& (0+255),w,b
  2563  001D3C  6ED9               	movwf	fsr2l,c
  2564  001D3E  0E00               	movlw	high SensorMovimiento@buffer_TX7
  2565  001D40  21E2               	addwfc	(SensorMovimiento@i_940+1)& (0+255),w,b
  2566  001D42  6EDA               	movwf	fsr2h,c
  2567  001D44  50DF               	movf	indf2,w,c
  2568  001D46  6EAD               	movwf	173,c	;volatile
  2569  001D48                     
  2570                           ; BSR set to: 0
  2571                           ;Controler.c: 226:         }
  2572  001D48  4BE1               	infsnz	SensorMovimiento@i_940& (0+255),f,b
  2573  001D4A  2BE2               	incf	(SensorMovimiento@i_940+1)& (0+255),f,b
  2574  001D4C                     
  2575                           ; BSR set to: 0
  2576  001D4C  BFE2               	btfsc	(SensorMovimiento@i_940+1)& (0+255),7,b
  2577  001D4E  EFB2  F00E         	goto	u4061
  2578  001D52  51E2               	movf	(SensorMovimiento@i_940+1)& (0+255),w,b
  2579  001D54  E109               	bnz	u4060
  2580  001D56  0E28               	movlw	40
  2581  001D58  5DE1               	subwf	SensorMovimiento@i_940& (0+255),w,b
  2582  001D5A  A0D8               	btfss	status,0,c
  2583  001D5C  EFB2  F00E         	goto	u4061
  2584  001D60  EFB4  F00E         	goto	u4060
  2585  001D64                     u4061:
  2586  001D64  EF94  F00E         	goto	l353
  2587  001D68                     u4060:
  2588  001D68  EFC1  F00E         	goto	l3664
  2589  001D6C                     l348:
  2590                           
  2591                           ;Controler.c: 228:         LATC2 = 0;
  2592  001D6C  948B               	bcf	3979,2,c	;volatile
  2593  001D6E                     
  2594                           ;Controler.c: 229:         strcat(buf,"3:OFF ");
  2595  001D6E  0EC9               	movlw	low SensorMovimiento@buf
  2596  001D70  6E0D               	movwf	strcat@dest^0,c
  2597  001D72  0E00               	movlw	high SensorMovimiento@buf
  2598  001D74  6E0E               	movwf	(strcat@dest+1)^0,c
  2599  001D76  0E66               	movlw	low STR_12
  2600  001D78  6E0F               	movwf	strcat@src^0,c
  2601  001D7A  0E08               	movlw	high STR_12
  2602  001D7C  6E10               	movwf	(strcat@src+1)^0,c
  2603  001D7E  ECD2  F018         	call	_strcat	;wreg free
  2604  001D82                     l3664:
  2605                           
  2606                           ;Controler.c: 232:     LCD_String_xy(3,0,buf);
  2607  001D82  0E00               	movlw	0
  2608  001D84  6E0A               	movwf	LCD_String_xy@pos^0,c
  2609  001D86  0EC9               	movlw	low SensorMovimiento@buf
  2610  001D88  6E0B               	movwf	LCD_String_xy@str^0,c
  2611  001D8A  0E00               	movlw	high SensorMovimiento@buf
  2612  001D8C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2613  001D8E  0E03               	movlw	3
  2614  001D90  ECD2  F015         	call	_LCD_String_xy
  2615  001D94  0012               	return		;funcret
  2616  001D96                     __end_of_SensorMovimiento:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _strcat *****************
  2620 ;; Defined at:
  2621 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcat.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  dest            2   12[COMRAM] PTR unsigned char 
  2624 ;;		 -> SensorMovimiento@buf(20), 
  2625 ;;  src             2   14[COMRAM] PTR const unsigned char 
  2626 ;;		 -> STR_12(7), STR_11(7), STR_10(7), STR_9(7), 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  2   12[COMRAM] PTR unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2638 ;;      Params:         4       0       0       0       0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2641 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2642 ;;Total ram usage:        4 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    1
  2645 ;; This function calls:
  2646 ;;		_strcpy
  2647 ;;		_strlen
  2648 ;; This function is called by:
  2649 ;;		_SensorMovimiento
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text6
  2654  0031A4                     __ptext6:
  2655                           	callstack 0
  2656  0031A4                     _strcat:
  2657                           	callstack 28
  2658  0031A4  C00D  F001         	movff	strcat@dest,strlen@s
  2659  0031A8  C00E  F002         	movff	strcat@dest+1,strlen@s+1
  2660  0031AC  EC72  F018         	call	_strlen	;wreg free
  2661  0031B0  5001               	movf	?_strlen^0,w,c
  2662  0031B2  240D               	addwf	strcat@dest^0,w,c
  2663  0031B4  6E05               	movwf	strcpy@dest^0,c
  2664  0031B6  5002               	movf	(?_strlen+1)^0,w,c
  2665  0031B8  200E               	addwfc	(strcat@dest+1)^0,w,c
  2666  0031BA  6E06               	movwf	(strcpy@dest+1)^0,c
  2667  0031BC  C00F  F007         	movff	strcat@src,strcpy@src
  2668  0031C0  C010  F008         	movff	strcat@src+1,strcpy@src+1
  2669  0031C4  ECA0  F017         	call	_strcpy	;wreg free
  2670  0031C8  0012               	return		;funcret
  2671  0031CA                     __end_of_strcat:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _strcpy *****************
  2675 ;; Defined at:
  2676 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  dest            2    4[COMRAM] PTR unsigned char 
  2679 ;;		 -> SensorMovimiento@buf(20), 
  2680 ;;  src             2    6[COMRAM] PTR const unsigned char 
  2681 ;;		 -> STR_12(7), STR_11(7), STR_10(7), STR_9(7), 
  2682 ;;		 -> STR_8(7), STR_7(7), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  d               2   10[COMRAM] PTR unsigned char 
  2685 ;;		 -> SensorMovimiento@buf(20), 
  2686 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2687 ;;		 -> STR_12(7), STR_11(7), STR_10(7), STR_9(7), 
  2688 ;;		 -> STR_8(7), STR_7(7), 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2    4[COMRAM] PTR unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2698 ;;      Params:         4       0       0       0       0       0       0       0       0
  2699 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2701 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2702 ;;Total ram usage:        8 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_SensorMovimiento
  2708 ;;		_strcat
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text7
  2713  002F40                     __ptext7:
  2714                           	callstack 0
  2715  002F40                     _strcpy:
  2716                           	callstack 29
  2717  002F40  C007  F009         	movff	strcpy@src,strcpy@s
  2718  002F44  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  2719  002F48  C005  F00B         	movff	strcpy@dest,strcpy@d
  2720  002F4C  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  2721  002F50                     l2998:
  2722  002F50  C009  FFF6         	movff	strcpy@s,tblptrl
  2723  002F54  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  2724  002F58  4A09               	infsnz	strcpy@s^0,f,c
  2725  002F5A  2A0A               	incf	(strcpy@s+1)^0,f,c
  2726  002F5C                     	if	0	;tblptru may be non-zero
  2727  002F5C                     	endif
  2728  002F5C                     	if	0	;tblptru may be non-zero
  2729  002F5C                     	endif
  2730  002F5C  C00B  FFD9         	movff	strcpy@d,fsr2l
  2731  002F60  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  2732  002F64  4A0B               	infsnz	strcpy@d^0,f,c
  2733  002F66  2A0C               	incf	(strcpy@d+1)^0,f,c
  2734  002F68  0008               	tblrd		*
  2735  002F6A  CFF5 FFDF          	movff	tablat,indf2
  2736  002F6E  50DF               	movf	indf2,w,c
  2737  002F70  A4D8               	btfss	status,2,c
  2738  002F72  EFBD  F017         	goto	u3011
  2739  002F76  EFBF  F017         	goto	u3010
  2740  002F7A                     u3011:
  2741  002F7A  EFA8  F017         	goto	l2998
  2742  002F7E                     u3010:
  2743  002F7E  0012               	return		;funcret
  2744  002F80                     __end_of_strcpy:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _SensorLuz *****************
  2748 ;; Defined at:
  2749 ;;		line 142 in file "Controler.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  i               2   47[BANK0 ] int 
  2754 ;;  i               2   45[BANK0 ] int 
  2755 ;;  buffer_TX4     20   21[BANK0 ] unsigned char [20]
  2756 ;;  buffer_TX3     21    0[BANK0 ] unsigned char [21]
  2757 ;;  val             4   41[BANK0 ] float 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0
  2768 ;;      Locals:         0      49       0       0       0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2770 ;;      Totals:         0      49       0       0       0       0       0       0       0
  2771 ;;Total ram usage:       49 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    4
  2774 ;; This function calls:
  2775 ;;		_ADC_Read
  2776 ;;		_LCD_Command
  2777 ;;		_LCD_String_xy
  2778 ;;		___fldiv
  2779 ;;		___flge
  2780 ;;		___flmul
  2781 ;;		___xxtofl
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text8
  2788  001F4A                     __ptext8:
  2789                           	callstack 0
  2790  001F4A                     _SensorLuz:
  2791                           	callstack 26
  2792  001F4A                     
  2793                           ;Controler.c: 144:     float val;;Controler.c: 145:     LCD_Command(0x40);
  2794  001F4A  0E40               	movlw	64
  2795  001F4C  EC16  F019         	call	_LCD_Command
  2796  001F50                     
  2797                           ;Controler.c: 146:     val = (ADC_Read(1)*5.0) / 1023.0;
  2798  001F50  0E00               	movlw	0
  2799  001F52  6E1B               	movwf	___flmul@a^0,c
  2800  001F54  0E00               	movlw	0
  2801  001F56  6E1C               	movwf	(___flmul@a+1)^0,c
  2802  001F58  0EA0               	movlw	160
  2803  001F5A  6E1D               	movwf	(___flmul@a+2)^0,c
  2804  001F5C  0E40               	movlw	64
  2805  001F5E  6E1E               	movwf	(___flmul@a+3)^0,c
  2806  001F60  0E00               	movlw	0
  2807  001F62  6E02               	movwf	(ADC_Read@channel+1)^0,c
  2808  001F64  0E01               	movlw	1
  2809  001F66  6E01               	movwf	ADC_Read@channel^0,c
  2810  001F68  EC38  F015         	call	_ADC_Read	;wreg free
  2811  001F6C  C001  F009         	movff	?_ADC_Read,___xxtofl@val
  2812  001F70  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
  2813  001F74  0E00               	movlw	0
  2814  001F76  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  2815  001F78  0EFF               	movlw	-1
  2816  001F7A  6E0B               	movwf	(___xxtofl@val+2)^0,c
  2817  001F7C  6E0C               	movwf	(___xxtofl@val+3)^0,c
  2818  001F7E  0E01               	movlw	1
  2819  001F80  ECCB  F00E         	call	___xxtofl
  2820  001F84  C009  F017         	movff	?___xxtofl,___flmul@b
  2821  001F88  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  2822  001F8C  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  2823  001F90  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  2824  001F94  EC3C  F004         	call	___flmul	;wreg free
  2825  001F98  C017  F030         	movff	?___flmul,___fldiv@b
  2826  001F9C  C018  F031         	movff	?___flmul+1,___fldiv@b+1
  2827  001FA0  C019  F032         	movff	?___flmul+2,___fldiv@b+2
  2828  001FA4  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
  2829  001FA8  0E00               	movlw	0
  2830  001FAA  6E34               	movwf	___fldiv@a^0,c
  2831  001FAC  0EC0               	movlw	192
  2832  001FAE  6E35               	movwf	(___fldiv@a+1)^0,c
  2833  001FB0  0E7F               	movlw	127
  2834  001FB2  6E36               	movwf	(___fldiv@a+2)^0,c
  2835  001FB4  0E44               	movlw	68
  2836  001FB6  6E37               	movwf	(___fldiv@a+3)^0,c
  2837  001FB8  EC51  F006         	call	___fldiv	;wreg free
  2838  001FBC  C030  F089         	movff	?___fldiv,SensorLuz@val
  2839  001FC0  C031  F08A         	movff	?___fldiv+1,SensorLuz@val+1
  2840  001FC4  C032  F08B         	movff	?___fldiv+2,SensorLuz@val+2
  2841  001FC8  C033  F08C         	movff	?___fldiv+3,SensorLuz@val+3
  2842  001FCC                     
  2843                           ;Controler.c: 148:     if (val > 3) {
  2844  001FCC  0E00               	movlw	0
  2845  001FCE  6E01               	movwf	___flge@ff1^0,c
  2846  001FD0  0E00               	movlw	0
  2847  001FD2  6E02               	movwf	(___flge@ff1+1)^0,c
  2848  001FD4  0E40               	movlw	64
  2849  001FD6  6E03               	movwf	(___flge@ff1+2)^0,c
  2850  001FD8  0E40               	movlw	64
  2851  001FDA  6E04               	movwf	(___flge@ff1+3)^0,c
  2852  001FDC  C089  F005         	movff	SensorLuz@val,___flge@ff2
  2853  001FE0  C08A  F006         	movff	SensorLuz@val+1,___flge@ff2+1
  2854  001FE4  C08B  F007         	movff	SensorLuz@val+2,___flge@ff2+2
  2855  001FE8  C08C  F008         	movff	SensorLuz@val+3,___flge@ff2+3
  2856  001FEC  EC26  F013         	call	___flge	;wreg free
  2857  001FF0  B0D8               	btfsc	status,0,c
  2858  001FF2  EFFD  F00F         	goto	u4071
  2859  001FF6  EFFF  F00F         	goto	u4070
  2860  001FFA                     u4071:
  2861  001FFA  EF39  F010         	goto	l3690
  2862  001FFE                     u4070:
  2863  001FFE                     
  2864                           ;Controler.c: 150:         LCD_String_xy(4, 0, "Cortina Arriba       ");
  2865  001FFE  0E00               	movlw	0
  2866  002000  6E0A               	movwf	LCD_String_xy@pos^0,c
  2867  002002  0E17               	movlw	low STR_5
  2868  002004  6E0B               	movwf	LCD_String_xy@str^0,c
  2869  002006  0E08               	movlw	high STR_5
  2870  002008  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2871  00200A  0E04               	movlw	4
  2872  00200C  ECD2  F015         	call	_LCD_String_xy
  2873  002010                     
  2874                           ;Controler.c: 151:         PORTEbits.RE0 = 1;
  2875  002010  8084               	bsf	132,0,c	;volatile
  2876  002012                     
  2877                           ;Controler.c: 152:         char buffer_TX3[] = "Se subio la cortina\r";
  2878  002012  EE21  F05D         	lfsr	2,SensorLuz@F3722
  2879  002016  EE10  F060         	lfsr	1,SensorLuz@buffer_TX3
  2880  00201A  0E14               	movlw	20
  2881  00201C                     u4081:
  2882  00201C  CFDB FFE3          	movff	plusw2,plusw1
  2883  002020  06E8               	decf	wreg,f,c
  2884  002022  E2FC               	bc	u4081
  2885  002024                     
  2886                           ;Controler.c: 153:         for (int i = 0; i < 20; i++) {
  2887  002024  0E00               	movlw	0
  2888  002026  0100               	movlb	0	; () banked
  2889  002028  6F8E               	movwf	(SensorLuz@i+1)& (0+255),b
  2890  00202A  0E00               	movlw	0
  2891  00202C  6F8D               	movwf	SensorLuz@i& (0+255),b
  2892  00202E                     l314:
  2893                           
  2894                           ;Controler.c: 154:             while (!TXSTAbits.TRMT) {
  2895  00202E  A2AC               	btfss	172,1,c	;volatile
  2896  002030  EF1C  F010         	goto	u4091
  2897  002034  EF1E  F010         	goto	u4090
  2898  002038                     u4091:
  2899  002038  EF17  F010         	goto	l314
  2900  00203C                     u4090:
  2901  00203C                     
  2902                           ;Controler.c: 156:             TXREG = buffer_TX3[i];
  2903  00203C  0E60               	movlw	low SensorLuz@buffer_TX3
  2904  00203E  0100               	movlb	0	; () banked
  2905  002040  258D               	addwf	SensorLuz@i& (0+255),w,b
  2906  002042  6ED9               	movwf	fsr2l,c
  2907  002044  0E00               	movlw	high SensorLuz@buffer_TX3
  2908  002046  218E               	addwfc	(SensorLuz@i+1)& (0+255),w,b
  2909  002048  6EDA               	movwf	fsr2h,c
  2910  00204A  50DF               	movf	indf2,w,c
  2911  00204C  6EAD               	movwf	173,c	;volatile
  2912  00204E                     
  2913                           ; BSR set to: 0
  2914                           ;Controler.c: 157:         }
  2915  00204E  4B8D               	infsnz	SensorLuz@i& (0+255),f,b
  2916  002050  2B8E               	incf	(SensorLuz@i+1)& (0+255),f,b
  2917  002052                     
  2918                           ; BSR set to: 0
  2919  002052  BF8E               	btfsc	(SensorLuz@i+1)& (0+255),7,b
  2920  002054  EF35  F010         	goto	u4101
  2921  002058  518E               	movf	(SensorLuz@i+1)& (0+255),w,b
  2922  00205A  E109               	bnz	u4100
  2923  00205C  0E14               	movlw	20
  2924  00205E  5D8D               	subwf	SensorLuz@i& (0+255),w,b
  2925  002060  A0D8               	btfss	status,0,c
  2926  002062  EF35  F010         	goto	u4101
  2927  002066  EF37  F010         	goto	u4100
  2928  00206A                     u4101:
  2929  00206A  EF17  F010         	goto	l314
  2930  00206E                     u4100:
  2931  00206E  EF71  F010         	goto	l325
  2932  002072                     l3690:
  2933                           
  2934                           ;Controler.c: 160:         LCD_String_xy(4, 0, "Cortina Abajo        ");
  2935  002072  0E00               	movlw	0
  2936  002074  6E0A               	movwf	LCD_String_xy@pos^0,c
  2937  002076  0E01               	movlw	low STR_6
  2938  002078  6E0B               	movwf	LCD_String_xy@str^0,c
  2939  00207A  0E08               	movlw	high STR_6
  2940  00207C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  2941  00207E  0E04               	movlw	4
  2942  002080  ECD2  F015         	call	_LCD_String_xy
  2943  002084                     
  2944                           ;Controler.c: 161:         PORTEbits.RE0 = 0;
  2945  002084  9084               	bcf	132,0,c	;volatile
  2946  002086                     
  2947                           ;Controler.c: 162:         char buffer_TX4[] = "Se bajo la cortina\r";
  2948  002086  EE21  F09B         	lfsr	2,SensorLuz@F3725
  2949  00208A  EE10  F075         	lfsr	1,SensorLuz@buffer_TX4
  2950  00208E  0E13               	movlw	19
  2951  002090                     u4111:
  2952  002090  CFDB FFE3          	movff	plusw2,plusw1
  2953  002094  06E8               	decf	wreg,f,c
  2954  002096  E2FC               	bc	u4111
  2955  002098                     
  2956                           ;Controler.c: 163:         for (int i = 0; i < 20; i++) {
  2957  002098  0E00               	movlw	0
  2958  00209A  0100               	movlb	0	; () banked
  2959  00209C  6F90               	movwf	(SensorLuz@i_909+1)& (0+255),b
  2960  00209E  0E00               	movlw	0
  2961  0020A0  6F8F               	movwf	SensorLuz@i_909& (0+255),b
  2962  0020A2                     l322:
  2963                           
  2964                           ;Controler.c: 164:             while (!TXSTAbits.TRMT) {
  2965  0020A2  A2AC               	btfss	172,1,c	;volatile
  2966  0020A4  EF56  F010         	goto	u4121
  2967  0020A8  EF58  F010         	goto	u4120
  2968  0020AC                     u4121:
  2969  0020AC  EF51  F010         	goto	l322
  2970  0020B0                     u4120:
  2971  0020B0                     
  2972                           ;Controler.c: 166:             TXREG = buffer_TX4[i];
  2973  0020B0  0E75               	movlw	low SensorLuz@buffer_TX4
  2974  0020B2  0100               	movlb	0	; () banked
  2975  0020B4  258F               	addwf	SensorLuz@i_909& (0+255),w,b
  2976  0020B6  6ED9               	movwf	fsr2l,c
  2977  0020B8  0E00               	movlw	high SensorLuz@buffer_TX4
  2978  0020BA  2190               	addwfc	(SensorLuz@i_909+1)& (0+255),w,b
  2979  0020BC  6EDA               	movwf	fsr2h,c
  2980  0020BE  50DF               	movf	indf2,w,c
  2981  0020C0  6EAD               	movwf	173,c	;volatile
  2982  0020C2                     
  2983                           ; BSR set to: 0
  2984                           ;Controler.c: 167:         }
  2985  0020C2  4B8F               	infsnz	SensorLuz@i_909& (0+255),f,b
  2986  0020C4  2B90               	incf	(SensorLuz@i_909+1)& (0+255),f,b
  2987  0020C6                     
  2988                           ; BSR set to: 0
  2989  0020C6  BF90               	btfsc	(SensorLuz@i_909+1)& (0+255),7,b
  2990  0020C8  EF6F  F010         	goto	u4131
  2991  0020CC  5190               	movf	(SensorLuz@i_909+1)& (0+255),w,b
  2992  0020CE  E109               	bnz	u4130
  2993  0020D0  0E14               	movlw	20
  2994  0020D2  5D8F               	subwf	SensorLuz@i_909& (0+255),w,b
  2995  0020D4  A0D8               	btfss	status,0,c
  2996  0020D6  EF6F  F010         	goto	u4131
  2997  0020DA  EF71  F010         	goto	u4130
  2998  0020DE                     u4131:
  2999  0020DE  EF51  F010         	goto	l322
  3000  0020E2                     u4130:
  3001  0020E2                     l325:
  3002                           
  3003                           ; BSR set to: 0
  3004  0020E2  0012               	return		;funcret
  3005  0020E4                     __end_of_SensorLuz:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function ___xxtofl *****************
  3009 ;; Defined at:
  3010 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  sign            1    wreg     unsigned char 
  3013 ;;  val             4    8[COMRAM] long 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  sign            1   16[COMRAM] unsigned char 
  3016 ;;  arg             4   18[COMRAM] unsigned long 
  3017 ;;  exp             1   17[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  4    8[COMRAM] unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3027 ;;      Params:         4       0       0       0       0       0       0       0       0
  3028 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3029 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3030 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3031 ;;Total ram usage:       14 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_SensorTemperatura
  3037 ;;		_SensorLuz
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text9
  3042  001D96                     __ptext9:
  3043                           	callstack 0
  3044  001D96                     ___xxtofl:
  3045                           	callstack 29
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;incstack = 0
  3049                           ;___xxtofl@sign stored from wreg
  3050  001D96  6E11               	movwf	___xxtofl@sign^0,c
  3051  001D98  5011               	movf	___xxtofl@sign^0,w,c
  3052  001D9A  B4D8               	btfsc	status,2,c
  3053  001D9C  EFD2  F00E         	goto	u3761
  3054  001DA0  EFD4  F00E         	goto	u3760
  3055  001DA4                     u3761:
  3056  001DA4  EFF6  F00E         	goto	l1021
  3057  001DA8                     u3760:
  3058  001DA8  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  3059  001DAA  EFDB  F00E         	goto	u3770
  3060  001DAE  EFD9  F00E         	goto	u3771
  3061  001DB2                     u3771:
  3062  001DB2  EFF6  F00E         	goto	l1021
  3063  001DB6                     u3770:
  3064  001DB6  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  3065  001DBA  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  3066  001DBE  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  3067  001DC2  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  3068  001DC6  1E0D               	comf	??___xxtofl^0,f,c
  3069  001DC8  1E0E               	comf	(??___xxtofl+1)^0,f,c
  3070  001DCA  1E0F               	comf	(??___xxtofl+2)^0,f,c
  3071  001DCC  1E10               	comf	(??___xxtofl+3)^0,f,c
  3072  001DCE  2A0D               	incf	??___xxtofl^0,f,c
  3073  001DD0  0E00               	movlw	0
  3074  001DD2  220E               	addwfc	(??___xxtofl+1)^0,f,c
  3075  001DD4  220F               	addwfc	(??___xxtofl+2)^0,f,c
  3076  001DD6  2210               	addwfc	(??___xxtofl+3)^0,f,c
  3077  001DD8  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  3078  001DDC  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  3079  001DE0  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  3080  001DE4  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  3081  001DE8  EFFE  F00E         	goto	l3448
  3082  001DEC                     l1021:
  3083  001DEC  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  3084  001DF0  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3085  001DF4  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3086  001DF8  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3087  001DFC                     l3448:
  3088  001DFC  5009               	movf	___xxtofl@val^0,w,c
  3089  001DFE  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  3090  001E00  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  3091  001E02  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  3092  001E04  A4D8               	btfss	status,2,c
  3093  001E06  EF07  F00F         	goto	u3781
  3094  001E0A  EF09  F00F         	goto	u3780
  3095  001E0E                     u3781:
  3096  001E0E  EF13  F00F         	goto	l3454
  3097  001E12                     u3780:
  3098  001E12  0E00               	movlw	0
  3099  001E14  6E09               	movwf	?___xxtofl^0,c
  3100  001E16  0E00               	movlw	0
  3101  001E18  6E0A               	movwf	(?___xxtofl+1)^0,c
  3102  001E1A  0E00               	movlw	0
  3103  001E1C  6E0B               	movwf	(?___xxtofl+2)^0,c
  3104  001E1E  0E00               	movlw	0
  3105  001E20  6E0C               	movwf	(?___xxtofl+3)^0,c
  3106  001E22  EFA4  F00F         	goto	l1024
  3107  001E26                     l3454:
  3108  001E26  0E96               	movlw	150
  3109  001E28  6E12               	movwf	___xxtofl@exp^0,c
  3110  001E2A  EF1D  F00F         	goto	l3458
  3111  001E2E                     l3456:
  3112  001E2E  2A12               	incf	___xxtofl@exp^0,f,c
  3113  001E30  90D8               	bcf	status,0,c
  3114  001E32  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  3115  001E34  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  3116  001E36  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  3117  001E38  3213               	rrcf	___xxtofl@arg^0,f,c
  3118  001E3A                     l3458:
  3119  001E3A  0E00               	movlw	0
  3120  001E3C  1413               	andwf	___xxtofl@arg^0,w,c
  3121  001E3E  6E0D               	movwf	??___xxtofl^0,c
  3122  001E40  0E00               	movlw	0
  3123  001E42  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  3124  001E44  6E0E               	movwf	(??___xxtofl+1)^0,c
  3125  001E46  0E00               	movlw	0
  3126  001E48  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  3127  001E4A  6E0F               	movwf	(??___xxtofl+2)^0,c
  3128  001E4C  0EFE               	movlw	254
  3129  001E4E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  3130  001E50  6E10               	movwf	(??___xxtofl+3)^0,c
  3131  001E52  500D               	movf	??___xxtofl^0,w,c
  3132  001E54  100E               	iorwf	(??___xxtofl+1)^0,w,c
  3133  001E56  100F               	iorwf	(??___xxtofl+2)^0,w,c
  3134  001E58  1010               	iorwf	(??___xxtofl+3)^0,w,c
  3135  001E5A  A4D8               	btfss	status,2,c
  3136  001E5C  EF32  F00F         	goto	u3791
  3137  001E60  EF34  F00F         	goto	u3790
  3138  001E64                     u3791:
  3139  001E64  EF17  F00F         	goto	l3456
  3140  001E68                     u3790:
  3141  001E68  EF42  F00F         	goto	l1028
  3142  001E6C                     l3460:
  3143  001E6C  2A12               	incf	___xxtofl@exp^0,f,c
  3144  001E6E  0E01               	movlw	1
  3145  001E70  2613               	addwf	___xxtofl@arg^0,f,c
  3146  001E72  0E00               	movlw	0
  3147  001E74  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  3148  001E76  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  3149  001E78  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  3150  001E7A  90D8               	bcf	status,0,c
  3151  001E7C  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  3152  001E7E  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  3153  001E80  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  3154  001E82  3213               	rrcf	___xxtofl@arg^0,f,c
  3155  001E84                     l1028:
  3156  001E84  0E00               	movlw	0
  3157  001E86  1413               	andwf	___xxtofl@arg^0,w,c
  3158  001E88  6E0D               	movwf	??___xxtofl^0,c
  3159  001E8A  0E00               	movlw	0
  3160  001E8C  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  3161  001E8E  6E0E               	movwf	(??___xxtofl+1)^0,c
  3162  001E90  0E00               	movlw	0
  3163  001E92  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  3164  001E94  6E0F               	movwf	(??___xxtofl+2)^0,c
  3165  001E96  0EFF               	movlw	255
  3166  001E98  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  3167  001E9A  6E10               	movwf	(??___xxtofl+3)^0,c
  3168  001E9C  500D               	movf	??___xxtofl^0,w,c
  3169  001E9E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  3170  001EA0  100F               	iorwf	(??___xxtofl+2)^0,w,c
  3171  001EA2  1010               	iorwf	(??___xxtofl+3)^0,w,c
  3172  001EA4  A4D8               	btfss	status,2,c
  3173  001EA6  EF57  F00F         	goto	u3801
  3174  001EAA  EF59  F00F         	goto	u3800
  3175  001EAE                     u3801:
  3176  001EAE  EF36  F00F         	goto	l3460
  3177  001EB2                     u3800:
  3178  001EB2  EF61  F00F         	goto	l3468
  3179  001EB6                     l3466:
  3180  001EB6  0612               	decf	___xxtofl@exp^0,f,c
  3181  001EB8  90D8               	bcf	status,0,c
  3182  001EBA  3613               	rlcf	___xxtofl@arg^0,f,c
  3183  001EBC  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  3184  001EBE  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  3185  001EC0  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  3186  001EC2                     l3468:
  3187  001EC2  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  3188  001EC4  EF66  F00F         	goto	u3811
  3189  001EC8  EF68  F00F         	goto	u3810
  3190  001ECC                     u3811:
  3191  001ECC  EF70  F00F         	goto	l1035
  3192  001ED0                     u3810:
  3193  001ED0  0E02               	movlw	2
  3194  001ED2  6012               	cpfslt	___xxtofl@exp^0,c
  3195  001ED4  EF6E  F00F         	goto	u3821
  3196  001ED8  EF70  F00F         	goto	u3820
  3197  001EDC                     u3821:
  3198  001EDC  EF5B  F00F         	goto	l3466
  3199  001EE0                     u3820:
  3200  001EE0                     l1035:
  3201  001EE0  B012               	btfsc	___xxtofl@exp^0,0,c
  3202  001EE2  EF75  F00F         	goto	u3831
  3203  001EE6  EF77  F00F         	goto	u3830
  3204  001EEA                     u3831:
  3205  001EEA  EF78  F00F         	goto	l3474
  3206  001EEE                     u3830:
  3207  001EEE  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  3208  001EF0                     l3474:
  3209  001EF0  90D8               	bcf	status,0,c
  3210  001EF2  3212               	rrcf	___xxtofl@exp^0,f,c
  3211  001EF4  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  3212  001EF8  6A0E               	clrf	(??___xxtofl+1)^0,c
  3213  001EFA  6A0F               	clrf	(??___xxtofl+2)^0,c
  3214  001EFC  6A10               	clrf	(??___xxtofl+3)^0,c
  3215  001EFE  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  3216  001F02  6A0F               	clrf	(??___xxtofl+2)^0,c
  3217  001F04  6A0E               	clrf	(??___xxtofl+1)^0,c
  3218  001F06  6A0D               	clrf	??___xxtofl^0,c
  3219  001F08  500D               	movf	??___xxtofl^0,w,c
  3220  001F0A  1213               	iorwf	___xxtofl@arg^0,f,c
  3221  001F0C  500E               	movf	(??___xxtofl+1)^0,w,c
  3222  001F0E  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  3223  001F10  500F               	movf	(??___xxtofl+2)^0,w,c
  3224  001F12  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  3225  001F14  5010               	movf	(??___xxtofl+3)^0,w,c
  3226  001F16  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  3227  001F18  5011               	movf	___xxtofl@sign^0,w,c
  3228  001F1A  B4D8               	btfsc	status,2,c
  3229  001F1C  EF92  F00F         	goto	u3841
  3230  001F20  EF94  F00F         	goto	u3840
  3231  001F24                     u3841:
  3232  001F24  EF9C  F00F         	goto	l3484
  3233  001F28                     u3840:
  3234  001F28  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  3235  001F2A  EF9B  F00F         	goto	u3850
  3236  001F2E  EF99  F00F         	goto	u3851
  3237  001F32                     u3851:
  3238  001F32  EF9C  F00F         	goto	l3484
  3239  001F36                     u3850:
  3240  001F36  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  3241  001F38                     l3484:
  3242  001F38  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  3243  001F3C  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  3244  001F40  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  3245  001F44  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  3246  001F48                     l1024:
  3247  001F48  0012               	return		;funcret
  3248  001F4A                     __end_of___xxtofl:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function ___flmul *****************
  3252 ;; Defined at:
  3253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  b               4   22[COMRAM] unsigned char 
  3256 ;;  a               4   26[COMRAM] unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  prod            4   41[COMRAM] struct .
  3259 ;;  grs             4   35[COMRAM] unsigned long 
  3260 ;;  temp            2   45[COMRAM] struct .
  3261 ;;  bexp            1   40[COMRAM] unsigned char 
  3262 ;;  aexp            1   39[COMRAM] unsigned char 
  3263 ;;  sign            1   34[COMRAM] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  4   22[COMRAM] unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, prodl, prodh
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3273 ;;      Params:         8       0       0       0       0       0       0       0       0
  3274 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3275 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3276 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3277 ;;Total ram usage:       25 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_SensorTemperatura
  3283 ;;		_SensorLuz
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text10
  3288  000878                     __ptext10:
  3289                           	callstack 0
  3290  000878                     ___flmul:
  3291                           	callstack 29
  3292  000878  501A               	movf	(___flmul@b+3)^0,w,c
  3293  00087A  0B80               	andlw	128
  3294  00087C  6E23               	movwf	___flmul@sign^0,c
  3295  00087E  501A               	movf	(___flmul@b+3)^0,w,c
  3296  000880  241A               	addwf	(___flmul@b+3)^0,w,c
  3297  000882  6E29               	movwf	___flmul@bexp^0,c
  3298  000884  AE19               	btfss	(___flmul@b+2)^0,7,c
  3299  000886  EF47  F004         	goto	u3451
  3300  00088A  EF49  F004         	goto	u3450
  3301  00088E                     u3451:
  3302  00088E  EF4A  F004         	goto	l3252
  3303  000892                     u3450:
  3304  000892  8029               	bsf	___flmul@bexp^0,0,c
  3305  000894                     l3252:
  3306  000894  5029               	movf	___flmul@bexp^0,w,c
  3307  000896  B4D8               	btfsc	status,2,c
  3308  000898  EF50  F004         	goto	u3461
  3309  00089C  EF52  F004         	goto	u3460
  3310  0008A0                     u3461:
  3311  0008A0  EF65  F004         	goto	l3260
  3312  0008A4                     u3460:
  3313  0008A4  2829               	incf	___flmul@bexp^0,w,c
  3314  0008A6  A4D8               	btfss	status,2,c
  3315  0008A8  EF58  F004         	goto	u3471
  3316  0008AC  EF5A  F004         	goto	u3470
  3317  0008B0                     u3471:
  3318  0008B0  EF62  F004         	goto	l3258
  3319  0008B4                     u3470:
  3320  0008B4  0E00               	movlw	0
  3321  0008B6  6E17               	movwf	___flmul@b^0,c
  3322  0008B8  0E00               	movlw	0
  3323  0008BA  6E18               	movwf	(___flmul@b+1)^0,c
  3324  0008BC  0E00               	movlw	0
  3325  0008BE  6E19               	movwf	(___flmul@b+2)^0,c
  3326  0008C0  0E00               	movlw	0
  3327  0008C2  6E1A               	movwf	(___flmul@b+3)^0,c
  3328  0008C4                     l3258:
  3329  0008C4  8E19               	bsf	(___flmul@b+2)^0,7,c
  3330  0008C6  EF6D  F004         	goto	l3262
  3331  0008CA                     l3260:
  3332  0008CA  0E00               	movlw	0
  3333  0008CC  6E17               	movwf	___flmul@b^0,c
  3334  0008CE  0E00               	movlw	0
  3335  0008D0  6E18               	movwf	(___flmul@b+1)^0,c
  3336  0008D2  0E00               	movlw	0
  3337  0008D4  6E19               	movwf	(___flmul@b+2)^0,c
  3338  0008D6  0E00               	movlw	0
  3339  0008D8  6E1A               	movwf	(___flmul@b+3)^0,c
  3340  0008DA                     l3262:
  3341  0008DA  501E               	movf	(___flmul@a+3)^0,w,c
  3342  0008DC  0B80               	andlw	128
  3343  0008DE  1A23               	xorwf	___flmul@sign^0,f,c
  3344  0008E0  501E               	movf	(___flmul@a+3)^0,w,c
  3345  0008E2  241E               	addwf	(___flmul@a+3)^0,w,c
  3346  0008E4  6E28               	movwf	___flmul@aexp^0,c
  3347  0008E6  AE1D               	btfss	(___flmul@a+2)^0,7,c
  3348  0008E8  EF78  F004         	goto	u3481
  3349  0008EC  EF7A  F004         	goto	u3480
  3350  0008F0                     u3481:
  3351  0008F0  EF7B  F004         	goto	l3270
  3352  0008F4                     u3480:
  3353  0008F4  8028               	bsf	___flmul@aexp^0,0,c
  3354  0008F6                     l3270:
  3355  0008F6  5028               	movf	___flmul@aexp^0,w,c
  3356  0008F8  B4D8               	btfsc	status,2,c
  3357  0008FA  EF81  F004         	goto	u3491
  3358  0008FE  EF83  F004         	goto	u3490
  3359  000902                     u3491:
  3360  000902  EF96  F004         	goto	l3278
  3361  000906                     u3490:
  3362  000906  2828               	incf	___flmul@aexp^0,w,c
  3363  000908  A4D8               	btfss	status,2,c
  3364  00090A  EF89  F004         	goto	u3501
  3365  00090E  EF8B  F004         	goto	u3500
  3366  000912                     u3501:
  3367  000912  EF93  F004         	goto	l3276
  3368  000916                     u3500:
  3369  000916  0E00               	movlw	0
  3370  000918  6E1B               	movwf	___flmul@a^0,c
  3371  00091A  0E00               	movlw	0
  3372  00091C  6E1C               	movwf	(___flmul@a+1)^0,c
  3373  00091E  0E00               	movlw	0
  3374  000920  6E1D               	movwf	(___flmul@a+2)^0,c
  3375  000922  0E00               	movlw	0
  3376  000924  6E1E               	movwf	(___flmul@a+3)^0,c
  3377  000926                     l3276:
  3378  000926  8E1D               	bsf	(___flmul@a+2)^0,7,c
  3379  000928  EF9E  F004         	goto	l980
  3380  00092C                     l3278:
  3381  00092C  0E00               	movlw	0
  3382  00092E  6E1B               	movwf	___flmul@a^0,c
  3383  000930  0E00               	movlw	0
  3384  000932  6E1C               	movwf	(___flmul@a+1)^0,c
  3385  000934  0E00               	movlw	0
  3386  000936  6E1D               	movwf	(___flmul@a+2)^0,c
  3387  000938  0E00               	movlw	0
  3388  00093A  6E1E               	movwf	(___flmul@a+3)^0,c
  3389  00093C                     l980:
  3390  00093C  5028               	movf	___flmul@aexp^0,w,c
  3391  00093E  B4D8               	btfsc	status,2,c
  3392  000940  EFA4  F004         	goto	u3511
  3393  000944  EFA6  F004         	goto	u3510
  3394  000948                     u3511:
  3395  000948  EFAE  F004         	goto	l3282
  3396  00094C                     u3510:
  3397  00094C  5029               	movf	___flmul@bexp^0,w,c
  3398  00094E  A4D8               	btfss	status,2,c
  3399  000950  EFAC  F004         	goto	u3521
  3400  000954  EFAE  F004         	goto	u3520
  3401  000958                     u3521:
  3402  000958  EFB8  F004         	goto	l3286
  3403  00095C                     u3520:
  3404  00095C                     l3282:
  3405  00095C  0E00               	movlw	0
  3406  00095E  6E17               	movwf	?___flmul^0,c
  3407  000960  0E00               	movlw	0
  3408  000962  6E18               	movwf	(?___flmul+1)^0,c
  3409  000964  0E00               	movlw	0
  3410  000966  6E19               	movwf	(?___flmul+2)^0,c
  3411  000968  0E00               	movlw	0
  3412  00096A  6E1A               	movwf	(?___flmul+3)^0,c
  3413  00096C  EF50  F006         	goto	l984
  3414  000970                     l3286:
  3415  000970  501D               	movf	(___flmul@a+2)^0,w,c
  3416  000972  0217               	mulwf	___flmul@b^0,c
  3417  000974  CFF3 F02E          	movff	prodl,___flmul@temp
  3418  000978  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3419  00097C  502E               	movf	___flmul@temp^0,w,c
  3420  00097E  6E24               	movwf	___flmul@grs^0,c
  3421  000980  6A25               	clrf	(___flmul@grs+1)^0,c
  3422  000982  6A26               	clrf	(___flmul@grs+2)^0,c
  3423  000984  6A27               	clrf	(___flmul@grs+3)^0,c
  3424  000986  502F               	movf	(___flmul@temp+1)^0,w,c
  3425  000988  6E2A               	movwf	___flmul@prod^0,c
  3426  00098A  6A2B               	clrf	(___flmul@prod+1)^0,c
  3427  00098C  6A2C               	clrf	(___flmul@prod+2)^0,c
  3428  00098E  6A2D               	clrf	(___flmul@prod+3)^0,c
  3429  000990  501C               	movf	(___flmul@a+1)^0,w,c
  3430  000992  0218               	mulwf	(___flmul@b+1)^0,c
  3431  000994  CFF3 F02E          	movff	prodl,___flmul@temp
  3432  000998  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3433  00099C  502E               	movf	___flmul@temp^0,w,c
  3434  00099E  2624               	addwf	___flmul@grs^0,f,c
  3435  0009A0  0E00               	movlw	0
  3436  0009A2  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3437  0009A4  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3438  0009A6  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3439  0009A8  502F               	movf	(___flmul@temp+1)^0,w,c
  3440  0009AA  262A               	addwf	___flmul@prod^0,f,c
  3441  0009AC  0E00               	movlw	0
  3442  0009AE  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3443  0009B0  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3444  0009B2  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3445  0009B4  501B               	movf	___flmul@a^0,w,c
  3446  0009B6  0219               	mulwf	(___flmul@b+2)^0,c
  3447  0009B8  CFF3 F02E          	movff	prodl,___flmul@temp
  3448  0009BC  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3449  0009C0  502E               	movf	___flmul@temp^0,w,c
  3450  0009C2  2624               	addwf	___flmul@grs^0,f,c
  3451  0009C4  0E00               	movlw	0
  3452  0009C6  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3453  0009C8  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3454  0009CA  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3455  0009CC  502F               	movf	(___flmul@temp+1)^0,w,c
  3456  0009CE  262A               	addwf	___flmul@prod^0,f,c
  3457  0009D0  0E00               	movlw	0
  3458  0009D2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3459  0009D4  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3460  0009D6  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3461  0009D8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3462  0009DC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3463  0009E0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3464  0009E4  6A24               	clrf	___flmul@grs^0,c
  3465  0009E6  501B               	movf	___flmul@a^0,w,c
  3466  0009E8  0218               	mulwf	(___flmul@b+1)^0,c
  3467  0009EA  CFF3 F02E          	movff	prodl,___flmul@temp
  3468  0009EE  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3469  0009F2  502E               	movf	___flmul@temp^0,w,c
  3470  0009F4  2624               	addwf	___flmul@grs^0,f,c
  3471  0009F6  502F               	movf	(___flmul@temp+1)^0,w,c
  3472  0009F8  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3473  0009FA  0E00               	movlw	0
  3474  0009FC  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3475  0009FE  0E00               	movlw	0
  3476  000A00  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3477  000A02  501C               	movf	(___flmul@a+1)^0,w,c
  3478  000A04  0217               	mulwf	___flmul@b^0,c
  3479  000A06  CFF3 F02E          	movff	prodl,___flmul@temp
  3480  000A0A  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3481  000A0E  502E               	movf	___flmul@temp^0,w,c
  3482  000A10  2624               	addwf	___flmul@grs^0,f,c
  3483  000A12  502F               	movf	(___flmul@temp+1)^0,w,c
  3484  000A14  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3485  000A16  0E00               	movlw	0
  3486  000A18  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3487  000A1A  0E00               	movlw	0
  3488  000A1C  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3489  000A1E  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3490  000A22  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3491  000A26  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3492  000A2A  6A24               	clrf	___flmul@grs^0,c
  3493  000A2C  501B               	movf	___flmul@a^0,w,c
  3494  000A2E  0217               	mulwf	___flmul@b^0,c
  3495  000A30  CFF3 F02E          	movff	prodl,___flmul@temp
  3496  000A34  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3497  000A38  502E               	movf	___flmul@temp^0,w,c
  3498  000A3A  2624               	addwf	___flmul@grs^0,f,c
  3499  000A3C  502F               	movf	(___flmul@temp+1)^0,w,c
  3500  000A3E  2225               	addwfc	(___flmul@grs+1)^0,f,c
  3501  000A40  0E00               	movlw	0
  3502  000A42  2226               	addwfc	(___flmul@grs+2)^0,f,c
  3503  000A44  0E00               	movlw	0
  3504  000A46  2227               	addwfc	(___flmul@grs+3)^0,f,c
  3505  000A48  501D               	movf	(___flmul@a+2)^0,w,c
  3506  000A4A  0218               	mulwf	(___flmul@b+1)^0,c
  3507  000A4C  CFF3 F02E          	movff	prodl,___flmul@temp
  3508  000A50  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3509  000A54  502E               	movf	___flmul@temp^0,w,c
  3510  000A56  262A               	addwf	___flmul@prod^0,f,c
  3511  000A58  502F               	movf	(___flmul@temp+1)^0,w,c
  3512  000A5A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3513  000A5C  0E00               	movlw	0
  3514  000A5E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3515  000A60  0E00               	movlw	0
  3516  000A62  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3517  000A64  501C               	movf	(___flmul@a+1)^0,w,c
  3518  000A66  0219               	mulwf	(___flmul@b+2)^0,c
  3519  000A68  CFF3 F02E          	movff	prodl,___flmul@temp
  3520  000A6C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3521  000A70  502E               	movf	___flmul@temp^0,w,c
  3522  000A72  262A               	addwf	___flmul@prod^0,f,c
  3523  000A74  502F               	movf	(___flmul@temp+1)^0,w,c
  3524  000A76  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3525  000A78  0E00               	movlw	0
  3526  000A7A  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3527  000A7C  0E00               	movlw	0
  3528  000A7E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3529  000A80  501D               	movf	(___flmul@a+2)^0,w,c
  3530  000A82  0219               	mulwf	(___flmul@b+2)^0,c
  3531  000A84  CFF3 F02E          	movff	prodl,___flmul@temp
  3532  000A88  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3533  000A8C  502E               	movf	___flmul@temp^0,w,c
  3534  000A8E  6E1F               	movwf	??___flmul^0,c
  3535  000A90  502F               	movf	(___flmul@temp+1)^0,w,c
  3536  000A92  6E20               	movwf	(??___flmul+1)^0,c
  3537  000A94  6A21               	clrf	(??___flmul+2)^0,c
  3538  000A96  6A22               	clrf	(??___flmul+3)^0,c
  3539  000A98  C021  F022         	movff	??___flmul+2,??___flmul+3
  3540  000A9C  C020  F021         	movff	??___flmul+1,??___flmul+2
  3541  000AA0  C01F  F020         	movff	??___flmul,??___flmul+1
  3542  000AA4  6A1F               	clrf	??___flmul^0,c
  3543  000AA6  501F               	movf	??___flmul^0,w,c
  3544  000AA8  262A               	addwf	___flmul@prod^0,f,c
  3545  000AAA  5020               	movf	(??___flmul+1)^0,w,c
  3546  000AAC  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3547  000AAE  5021               	movf	(??___flmul+2)^0,w,c
  3548  000AB0  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3549  000AB2  5022               	movf	(??___flmul+3)^0,w,c
  3550  000AB4  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3551  000AB6  C024  F01F         	movff	___flmul@grs,??___flmul
  3552  000ABA  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  3553  000ABE  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  3554  000AC2  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  3555  000AC6  0E19               	movlw	25
  3556  000AC8  EF6B  F005         	goto	u3530
  3557  000ACC                     u3535:
  3558  000ACC  90D8               	bcf	status,0,c
  3559  000ACE  3222               	rrcf	(??___flmul+3)^0,f,c
  3560  000AD0  3221               	rrcf	(??___flmul+2)^0,f,c
  3561  000AD2  3220               	rrcf	(??___flmul+1)^0,f,c
  3562  000AD4  321F               	rrcf	??___flmul^0,f,c
  3563  000AD6                     u3530:
  3564  000AD6  2EE8               	decfsz	wreg,f,c
  3565  000AD8  EF66  F005         	goto	u3535
  3566  000ADC  501F               	movf	??___flmul^0,w,c
  3567  000ADE  262A               	addwf	___flmul@prod^0,f,c
  3568  000AE0  5020               	movf	(??___flmul+1)^0,w,c
  3569  000AE2  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3570  000AE4  5021               	movf	(??___flmul+2)^0,w,c
  3571  000AE6  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3572  000AE8  5022               	movf	(??___flmul+3)^0,w,c
  3573  000AEA  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3574  000AEC  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3575  000AF0  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3576  000AF4  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3577  000AF8  6A24               	clrf	___flmul@grs^0,c
  3578  000AFA  5028               	movf	___flmul@aexp^0,w,c
  3579  000AFC  C029  F01F         	movff	___flmul@bexp,??___flmul
  3580  000B00  6A20               	clrf	(??___flmul+1)^0,c
  3581  000B02  261F               	addwf	??___flmul^0,f,c
  3582  000B04  0E00               	movlw	0
  3583  000B06  2220               	addwfc	(??___flmul+1)^0,f,c
  3584  000B08  0E82               	movlw	130
  3585  000B0A  241F               	addwf	??___flmul^0,w,c
  3586  000B0C  6E2E               	movwf	___flmul@temp^0,c
  3587  000B0E  0EFF               	movlw	255
  3588  000B10  2020               	addwfc	(??___flmul+1)^0,w,c
  3589  000B12  6E2F               	movwf	(___flmul@temp+1)^0,c
  3590  000B14  EFA1  F005         	goto	l3334
  3591  000B18                     l3328:
  3592  000B18  90D8               	bcf	status,0,c
  3593  000B1A  362A               	rlcf	___flmul@prod^0,f,c
  3594  000B1C  362B               	rlcf	(___flmul@prod+1)^0,f,c
  3595  000B1E  362C               	rlcf	(___flmul@prod+2)^0,f,c
  3596  000B20  362D               	rlcf	(___flmul@prod+3)^0,f,c
  3597  000B22  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3598  000B24  EF96  F005         	goto	u3541
  3599  000B28  EF98  F005         	goto	u3540
  3600  000B2C                     u3541:
  3601  000B2C  EF99  F005         	goto	l987
  3602  000B30                     u3540:
  3603  000B30  802A               	bsf	___flmul@prod^0,0,c
  3604  000B32                     l987:
  3605  000B32  90D8               	bcf	status,0,c
  3606  000B34  3624               	rlcf	___flmul@grs^0,f,c
  3607  000B36  3625               	rlcf	(___flmul@grs+1)^0,f,c
  3608  000B38  3626               	rlcf	(___flmul@grs+2)^0,f,c
  3609  000B3A  3627               	rlcf	(___flmul@grs+3)^0,f,c
  3610  000B3C  062E               	decf	___flmul@temp^0,f,c
  3611  000B3E  A0D8               	btfss	status,0,c
  3612  000B40  062F               	decf	(___flmul@temp+1)^0,f,c
  3613  000B42                     l3334:
  3614  000B42  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  3615  000B44  EFA6  F005         	goto	u3551
  3616  000B48  EFA8  F005         	goto	u3550
  3617  000B4C                     u3551:
  3618  000B4C  EF8C  F005         	goto	l3328
  3619  000B50                     u3550:
  3620  000B50  0E00               	movlw	0
  3621  000B52  6E28               	movwf	___flmul@aexp^0,c
  3622  000B54  AE27               	btfss	(___flmul@grs+3)^0,7,c
  3623  000B56  EFAF  F005         	goto	u3561
  3624  000B5A  EFB1  F005         	goto	u3560
  3625  000B5E                     u3561:
  3626  000B5E  EFD5  F005         	goto	l989
  3627  000B62                     u3560:
  3628  000B62  0EFF               	movlw	255
  3629  000B64  1424               	andwf	___flmul@grs^0,w,c
  3630  000B66  6E1F               	movwf	??___flmul^0,c
  3631  000B68  0EFF               	movlw	255
  3632  000B6A  1425               	andwf	(___flmul@grs+1)^0,w,c
  3633  000B6C  6E20               	movwf	(??___flmul+1)^0,c
  3634  000B6E  0EFF               	movlw	255
  3635  000B70  1426               	andwf	(___flmul@grs+2)^0,w,c
  3636  000B72  6E21               	movwf	(??___flmul+2)^0,c
  3637  000B74  0E7F               	movlw	127
  3638  000B76  1427               	andwf	(___flmul@grs+3)^0,w,c
  3639  000B78  6E22               	movwf	(??___flmul+3)^0,c
  3640  000B7A  501F               	movf	??___flmul^0,w,c
  3641  000B7C  1020               	iorwf	(??___flmul+1)^0,w,c
  3642  000B7E  1021               	iorwf	(??___flmul+2)^0,w,c
  3643  000B80  1022               	iorwf	(??___flmul+3)^0,w,c
  3644  000B82  B4D8               	btfsc	status,2,c
  3645  000B84  EFC6  F005         	goto	u3571
  3646  000B88  EFC8  F005         	goto	u3570
  3647  000B8C                     u3571:
  3648  000B8C  EFCC  F005         	goto	l990
  3649  000B90                     u3570:
  3650  000B90                     l3342:
  3651  000B90  0E01               	movlw	1
  3652  000B92  6E28               	movwf	___flmul@aexp^0,c
  3653  000B94  EFD5  F005         	goto	l989
  3654  000B98                     l990:
  3655  000B98  A02A               	btfss	___flmul@prod^0,0,c
  3656  000B9A  EFD1  F005         	goto	u3581
  3657  000B9E  EFD3  F005         	goto	u3580
  3658  000BA2                     u3581:
  3659  000BA2  EFD5  F005         	goto	l989
  3660  000BA6                     u3580:
  3661  000BA6  EFC8  F005         	goto	l3342
  3662  000BAA                     l989:
  3663  000BAA  5028               	movf	___flmul@aexp^0,w,c
  3664  000BAC  B4D8               	btfsc	status,2,c
  3665  000BAE  EFDB  F005         	goto	u3591
  3666  000BB2  EFDD  F005         	goto	u3590
  3667  000BB6                     u3591:
  3668  000BB6  EF01  F006         	goto	l3354
  3669  000BBA                     u3590:
  3670  000BBA  0E01               	movlw	1
  3671  000BBC  262A               	addwf	___flmul@prod^0,f,c
  3672  000BBE  0E00               	movlw	0
  3673  000BC0  222B               	addwfc	(___flmul@prod+1)^0,f,c
  3674  000BC2  222C               	addwfc	(___flmul@prod+2)^0,f,c
  3675  000BC4  222D               	addwfc	(___flmul@prod+3)^0,f,c
  3676  000BC6  A02D               	btfss	(___flmul@prod+3)^0,0,c
  3677  000BC8  EFE8  F005         	goto	u3601
  3678  000BCC  EFEA  F005         	goto	u3600
  3679  000BD0                     u3601:
  3680  000BD0  EF01  F006         	goto	l3354
  3681  000BD4                     u3600:
  3682  000BD4  C02A  F01F         	movff	___flmul@prod,??___flmul
  3683  000BD8  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  3684  000BDC  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  3685  000BE0  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  3686  000BE4  3422               	rlcf	(??___flmul+3)^0,w,c
  3687  000BE6  3222               	rrcf	(??___flmul+3)^0,f,c
  3688  000BE8  3221               	rrcf	(??___flmul+2)^0,f,c
  3689  000BEA  3220               	rrcf	(??___flmul+1)^0,f,c
  3690  000BEC  321F               	rrcf	??___flmul^0,f,c
  3691  000BEE  C01F  F02A         	movff	??___flmul,___flmul@prod
  3692  000BF2  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  3693  000BF6  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  3694  000BFA  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  3695  000BFE  4A2E               	infsnz	___flmul@temp^0,f,c
  3696  000C00  2A2F               	incf	(___flmul@temp+1)^0,f,c
  3697  000C02                     l3354:
  3698  000C02  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  3699  000C04  EF0C  F006         	goto	u3611
  3700  000C08  502F               	movf	(___flmul@temp+1)^0,w,c
  3701  000C0A  E108               	bnz	u3610
  3702  000C0C  282E               	incf	___flmul@temp^0,w,c
  3703  000C0E  A0D8               	btfss	status,0,c
  3704  000C10  EF0C  F006         	goto	u3611
  3705  000C14  EF0E  F006         	goto	u3610
  3706  000C18                     u3611:
  3707  000C18  EF18  F006         	goto	l3358
  3708  000C1C                     u3610:
  3709  000C1C  0E00               	movlw	0
  3710  000C1E  6E2A               	movwf	___flmul@prod^0,c
  3711  000C20  0E00               	movlw	0
  3712  000C22  6E2B               	movwf	(___flmul@prod+1)^0,c
  3713  000C24  0E80               	movlw	128
  3714  000C26  6E2C               	movwf	(___flmul@prod+2)^0,c
  3715  000C28  0E7F               	movlw	127
  3716  000C2A  6E2D               	movwf	(___flmul@prod+3)^0,c
  3717  000C2C  EF46  F006         	goto	l3370
  3718  000C30                     l3358:
  3719  000C30  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  3720  000C32  EF25  F006         	goto	u3620
  3721  000C36  502F               	movf	(___flmul@temp+1)^0,w,c
  3722  000C38  E106               	bnz	u3621
  3723  000C3A  042E               	decf	___flmul@temp^0,w,c
  3724  000C3C  B0D8               	btfsc	status,0,c
  3725  000C3E  EF23  F006         	goto	u3621
  3726  000C42  EF25  F006         	goto	u3620
  3727  000C46                     u3621:
  3728  000C46  EF31  F006         	goto	l997
  3729  000C4A                     u3620:
  3730  000C4A  0E00               	movlw	0
  3731  000C4C  6E2A               	movwf	___flmul@prod^0,c
  3732  000C4E  0E00               	movlw	0
  3733  000C50  6E2B               	movwf	(___flmul@prod+1)^0,c
  3734  000C52  0E00               	movlw	0
  3735  000C54  6E2C               	movwf	(___flmul@prod+2)^0,c
  3736  000C56  0E00               	movlw	0
  3737  000C58  6E2D               	movwf	(___flmul@prod+3)^0,c
  3738  000C5A  0E00               	movlw	0
  3739  000C5C  6E23               	movwf	___flmul@sign^0,c
  3740  000C5E  EF46  F006         	goto	l3370
  3741  000C62                     l997:
  3742  000C62  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  3743  000C66  0EFF               	movlw	255
  3744  000C68  162A               	andwf	___flmul@prod^0,f,c
  3745  000C6A  0EFF               	movlw	255
  3746  000C6C  162B               	andwf	(___flmul@prod+1)^0,f,c
  3747  000C6E  0E7F               	movlw	127
  3748  000C70  162C               	andwf	(___flmul@prod+2)^0,f,c
  3749  000C72  0E00               	movlw	0
  3750  000C74  162D               	andwf	(___flmul@prod+3)^0,f,c
  3751  000C76  A029               	btfss	___flmul@bexp^0,0,c
  3752  000C78  EF40  F006         	goto	u3631
  3753  000C7C  EF42  F006         	goto	u3630
  3754  000C80                     u3631:
  3755  000C80  EF43  F006         	goto	l3368
  3756  000C84                     u3630:
  3757  000C84  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  3758  000C86                     l3368:
  3759  000C86  90D8               	bcf	status,0,c
  3760  000C88  3029               	rrcf	___flmul@bexp^0,w,c
  3761  000C8A  6E2D               	movwf	(___flmul@prod+3)^0,c
  3762  000C8C                     l3370:
  3763  000C8C  5023               	movf	___flmul@sign^0,w,c
  3764  000C8E  122D               	iorwf	(___flmul@prod+3)^0,f,c
  3765  000C90  C02A  F017         	movff	___flmul@prod,?___flmul
  3766  000C94  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  3767  000C98  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  3768  000C9C  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  3769  000CA0                     l984:
  3770  000CA0  0012               	return		;funcret
  3771  000CA2                     __end_of___flmul:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function ___flge *****************
  3775 ;; Defined at:
  3776 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  ff1             4    0[COMRAM] unsigned char 
  3779 ;;  ff2             4    4[COMRAM] unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         8       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3793 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3794 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3795 ;;Total ram usage:       12 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_SensorTemperatura
  3801 ;;		_SensorLuz
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text11
  3806  00264C                     __ptext11:
  3807                           	callstack 0
  3808  00264C                     ___flge:
  3809                           	callstack 29
  3810  00264C  0E00               	movlw	0
  3811  00264E  1401               	andwf	___flge@ff1^0,w,c
  3812  002650  6E09               	movwf	??___flge^0,c
  3813  002652  0E00               	movlw	0
  3814  002654  1402               	andwf	(___flge@ff1+1)^0,w,c
  3815  002656  6E0A               	movwf	(??___flge+1)^0,c
  3816  002658  0E80               	movlw	128
  3817  00265A  1403               	andwf	(___flge@ff1+2)^0,w,c
  3818  00265C  6E0B               	movwf	(??___flge+2)^0,c
  3819  00265E  0E7F               	movlw	127
  3820  002660  1404               	andwf	(___flge@ff1+3)^0,w,c
  3821  002662  6E0C               	movwf	(??___flge+3)^0,c
  3822  002664  5009               	movf	??___flge^0,w,c
  3823  002666  100A               	iorwf	(??___flge+1)^0,w,c
  3824  002668  100B               	iorwf	(??___flge+2)^0,w,c
  3825  00266A  100C               	iorwf	(??___flge+3)^0,w,c
  3826  00266C  A4D8               	btfss	status,2,c
  3827  00266E  EF3B  F013         	goto	u3641
  3828  002672  EF3D  F013         	goto	u3640
  3829  002676                     u3641:
  3830  002676  EF45  F013         	goto	l3380
  3831  00267A                     u3640:
  3832  00267A  0E00               	movlw	0
  3833  00267C  6E01               	movwf	___flge@ff1^0,c
  3834  00267E  0E00               	movlw	0
  3835  002680  6E02               	movwf	(___flge@ff1+1)^0,c
  3836  002682  0E00               	movlw	0
  3837  002684  6E03               	movwf	(___flge@ff1+2)^0,c
  3838  002686  0E00               	movlw	0
  3839  002688  6E04               	movwf	(___flge@ff1+3)^0,c
  3840  00268A                     l3380:
  3841  00268A  0E00               	movlw	0
  3842  00268C  1405               	andwf	___flge@ff2^0,w,c
  3843  00268E  6E09               	movwf	??___flge^0,c
  3844  002690  0E00               	movlw	0
  3845  002692  1406               	andwf	(___flge@ff2+1)^0,w,c
  3846  002694  6E0A               	movwf	(??___flge+1)^0,c
  3847  002696  0E80               	movlw	128
  3848  002698  1407               	andwf	(___flge@ff2+2)^0,w,c
  3849  00269A  6E0B               	movwf	(??___flge+2)^0,c
  3850  00269C  0E7F               	movlw	127
  3851  00269E  1408               	andwf	(___flge@ff2+3)^0,w,c
  3852  0026A0  6E0C               	movwf	(??___flge+3)^0,c
  3853  0026A2  5009               	movf	??___flge^0,w,c
  3854  0026A4  100A               	iorwf	(??___flge+1)^0,w,c
  3855  0026A6  100B               	iorwf	(??___flge+2)^0,w,c
  3856  0026A8  100C               	iorwf	(??___flge+3)^0,w,c
  3857  0026AA  A4D8               	btfss	status,2,c
  3858  0026AC  EF5A  F013         	goto	u3651
  3859  0026B0  EF5C  F013         	goto	u3650
  3860  0026B4                     u3651:
  3861  0026B4  EF64  F013         	goto	l3384
  3862  0026B8                     u3650:
  3863  0026B8  0E00               	movlw	0
  3864  0026BA  6E05               	movwf	___flge@ff2^0,c
  3865  0026BC  0E00               	movlw	0
  3866  0026BE  6E06               	movwf	(___flge@ff2+1)^0,c
  3867  0026C0  0E00               	movlw	0
  3868  0026C2  6E07               	movwf	(___flge@ff2+2)^0,c
  3869  0026C4  0E00               	movlw	0
  3870  0026C6  6E08               	movwf	(___flge@ff2+3)^0,c
  3871  0026C8                     l3384:
  3872  0026C8  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3873  0026CA  EF69  F013         	goto	u3661
  3874  0026CE  EF6B  F013         	goto	u3660
  3875  0026D2                     u3661:
  3876  0026D2  EF74  F013         	goto	l3388
  3877  0026D6                     u3660:
  3878  0026D6  6C01               	negf	___flge@ff1^0,c
  3879  0026D8  1E02               	comf	(___flge@ff1+1)^0,f,c
  3880  0026DA  B0D8               	btfsc	status,0,c
  3881  0026DC  2A02               	incf	(___flge@ff1+1)^0,f,c
  3882  0026DE  1E03               	comf	(___flge@ff1+2)^0,f,c
  3883  0026E0  B0D8               	btfsc	status,0,c
  3884  0026E2  2A03               	incf	(___flge@ff1+2)^0,f,c
  3885  0026E4  0E80               	movlw	128
  3886  0026E6  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3887  0026E8                     l3388:
  3888  0026E8  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3889  0026EA  EF79  F013         	goto	u3671
  3890  0026EE  EF7B  F013         	goto	u3670
  3891  0026F2                     u3671:
  3892  0026F2  EF84  F013         	goto	l631
  3893  0026F6                     u3670:
  3894  0026F6  6C05               	negf	___flge@ff2^0,c
  3895  0026F8  1E06               	comf	(___flge@ff2+1)^0,f,c
  3896  0026FA  B0D8               	btfsc	status,0,c
  3897  0026FC  2A06               	incf	(___flge@ff2+1)^0,f,c
  3898  0026FE  1E07               	comf	(___flge@ff2+2)^0,f,c
  3899  002700  B0D8               	btfsc	status,0,c
  3900  002702  2A07               	incf	(___flge@ff2+2)^0,f,c
  3901  002704  0E80               	movlw	128
  3902  002706  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3903  002708                     l631:
  3904  002708  0E00               	movlw	0
  3905  00270A  1A01               	xorwf	___flge@ff1^0,f,c
  3906  00270C  0E00               	movlw	0
  3907  00270E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3908  002710  0E00               	movlw	0
  3909  002712  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3910  002714  0E80               	movlw	128
  3911  002716  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3912  002718  0E00               	movlw	0
  3913  00271A  1A05               	xorwf	___flge@ff2^0,f,c
  3914  00271C  0E00               	movlw	0
  3915  00271E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3916  002720  0E00               	movlw	0
  3917  002722  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3918  002724  0E80               	movlw	128
  3919  002726  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3920  002728  5005               	movf	___flge@ff2^0,w,c
  3921  00272A  5C01               	subwf	___flge@ff1^0,w,c
  3922  00272C  5006               	movf	(___flge@ff2+1)^0,w,c
  3923  00272E  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3924  002730  5007               	movf	(___flge@ff2+2)^0,w,c
  3925  002732  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3926  002734  5008               	movf	(___flge@ff2+3)^0,w,c
  3927  002736  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3928  002738  B0D8               	btfsc	status,0,c
  3929  00273A  EFA1  F013         	goto	u3681
  3930  00273E  EFA3  F013         	goto	u3680
  3931  002742                     u3681:
  3932  002742  EFA6  F013         	goto	l3394
  3933  002746                     u3680:
  3934  002746  90D8               	bcf	status,0,c
  3935  002748  EFA7  F013         	goto	l636
  3936  00274C                     l3394:
  3937  00274C  80D8               	bsf	status,0,c
  3938  00274E                     l636:
  3939  00274E  0012               	return		;funcret
  3940  002750                     __end_of___flge:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function ___fldiv *****************
  3944 ;; Defined at:
  3945 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  b               4   47[COMRAM] unsigned char 
  3948 ;;  a               4   51[COMRAM] unsigned char 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  grs             4   66[COMRAM] unsigned long 
  3951 ;;  rem             4   59[COMRAM] unsigned long 
  3952 ;;  new_exp         2   64[COMRAM] short 
  3953 ;;  aexp            1   71[COMRAM] unsigned char 
  3954 ;;  bexp            1   70[COMRAM] unsigned char 
  3955 ;;  sign            1   63[COMRAM] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  4   47[COMRAM] unsigned char 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3965 ;;      Params:         8       0       0       0       0       0       0       0       0
  3966 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3967 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3968 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3969 ;;Total ram usage:       25 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_SensorTemperatura
  3975 ;;		_SensorLuz
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text12
  3980  000CA2                     __ptext12:
  3981                           	callstack 0
  3982  000CA2                     ___fldiv:
  3983                           	callstack 29
  3984  000CA2  5033               	movf	(___fldiv@b+3)^0,w,c
  3985  000CA4  0B80               	andlw	128
  3986  000CA6  6E40               	movwf	___fldiv@sign^0,c
  3987  000CA8  5033               	movf	(___fldiv@b+3)^0,w,c
  3988  000CAA  2433               	addwf	(___fldiv@b+3)^0,w,c
  3989  000CAC  6E47               	movwf	___fldiv@bexp^0,c
  3990  000CAE  AE32               	btfss	(___fldiv@b+2)^0,7,c
  3991  000CB0  EF5C  F006         	goto	u3221
  3992  000CB4  EF5E  F006         	goto	u3220
  3993  000CB8                     u3221:
  3994  000CB8  EF5F  F006         	goto	l3114
  3995  000CBC                     u3220:
  3996  000CBC  8047               	bsf	___fldiv@bexp^0,0,c
  3997  000CBE                     l3114:
  3998  000CBE  5047               	movf	___fldiv@bexp^0,w,c
  3999  000CC0  B4D8               	btfsc	status,2,c
  4000  000CC2  EF65  F006         	goto	u3231
  4001  000CC6  EF67  F006         	goto	u3230
  4002  000CCA                     u3231:
  4003  000CCA  EF7C  F006         	goto	l3124
  4004  000CCE                     u3230:
  4005  000CCE  2847               	incf	___fldiv@bexp^0,w,c
  4006  000CD0  A4D8               	btfss	status,2,c
  4007  000CD2  EF6D  F006         	goto	u3241
  4008  000CD6  EF6F  F006         	goto	u3240
  4009  000CDA                     u3241:
  4010  000CDA  EF77  F006         	goto	l3120
  4011  000CDE                     u3240:
  4012  000CDE  0E00               	movlw	0
  4013  000CE0  6E30               	movwf	___fldiv@b^0,c
  4014  000CE2  0E00               	movlw	0
  4015  000CE4  6E31               	movwf	(___fldiv@b+1)^0,c
  4016  000CE6  0E00               	movlw	0
  4017  000CE8  6E32               	movwf	(___fldiv@b+2)^0,c
  4018  000CEA  0E00               	movlw	0
  4019  000CEC  6E33               	movwf	(___fldiv@b+3)^0,c
  4020  000CEE                     l3120:
  4021  000CEE  8E32               	bsf	(___fldiv@b+2)^0,7,c
  4022  000CF0  0E00               	movlw	0
  4023  000CF2  6E33               	movwf	(___fldiv@b+3)^0,c
  4024  000CF4  EF84  F006         	goto	l3126
  4025  000CF8                     l3124:
  4026  000CF8  0E00               	movlw	0
  4027  000CFA  6E30               	movwf	___fldiv@b^0,c
  4028  000CFC  0E00               	movlw	0
  4029  000CFE  6E31               	movwf	(___fldiv@b+1)^0,c
  4030  000D00  0E00               	movlw	0
  4031  000D02  6E32               	movwf	(___fldiv@b+2)^0,c
  4032  000D04  0E00               	movlw	0
  4033  000D06  6E33               	movwf	(___fldiv@b+3)^0,c
  4034  000D08                     l3126:
  4035  000D08  5037               	movf	(___fldiv@a+3)^0,w,c
  4036  000D0A  0B80               	andlw	128
  4037  000D0C  1A40               	xorwf	___fldiv@sign^0,f,c
  4038  000D0E  5037               	movf	(___fldiv@a+3)^0,w,c
  4039  000D10  2437               	addwf	(___fldiv@a+3)^0,w,c
  4040  000D12  6E48               	movwf	___fldiv@aexp^0,c
  4041  000D14  AE36               	btfss	(___fldiv@a+2)^0,7,c
  4042  000D16  EF8F  F006         	goto	u3251
  4043  000D1A  EF91  F006         	goto	u3250
  4044  000D1E                     u3251:
  4045  000D1E  EF92  F006         	goto	l3134
  4046  000D22                     u3250:
  4047  000D22  8048               	bsf	___fldiv@aexp^0,0,c
  4048  000D24                     l3134:
  4049  000D24  5048               	movf	___fldiv@aexp^0,w,c
  4050  000D26  B4D8               	btfsc	status,2,c
  4051  000D28  EF98  F006         	goto	u3261
  4052  000D2C  EF9A  F006         	goto	u3260
  4053  000D30                     u3261:
  4054  000D30  EFAF  F006         	goto	l3144
  4055  000D34                     u3260:
  4056  000D34  2848               	incf	___fldiv@aexp^0,w,c
  4057  000D36  A4D8               	btfss	status,2,c
  4058  000D38  EFA0  F006         	goto	u3271
  4059  000D3C  EFA2  F006         	goto	u3270
  4060  000D40                     u3271:
  4061  000D40  EFAA  F006         	goto	l3140
  4062  000D44                     u3270:
  4063  000D44  0E00               	movlw	0
  4064  000D46  6E34               	movwf	___fldiv@a^0,c
  4065  000D48  0E00               	movlw	0
  4066  000D4A  6E35               	movwf	(___fldiv@a+1)^0,c
  4067  000D4C  0E00               	movlw	0
  4068  000D4E  6E36               	movwf	(___fldiv@a+2)^0,c
  4069  000D50  0E00               	movlw	0
  4070  000D52  6E37               	movwf	(___fldiv@a+3)^0,c
  4071  000D54                     l3140:
  4072  000D54  8E36               	bsf	(___fldiv@a+2)^0,7,c
  4073  000D56  0E00               	movlw	0
  4074  000D58  6E37               	movwf	(___fldiv@a+3)^0,c
  4075  000D5A  EFB7  F006         	goto	l3146
  4076  000D5E                     l3144:
  4077  000D5E  0E00               	movlw	0
  4078  000D60  6E34               	movwf	___fldiv@a^0,c
  4079  000D62  0E00               	movlw	0
  4080  000D64  6E35               	movwf	(___fldiv@a+1)^0,c
  4081  000D66  0E00               	movlw	0
  4082  000D68  6E36               	movwf	(___fldiv@a+2)^0,c
  4083  000D6A  0E00               	movlw	0
  4084  000D6C  6E37               	movwf	(___fldiv@a+3)^0,c
  4085  000D6E                     l3146:
  4086  000D6E  5034               	movf	___fldiv@a^0,w,c
  4087  000D70  1035               	iorwf	(___fldiv@a+1)^0,w,c
  4088  000D72  1036               	iorwf	(___fldiv@a+2)^0,w,c
  4089  000D74  1037               	iorwf	(___fldiv@a+3)^0,w,c
  4090  000D76  A4D8               	btfss	status,2,c
  4091  000D78  EFC0  F006         	goto	u3281
  4092  000D7C  EFC2  F006         	goto	u3280
  4093  000D80                     u3281:
  4094  000D80  EFDA  F006         	goto	l3158
  4095  000D84                     u3280:
  4096  000D84  0E00               	movlw	0
  4097  000D86  6E30               	movwf	___fldiv@b^0,c
  4098  000D88  0E00               	movlw	0
  4099  000D8A  6E31               	movwf	(___fldiv@b+1)^0,c
  4100  000D8C  0E00               	movlw	0
  4101  000D8E  6E32               	movwf	(___fldiv@b+2)^0,c
  4102  000D90  0E00               	movlw	0
  4103  000D92  6E33               	movwf	(___fldiv@b+3)^0,c
  4104  000D94  0E80               	movlw	128
  4105  000D96  1232               	iorwf	(___fldiv@b+2)^0,f,c
  4106  000D98  0E7F               	movlw	127
  4107  000D9A  1233               	iorwf	(___fldiv@b+3)^0,f,c
  4108  000D9C                     l3152:
  4109  000D9C  5040               	movf	___fldiv@sign^0,w,c
  4110  000D9E  1233               	iorwf	(___fldiv@b+3)^0,f,c
  4111  000DA0  C030  F030         	movff	___fldiv@b,?___fldiv
  4112  000DA4  C031  F031         	movff	___fldiv@b+1,?___fldiv+1
  4113  000DA8  C032  F032         	movff	___fldiv@b+2,?___fldiv+2
  4114  000DAC  C033  F033         	movff	___fldiv@b+3,?___fldiv+3
  4115  000DB0  EF1D  F008         	goto	l948
  4116  000DB4                     l3158:
  4117  000DB4  5047               	movf	___fldiv@bexp^0,w,c
  4118  000DB6  A4D8               	btfss	status,2,c
  4119  000DB8  EFE0  F006         	goto	u3291
  4120  000DBC  EFE2  F006         	goto	u3290
  4121  000DC0                     u3291:
  4122  000DC0  EFEC  F006         	goto	l3166
  4123  000DC4                     u3290:
  4124  000DC4  0E00               	movlw	0
  4125  000DC6  6E30               	movwf	?___fldiv^0,c
  4126  000DC8  0E00               	movlw	0
  4127  000DCA  6E31               	movwf	(?___fldiv+1)^0,c
  4128  000DCC  0E00               	movlw	0
  4129  000DCE  6E32               	movwf	(?___fldiv+2)^0,c
  4130  000DD0  0E00               	movlw	0
  4131  000DD2  6E33               	movwf	(?___fldiv+3)^0,c
  4132  000DD4  EF1D  F008         	goto	l948
  4133  000DD8                     l3166:
  4134  000DD8  5048               	movf	___fldiv@aexp^0,w,c
  4135  000DDA  C047  F038         	movff	___fldiv@bexp,??___fldiv
  4136  000DDE  6A39               	clrf	(??___fldiv+1)^0,c
  4137  000DE0  5E38               	subwf	??___fldiv^0,f,c
  4138  000DE2  0E00               	movlw	0
  4139  000DE4  5A39               	subwfb	(??___fldiv+1)^0,f,c
  4140  000DE6  0E7F               	movlw	127
  4141  000DE8  2438               	addwf	??___fldiv^0,w,c
  4142  000DEA  6E41               	movwf	___fldiv@new_exp^0,c
  4143  000DEC  0E00               	movlw	0
  4144  000DEE  2039               	addwfc	(??___fldiv+1)^0,w,c
  4145  000DF0  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4146  000DF2  C030  F03C         	movff	___fldiv@b,___fldiv@rem
  4147  000DF6  C031  F03D         	movff	___fldiv@b+1,___fldiv@rem+1
  4148  000DFA  C032  F03E         	movff	___fldiv@b+2,___fldiv@rem+2
  4149  000DFE  C033  F03F         	movff	___fldiv@b+3,___fldiv@rem+3
  4150  000E02  0E00               	movlw	0
  4151  000E04  6E30               	movwf	___fldiv@b^0,c
  4152  000E06  0E00               	movlw	0
  4153  000E08  6E31               	movwf	(___fldiv@b+1)^0,c
  4154  000E0A  0E00               	movlw	0
  4155  000E0C  6E32               	movwf	(___fldiv@b+2)^0,c
  4156  000E0E  0E00               	movlw	0
  4157  000E10  6E33               	movwf	(___fldiv@b+3)^0,c
  4158  000E12  0E00               	movlw	0
  4159  000E14  6E43               	movwf	___fldiv@grs^0,c
  4160  000E16  0E00               	movlw	0
  4161  000E18  6E44               	movwf	(___fldiv@grs+1)^0,c
  4162  000E1A  0E00               	movlw	0
  4163  000E1C  6E45               	movwf	(___fldiv@grs+2)^0,c
  4164  000E1E  0E00               	movlw	0
  4165  000E20  6E46               	movwf	(___fldiv@grs+3)^0,c
  4166  000E22  0E00               	movlw	0
  4167  000E24  6E48               	movwf	___fldiv@aexp^0,c
  4168  000E26  EF4D  F007         	goto	l950
  4169  000E2A                     l3176:
  4170  000E2A  5048               	movf	___fldiv@aexp^0,w,c
  4171  000E2C  B4D8               	btfsc	status,2,c
  4172  000E2E  EF1B  F007         	goto	u3301
  4173  000E32  EF1D  F007         	goto	u3300
  4174  000E36                     u3301:
  4175  000E36  EF34  F007         	goto	l3184
  4176  000E3A                     u3300:
  4177  000E3A  90D8               	bcf	status,0,c
  4178  000E3C  363C               	rlcf	___fldiv@rem^0,f,c
  4179  000E3E  363D               	rlcf	(___fldiv@rem+1)^0,f,c
  4180  000E40  363E               	rlcf	(___fldiv@rem+2)^0,f,c
  4181  000E42  363F               	rlcf	(___fldiv@rem+3)^0,f,c
  4182  000E44  90D8               	bcf	status,0,c
  4183  000E46  3630               	rlcf	___fldiv@b^0,f,c
  4184  000E48  3631               	rlcf	(___fldiv@b+1)^0,f,c
  4185  000E4A  3632               	rlcf	(___fldiv@b+2)^0,f,c
  4186  000E4C  3633               	rlcf	(___fldiv@b+3)^0,f,c
  4187  000E4E  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4188  000E50  EF2C  F007         	goto	u3311
  4189  000E54  EF2E  F007         	goto	u3310
  4190  000E58                     u3311:
  4191  000E58  EF2F  F007         	goto	l953
  4192  000E5C                     u3310:
  4193  000E5C  8030               	bsf	___fldiv@b^0,0,c
  4194  000E5E                     l953:
  4195  000E5E  90D8               	bcf	status,0,c
  4196  000E60  3643               	rlcf	___fldiv@grs^0,f,c
  4197  000E62  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  4198  000E64  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  4199  000E66  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  4200  000E68                     l3184:
  4201  000E68  5034               	movf	___fldiv@a^0,w,c
  4202  000E6A  5C3C               	subwf	___fldiv@rem^0,w,c
  4203  000E6C  5035               	movf	(___fldiv@a+1)^0,w,c
  4204  000E6E  583D               	subwfb	(___fldiv@rem+1)^0,w,c
  4205  000E70  5036               	movf	(___fldiv@a+2)^0,w,c
  4206  000E72  583E               	subwfb	(___fldiv@rem+2)^0,w,c
  4207  000E74  5037               	movf	(___fldiv@a+3)^0,w,c
  4208  000E76  583F               	subwfb	(___fldiv@rem+3)^0,w,c
  4209  000E78  A0D8               	btfss	status,0,c
  4210  000E7A  EF41  F007         	goto	u3321
  4211  000E7E  EF43  F007         	goto	u3320
  4212  000E82                     u3321:
  4213  000E82  EF4C  F007         	goto	l3190
  4214  000E86                     u3320:
  4215  000E86  8C46               	bsf	(___fldiv@grs+3)^0,6,c
  4216  000E88  5034               	movf	___fldiv@a^0,w,c
  4217  000E8A  5E3C               	subwf	___fldiv@rem^0,f,c
  4218  000E8C  5035               	movf	(___fldiv@a+1)^0,w,c
  4219  000E8E  5A3D               	subwfb	(___fldiv@rem+1)^0,f,c
  4220  000E90  5036               	movf	(___fldiv@a+2)^0,w,c
  4221  000E92  5A3E               	subwfb	(___fldiv@rem+2)^0,f,c
  4222  000E94  5037               	movf	(___fldiv@a+3)^0,w,c
  4223  000E96  5A3F               	subwfb	(___fldiv@rem+3)^0,f,c
  4224  000E98                     l3190:
  4225  000E98  2A48               	incf	___fldiv@aexp^0,f,c
  4226  000E9A                     l950:
  4227  000E9A  0E19               	movlw	25
  4228  000E9C  6448               	cpfsgt	___fldiv@aexp^0,c
  4229  000E9E  EF53  F007         	goto	u3331
  4230  000EA2  EF55  F007         	goto	u3330
  4231  000EA6                     u3331:
  4232  000EA6  EF15  F007         	goto	l3176
  4233  000EAA                     u3330:
  4234  000EAA  503C               	movf	___fldiv@rem^0,w,c
  4235  000EAC  103D               	iorwf	(___fldiv@rem+1)^0,w,c
  4236  000EAE  103E               	iorwf	(___fldiv@rem+2)^0,w,c
  4237  000EB0  103F               	iorwf	(___fldiv@rem+3)^0,w,c
  4238  000EB2  B4D8               	btfsc	status,2,c
  4239  000EB4  EF5E  F007         	goto	u3341
  4240  000EB8  EF60  F007         	goto	u3340
  4241  000EBC                     u3341:
  4242  000EBC  EF78  F007         	goto	l3202
  4243  000EC0                     u3340:
  4244  000EC0  8043               	bsf	___fldiv@grs^0,0,c
  4245  000EC2  EF78  F007         	goto	l3202
  4246  000EC6                     l3196:
  4247  000EC6  90D8               	bcf	status,0,c
  4248  000EC8  3630               	rlcf	___fldiv@b^0,f,c
  4249  000ECA  3631               	rlcf	(___fldiv@b+1)^0,f,c
  4250  000ECC  3632               	rlcf	(___fldiv@b+2)^0,f,c
  4251  000ECE  3633               	rlcf	(___fldiv@b+3)^0,f,c
  4252  000ED0  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4253  000ED2  EF6D  F007         	goto	u3351
  4254  000ED6  EF6F  F007         	goto	u3350
  4255  000EDA                     u3351:
  4256  000EDA  EF70  F007         	goto	l959
  4257  000EDE                     u3350:
  4258  000EDE  8030               	bsf	___fldiv@b^0,0,c
  4259  000EE0                     l959:
  4260  000EE0  90D8               	bcf	status,0,c
  4261  000EE2  3643               	rlcf	___fldiv@grs^0,f,c
  4262  000EE4  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  4263  000EE6  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  4264  000EE8  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  4265  000EEA  0641               	decf	___fldiv@new_exp^0,f,c
  4266  000EEC  A0D8               	btfss	status,0,c
  4267  000EEE  0642               	decf	(___fldiv@new_exp+1)^0,f,c
  4268  000EF0                     l3202:
  4269  000EF0  AE32               	btfss	(___fldiv@b+2)^0,7,c
  4270  000EF2  EF7D  F007         	goto	u3361
  4271  000EF6  EF7F  F007         	goto	u3360
  4272  000EFA                     u3361:
  4273  000EFA  EF63  F007         	goto	l3196
  4274  000EFE                     u3360:
  4275  000EFE  0E00               	movlw	0
  4276  000F00  6E48               	movwf	___fldiv@aexp^0,c
  4277  000F02  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  4278  000F04  EF86  F007         	goto	u3371
  4279  000F08  EF88  F007         	goto	u3370
  4280  000F0C                     u3371:
  4281  000F0C  EFAC  F007         	goto	l961
  4282  000F10                     u3370:
  4283  000F10  0EFF               	movlw	255
  4284  000F12  1443               	andwf	___fldiv@grs^0,w,c
  4285  000F14  6E38               	movwf	??___fldiv^0,c
  4286  000F16  0EFF               	movlw	255
  4287  000F18  1444               	andwf	(___fldiv@grs+1)^0,w,c
  4288  000F1A  6E39               	movwf	(??___fldiv+1)^0,c
  4289  000F1C  0EFF               	movlw	255
  4290  000F1E  1445               	andwf	(___fldiv@grs+2)^0,w,c
  4291  000F20  6E3A               	movwf	(??___fldiv+2)^0,c
  4292  000F22  0E7F               	movlw	127
  4293  000F24  1446               	andwf	(___fldiv@grs+3)^0,w,c
  4294  000F26  6E3B               	movwf	(??___fldiv+3)^0,c
  4295  000F28  5038               	movf	??___fldiv^0,w,c
  4296  000F2A  1039               	iorwf	(??___fldiv+1)^0,w,c
  4297  000F2C  103A               	iorwf	(??___fldiv+2)^0,w,c
  4298  000F2E  103B               	iorwf	(??___fldiv+3)^0,w,c
  4299  000F30  B4D8               	btfsc	status,2,c
  4300  000F32  EF9D  F007         	goto	u3381
  4301  000F36  EF9F  F007         	goto	u3380
  4302  000F3A                     u3381:
  4303  000F3A  EFA3  F007         	goto	l962
  4304  000F3E                     u3380:
  4305  000F3E                     l3210:
  4306  000F3E  0E01               	movlw	1
  4307  000F40  6E48               	movwf	___fldiv@aexp^0,c
  4308  000F42  EFAC  F007         	goto	l961
  4309  000F46                     l962:
  4310  000F46  A030               	btfss	___fldiv@b^0,0,c
  4311  000F48  EFA8  F007         	goto	u3391
  4312  000F4C  EFAA  F007         	goto	u3390
  4313  000F50                     u3391:
  4314  000F50  EFAC  F007         	goto	l961
  4315  000F54                     u3390:
  4316  000F54  EF9F  F007         	goto	l3210
  4317  000F58                     l961:
  4318  000F58  5048               	movf	___fldiv@aexp^0,w,c
  4319  000F5A  B4D8               	btfsc	status,2,c
  4320  000F5C  EFB2  F007         	goto	u3401
  4321  000F60  EFB4  F007         	goto	u3400
  4322  000F64                     u3401:
  4323  000F64  EFD8  F007         	goto	l3222
  4324  000F68                     u3400:
  4325  000F68  0E01               	movlw	1
  4326  000F6A  2630               	addwf	___fldiv@b^0,f,c
  4327  000F6C  0E00               	movlw	0
  4328  000F6E  2231               	addwfc	(___fldiv@b+1)^0,f,c
  4329  000F70  2232               	addwfc	(___fldiv@b+2)^0,f,c
  4330  000F72  2233               	addwfc	(___fldiv@b+3)^0,f,c
  4331  000F74  A033               	btfss	(___fldiv@b+3)^0,0,c
  4332  000F76  EFBF  F007         	goto	u3411
  4333  000F7A  EFC1  F007         	goto	u3410
  4334  000F7E                     u3411:
  4335  000F7E  EFD8  F007         	goto	l3222
  4336  000F82                     u3410:
  4337  000F82  C030  F038         	movff	___fldiv@b,??___fldiv
  4338  000F86  C031  F039         	movff	___fldiv@b+1,??___fldiv+1
  4339  000F8A  C032  F03A         	movff	___fldiv@b+2,??___fldiv+2
  4340  000F8E  C033  F03B         	movff	___fldiv@b+3,??___fldiv+3
  4341  000F92  343B               	rlcf	(??___fldiv+3)^0,w,c
  4342  000F94  323B               	rrcf	(??___fldiv+3)^0,f,c
  4343  000F96  323A               	rrcf	(??___fldiv+2)^0,f,c
  4344  000F98  3239               	rrcf	(??___fldiv+1)^0,f,c
  4345  000F9A  3238               	rrcf	??___fldiv^0,f,c
  4346  000F9C  C038  F030         	movff	??___fldiv,___fldiv@b
  4347  000FA0  C039  F031         	movff	??___fldiv+1,___fldiv@b+1
  4348  000FA4  C03A  F032         	movff	??___fldiv+2,___fldiv@b+2
  4349  000FA8  C03B  F033         	movff	??___fldiv+3,___fldiv@b+3
  4350  000FAC  4A41               	infsnz	___fldiv@new_exp^0,f,c
  4351  000FAE  2A42               	incf	(___fldiv@new_exp+1)^0,f,c
  4352  000FB0                     l3222:
  4353  000FB0  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4354  000FB2  EFE3  F007         	goto	u3421
  4355  000FB6  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  4356  000FB8  E108               	bnz	u3420
  4357  000FBA  2841               	incf	___fldiv@new_exp^0,w,c
  4358  000FBC  A0D8               	btfss	status,0,c
  4359  000FBE  EFE3  F007         	goto	u3421
  4360  000FC2  EFE5  F007         	goto	u3420
  4361  000FC6                     u3421:
  4362  000FC6  EFF0  F007         	goto	l3226
  4363  000FCA                     u3420:
  4364  000FCA  0E00               	movlw	0
  4365  000FCC  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4366  000FCE  6841               	setf	___fldiv@new_exp^0,c
  4367  000FD0  0E00               	movlw	0
  4368  000FD2  6E30               	movwf	___fldiv@b^0,c
  4369  000FD4  0E00               	movlw	0
  4370  000FD6  6E31               	movwf	(___fldiv@b+1)^0,c
  4371  000FD8  0E00               	movlw	0
  4372  000FDA  6E32               	movwf	(___fldiv@b+2)^0,c
  4373  000FDC  0E00               	movlw	0
  4374  000FDE  6E33               	movwf	(___fldiv@b+3)^0,c
  4375  000FE0                     l3226:
  4376  000FE0  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4377  000FE2  EFFD  F007         	goto	u3430
  4378  000FE6  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  4379  000FE8  E106               	bnz	u3431
  4380  000FEA  0441               	decf	___fldiv@new_exp^0,w,c
  4381  000FEC  B0D8               	btfsc	status,0,c
  4382  000FEE  EFFB  F007         	goto	u3431
  4383  000FF2  EFFD  F007         	goto	u3430
  4384  000FF6                     u3431:
  4385  000FF6  EF0B  F008         	goto	l3230
  4386  000FFA                     u3430:
  4387  000FFA  0E00               	movlw	0
  4388  000FFC  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  4389  000FFE  0E00               	movlw	0
  4390  001000  6E41               	movwf	___fldiv@new_exp^0,c
  4391  001002  0E00               	movlw	0
  4392  001004  6E30               	movwf	___fldiv@b^0,c
  4393  001006  0E00               	movlw	0
  4394  001008  6E31               	movwf	(___fldiv@b+1)^0,c
  4395  00100A  0E00               	movlw	0
  4396  00100C  6E32               	movwf	(___fldiv@b+2)^0,c
  4397  00100E  0E00               	movlw	0
  4398  001010  6E33               	movwf	(___fldiv@b+3)^0,c
  4399  001012  0E00               	movlw	0
  4400  001014  6E40               	movwf	___fldiv@sign^0,c
  4401  001016                     l3230:
  4402  001016  C041  F047         	movff	___fldiv@new_exp,___fldiv@bexp
  4403  00101A  A047               	btfss	___fldiv@bexp^0,0,c
  4404  00101C  EF12  F008         	goto	u3441
  4405  001020  EF14  F008         	goto	u3440
  4406  001024                     u3441:
  4407  001024  EF17  F008         	goto	l3236
  4408  001028                     u3440:
  4409  001028  8E32               	bsf	(___fldiv@b+2)^0,7,c
  4410  00102A  EF18  F008         	goto	l3238
  4411  00102E                     l3236:
  4412  00102E  9E32               	bcf	(___fldiv@b+2)^0,7,c
  4413  001030                     l3238:
  4414  001030  90D8               	bcf	status,0,c
  4415  001032  3047               	rrcf	___fldiv@bexp^0,w,c
  4416  001034  6E33               	movwf	(___fldiv@b+3)^0,c
  4417  001036  EFCE  F006         	goto	l3152
  4418  00103A                     l948:
  4419  00103A  0012               	return		;funcret
  4420  00103C                     __end_of___fldiv:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _ADC_Read *****************
  4424 ;; Defined at:
  4425 ;;		line 32 in file "PIC18F4550_ADC_Source_File.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  channel         2    0[COMRAM] int 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  digital         2    6[COMRAM] int 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  2    0[COMRAM] int 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         2       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        8 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_SensorTemperatura
  4449 ;;		_SensorLuz
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text13
  4454  002A70                     __ptext13:
  4455                           	callstack 0
  4456  002A70                     _ADC_Read:
  4457                           	callstack 29
  4458  002A70                     
  4459                           ;PIC18F4550_ADC_Source_File.c: 32: int ADC_Read(int channel);PIC18F4550_ADC_Source_File.
      +                          c: 33: {;PIC18F4550_ADC_Source_File.c: 34:     int digital;;PIC18F4550_ADC_Source_File.c
      +                          : 35:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  4460  002A70  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  4461  002A74  90D8               	bcf	status,0,c
  4462  002A76  3603               	rlcf	??_ADC_Read^0,f,c
  4463  002A78  90D8               	bcf	status,0,c
  4464  002A7A  3603               	rlcf	??_ADC_Read^0,f,c
  4465  002A7C  0E3C               	movlw	60
  4466  002A7E  1603               	andwf	??_ADC_Read^0,f,c
  4467  002A80  50C2               	movf	194,w,c	;volatile
  4468  002A82  0BC3               	andlw	195
  4469  002A84  1003               	iorwf	??_ADC_Read^0,w,c
  4470  002A86  6EC2               	movwf	194,c	;volatile
  4471                           
  4472                           ;PIC18F4550_ADC_Source_File.c: 37:     ADCON0 |= ((1<<ADON)|(1<<GO));
  4473  002A88  B2C2               	btfsc	4034,1,c	;volatile
  4474  002A8A  EF49  F015         	goto	u3031
  4475  002A8E  EF4D  F015         	goto	u3030
  4476  002A92                     u3031:
  4477  002A92  6A03               	clrf	??_ADC_Read^0,c
  4478  002A94  2A03               	incf	??_ADC_Read^0,f,c
  4479  002A96  EF4E  F015         	goto	u3048
  4480  002A9A                     u3030:
  4481  002A9A  6A03               	clrf	??_ADC_Read^0,c
  4482  002A9C                     u3048:
  4483  002A9C  0E01               	movlw	1
  4484  002A9E  6E04               	movwf	(??_ADC_Read+1)^0,c
  4485  002AA0  2A03               	incf	??_ADC_Read^0,f,c
  4486  002AA2  EF55  F015         	goto	u3054
  4487  002AA6                     u3055:
  4488  002AA6  90D8               	bcf	status,0,c
  4489  002AA8  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  4490  002AAA                     u3054:
  4491  002AAA  2E03               	decfsz	??_ADC_Read^0,f,c
  4492  002AAC  EF53  F015         	goto	u3055
  4493  002AB0  B0C2               	btfsc	4034,0,c	;volatile
  4494  002AB2  EF5D  F015         	goto	u3061
  4495  002AB6  EF61  F015         	goto	u3060
  4496  002ABA                     u3061:
  4497  002ABA  6A05               	clrf	(??_ADC_Read+2)^0,c
  4498  002ABC  2A05               	incf	(??_ADC_Read+2)^0,f,c
  4499  002ABE  EF62  F015         	goto	u3078
  4500  002AC2                     u3060:
  4501  002AC2  6A05               	clrf	(??_ADC_Read+2)^0,c
  4502  002AC4                     u3078:
  4503  002AC4  0E01               	movlw	1
  4504  002AC6  6E06               	movwf	(??_ADC_Read+3)^0,c
  4505  002AC8  2A05               	incf	(??_ADC_Read+2)^0,f,c
  4506  002ACA  EF69  F015         	goto	u3084
  4507  002ACE                     u3085:
  4508  002ACE  90D8               	bcf	status,0,c
  4509  002AD0  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  4510  002AD2                     u3084:
  4511  002AD2  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  4512  002AD4  EF67  F015         	goto	u3085
  4513  002AD8  5006               	movf	(??_ADC_Read+3)^0,w,c
  4514  002ADA  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  4515  002ADC  12C2               	iorwf	194,f,c	;volatile
  4516  002ADE                     l24:
  4517  002ADE  B2C2               	btfsc	194,1,c	;volatile
  4518  002AE0  EF74  F015         	goto	u3091
  4519  002AE4  EF76  F015         	goto	u3090
  4520  002AE8                     u3091:
  4521  002AE8  EF6F  F015         	goto	l24
  4522  002AEC                     u3090:
  4523  002AEC                     
  4524                           ;PIC18F4550_ADC_Source_File.c: 39:     digital = (ADRESH*256) | (ADRESL);
  4525  002AEC  50C3               	movf	195,w,c	;volatile
  4526  002AEE  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  4527  002AF2  6A04               	clrf	(??_ADC_Read+1)^0,c
  4528  002AF4  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  4529  002AF8  6A03               	clrf	??_ADC_Read^0,c
  4530  002AFA  1003               	iorwf	??_ADC_Read^0,w,c
  4531  002AFC  6E07               	movwf	ADC_Read@digital^0,c
  4532  002AFE  5004               	movf	(??_ADC_Read+1)^0,w,c
  4533  002B00  6E08               	movwf	(ADC_Read@digital+1)^0,c
  4534  002B02                     
  4535                           ;PIC18F4550_ADC_Source_File.c: 40:     return(digital);
  4536  002B02  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  4537  002B06  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  4538  002B0A  0012               	return		;funcret
  4539  002B0C                     __end_of_ADC_Read:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _RTC *****************
  4543 ;; Defined at:
  4544 ;;		line 248 in file "Controler.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    8
  4565 ;; This function calls:
  4566 ;;		_I2C_Stop
  4567 ;;		_LCD_String
  4568 ;;		_LCD_String_xy
  4569 ;;		_RTC_Read_Clock
  4570 ;;		_sprintf
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text14
  4577  002B0C                     __ptext14:
  4578                           	callstack 0
  4579  002B0C                     _RTC:
  4580                           	callstack 22
  4581  002B0C                     
  4582                           ;Controler.c: 249:     RTC_Read_Clock(0);
  4583  002B0C  0E00               	movlw	0
  4584  002B0E  EC5B  F017         	call	_RTC_Read_Clock
  4585  002B12                     
  4586                           ;Controler.c: 250:     I2C_Stop();
  4587  002B12  EC51  F019         	call	_I2C_Stop	;wreg free
  4588  002B16                     
  4589                           ;Controler.c: 253:     hour = hour & (0x1f);
  4590  002B16  0E1F               	movlw	31
  4591  002B18  0100               	movlb	0	; () banked
  4592  002B1A  15EB               	andwf	_hour& (0+255),w,b
  4593  002B1C  6FEB               	movwf	_hour& (0+255),b
  4594  002B1E  6BEC               	clrf	(_hour+1)& (0+255),b
  4595  002B20                     
  4596                           ; BSR set to: 0
  4597                           ;Controler.c: 254:     sprintf(secs, "%x ", sec);
  4598  002B20  0EEB               	movlw	low _secs
  4599  002B22  6F66               	movwf	sprintf@s& (0+255),b
  4600  002B24  0E01               	movlw	high _secs
  4601  002B26  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4602  002B28  0E73               	movlw	low STR_13
  4603  002B2A  6F68               	movwf	sprintf@fmt& (0+255),b
  4604  002B2C  0E08               	movlw	high STR_13
  4605  002B2E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4606  002B30  C0EF  F06A         	movff	_sec,?_sprintf+4
  4607  002B34  C0F0  F06B         	movff	_sec+1,?_sprintf+5
  4608  002B38  ECE9  F016         	call	_sprintf	;wreg free
  4609  002B3C                     
  4610                           ;Controler.c: 255:     sprintf(mins, "%x:", min);
  4611  002B3C  0EE1               	movlw	low _mins
  4612  002B3E  0100               	movlb	0	; () banked
  4613  002B40  6F66               	movwf	sprintf@s& (0+255),b
  4614  002B42  0E01               	movlw	high _mins
  4615  002B44  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4616  002B46  0E31               	movlw	low (STR_15+4)
  4617  002B48  6F68               	movwf	sprintf@fmt& (0+255),b
  4618  002B4A  0E08               	movlw	high (STR_15+4)
  4619  002B4C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4620  002B4E  C0ED  F06A         	movff	_min,?_sprintf+4
  4621  002B52  C0EE  F06B         	movff	_min+1,?_sprintf+5
  4622  002B56  ECE9  F016         	call	_sprintf	;wreg free
  4623  002B5A                     
  4624                           ;Controler.c: 256:     sprintf(hours, "Tim:%x:", hour);
  4625  002B5A  0ED7               	movlw	low _hours
  4626  002B5C  0100               	movlb	0	; () banked
  4627  002B5E  6F66               	movwf	sprintf@s& (0+255),b
  4628  002B60  0E01               	movlw	high _hours
  4629  002B62  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4630  002B64  0E2D               	movlw	low STR_15
  4631  002B66  6F68               	movwf	sprintf@fmt& (0+255),b
  4632  002B68  0E08               	movlw	high STR_15
  4633  002B6A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4634  002B6C  C0EB  F06A         	movff	_hour,?_sprintf+4
  4635  002B70  C0EC  F06B         	movff	_hour+1,?_sprintf+5
  4636  002B74  ECE9  F016         	call	_sprintf	;wreg free
  4637  002B78                     
  4638                           ;Controler.c: 257:     LCD_String_xy(0, 0, hours);
  4639  002B78  0E00               	movlw	0
  4640  002B7A  6E0A               	movwf	LCD_String_xy@pos^0,c
  4641  002B7C  0ED7               	movlw	low _hours
  4642  002B7E  6E0B               	movwf	LCD_String_xy@str^0,c
  4643  002B80  0E01               	movlw	high _hours
  4644  002B82  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  4645  002B84  0E00               	movlw	0
  4646  002B86  ECD2  F015         	call	_LCD_String_xy
  4647  002B8A                     
  4648                           ;Controler.c: 258:     LCD_String(mins);
  4649  002B8A  0EE1               	movlw	low _mins
  4650  002B8C  6E08               	movwf	LCD_String@msg^0,c
  4651  002B8E  0E01               	movlw	high _mins
  4652  002B90  6E09               	movwf	(LCD_String@msg+1)^0,c
  4653  002B92  ECBA  F016         	call	_LCD_String	;wreg free
  4654  002B96                     
  4655                           ;Controler.c: 259:     LCD_String(secs);
  4656  002B96  0EEB               	movlw	low _secs
  4657  002B98  6E08               	movwf	LCD_String@msg^0,c
  4658  002B9A  0E01               	movlw	high _secs
  4659  002B9C  6E09               	movwf	(LCD_String@msg+1)^0,c
  4660  002B9E  ECBA  F016         	call	_LCD_String	;wreg free
  4661  002BA2  0012               	return		;funcret
  4662  002BA4                     __end_of_RTC:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _sprintf *****************
  4666 ;; Defined at:
  4667 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  s               2    6[BANK0 ] PTR unsigned char 
  4670 ;;		 -> hours(10), mins(10), secs(10), SensorTemperatura@Temperature(10), 
  4671 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  4672 ;;		 -> STR_15(8), STR_14(4), STR_13(4), STR_2(7), 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  f               6   18[BANK0 ] struct _IO_FILE
  4675 ;;  ap              2   16[BANK0 ] PTR void [1]
  4676 ;;		 -> ?_sprintf(2), 
  4677 ;;  ret             2    0        int 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  2    6[BANK0 ] int 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4687 ;;      Params:         0       8       0       0       0       0       0       0       0
  4688 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4690 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4691 ;;Total ram usage:       18 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    7
  4694 ;; This function calls:
  4695 ;;		_vfprintf
  4696 ;; This function is called by:
  4697 ;;		_SensorTemperatura
  4698 ;;		_RTC
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text15
  4703  002DD2                     __ptext15:
  4704                           	callstack 0
  4705  002DD2                     _sprintf:
  4706                           	callstack 22
  4707  002DD2  0E6A               	movlw	low (?_sprintf+4)
  4708  002DD4  0100               	movlb	0	; () banked
  4709  002DD6  6F70               	movwf	sprintf@ap& (0+255),b
  4710  002DD8  0E00               	movlw	high (?_sprintf+4)
  4711  002DDA  6F71               	movwf	(sprintf@ap+1)& (0+255),b
  4712  002DDC  C066  F072         	movff	sprintf@s,sprintf@f
  4713  002DE0  C067  F073         	movff	sprintf@s+1,sprintf@f+1
  4714  002DE4                     
  4715                           ; BSR set to: 0
  4716  002DE4  0E00               	movlw	0
  4717  002DE6  6F75               	movwf	(sprintf@f+3)& (0+255),b
  4718  002DE8  0E00               	movlw	0
  4719  002DEA  6F74               	movwf	(sprintf@f+2)& (0+255),b
  4720  002DEC                     
  4721                           ; BSR set to: 0
  4722  002DEC  0E00               	movlw	0
  4723  002DEE  6F77               	movwf	(sprintf@f+5)& (0+255),b
  4724  002DF0  0E00               	movlw	0
  4725  002DF2  6F76               	movwf	(sprintf@f+4)& (0+255),b
  4726  002DF4                     
  4727                           ; BSR set to: 0
  4728  002DF4  0E72               	movlw	low sprintf@f
  4729  002DF6  6F60               	movwf	vfprintf@fp& (0+255),b
  4730  002DF8  0E00               	movlw	high sprintf@f
  4731  002DFA  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  4732  002DFC  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  4733  002E00  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4734  002E04  0E70               	movlw	low sprintf@ap
  4735  002E06  6F64               	movwf	vfprintf@ap& (0+255),b
  4736  002E08  0E00               	movlw	high sprintf@ap
  4737  002E0A  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  4738  002E0C  EC5A  F016         	call	_vfprintf	;wreg free
  4739  002E10  0100               	movlb	0	; () banked
  4740  002E12  5174               	movf	(sprintf@f+2)& (0+255),w,b
  4741  002E14  2566               	addwf	sprintf@s& (0+255),w,b
  4742  002E16  6ED9               	movwf	fsr2l,c
  4743  002E18  5175               	movf	(sprintf@f+3)& (0+255),w,b
  4744  002E1A  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  4745  002E1C  6EDA               	movwf	fsr2h,c
  4746  002E1E  0E00               	movlw	0
  4747  002E20  6EDF               	movwf	indf2,c
  4748  002E22                     
  4749                           ; BSR set to: 0
  4750  002E22  0012               	return		;funcret
  4751  002E24                     __end_of_sprintf:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _vfprintf *****************
  4755 ;; Defined at:
  4756 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4759 ;;		 -> sprintf@f(6), 
  4760 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4761 ;;		 -> STR_15(8), STR_14(4), STR_13(4), STR_2(7), 
  4762 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4763 ;;		 -> sprintf@ap(2), 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  4766 ;;		 -> STR_15(8), STR_14(4), STR_13(4), STR_2(7), 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  2    0[BANK0 ] int 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4776 ;;      Params:         0       6       0       0       0       0       0       0       0
  4777 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4779 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4780 ;;Total ram usage:        8 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    6
  4783 ;; This function calls:
  4784 ;;		_vfpfcnvrt
  4785 ;; This function is called by:
  4786 ;;		_sprintf
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text16
  4791  002CB4                     __ptext16:
  4792                           	callstack 0
  4793  002CB4                     _vfprintf:
  4794                           	callstack 22
  4795  002CB4                     
  4796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4797  002CB4  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  4798  002CB8  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4799  002CBC                     
  4800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4801  002CBC  0E00               	movlw	0
  4802  002CBE  0100               	movlb	0	; () banked
  4803  002CC0  6FE4               	movwf	(_nout+1)& (0+255),b
  4804  002CC2  0E00               	movlw	0
  4805  002CC4  6FE3               	movwf	_nout& (0+255),b
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4808  002CC6  EF78  F016         	goto	l3006
  4809  002CCA                     l3004:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4813  002CCA  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4814  002CCE  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4815  002CD2  0E5E               	movlw	low vfprintf@cfmt
  4816  002CD4  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4817  002CD6  0E00               	movlw	high vfprintf@cfmt
  4818  002CD8  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4819  002CDA  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4820  002CDE  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4821  002CE2  EC1E  F008         	call	_vfpfcnvrt	;wreg free
  4822  002CE6  5043               	movf	?_vfpfcnvrt^0,w,c
  4823  002CE8  0100               	movlb	0	; () banked
  4824  002CEA  27E3               	addwf	_nout& (0+255),f,b
  4825  002CEC  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4826  002CEE  23E4               	addwfc	(_nout+1)& (0+255),f,b
  4827  002CF0                     l3006:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4831  002CF0  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4832  002CF4  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4833  002CF8                     	if	0	;tblptru may be non-zero
  4834  002CF8                     	endif
  4835  002CF8                     	if	0	;tblptru may be non-zero
  4836  002CF8                     	endif
  4837  002CF8  0008               	tblrd		*
  4838  002CFA  50F5               	movf	tablat,w,c
  4839  002CFC  0900               	iorlw	0
  4840  002CFE  A4D8               	btfss	status,2,c
  4841  002D00  EF84  F016         	goto	u3021
  4842  002D04  EF86  F016         	goto	u3020
  4843  002D08                     u3021:
  4844  002D08  EF65  F016         	goto	l3004
  4845  002D0C                     u3020:
  4846  002D0C                     
  4847                           ; BSR set to: 0
  4848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4849  002D0C  C0E3  F060         	movff	_nout,?_vfprintf
  4850  002D10  C0E4  F061         	movff	_nout+1,?_vfprintf+1
  4851  002D14                     
  4852                           ; BSR set to: 0
  4853  002D14  0012               	return		;funcret
  4854  002D16                     __end_of_vfprintf:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _vfpfcnvrt *****************
  4858 ;; Defined at:
  4859 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4862 ;;		 -> sprintf@f(6), 
  4863 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4864 ;;		 -> vfprintf@cfmt(2), 
  4865 ;;  ap              2   70[COMRAM] PTR PTR void 
  4866 ;;		 -> sprintf@ap(2), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  llu             8   84[COMRAM] unsigned long long 
  4869 ;;  ll              8   76[COMRAM] long long 
  4870 ;;  f               4    0        long long 
  4871 ;;  vp              3    0        PTR void 
  4872 ;;  ct              3    0        unsigned char [3]
  4873 ;;  cp              3    0        PTR unsigned char 
  4874 ;;  i               2    0        int 
  4875 ;;  done            2    0        int 
  4876 ;;  c               1   92[COMRAM] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  2   66[COMRAM] int 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         6       0       0       0       0       0       0       0       0
  4887 ;;      Locals:        17       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4889 ;;      Totals:        27       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:       27 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    5
  4893 ;; This function calls:
  4894 ;;		_ctoa
  4895 ;;		_dtoa
  4896 ;;		_fputc
  4897 ;;		_xtoa
  4898 ;; This function is called by:
  4899 ;;		_vfprintf
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text17
  4904  00103C                     __ptext17:
  4905                           	callstack 0
  4906  00103C                     _vfpfcnvrt:
  4907                           	callstack 22
  4908  00103C                     
  4909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4910  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4911  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4912  001044  CFDE FFF6          	movff	postinc2,tblptrl
  4913  001048  CFDD FFF7          	movff	postdec2,tblptrh
  4914  00104C                     	if	0	;tblptru may be non-zero
  4915  00104C                     	endif
  4916  00104C                     	if	0	;tblptru may be non-zero
  4917  00104C                     	endif
  4918  00104C  0008               	tblrd		*
  4919  00104E  50F5               	movf	tablat,w,c
  4920  001050  0A25               	xorlw	37
  4921  001052  A4D8               	btfss	status,2,c
  4922  001054  EF2E  F008         	goto	u2851
  4923  001058  EF30  F008         	goto	u2850
  4924  00105C                     u2851:
  4925  00105C  EF87  F009         	goto	l2936
  4926  001060                     u2850:
  4927  001060                     
  4928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4929  001060  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4930  001064  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4931  001068  2ADE               	incf	postinc2,f,c
  4932  00106A  0E00               	movlw	0
  4933  00106C  22DD               	addwfc	postdec2,f,c
  4934  00106E                     
  4935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4936  00106E  0E00               	movlw	0
  4937  001070  0100               	movlb	0	; () banked
  4938  001072  6FE6               	movwf	(_width+1)& (0+255),b
  4939  001074  0E00               	movlw	0
  4940  001076  6FE5               	movwf	_width& (0+255),b
  4941  001078  C0E5  F0E9         	movff	_width,_flags
  4942  00107C  C0E6  F0EA         	movff	_width+1,_flags+1
  4943  001080                     
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4946  001080  69E7               	setf	_prec& (0+255),b
  4947  001082  69E8               	setf	(_prec+1)& (0+255),b
  4948  001084                     
  4949                           ; BSR set to: 0
  4950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  4951  001084  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4952  001088  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4953  00108C  CFDE FFF6          	movff	postinc2,tblptrl
  4954  001090  CFDD FFF7          	movff	postdec2,tblptrh
  4955  001094                     	if	0	;tblptru may be non-zero
  4956  001094                     	endif
  4957  001094                     	if	0	;tblptru may be non-zero
  4958  001094                     	endif
  4959  001094  0008               	tblrd		*
  4960  001096  50F5               	movf	tablat,w,c
  4961  001098  0A63               	xorlw	99
  4962  00109A  A4D8               	btfss	status,2,c
  4963  00109C  EF52  F008         	goto	u2861
  4964  0010A0  EF54  F008         	goto	u2860
  4965  0010A4                     u2861:
  4966  0010A4  EF7B  F008         	goto	l2896
  4967  0010A8                     u2860:
  4968  0010A8                     
  4969                           ; BSR set to: 0
  4970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  4971  0010A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4972  0010AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4973  0010B0  2ADE               	incf	postinc2,f,c
  4974  0010B2  0E00               	movlw	0
  4975  0010B4  22DD               	addwfc	postdec2,f,c
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4978  0010B6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4979  0010BA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4980  0010BE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4981  0010C2  0E02               	movlw	2
  4982  0010C4  26DE               	addwf	postinc2,f,c
  4983  0010C6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4984  0010CA  0E00               	movlw	0
  4985  0010CC  22DD               	addwfc	postdec2,f,c
  4986  0010CE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4987  0010D2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4988  0010D6  50DF               	movf	indf2,w,c
  4989  0010D8  6E5D               	movwf	vfpfcnvrt@c^0,c
  4990  0010DA                     
  4991                           ; BSR set to: 0
  4992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  4993  0010DA  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  4994  0010DE  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4995  0010E2  C05D  F00C         	movff	vfpfcnvrt@c,ctoa@c
  4996  0010E6  ECA8  F013         	call	_ctoa	;wreg free
  4997  0010EA  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  4998  0010EE  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4999  0010F2  EFA2  F009         	goto	l1169
  5000  0010F6                     l2896:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5004  0010F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5005  0010FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5006  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  5007  001102  CFDD FFF7          	movff	postdec2,tblptrh
  5008  001106                     	if	0	;tblptru may be non-zero
  5009  001106                     	endif
  5010  001106                     	if	0	;tblptru may be non-zero
  5011  001106                     	endif
  5012  001106  0008               	tblrd		*
  5013  001108  50F5               	movf	tablat,w,c
  5014  00110A  0A64               	xorlw	100
  5015  00110C  B4D8               	btfsc	status,2,c
  5016  00110E  EF8B  F008         	goto	u2871
  5017  001112  EF8D  F008         	goto	u2870
  5018  001116                     u2871:
  5019  001116  EF9F  F008         	goto	l2900
  5020  00111A                     u2870:
  5021  00111A                     
  5022                           ; BSR set to: 0
  5023  00111A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5024  00111E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5025  001122  CFDE FFF6          	movff	postinc2,tblptrl
  5026  001126  CFDD FFF7          	movff	postdec2,tblptrh
  5027  00112A                     	if	0	;tblptru may be non-zero
  5028  00112A                     	endif
  5029  00112A                     	if	0	;tblptru may be non-zero
  5030  00112A                     	endif
  5031  00112A  0008               	tblrd		*
  5032  00112C  50F5               	movf	tablat,w,c
  5033  00112E  0A69               	xorlw	105
  5034  001130  A4D8               	btfss	status,2,c
  5035  001132  EF9D  F008         	goto	u2881
  5036  001136  EF9F  F008         	goto	u2880
  5037  00113A                     u2881:
  5038  00113A  EFDF  F008         	goto	l2906
  5039  00113E                     u2880:
  5040  00113E                     l2900:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5044  00113E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5045  001142  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5046  001146  2ADE               	incf	postinc2,f,c
  5047  001148  0E00               	movlw	0
  5048  00114A  22DD               	addwfc	postdec2,f,c
  5049                           
  5050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5051  00114C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5052  001150  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5053  001154  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5054  001158  0E02               	movlw	2
  5055  00115A  26DE               	addwf	postinc2,f,c
  5056  00115C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5057  001160  0E00               	movlw	0
  5058  001162  22DD               	addwfc	postdec2,f,c
  5059  001164  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5060  001168  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5061  00116C  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  5062  001170  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  5063  001174  0E00               	movlw	0
  5064  001176  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5065  001178  0EFF               	movlw	-1
  5066  00117A  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  5067  00117C  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  5068  00117E  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  5069  001180  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  5070  001182  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  5071  001184  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  5072  001186                     
  5073                           ; BSR set to: 0
  5074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5075  001186  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5076  00118A  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5077  00118E  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5078  001192  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5079  001196  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5080  00119A  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5081  00119E  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5082  0011A2  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5083  0011A6  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5084  0011AA  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5085  0011AE  ECA3  F009         	call	_dtoa	;wreg free
  5086  0011B2  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5087  0011B6  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5088  0011BA  EFA2  F009         	goto	l1169
  5089  0011BE                     l2906:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5093  0011BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5094  0011C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5095  0011C6  CFDE FFF6          	movff	postinc2,tblptrl
  5096  0011CA  CFDD FFF7          	movff	postdec2,tblptrh
  5097  0011CE                     	if	0	;tblptru may be non-zero
  5098  0011CE                     	endif
  5099  0011CE                     	if	0	;tblptru may be non-zero
  5100  0011CE                     	endif
  5101  0011CE  0008               	tblrd		*
  5102  0011D0  50F5               	movf	tablat,w,c
  5103  0011D2  0A78               	xorlw	120
  5104  0011D4  B4D8               	btfsc	status,2,c
  5105  0011D6  EFEF  F008         	goto	u2891
  5106  0011DA  EFF1  F008         	goto	u2890
  5107  0011DE                     u2891:
  5108  0011DE  EF03  F009         	goto	l2910
  5109  0011E2                     u2890:
  5110  0011E2                     
  5111                           ; BSR set to: 0
  5112  0011E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5113  0011E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5114  0011EA  CFDE FFF6          	movff	postinc2,tblptrl
  5115  0011EE  CFDD FFF7          	movff	postdec2,tblptrh
  5116  0011F2                     	if	0	;tblptru may be non-zero
  5117  0011F2                     	endif
  5118  0011F2                     	if	0	;tblptru may be non-zero
  5119  0011F2                     	endif
  5120  0011F2  0008               	tblrd		*
  5121  0011F4  50F5               	movf	tablat,w,c
  5122  0011F6  0A58               	xorlw	88
  5123  0011F8  A4D8               	btfss	status,2,c
  5124  0011FA  EF01  F009         	goto	u2901
  5125  0011FE  EF03  F009         	goto	u2900
  5126  001202                     u2901:
  5127  001202  EF51  F009         	goto	l2920
  5128  001206                     u2900:
  5129  001206                     l2910:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5133  001206  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5134  00120A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5135  00120E  CFDE FFF6          	movff	postinc2,tblptrl
  5136  001212  CFDD FFF7          	movff	postdec2,tblptrh
  5137  001216                     	if	0	;tblptru may be non-zero
  5138  001216                     	endif
  5139  001216                     	if	0	;tblptru may be non-zero
  5140  001216                     	endif
  5141  001216  0008               	tblrd		*
  5142  001218  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  5143  00121C                     
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5146  00121C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5147  001220  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5148  001224  2ADE               	incf	postinc2,f,c
  5149  001226  0E00               	movlw	0
  5150  001228  22DD               	addwfc	postdec2,f,c
  5151  00122A                     
  5152                           ; BSR set to: 0
  5153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5154  00122A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5155  00122E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5156  001232  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5157  001236  0E02               	movlw	2
  5158  001238  26DE               	addwf	postinc2,f,c
  5159  00123A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5160  00123E  0E00               	movlw	0
  5161  001240  22DD               	addwfc	postdec2,f,c
  5162  001242  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5163  001246  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5164  00124A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5165  00124E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5166  001252  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5167  001256  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5168  00125A  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  5169  00125C  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  5170  00125E  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  5171  001260  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  5172  001262  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  5173  001264  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  5174  001266                     
  5175                           ; BSR set to: 0
  5176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5177  001266  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5178  00126A  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5179  00126E  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5180  001272  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5181  001276  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5182  00127A  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5183  00127E  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5184  001282  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5185  001286  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5186  00128A  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5187  00128E  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  5188  001292  EC15  F00B         	call	_xtoa	;wreg free
  5189  001296  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5190  00129A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5191  00129E  EFA2  F009         	goto	l1169
  5192  0012A2                     l2920:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5196  0012A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5197  0012A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5198  0012AA  CFDE FFF6          	movff	postinc2,tblptrl
  5199  0012AE  CFDD FFF7          	movff	postdec2,tblptrh
  5200  0012B2                     	if	0	;tblptru may be non-zero
  5201  0012B2                     	endif
  5202  0012B2                     	if	0	;tblptru may be non-zero
  5203  0012B2                     	endif
  5204  0012B2  0008               	tblrd		*
  5205  0012B4  50F5               	movf	tablat,w,c
  5206  0012B6  0A25               	xorlw	37
  5207  0012B8  A4D8               	btfss	status,2,c
  5208  0012BA  EF61  F009         	goto	u2911
  5209  0012BE  EF63  F009         	goto	u2910
  5210  0012C2                     u2911:
  5211  0012C2  EF7A  F009         	goto	l2930
  5212  0012C6                     u2910:
  5213  0012C6                     
  5214                           ; BSR set to: 0
  5215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5216  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5217  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5218  0012CE  2ADE               	incf	postinc2,f,c
  5219  0012D0  0E00               	movlw	0
  5220  0012D2  22DD               	addwfc	postdec2,f,c
  5221  0012D4                     
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5224  0012D4  0E00               	movlw	0
  5225  0012D6  6E02               	movwf	(fputc@c+1)^0,c
  5226  0012D8  0E25               	movlw	37
  5227  0012DA  6E01               	movwf	fputc@c^0,c
  5228  0012DC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5229  0012E0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5230  0012E4  EC14  F014         	call	_fputc	;wreg free
  5231  0012E8                     l2926:
  5232                           
  5233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5234  0012E8  0E00               	movlw	0
  5235  0012EA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5236  0012EC  0E01               	movlw	1
  5237  0012EE  6E43               	movwf	?_vfpfcnvrt^0,c
  5238  0012F0  EFA2  F009         	goto	l1169
  5239  0012F4                     l2930:
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5243  0012F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5244  0012F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5245  0012FC  2ADE               	incf	postinc2,f,c
  5246  0012FE  0E00               	movlw	0
  5247  001300  22DD               	addwfc	postdec2,f,c
  5248  001302                     
  5249                           ; BSR set to: 0
  5250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5251  001302  0E00               	movlw	0
  5252  001304  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5253  001306  0E00               	movlw	0
  5254  001308  6E43               	movwf	?_vfpfcnvrt^0,c
  5255  00130A  EFA2  F009         	goto	l1169
  5256  00130E                     l2936:
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5259  00130E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5260  001312  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5261  001316  CFDE FFF6          	movff	postinc2,tblptrl
  5262  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  5263  00131E                     	if	0	;tblptru may be non-zero
  5264  00131E                     	endif
  5265  00131E                     	if	0	;tblptru may be non-zero
  5266  00131E                     	endif
  5267  00131E  0008               	tblrd		*
  5268  001320  50F5               	movf	tablat,w,c
  5269  001322  6E01               	movwf	fputc@c^0,c
  5270  001324  6A02               	clrf	(fputc@c+1)^0,c
  5271  001326  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5272  00132A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5273  00132E  EC14  F014         	call	_fputc	;wreg free
  5274  001332                     
  5275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5276  001332  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5277  001336  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5278  00133A  2ADE               	incf	postinc2,f,c
  5279  00133C  0E00               	movlw	0
  5280  00133E  22DD               	addwfc	postdec2,f,c
  5281  001340  EF74  F009         	goto	l2926
  5282  001344                     l1169:
  5283  001344  0012               	return		;funcret
  5284  001346                     __end_of_vfpfcnvrt:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function _xtoa *****************
  5288 ;; Defined at:
  5289 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5292 ;;		 -> sprintf@f(6), 
  5293 ;;  d               8   29[COMRAM] unsigned long long 
  5294 ;;  x               1   37[COMRAM] unsigned char 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  n               8   54[COMRAM] unsigned long long 
  5297 ;;  c               2   64[COMRAM] int 
  5298 ;;  i               2   62[COMRAM] int 
  5299 ;;  w               2   52[COMRAM] int 
  5300 ;;  p               2   50[COMRAM] int 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  2   27[COMRAM] int 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5310 ;;      Params:        11       0       0       0       0       0       0       0       0
  5311 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5312 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5313 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5314 ;;Total ram usage:       39 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    4
  5317 ;; This function calls:
  5318 ;;		_isalpha
  5319 ;;		_isupper
  5320 ;;		_pad
  5321 ;;		_toupper
  5322 ;; This function is called by:
  5323 ;;		_vfpfcnvrt
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text18
  5328  00162A                     __ptext18:
  5329                           	callstack 0
  5330  00162A                     _xtoa:
  5331                           	callstack 22
  5332  00162A                     
  5333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5334  00162A  0100               	movlb	0	; () banked
  5335  00162C  BFE8               	btfsc	(_prec+1)& (0+255),7,b
  5336  00162E  EF1B  F00B         	goto	u2651
  5337  001632  EF1D  F00B         	goto	u2650
  5338  001636                     u2651:
  5339  001636  EF1E  F00B         	goto	l2786
  5340  00163A                     u2650:
  5341  00163A                     
  5342                           ; BSR set to: 0
  5343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5344  00163A  93E9               	bcf	_flags& (0+255),1,b
  5345  00163C                     l2786:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5349  00163C  BFE8               	btfsc	(_prec+1)& (0+255),7,b
  5350  00163E  EF2B  F00B         	goto	u2660
  5351  001642  51E8               	movf	(_prec+1)& (0+255),w,b
  5352  001644  E106               	bnz	u2661
  5353  001646  05E7               	decf	_prec& (0+255),w,b
  5354  001648  B0D8               	btfsc	status,0,c
  5355  00164A  EF29  F00B         	goto	u2661
  5356  00164E  EF2B  F00B         	goto	u2660
  5357  001652                     u2661:
  5358  001652  EF31  F00B         	goto	l1139
  5359  001656                     u2660:
  5360  001656                     
  5361                           ; BSR set to: 0
  5362  001656  0E00               	movlw	0
  5363  001658  6E34               	movwf	(xtoa@p+1)^0,c
  5364  00165A  0E01               	movlw	1
  5365  00165C  6E33               	movwf	xtoa@p^0,c
  5366  00165E  EF35  F00B         	goto	l1141
  5367  001662                     l1139:
  5368                           
  5369                           ; BSR set to: 0
  5370  001662  C0E7  F033         	movff	_prec,xtoa@p
  5371  001666  C0E8  F034         	movff	_prec+1,xtoa@p+1
  5372  00166A                     l1141:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5376  00166A  C0E5  F035         	movff	_width,xtoa@w
  5377  00166E  C0E6  F036         	movff	_width+1,xtoa@w+1
  5378                           
  5379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5380  001672  A9E9               	btfss	_flags& (0+255),4,b
  5381  001674  EF3E  F00B         	goto	u2671
  5382  001678  EF40  F00B         	goto	u2670
  5383  00167C                     u2671:
  5384  00167C  EF44  F00B         	goto	l2792
  5385  001680                     u2670:
  5386  001680                     
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5389  001680  0EFE               	movlw	254
  5390  001682  2635               	addwf	xtoa@w^0,f,c
  5391  001684  0EFF               	movlw	255
  5392  001686  2236               	addwfc	(xtoa@w+1)^0,f,c
  5393  001688                     l2792:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5397  001688  C01E  F037         	movff	xtoa@d,xtoa@n
  5398  00168C  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5399  001690  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5400  001694  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5401  001698  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5402  00169C  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5403  0016A0  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5404  0016A4  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5405  0016A8                     
  5406                           ; BSR set to: 0
  5407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5408  0016A8  0E00               	movlw	0
  5409  0016AA  6E40               	movwf	(xtoa@i+1)^0,c
  5410  0016AC  0E1F               	movlw	31
  5411  0016AE  6E3F               	movwf	xtoa@i^0,c
  5412  0016B0                     
  5413                           ; BSR set to: 0
  5414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5415  0016B0  0E00               	movlw	0
  5416  0016B2  0101               	movlb	1	; () banked
  5417  0016B4  6FD6               	movwf	(_dbuf+31)& (0+255),b
  5418                           
  5419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5420  0016B6  EF10  F00C         	goto	l2828
  5421  0016BA                     l2798:
  5422                           
  5423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  5424  0016BA  063F               	decf	xtoa@i^0,f,c
  5425  0016BC  A0D8               	btfss	status,0,c
  5426  0016BE  0640               	decf	(xtoa@i+1)^0,f,c
  5427  0016C0                     
  5428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5429  0016C0  0E0F               	movlw	15
  5430  0016C2  1437               	andwf	xtoa@n^0,w,c
  5431  0016C4  6E41               	movwf	xtoa@c^0,c
  5432  0016C6  6A42               	clrf	(xtoa@c+1)^0,c
  5433  0016C8                     
  5434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5435  0016C8  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5436  0016CA  EF70  F00B         	goto	u2681
  5437  0016CE  5042               	movf	(xtoa@c+1)^0,w,c
  5438  0016D0  E109               	bnz	u2680
  5439  0016D2  0E0A               	movlw	10
  5440  0016D4  5C41               	subwf	xtoa@c^0,w,c
  5441  0016D6  A0D8               	btfss	status,0,c
  5442  0016D8  EF70  F00B         	goto	u2681
  5443  0016DC  EF72  F00B         	goto	u2680
  5444  0016E0                     u2681:
  5445  0016E0  EF7A  F00B         	goto	l2806
  5446  0016E4                     u2680:
  5447  0016E4  0E57               	movlw	87
  5448  0016E6  2441               	addwf	xtoa@c^0,w,c
  5449  0016E8  6E41               	movwf	xtoa@c^0,c
  5450  0016EA  0E00               	movlw	0
  5451  0016EC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5452  0016EE  6E42               	movwf	(xtoa@c+1)^0,c
  5453  0016F0  EF80  F00B         	goto	l1148
  5454  0016F4                     l2806:
  5455  0016F4  0E30               	movlw	48
  5456  0016F6  2441               	addwf	xtoa@c^0,w,c
  5457  0016F8  6E41               	movwf	xtoa@c^0,c
  5458  0016FA  0E00               	movlw	0
  5459  0016FC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5460  0016FE  6E42               	movwf	(xtoa@c+1)^0,c
  5461  001700                     l1148:
  5462  001700  0EBF               	movlw	191
  5463  001702  6E27               	movwf	??_xtoa^0,c
  5464  001704  0EFF               	movlw	255
  5465  001706  6E28               	movwf	(??_xtoa+1)^0,c
  5466  001708  5026               	movf	xtoa@x^0,w,c
  5467  00170A  6E29               	movwf	(??_xtoa+2)^0,c
  5468  00170C  6A2A               	clrf	(??_xtoa+3)^0,c
  5469  00170E  5027               	movf	??_xtoa^0,w,c
  5470  001710  2629               	addwf	(??_xtoa+2)^0,f,c
  5471  001712  5028               	movf	(??_xtoa+1)^0,w,c
  5472  001714  222A               	addwfc	(??_xtoa+3)^0,f,c
  5473  001716  502A               	movf	(??_xtoa+3)^0,w,c
  5474  001718  E10A               	bnz	u2690
  5475  00171A  0E1A               	movlw	26
  5476  00171C  5C29               	subwf	(??_xtoa+2)^0,w,c
  5477  00171E  A0D8               	btfss	status,0,c
  5478  001720  EF94  F00B         	goto	u2691
  5479  001724  EF97  F00B         	goto	u2690
  5480  001728                     u2691:
  5481  001728  0E01               	movlw	1
  5482  00172A  EF98  F00B         	goto	u2700
  5483  00172E                     u2690:
  5484  00172E  0E00               	movlw	0
  5485  001730                     u2700:
  5486  001730  6E2F               	movwf	_xtoa$1500^0,c
  5487  001732  6A30               	clrf	(_xtoa$1500+1)^0,c
  5488  001734  502F               	movf	_xtoa$1500^0,w,c
  5489  001736  1030               	iorwf	(_xtoa$1500+1)^0,w,c
  5490  001738  B4D8               	btfsc	status,2,c
  5491  00173A  EFA1  F00B         	goto	u2711
  5492  00173E  EFA3  F00B         	goto	u2710
  5493  001742                     u2711:
  5494  001742  EFD3  F00B         	goto	l2820
  5495  001746                     u2710:
  5496  001746  0E9F               	movlw	159
  5497  001748  6E27               	movwf	??_xtoa^0,c
  5498  00174A  0EFF               	movlw	255
  5499  00174C  6E28               	movwf	(??_xtoa+1)^0,c
  5500  00174E  0E20               	movlw	32
  5501  001750  1041               	iorwf	xtoa@c^0,w,c
  5502  001752  6E29               	movwf	(??_xtoa+2)^0,c
  5503  001754  0E00               	movlw	0
  5504  001756  1042               	iorwf	(xtoa@c+1)^0,w,c
  5505  001758  6E2A               	movwf	(??_xtoa+3)^0,c
  5506  00175A  5027               	movf	??_xtoa^0,w,c
  5507  00175C  2629               	addwf	(??_xtoa+2)^0,f,c
  5508  00175E  5028               	movf	(??_xtoa+1)^0,w,c
  5509  001760  222A               	addwfc	(??_xtoa+3)^0,f,c
  5510  001762  502A               	movf	(??_xtoa+3)^0,w,c
  5511  001764  E10A               	bnz	u2720
  5512  001766  0E1A               	movlw	26
  5513  001768  5C29               	subwf	(??_xtoa+2)^0,w,c
  5514  00176A  A0D8               	btfss	status,0,c
  5515  00176C  EFBA  F00B         	goto	u2721
  5516  001770  EFBD  F00B         	goto	u2720
  5517  001774                     u2721:
  5518  001774  0E01               	movlw	1
  5519  001776  EFBE  F00B         	goto	u2730
  5520  00177A                     u2720:
  5521  00177A  0E00               	movlw	0
  5522  00177C                     u2730:
  5523  00177C  6E31               	movwf	_xtoa$1501^0,c
  5524  00177E  6A32               	clrf	(_xtoa$1501+1)^0,c
  5525  001780  5031               	movf	_xtoa$1501^0,w,c
  5526  001782  1032               	iorwf	(_xtoa$1501+1)^0,w,c
  5527  001784  B4D8               	btfsc	status,2,c
  5528  001786  EFC7  F00B         	goto	u2741
  5529  00178A  EFC9  F00B         	goto	u2740
  5530  00178E                     u2741:
  5531  00178E  EFD3  F00B         	goto	l2820
  5532  001792                     u2740:
  5533  001792                     
  5534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5535  001792  C041  F007         	movff	xtoa@c,toupper@c
  5536  001796  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5537  00179A  EC8B  F016         	call	_toupper	;wreg free
  5538  00179E  C007  F041         	movff	?_toupper,xtoa@c
  5539  0017A2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5540  0017A6                     l2820:
  5541                           
  5542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5543  0017A6  0EB7               	movlw	low _dbuf
  5544  0017A8  243F               	addwf	xtoa@i^0,w,c
  5545  0017AA  6ED9               	movwf	fsr2l,c
  5546  0017AC  0E01               	movlw	high _dbuf
  5547  0017AE  2040               	addwfc	(xtoa@i+1)^0,w,c
  5548  0017B0  6EDA               	movwf	fsr2h,c
  5549  0017B2  C041  FFDF         	movff	xtoa@c,indf2
  5550  0017B6                     
  5551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  5552  0017B6  0633               	decf	xtoa@p^0,f,c
  5553  0017B8  A0D8               	btfss	status,0,c
  5554  0017BA  0634               	decf	(xtoa@p+1)^0,f,c
  5555  0017BC                     
  5556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  5557  0017BC  0635               	decf	xtoa@w^0,f,c
  5558  0017BE  A0D8               	btfss	status,0,c
  5559  0017C0  0636               	decf	(xtoa@w+1)^0,f,c
  5560  0017C2                     
  5561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5562  0017C2  C037  F027         	movff	xtoa@n,??_xtoa
  5563  0017C6  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5564  0017CA  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5565  0017CE  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5566  0017D2  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5567  0017D6  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5568  0017DA  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5569  0017DE  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5570  0017E2  0E05               	movlw	5
  5571  0017E4  EFFD  F00B         	goto	u2750
  5572  0017E8                     u2755:
  5573  0017E8  90D8               	bcf	status,0,c
  5574  0017EA  322E               	rrcf	(??_xtoa+7)^0,f,c
  5575  0017EC  322D               	rrcf	(??_xtoa+6)^0,f,c
  5576  0017EE  322C               	rrcf	(??_xtoa+5)^0,f,c
  5577  0017F0  322B               	rrcf	(??_xtoa+4)^0,f,c
  5578  0017F2  322A               	rrcf	(??_xtoa+3)^0,f,c
  5579  0017F4  3229               	rrcf	(??_xtoa+2)^0,f,c
  5580  0017F6  3228               	rrcf	(??_xtoa+1)^0,f,c
  5581  0017F8  3227               	rrcf	??_xtoa^0,f,c
  5582  0017FA                     u2750:
  5583  0017FA  2EE8               	decfsz	wreg,f,c
  5584  0017FC  EFF4  F00B         	goto	u2755
  5585  001800  C027  F037         	movff	??_xtoa,xtoa@n
  5586  001804  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5587  001808  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5588  00180C  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5589  001810  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5590  001814  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5591  001818  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5592  00181C  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5593  001820                     l2828:
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5596  001820  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5597  001822  EF1C  F00C         	goto	u2761
  5598  001826  5040               	movf	(xtoa@i+1)^0,w,c
  5599  001828  E109               	bnz	u2760
  5600  00182A  0E02               	movlw	2
  5601  00182C  5C3F               	subwf	xtoa@i^0,w,c
  5602  00182E  A0D8               	btfss	status,0,c
  5603  001830  EF1C  F00C         	goto	u2761
  5604  001834  EF1E  F00C         	goto	u2760
  5605  001838                     u2761:
  5606  001838  EF4F  F00C         	goto	l1162
  5607  00183C                     u2760:
  5608  00183C  5037               	movf	xtoa@n^0,w,c
  5609  00183E  1038               	iorwf	(xtoa@n+1)^0,w,c
  5610  001840  1039               	iorwf	(xtoa@n+2)^0,w,c
  5611  001842  103A               	iorwf	(xtoa@n+3)^0,w,c
  5612  001844  103B               	iorwf	(xtoa@n+4)^0,w,c
  5613  001846  103C               	iorwf	(xtoa@n+5)^0,w,c
  5614  001848  103D               	iorwf	(xtoa@n+6)^0,w,c
  5615  00184A  103E               	iorwf	(xtoa@n+7)^0,w,c
  5616  00184C  A4D8               	btfss	status,2,c
  5617  00184E  EF2B  F00C         	goto	u2771
  5618  001852  EF2D  F00C         	goto	u2770
  5619  001856                     u2771:
  5620  001856  EF5D  F00B         	goto	l2798
  5621  00185A                     u2770:
  5622  00185A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5623  00185C  EF3A  F00C         	goto	u2780
  5624  001860  5034               	movf	(xtoa@p+1)^0,w,c
  5625  001862  E106               	bnz	u2781
  5626  001864  0433               	decf	xtoa@p^0,w,c
  5627  001866  B0D8               	btfsc	status,0,c
  5628  001868  EF38  F00C         	goto	u2781
  5629  00186C  EF3A  F00C         	goto	u2780
  5630  001870                     u2781:
  5631  001870  EF5D  F00B         	goto	l2798
  5632  001874                     u2780:
  5633  001874  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5634  001876  EF45  F00C         	goto	u2791
  5635  00187A  5036               	movf	(xtoa@w+1)^0,w,c
  5636  00187C  E108               	bnz	u2790
  5637  00187E  0435               	decf	xtoa@w^0,w,c
  5638  001880  A0D8               	btfss	status,0,c
  5639  001882  EF45  F00C         	goto	u2791
  5640  001886  EF47  F00C         	goto	u2790
  5641  00188A                     u2791:
  5642  00188A  EF4F  F00C         	goto	l1162
  5643  00188E                     u2790:
  5644  00188E  0100               	movlb	0	; () banked
  5645  001890  B3E9               	btfsc	_flags& (0+255),1,b
  5646  001892  EF4D  F00C         	goto	u2801
  5647  001896  EF4F  F00C         	goto	u2800
  5648  00189A                     u2801:
  5649  00189A  EF5D  F00B         	goto	l2798
  5650  00189E                     u2800:
  5651  00189E                     l1162:
  5652                           
  5653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5654  00189E  0100               	movlb	0	; () banked
  5655  0018A0  A9E9               	btfss	_flags& (0+255),4,b
  5656  0018A2  EF55  F00C         	goto	u2811
  5657  0018A6  EF57  F00C         	goto	u2810
  5658  0018AA                     u2811:
  5659  0018AA  EF6D  F00C         	goto	l2844
  5660  0018AE                     u2810:
  5661  0018AE                     
  5662                           ; BSR set to: 0
  5663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  5664  0018AE  063F               	decf	xtoa@i^0,f,c
  5665  0018B0  A0D8               	btfss	status,0,c
  5666  0018B2  0640               	decf	(xtoa@i+1)^0,f,c
  5667  0018B4                     
  5668                           ; BSR set to: 0
  5669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5670  0018B4  0EB7               	movlw	low _dbuf
  5671  0018B6  243F               	addwf	xtoa@i^0,w,c
  5672  0018B8  6ED9               	movwf	fsr2l,c
  5673  0018BA  0E01               	movlw	high _dbuf
  5674  0018BC  2040               	addwfc	(xtoa@i+1)^0,w,c
  5675  0018BE  6EDA               	movwf	fsr2h,c
  5676  0018C0  C026  FFDF         	movff	xtoa@x,indf2
  5677  0018C4                     
  5678                           ; BSR set to: 0
  5679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  5680  0018C4  063F               	decf	xtoa@i^0,f,c
  5681  0018C6  A0D8               	btfss	status,0,c
  5682  0018C8  0640               	decf	(xtoa@i+1)^0,f,c
  5683                           
  5684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5685  0018CA  0EB7               	movlw	low _dbuf
  5686  0018CC  243F               	addwf	xtoa@i^0,w,c
  5687  0018CE  6ED9               	movwf	fsr2l,c
  5688  0018D0  0E01               	movlw	high _dbuf
  5689  0018D2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5690  0018D4  6EDA               	movwf	fsr2h,c
  5691  0018D6  0E30               	movlw	48
  5692  0018D8  6EDF               	movwf	indf2,c
  5693  0018DA                     l2844:
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5697  0018DA  C01C  F011         	movff	xtoa@fp,pad@fp
  5698  0018DE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5699  0018E2  0EB7               	movlw	low _dbuf
  5700  0018E4  243F               	addwf	xtoa@i^0,w,c
  5701  0018E6  6E13               	movwf	pad@buf^0,c
  5702  0018E8  0E01               	movlw	high _dbuf
  5703  0018EA  2040               	addwfc	(xtoa@i+1)^0,w,c
  5704  0018EC  6E14               	movwf	(pad@buf+1)^0,c
  5705  0018EE  C035  F015         	movff	xtoa@w,pad@p
  5706  0018F2  C036  F016         	movff	xtoa@w+1,pad@p+1
  5707  0018F6  EC79  F014         	call	_pad	;wreg free
  5708  0018FA  C011  F01C         	movff	?_pad,?_xtoa
  5709  0018FE  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5710  001902  0012               	return		;funcret
  5711  001904                     __end_of_xtoa:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _toupper *****************
  5715 ;; Defined at:
  5716 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  c               2    6[COMRAM] int 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  2    6[COMRAM] int 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5730 ;;      Params:         2       0       0       0       0       0       0       0       0
  5731 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5732 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5733 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5734 ;;Total ram usage:        8 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    1
  5737 ;; This function calls:
  5738 ;;		_islower
  5739 ;; This function is called by:
  5740 ;;		_xtoa
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text19
  5745  002D16                     __ptext19:
  5746                           	callstack 0
  5747  002D16                     _toupper:
  5748                           	callstack 24
  5749  002D16  0E9F               	movlw	159
  5750  002D18  6E09               	movwf	??_toupper^0,c
  5751  002D1A  0EFF               	movlw	255
  5752  002D1C  6E0A               	movwf	(??_toupper+1)^0,c
  5753  002D1E  C007  F00B         	movff	toupper@c,??_toupper+2
  5754  002D22  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5755  002D26  5009               	movf	??_toupper^0,w,c
  5756  002D28  260B               	addwf	(??_toupper+2)^0,f,c
  5757  002D2A  500A               	movf	(??_toupper+1)^0,w,c
  5758  002D2C  220C               	addwfc	(??_toupper+3)^0,f,c
  5759  002D2E  500C               	movf	(??_toupper+3)^0,w,c
  5760  002D30  E10A               	bnz	u2390
  5761  002D32  0E1A               	movlw	26
  5762  002D34  5C0B               	subwf	(??_toupper+2)^0,w,c
  5763  002D36  A0D8               	btfss	status,0,c
  5764  002D38  EFA0  F016         	goto	u2391
  5765  002D3C  EFA3  F016         	goto	u2390
  5766  002D40                     u2391:
  5767  002D40  0E01               	movlw	1
  5768  002D42  EFA4  F016         	goto	u2400
  5769  002D46                     u2390:
  5770  002D46  0E00               	movlw	0
  5771  002D48                     u2400:
  5772  002D48  6E0D               	movwf	_toupper$1600^0,c
  5773  002D4A  6A0E               	clrf	(_toupper$1600+1)^0,c
  5774  002D4C  500D               	movf	_toupper$1600^0,w,c
  5775  002D4E  100E               	iorwf	(_toupper$1600+1)^0,w,c
  5776  002D50  B4D8               	btfsc	status,2,c
  5777  002D52  EFAD  F016         	goto	u2411
  5778  002D56  EFAF  F016         	goto	u2410
  5779  002D5A                     u2411:
  5780  002D5A  EFB5  F016         	goto	l1248
  5781  002D5E                     u2410:
  5782  002D5E  0E5F               	movlw	95
  5783  002D60  1407               	andwf	toupper@c^0,w,c
  5784  002D62  6E07               	movwf	?_toupper^0,c
  5785  002D64  6A08               	clrf	(?_toupper+1)^0,c
  5786  002D66  EFB9  F016         	goto	l1253
  5787  002D6A                     l1248:
  5788  002D6A  C007  F007         	movff	toupper@c,?_toupper
  5789  002D6E  C008  F008         	movff	toupper@c+1,?_toupper+1
  5790  002D72                     l1253:
  5791  002D72  0012               	return		;funcret
  5792  002D74                     __end_of_toupper:
  5793                           	callstack 0
  5794                           
  5795 ;; *************** function _islower *****************
  5796 ;; Defined at:
  5797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  c               2    0[COMRAM] int 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  2    0[COMRAM] int 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5811 ;;      Params:         2       0       0       0       0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5813 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5814 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5815 ;;Total ram usage:        6 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_toupper
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text20
  5825  003074                     __ptext20:
  5826                           	callstack 0
  5827  003074                     _islower:
  5828                           	callstack 24
  5829  003074  0E9F               	movlw	159
  5830  003076  6E03               	movwf	??_islower^0,c
  5831  003078  0EFF               	movlw	255
  5832  00307A  6E04               	movwf	(??_islower+1)^0,c
  5833  00307C  C001  F005         	movff	islower@c,??_islower+2
  5834  003080  C002  F006         	movff	islower@c+1,??_islower+3
  5835  003084  5003               	movf	??_islower^0,w,c
  5836  003086  2605               	addwf	(??_islower+2)^0,f,c
  5837  003088  5004               	movf	(??_islower+1)^0,w,c
  5838  00308A  2206               	addwfc	(??_islower+3)^0,f,c
  5839  00308C  5006               	movf	(??_islower+3)^0,w,c
  5840  00308E  E10A               	bnz	u2150
  5841  003090  0E1A               	movlw	26
  5842  003092  5C05               	subwf	(??_islower+2)^0,w,c
  5843  003094  A0D8               	btfss	status,0,c
  5844  003096  EF4F  F018         	goto	u2151
  5845  00309A  EF52  F018         	goto	u2150
  5846  00309E                     u2151:
  5847  00309E  0E01               	movlw	1
  5848  0030A0  EF53  F018         	goto	u2160
  5849  0030A4                     u2150:
  5850  0030A4  0E00               	movlw	0
  5851  0030A6                     u2160:
  5852  0030A6  6E01               	movwf	?_islower^0,c
  5853  0030A8  6A02               	clrf	(?_islower+1)^0,c
  5854  0030AA  0012               	return		;funcret
  5855  0030AC                     __end_of_islower:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function _isupper *****************
  5859 ;; Defined at:
  5860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  c               2    0[COMRAM] int 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  2    0[COMRAM] int 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5874 ;;      Params:         2       0       0       0       0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5876 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5877 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5878 ;;Total ram usage:        6 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_xtoa
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text21
  5888  0030AC                     __ptext21:
  5889                           	callstack 0
  5890  0030AC                     _isupper:
  5891                           	callstack 25
  5892  0030AC  0EBF               	movlw	191
  5893  0030AE  6E03               	movwf	??_isupper^0,c
  5894  0030B0  0EFF               	movlw	255
  5895  0030B2  6E04               	movwf	(??_isupper+1)^0,c
  5896  0030B4  C001  F005         	movff	isupper@c,??_isupper+2
  5897  0030B8  C002  F006         	movff	isupper@c+1,??_isupper+3
  5898  0030BC  5003               	movf	??_isupper^0,w,c
  5899  0030BE  2605               	addwf	(??_isupper+2)^0,f,c
  5900  0030C0  5004               	movf	(??_isupper+1)^0,w,c
  5901  0030C2  2206               	addwfc	(??_isupper+3)^0,f,c
  5902  0030C4  5006               	movf	(??_isupper+3)^0,w,c
  5903  0030C6  E10A               	bnz	u2350
  5904  0030C8  0E1A               	movlw	26
  5905  0030CA  5C05               	subwf	(??_isupper+2)^0,w,c
  5906  0030CC  A0D8               	btfss	status,0,c
  5907  0030CE  EF6B  F018         	goto	u2351
  5908  0030D2  EF6E  F018         	goto	u2350
  5909  0030D6                     u2351:
  5910  0030D6  0E01               	movlw	1
  5911  0030D8  EF6F  F018         	goto	u2360
  5912  0030DC                     u2350:
  5913  0030DC  0E00               	movlw	0
  5914  0030DE                     u2360:
  5915  0030DE  6E01               	movwf	?_isupper^0,c
  5916  0030E0  6A02               	clrf	(?_isupper+1)^0,c
  5917  0030E2  0012               	return		;funcret
  5918  0030E4                     __end_of_isupper:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function _isalpha *****************
  5922 ;; Defined at:
  5923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  c               2    0[COMRAM] int 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  2    0[COMRAM] int 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5937 ;;      Params:         2       0       0       0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5939 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5940 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5941 ;;Total ram usage:        6 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_xtoa
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text22
  5951  002FFE                     __ptext22:
  5952                           	callstack 0
  5953  002FFE                     _isalpha:
  5954                           	callstack 25
  5955  002FFE  0E9F               	movlw	159
  5956  003000  6E03               	movwf	??_isalpha^0,c
  5957  003002  0EFF               	movlw	255
  5958  003004  6E04               	movwf	(??_isalpha+1)^0,c
  5959  003006  0E20               	movlw	32
  5960  003008  1001               	iorwf	isalpha@c^0,w,c
  5961  00300A  6E05               	movwf	(??_isalpha+2)^0,c
  5962  00300C  0E00               	movlw	0
  5963  00300E  1002               	iorwf	(isalpha@c+1)^0,w,c
  5964  003010  6E06               	movwf	(??_isalpha+3)^0,c
  5965  003012  5003               	movf	??_isalpha^0,w,c
  5966  003014  2605               	addwf	(??_isalpha+2)^0,f,c
  5967  003016  5004               	movf	(??_isalpha+1)^0,w,c
  5968  003018  2206               	addwfc	(??_isalpha+3)^0,f,c
  5969  00301A  5006               	movf	(??_isalpha+3)^0,w,c
  5970  00301C  E10A               	bnz	u2370
  5971  00301E  0E1A               	movlw	26
  5972  003020  5C05               	subwf	(??_isalpha+2)^0,w,c
  5973  003022  A0D8               	btfss	status,0,c
  5974  003024  EF16  F018         	goto	u2371
  5975  003028  EF19  F018         	goto	u2370
  5976  00302C                     u2371:
  5977  00302C  0E01               	movlw	1
  5978  00302E  EF1A  F018         	goto	u2380
  5979  003032                     u2370:
  5980  003032  0E00               	movlw	0
  5981  003034                     u2380:
  5982  003034  6E01               	movwf	?_isalpha^0,c
  5983  003036  6A02               	clrf	(?_isalpha+1)^0,c
  5984  003038  0012               	return		;funcret
  5985  00303A                     __end_of_isalpha:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function _dtoa *****************
  5989 ;; Defined at:
  5990 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5993 ;;		 -> sprintf@f(6), 
  5994 ;;  d               8   29[COMRAM] long long 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  n               8   53[COMRAM] long long 
  5997 ;;  i               2   61[COMRAM] int 
  5998 ;;  s               2   51[COMRAM] int 
  5999 ;;  w               2   49[COMRAM] int 
  6000 ;;  p               2   47[COMRAM] int 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  2   27[COMRAM] int 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6010 ;;      Params:        10       0       0       0       0       0       0       0       0
  6011 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6012 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6013 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6014 ;;Total ram usage:       36 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    4
  6017 ;; This function calls:
  6018 ;;		___aodiv
  6019 ;;		___aomod
  6020 ;;		_abs
  6021 ;;		_pad
  6022 ;; This function is called by:
  6023 ;;		_vfpfcnvrt
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text23
  6028  001346                     __ptext23:
  6029                           	callstack 0
  6030  001346                     _dtoa:
  6031                           	callstack 22
  6032  001346                     
  6033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6034  001346  C01E  F036         	movff	dtoa@d,dtoa@n
  6035  00134A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6036  00134E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6037  001352  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6038  001356  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6039  00135A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6040  00135E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6041  001362  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6042  001366                     
  6043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6044  001366  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6045  001368  EFB8  F009         	goto	u2501
  6046  00136C  EFBB  F009         	goto	u2500
  6047  001370                     u2501:
  6048  001370  0E01               	movlw	1
  6049  001372  EFBC  F009         	goto	u2510
  6050  001376                     u2500:
  6051  001376  0E00               	movlw	0
  6052  001378                     u2510:
  6053  001378  6E34               	movwf	dtoa@s^0,c
  6054  00137A  6A35               	clrf	(dtoa@s+1)^0,c
  6055                           
  6056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6057  00137C  5034               	movf	dtoa@s^0,w,c
  6058  00137E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6059  001380  B4D8               	btfsc	status,2,c
  6060  001382  EFC5  F009         	goto	u2521
  6061  001386  EFC7  F009         	goto	u2520
  6062  00138A                     u2521:
  6063  00138A  EFD7  F009         	goto	l2726
  6064  00138E                     u2520:
  6065  00138E                     
  6066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6067  00138E  1E3D               	comf	(dtoa@n+7)^0,f,c
  6068  001390  1E3C               	comf	(dtoa@n+6)^0,f,c
  6069  001392  1E3B               	comf	(dtoa@n+5)^0,f,c
  6070  001394  1E3A               	comf	(dtoa@n+4)^0,f,c
  6071  001396  1E39               	comf	(dtoa@n+3)^0,f,c
  6072  001398  1E38               	comf	(dtoa@n+2)^0,f,c
  6073  00139A  1E37               	comf	(dtoa@n+1)^0,f,c
  6074  00139C  6C36               	negf	dtoa@n^0,c
  6075  00139E  0E00               	movlw	0
  6076  0013A0  2237               	addwfc	(dtoa@n+1)^0,f,c
  6077  0013A2  2238               	addwfc	(dtoa@n+2)^0,f,c
  6078  0013A4  2239               	addwfc	(dtoa@n+3)^0,f,c
  6079  0013A6  223A               	addwfc	(dtoa@n+4)^0,f,c
  6080  0013A8  223B               	addwfc	(dtoa@n+5)^0,f,c
  6081  0013AA  223C               	addwfc	(dtoa@n+6)^0,f,c
  6082  0013AC  223D               	addwfc	(dtoa@n+7)^0,f,c
  6083  0013AE                     l2726:
  6084                           
  6085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6086  0013AE  0100               	movlb	0	; () banked
  6087  0013B0  BFE8               	btfsc	(_prec+1)& (0+255),7,b
  6088  0013B2  EFDD  F009         	goto	u2531
  6089  0013B6  EFDF  F009         	goto	u2530
  6090  0013BA                     u2531:
  6091  0013BA  EFE0  F009         	goto	l2730
  6092  0013BE                     u2530:
  6093  0013BE                     
  6094                           ; BSR set to: 0
  6095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6096  0013BE  93E9               	bcf	_flags& (0+255),1,b
  6097  0013C0                     l2730:
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6101  0013C0  BFE8               	btfsc	(_prec+1)& (0+255),7,b
  6102  0013C2  EFED  F009         	goto	u2540
  6103  0013C6  51E8               	movf	(_prec+1)& (0+255),w,b
  6104  0013C8  E106               	bnz	u2541
  6105  0013CA  05E7               	decf	_prec& (0+255),w,b
  6106  0013CC  B0D8               	btfsc	status,0,c
  6107  0013CE  EFEB  F009         	goto	u2541
  6108  0013D2  EFED  F009         	goto	u2540
  6109  0013D6                     u2541:
  6110  0013D6  EFF3  F009         	goto	l1114
  6111  0013DA                     u2540:
  6112  0013DA                     
  6113                           ; BSR set to: 0
  6114  0013DA  0E00               	movlw	0
  6115  0013DC  6E31               	movwf	(dtoa@p+1)^0,c
  6116  0013DE  0E01               	movlw	1
  6117  0013E0  6E30               	movwf	dtoa@p^0,c
  6118  0013E2  EFF7  F009         	goto	l1116
  6119  0013E6                     l1114:
  6120                           
  6121                           ; BSR set to: 0
  6122  0013E6  C0E7  F030         	movff	_prec,dtoa@p
  6123  0013EA  C0E8  F031         	movff	_prec+1,dtoa@p+1
  6124  0013EE                     l1116:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6128  0013EE  C0E5  F032         	movff	_width,dtoa@w
  6129  0013F2  C0E6  F033         	movff	_width+1,dtoa@w+1
  6130  0013F6                     
  6131                           ; BSR set to: 0
  6132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6133  0013F6  5034               	movf	dtoa@s^0,w,c
  6134  0013F8  1035               	iorwf	(dtoa@s+1)^0,w,c
  6135  0013FA  A4D8               	btfss	status,2,c
  6136  0013FC  EF02  F00A         	goto	u2551
  6137  001400  EF04  F00A         	goto	u2550
  6138  001404                     u2551:
  6139  001404  EF0B  F00A         	goto	l2738
  6140  001408                     u2550:
  6141  001408                     
  6142                           ; BSR set to: 0
  6143  001408  A5E9               	btfss	_flags& (0+255),2,b
  6144  00140A  EF09  F00A         	goto	u2561
  6145  00140E  EF0B  F00A         	goto	u2560
  6146  001412                     u2561:
  6147  001412  EF0E  F00A         	goto	l2740
  6148  001416                     u2560:
  6149  001416                     l2738:
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6153  001416  0632               	decf	dtoa@w^0,f,c
  6154  001418  A0D8               	btfss	status,0,c
  6155  00141A  0633               	decf	(dtoa@w+1)^0,f,c
  6156  00141C                     l2740:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6160  00141C  0E00               	movlw	0
  6161  00141E  6E3F               	movwf	(dtoa@i+1)^0,c
  6162  001420  0E1F               	movlw	31
  6163  001422  6E3E               	movwf	dtoa@i^0,c
  6164  001424                     
  6165                           ; BSR set to: 0
  6166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6167  001424  0E00               	movlw	0
  6168  001426  0101               	movlb	1	; () banked
  6169  001428  6FD6               	movwf	(_dbuf+31)& (0+255),b
  6170                           
  6171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6172  00142A  EF93  F00A         	goto	l2754
  6173  00142E                     l2744:
  6174                           
  6175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6176  00142E  063E               	decf	dtoa@i^0,f,c
  6177  001430  A0D8               	btfss	status,0,c
  6178  001432  063F               	decf	(dtoa@i+1)^0,f,c
  6179  001434                     
  6180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6181  001434  0EB7               	movlw	low _dbuf
  6182  001436  243E               	addwf	dtoa@i^0,w,c
  6183  001438  6ED9               	movwf	fsr2l,c
  6184  00143A  0E01               	movlw	high _dbuf
  6185  00143C  203F               	addwfc	(dtoa@i+1)^0,w,c
  6186  00143E  6EDA               	movwf	fsr2h,c
  6187  001440  C036  F001         	movff	dtoa@n,___aomod@dividend
  6188  001444  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6189  001448  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6190  00144C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6191  001450  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6192  001454  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6193  001458  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6194  00145C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6195  001460  0E0A               	movlw	10
  6196  001462  6E09               	movwf	___aomod@divisor^0,c
  6197  001464  0E00               	movlw	0
  6198  001466  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6199  001468  0E00               	movlw	0
  6200  00146A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6201  00146C  0E00               	movlw	0
  6202  00146E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6203  001470  0E00               	movlw	0
  6204  001472  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6205  001474  0E00               	movlw	0
  6206  001476  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6207  001478  0E00               	movlw	0
  6208  00147A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6209  00147C  0E00               	movlw	0
  6210  00147E  6E10               	movwf	(___aomod@divisor+7)^0,c
  6211  001480  ECF1  F011         	call	___aomod	;wreg free
  6212  001484  C001  F026         	movff	?___aomod,??_dtoa
  6213  001488  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6214  00148C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6215  001490  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6216  001494  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6217  001498  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6218  00149C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6219  0014A0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6220  0014A4  C026  F013         	movff	??_dtoa,abs@a
  6221  0014A8  C028  F014         	movff	??_dtoa+2,abs@a+1
  6222  0014AC  ECC0  F017         	call	_abs	;wreg free
  6223  0014B0  5013               	movf	?_abs^0,w,c
  6224  0014B2  0F30               	addlw	48
  6225  0014B4  6EDF               	movwf	indf2,c
  6226  0014B6                     
  6227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6228  0014B6  0630               	decf	dtoa@p^0,f,c
  6229  0014B8  A0D8               	btfss	status,0,c
  6230  0014BA  0631               	decf	(dtoa@p+1)^0,f,c
  6231  0014BC                     
  6232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6233  0014BC  0632               	decf	dtoa@w^0,f,c
  6234  0014BE  A0D8               	btfss	status,0,c
  6235  0014C0  0633               	decf	(dtoa@w+1)^0,f,c
  6236  0014C2                     
  6237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6238  0014C2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6239  0014C6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6240  0014CA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6241  0014CE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6242  0014D2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6243  0014D6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6244  0014DA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6245  0014DE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6246  0014E2  0E0A               	movlw	10
  6247  0014E4  6E09               	movwf	___aodiv@divisor^0,c
  6248  0014E6  0E00               	movlw	0
  6249  0014E8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6250  0014EA  0E00               	movlw	0
  6251  0014EC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6252  0014EE  0E00               	movlw	0
  6253  0014F0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6254  0014F2  0E00               	movlw	0
  6255  0014F4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6256  0014F6  0E00               	movlw	0
  6257  0014F8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6258  0014FA  0E00               	movlw	0
  6259  0014FC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6260  0014FE  0E00               	movlw	0
  6261  001500  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6262  001502  EC72  F010         	call	___aodiv	;wreg free
  6263  001506  C001  F036         	movff	?___aodiv,dtoa@n
  6264  00150A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6265  00150E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6266  001512  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6267  001516  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6268  00151A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6269  00151E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6270  001522  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6271  001526                     l2754:
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6274  001526  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6275  001528  EF9E  F00A         	goto	u2571
  6276  00152C  503F               	movf	(dtoa@i+1)^0,w,c
  6277  00152E  E108               	bnz	u2570
  6278  001530  043E               	decf	dtoa@i^0,w,c
  6279  001532  A0D8               	btfss	status,0,c
  6280  001534  EF9E  F00A         	goto	u2571
  6281  001538  EFA0  F00A         	goto	u2570
  6282  00153C                     u2571:
  6283  00153C  EFD1  F00A         	goto	l2764
  6284  001540                     u2570:
  6285  001540  5036               	movf	dtoa@n^0,w,c
  6286  001542  1037               	iorwf	(dtoa@n+1)^0,w,c
  6287  001544  1038               	iorwf	(dtoa@n+2)^0,w,c
  6288  001546  1039               	iorwf	(dtoa@n+3)^0,w,c
  6289  001548  103A               	iorwf	(dtoa@n+4)^0,w,c
  6290  00154A  103B               	iorwf	(dtoa@n+5)^0,w,c
  6291  00154C  103C               	iorwf	(dtoa@n+6)^0,w,c
  6292  00154E  103D               	iorwf	(dtoa@n+7)^0,w,c
  6293  001550  A4D8               	btfss	status,2,c
  6294  001552  EFAD  F00A         	goto	u2581
  6295  001556  EFAF  F00A         	goto	u2580
  6296  00155A                     u2581:
  6297  00155A  EF17  F00A         	goto	l2744
  6298  00155E                     u2580:
  6299  00155E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6300  001560  EFBC  F00A         	goto	u2590
  6301  001564  5031               	movf	(dtoa@p+1)^0,w,c
  6302  001566  E106               	bnz	u2591
  6303  001568  0430               	decf	dtoa@p^0,w,c
  6304  00156A  B0D8               	btfsc	status,0,c
  6305  00156C  EFBA  F00A         	goto	u2591
  6306  001570  EFBC  F00A         	goto	u2590
  6307  001574                     u2591:
  6308  001574  EF17  F00A         	goto	l2744
  6309  001578                     u2590:
  6310  001578  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6311  00157A  EFC7  F00A         	goto	u2601
  6312  00157E  5033               	movf	(dtoa@w+1)^0,w,c
  6313  001580  E108               	bnz	u2600
  6314  001582  0432               	decf	dtoa@w^0,w,c
  6315  001584  A0D8               	btfss	status,0,c
  6316  001586  EFC7  F00A         	goto	u2601
  6317  00158A  EFC9  F00A         	goto	u2600
  6318  00158E                     u2601:
  6319  00158E  EFD1  F00A         	goto	l2764
  6320  001592                     u2600:
  6321  001592  0100               	movlb	0	; () banked
  6322  001594  B3E9               	btfsc	_flags& (0+255),1,b
  6323  001596  EFCF  F00A         	goto	u2611
  6324  00159A  EFD1  F00A         	goto	u2610
  6325  00159E                     u2611:
  6326  00159E  EF17  F00A         	goto	l2744
  6327  0015A2                     u2610:
  6328  0015A2                     l2764:
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6331  0015A2  5034               	movf	dtoa@s^0,w,c
  6332  0015A4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6333  0015A6  A4D8               	btfss	status,2,c
  6334  0015A8  EFD8  F00A         	goto	u2621
  6335  0015AC  EFDA  F00A         	goto	u2620
  6336  0015B0                     u2621:
  6337  0015B0  EFE2  F00A         	goto	l2768
  6338  0015B4                     u2620:
  6339  0015B4  0100               	movlb	0	; () banked
  6340  0015B6  A5E9               	btfss	_flags& (0+255),2,b
  6341  0015B8  EFE0  F00A         	goto	u2631
  6342  0015BC  EFE2  F00A         	goto	u2630
  6343  0015C0                     u2631:
  6344  0015C0  EF00  F00B         	goto	l2778
  6345  0015C4                     u2630:
  6346  0015C4                     l2768:
  6347                           
  6348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6349  0015C4  063E               	decf	dtoa@i^0,f,c
  6350  0015C6  A0D8               	btfss	status,0,c
  6351  0015C8  063F               	decf	(dtoa@i+1)^0,f,c
  6352  0015CA                     
  6353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6354  0015CA  5034               	movf	dtoa@s^0,w,c
  6355  0015CC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6356  0015CE  A4D8               	btfss	status,2,c
  6357  0015D0  EFEC  F00A         	goto	u2641
  6358  0015D4  EFEE  F00A         	goto	u2640
  6359  0015D8                     u2641:
  6360  0015D8  EFF4  F00A         	goto	l2774
  6361  0015DC                     u2640:
  6362  0015DC  0E00               	movlw	0
  6363  0015DE  6E2F               	movwf	(_dtoa$1489+1)^0,c
  6364  0015E0  0E2B               	movlw	43
  6365  0015E2  6E2E               	movwf	_dtoa$1489^0,c
  6366  0015E4  EFF8  F00A         	goto	l2776
  6367  0015E8                     l2774:
  6368  0015E8  0E00               	movlw	0
  6369  0015EA  6E2F               	movwf	(_dtoa$1489+1)^0,c
  6370  0015EC  0E2D               	movlw	45
  6371  0015EE  6E2E               	movwf	_dtoa$1489^0,c
  6372  0015F0                     l2776:
  6373  0015F0  0EB7               	movlw	low _dbuf
  6374  0015F2  243E               	addwf	dtoa@i^0,w,c
  6375  0015F4  6ED9               	movwf	fsr2l,c
  6376  0015F6  0E01               	movlw	high _dbuf
  6377  0015F8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6378  0015FA  6EDA               	movwf	fsr2h,c
  6379  0015FC  C02E  FFDF         	movff	_dtoa$1489,indf2
  6380  001600                     l2778:
  6381                           
  6382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6383  001600  C01C  F011         	movff	dtoa@fp,pad@fp
  6384  001604  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6385  001608  0EB7               	movlw	low _dbuf
  6386  00160A  243E               	addwf	dtoa@i^0,w,c
  6387  00160C  6E13               	movwf	pad@buf^0,c
  6388  00160E  0E01               	movlw	high _dbuf
  6389  001610  203F               	addwfc	(dtoa@i+1)^0,w,c
  6390  001612  6E14               	movwf	(pad@buf+1)^0,c
  6391  001614  C032  F015         	movff	dtoa@w,pad@p
  6392  001618  C033  F016         	movff	dtoa@w+1,pad@p+1
  6393  00161C  EC79  F014         	call	_pad	;wreg free
  6394  001620  C011  F01C         	movff	?_pad,?_dtoa
  6395  001624  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6396  001628  0012               	return		;funcret
  6397  00162A                     __end_of_dtoa:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _pad *****************
  6401 ;; Defined at:
  6402 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6405 ;;		 -> sprintf@f(6), 
  6406 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6407 ;;		 -> dbuf(32), 
  6408 ;;  p               2   20[COMRAM] int 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  w               2   25[COMRAM] int 
  6411 ;;  i               2   23[COMRAM] int 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  2   16[COMRAM] int 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6421 ;;      Params:         6       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6424 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:       11 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    3
  6428 ;; This function calls:
  6429 ;;		_fputc
  6430 ;;		_fputs
  6431 ;;		_strlen
  6432 ;; This function is called by:
  6433 ;;		_dtoa
  6434 ;;		_xtoa
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text24
  6439  0028F2                     __ptext24:
  6440                           	callstack 0
  6441  0028F2                     _pad:
  6442                           	callstack 22
  6443  0028F2                     
  6444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6445  0028F2  0100               	movlb	0	; () banked
  6446  0028F4  A1E9               	btfss	_flags& (0+255),0,b
  6447  0028F6  EF7F  F014         	goto	u2301
  6448  0028FA  EF81  F014         	goto	u2300
  6449  0028FE                     u2301:
  6450  0028FE  EF8B  F014         	goto	l2634
  6451  002902                     u2300:
  6452  002902                     
  6453                           ; BSR set to: 0
  6454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6455  002902  C013  F00A         	movff	pad@buf,fputs@s
  6456  002906  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6457  00290A  C011  F00C         	movff	pad@fp,fputs@fp
  6458  00290E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6459  002912  EC7E  F017         	call	_fputs	;wreg free
  6460  002916                     l2634:
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6463  002916  BE16               	btfsc	(pad@p+1)^0,7,c
  6464  002918  EF90  F014         	goto	u2311
  6465  00291C  EF92  F014         	goto	u2310
  6466  002920                     u2311:
  6467  002920  EF98  F014         	goto	l2638
  6468  002924                     u2310:
  6469  002924  C015  F01A         	movff	pad@p,pad@w
  6470  002928  C016  F01B         	movff	pad@p+1,pad@w+1
  6471  00292C  EF9C  F014         	goto	l1087
  6472  002930                     l2638:
  6473  002930  0E00               	movlw	0
  6474  002932  6E1B               	movwf	(pad@w+1)^0,c
  6475  002934  0E00               	movlw	0
  6476  002936  6E1A               	movwf	pad@w^0,c
  6477  002938                     l1087:
  6478                           
  6479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6480  002938  0E00               	movlw	0
  6481  00293A  6E19               	movwf	(pad@i+1)^0,c
  6482  00293C  0E00               	movlw	0
  6483  00293E  6E18               	movwf	pad@i^0,c
  6484                           
  6485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6486  002940  EFAE  F014         	goto	l2644
  6487  002944                     l2640:
  6488                           
  6489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6490  002944  0E00               	movlw	0
  6491  002946  6E02               	movwf	(fputc@c+1)^0,c
  6492  002948  0E20               	movlw	32
  6493  00294A  6E01               	movwf	fputc@c^0,c
  6494  00294C  C011  F003         	movff	pad@fp,fputc@fp
  6495  002950  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6496  002954  EC14  F014         	call	_fputc	;wreg free
  6497  002958                     
  6498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6499  002958  4A18               	infsnz	pad@i^0,f,c
  6500  00295A  2A19               	incf	(pad@i+1)^0,f,c
  6501  00295C                     l2644:
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6504  00295C  501A               	movf	pad@w^0,w,c
  6505  00295E  5C18               	subwf	pad@i^0,w,c
  6506  002960  5019               	movf	(pad@i+1)^0,w,c
  6507  002962  0A80               	xorlw	128
  6508  002964  6E17               	movwf	??_pad^0,c
  6509  002966  501B               	movf	(pad@w+1)^0,w,c
  6510  002968  0A80               	xorlw	128
  6511  00296A  5817               	subwfb	??_pad^0,w,c
  6512  00296C  A0D8               	btfss	status,0,c
  6513  00296E  EFBB  F014         	goto	u2321
  6514  002972  EFBD  F014         	goto	u2320
  6515  002976                     u2321:
  6516  002976  EFA2  F014         	goto	l2640
  6517  00297A                     u2320:
  6518  00297A                     
  6519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6520  00297A  0100               	movlb	0	; () banked
  6521  00297C  B1E9               	btfsc	_flags& (0+255),0,b
  6522  00297E  EFC3  F014         	goto	u2331
  6523  002982  EFC5  F014         	goto	u2330
  6524  002986                     u2331:
  6525  002986  EFCF  F014         	goto	l2648
  6526  00298A                     u2330:
  6527  00298A                     
  6528                           ; BSR set to: 0
  6529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6530  00298A  C013  F00A         	movff	pad@buf,fputs@s
  6531  00298E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6532  002992  C011  F00C         	movff	pad@fp,fputs@fp
  6533  002996  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6534  00299A  EC7E  F017         	call	_fputs	;wreg free
  6535  00299E                     l2648:
  6536                           
  6537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6538  00299E  C013  F001         	movff	pad@buf,strlen@s
  6539  0029A2  C014  F002         	movff	pad@buf+1,strlen@s+1
  6540  0029A6  EC72  F018         	call	_strlen	;wreg free
  6541  0029AA  501A               	movf	pad@w^0,w,c
  6542  0029AC  2401               	addwf	?_strlen^0,w,c
  6543  0029AE  6E11               	movwf	?_pad^0,c
  6544  0029B0  501B               	movf	(pad@w+1)^0,w,c
  6545  0029B2  2002               	addwfc	(?_strlen+1)^0,w,c
  6546  0029B4  6E12               	movwf	(?_pad+1)^0,c
  6547  0029B6  0012               	return		;funcret
  6548  0029B8                     __end_of_pad:
  6549                           	callstack 0
  6550                           
  6551 ;; *************** function _strlen *****************
  6552 ;; Defined at:
  6553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6556 ;;		 -> dbuf(32), SensorMovimiento@buf(20), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6559 ;;		 -> dbuf(32), SensorMovimiento@buf(20), 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  2    0[COMRAM] unsigned int 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6569 ;;      Params:         2       0       0       0       0       0       0       0       0
  6570 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6572 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        4 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_pad
  6579 ;;		_strcat
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text25
  6584  0030E4                     __ptext25:
  6585                           	callstack 0
  6586  0030E4                     _strlen:
  6587                           	callstack 24
  6588  0030E4  C001  F003         	movff	strlen@s,strlen@a
  6589  0030E8  C002  F004         	movff	strlen@s+1,strlen@a+1
  6590  0030EC  EF7A  F018         	goto	l2540
  6591  0030F0                     l2538:
  6592  0030F0  4A01               	infsnz	strlen@s^0,f,c
  6593  0030F2  2A02               	incf	(strlen@s+1)^0,f,c
  6594  0030F4                     l2540:
  6595  0030F4  C001  FFD9         	movff	strlen@s,fsr2l
  6596  0030F8  C002  FFDA         	movff	strlen@s+1,fsr2h
  6597  0030FC  50DF               	movf	indf2,w,c
  6598  0030FE  A4D8               	btfss	status,2,c
  6599  003100  EF84  F018         	goto	u2141
  6600  003104  EF86  F018         	goto	u2140
  6601  003108                     u2141:
  6602  003108  EF78  F018         	goto	l2538
  6603  00310C                     u2140:
  6604  00310C  5003               	movf	strlen@a^0,w,c
  6605  00310E  5C01               	subwf	strlen@s^0,w,c
  6606  003110  6E01               	movwf	?_strlen^0,c
  6607  003112  5004               	movf	(strlen@a+1)^0,w,c
  6608  003114  5802               	subwfb	(strlen@s+1)^0,w,c
  6609  003116  6E02               	movwf	(?_strlen+1)^0,c
  6610  003118  0012               	return		;funcret
  6611  00311A                     __end_of_strlen:
  6612                           	callstack 0
  6613                           
  6614 ;; *************** function _fputs *****************
  6615 ;; Defined at:
  6616 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6619 ;;		 -> dbuf(32), 
  6620 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6621 ;;		 -> sprintf@f(6), 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  i               2   14[COMRAM] int 
  6624 ;;  c               1   13[COMRAM] unsigned char 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  2    9[COMRAM] int 
  6627 ;; Registers used:
  6628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6634 ;;      Params:         4       0       0       0       0       0       0       0       0
  6635 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6637 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6638 ;;Total ram usage:        7 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    2
  6641 ;; This function calls:
  6642 ;;		_fputc
  6643 ;; This function is called by:
  6644 ;;		_pad
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text26
  6649  002EFC                     __ptext26:
  6650                           	callstack 0
  6651  002EFC                     _fputs:
  6652                           	callstack 22
  6653  002EFC  0E00               	movlw	0
  6654  002EFE  6E10               	movwf	(fputs@i+1)^0,c
  6655  002F00  0E00               	movlw	0
  6656  002F02  6E0F               	movwf	fputs@i^0,c
  6657  002F04  EF8F  F017         	goto	l2534
  6658  002F08                     l2530:
  6659  002F08  C00E  F001         	movff	fputs@c,fputc@c
  6660  002F0C  6A02               	clrf	(fputc@c+1)^0,c
  6661  002F0E  C00C  F003         	movff	fputs@fp,fputc@fp
  6662  002F12  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6663  002F16  EC14  F014         	call	_fputc	;wreg free
  6664  002F1A  4A0F               	infsnz	fputs@i^0,f,c
  6665  002F1C  2A10               	incf	(fputs@i+1)^0,f,c
  6666  002F1E                     l2534:
  6667  002F1E  500F               	movf	fputs@i^0,w,c
  6668  002F20  240A               	addwf	fputs@s^0,w,c
  6669  002F22  6ED9               	movwf	fsr2l,c
  6670  002F24  5010               	movf	(fputs@i+1)^0,w,c
  6671  002F26  200B               	addwfc	(fputs@s+1)^0,w,c
  6672  002F28  6EDA               	movwf	fsr2h,c
  6673  002F2A  50DF               	movf	indf2,w,c
  6674  002F2C  6E0E               	movwf	fputs@c^0,c
  6675  002F2E  500E               	movf	fputs@c^0,w,c
  6676  002F30  A4D8               	btfss	status,2,c
  6677  002F32  EF9D  F017         	goto	u2131
  6678  002F36  EF9F  F017         	goto	u2130
  6679  002F3A                     u2131:
  6680  002F3A  EF84  F017         	goto	l2530
  6681  002F3E                     u2130:
  6682  002F3E  0012               	return		;funcret
  6683  002F40                     __end_of_fputs:
  6684                           	callstack 0
  6685                           
  6686 ;; *************** function _abs *****************
  6687 ;; Defined at:
  6688 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  a               2   18[COMRAM] int 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  2   18[COMRAM] int 
  6695 ;; Registers used:
  6696 ;;		wreg, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6702 ;;      Params:         2       0       0       0       0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6704 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6705 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6706 ;;Total ram usage:        4 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_dtoa
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text27
  6716  002F80                     __ptext27:
  6717                           	callstack 0
  6718  002F80                     _abs:
  6719                           	callstack 25
  6720  002F80  BE14               	btfsc	(abs@a+1)^0,7,c
  6721  002F82  EFCD  F017         	goto	u2340
  6722  002F86  5014               	movf	(abs@a+1)^0,w,c
  6723  002F88  E106               	bnz	u2341
  6724  002F8A  0413               	decf	abs@a^0,w,c
  6725  002F8C  B0D8               	btfsc	status,0,c
  6726  002F8E  EFCB  F017         	goto	u2341
  6727  002F92  EFCD  F017         	goto	u2340
  6728  002F96                     u2341:
  6729  002F96  EFDB  F017         	goto	l1186
  6730  002F9A                     u2340:
  6731  002F9A  C013  F015         	movff	abs@a,??_abs
  6732  002F9E  C014  F016         	movff	abs@a+1,??_abs+1
  6733  002FA2  1E15               	comf	??_abs^0,f,c
  6734  002FA4  1E16               	comf	(??_abs+1)^0,f,c
  6735  002FA6  4A15               	infsnz	??_abs^0,f,c
  6736  002FA8  2A16               	incf	(??_abs+1)^0,f,c
  6737  002FAA  C015  F013         	movff	??_abs,?_abs
  6738  002FAE  C016  F014         	movff	??_abs+1,?_abs+1
  6739  002FB2  EFDF  F017         	goto	l1189
  6740  002FB6                     l1186:
  6741  002FB6  C013  F013         	movff	abs@a,?_abs
  6742  002FBA  C014  F014         	movff	abs@a+1,?_abs+1
  6743  002FBE                     l1189:
  6744  002FBE  0012               	return		;funcret
  6745  002FC0                     __end_of_abs:
  6746                           	callstack 0
  6747                           
  6748 ;; *************** function ___aomod *****************
  6749 ;; Defined at:
  6750 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  dividend        8    0[COMRAM] long long 
  6753 ;;  divisor         8    8[COMRAM] long long 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  sign            1   17[COMRAM] unsigned char 
  6756 ;;  counter         1   16[COMRAM] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  8    0[COMRAM] long long 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6766 ;;      Params:        16       0       0       0       0       0       0       0       0
  6767 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6769 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6770 ;;Total ram usage:       18 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_dtoa
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text28
  6780  0023E2                     __ptext28:
  6781                           	callstack 0
  6782  0023E2                     ___aomod:
  6783                           	callstack 25
  6784  0023E2  0E00               	movlw	0
  6785  0023E4  6E12               	movwf	___aomod@sign^0,c
  6786  0023E6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6787  0023E8  EFFA  F011         	goto	u2240
  6788  0023EC  EFF8  F011         	goto	u2241
  6789  0023F0                     u2241:
  6790  0023F0  EF0C  F012         	goto	l2602
  6791  0023F4                     u2240:
  6792  0023F4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6793  0023F6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6794  0023F8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6795  0023FA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6796  0023FC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6797  0023FE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6798  002400  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6799  002402  6C01               	negf	___aomod@dividend^0,c
  6800  002404  0E00               	movlw	0
  6801  002406  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6802  002408  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6803  00240A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6804  00240C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6805  00240E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6806  002410  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6807  002412  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6808  002414  0E01               	movlw	1
  6809  002416  6E12               	movwf	___aomod@sign^0,c
  6810  002418                     l2602:
  6811  002418  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6812  00241A  EF13  F012         	goto	u2250
  6813  00241E  EF11  F012         	goto	u2251
  6814  002422                     u2251:
  6815  002422  EF23  F012         	goto	l2606
  6816  002426                     u2250:
  6817  002426  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6818  002428  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6819  00242A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6820  00242C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6821  00242E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6822  002430  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6823  002432  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6824  002434  6C09               	negf	___aomod@divisor^0,c
  6825  002436  0E00               	movlw	0
  6826  002438  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6827  00243A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6828  00243C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6829  00243E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6830  002440  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6831  002442  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6832  002444  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6833  002446                     l2606:
  6834  002446  5009               	movf	___aomod@divisor^0,w,c
  6835  002448  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6836  00244A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6837  00244C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6838  00244E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6839  002450  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6840  002452  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6841  002454  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6842  002456  B4D8               	btfsc	status,2,c
  6843  002458  EF30  F012         	goto	u2261
  6844  00245C  EF32  F012         	goto	u2260
  6845  002460                     u2261:
  6846  002460  EF7A  F012         	goto	l2622
  6847  002464                     u2260:
  6848  002464  0E01               	movlw	1
  6849  002466  6E11               	movwf	___aomod@counter^0,c
  6850  002468  EF40  F012         	goto	l2612
  6851  00246C                     l2610:
  6852  00246C  90D8               	bcf	status,0,c
  6853  00246E  3609               	rlcf	___aomod@divisor^0,f,c
  6854  002470  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6855  002472  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6856  002474  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6857  002476  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6858  002478  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6859  00247A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6860  00247C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6861  00247E  2A11               	incf	___aomod@counter^0,f,c
  6862  002480                     l2612:
  6863  002480  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6864  002482  EF45  F012         	goto	u2271
  6865  002486  EF47  F012         	goto	u2270
  6866  00248A                     u2271:
  6867  00248A  EF36  F012         	goto	l2610
  6868  00248E                     u2270:
  6869  00248E                     l2614:
  6870  00248E  5009               	movf	___aomod@divisor^0,w,c
  6871  002490  5C01               	subwf	___aomod@dividend^0,w,c
  6872  002492  500A               	movf	(___aomod@divisor+1)^0,w,c
  6873  002494  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6874  002496  500B               	movf	(___aomod@divisor+2)^0,w,c
  6875  002498  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6876  00249A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6877  00249C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6878  00249E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6879  0024A0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6880  0024A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  6881  0024A4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6882  0024A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  6883  0024A8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6884  0024AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  6885  0024AC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6886  0024AE  A0D8               	btfss	status,0,c
  6887  0024B0  EF5C  F012         	goto	u2281
  6888  0024B4  EF5E  F012         	goto	u2280
  6889  0024B8                     u2281:
  6890  0024B8  EF6E  F012         	goto	l2618
  6891  0024BC                     u2280:
  6892  0024BC  5009               	movf	___aomod@divisor^0,w,c
  6893  0024BE  5E01               	subwf	___aomod@dividend^0,f,c
  6894  0024C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  6895  0024C2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6896  0024C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  6897  0024C6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6898  0024C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  6899  0024CA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6900  0024CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  6901  0024CE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6902  0024D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  6903  0024D2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6904  0024D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  6905  0024D6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6906  0024D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  6907  0024DA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6908  0024DC                     l2618:
  6909  0024DC  90D8               	bcf	status,0,c
  6910  0024DE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6911  0024E0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6912  0024E2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6913  0024E4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6914  0024E6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6915  0024E8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6916  0024EA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6917  0024EC  3209               	rrcf	___aomod@divisor^0,f,c
  6918  0024EE  2E11               	decfsz	___aomod@counter^0,f,c
  6919  0024F0  EF47  F012         	goto	l2614
  6920  0024F4                     l2622:
  6921  0024F4  5012               	movf	___aomod@sign^0,w,c
  6922  0024F6  B4D8               	btfsc	status,2,c
  6923  0024F8  EF80  F012         	goto	u2291
  6924  0024FC  EF82  F012         	goto	u2290
  6925  002500                     u2291:
  6926  002500  EF92  F012         	goto	l2626
  6927  002504                     u2290:
  6928  002504  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6929  002506  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6930  002508  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6931  00250A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6932  00250C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6933  00250E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6934  002510  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6935  002512  6C01               	negf	___aomod@dividend^0,c
  6936  002514  0E00               	movlw	0
  6937  002516  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6938  002518  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6939  00251A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6940  00251C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6941  00251E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6942  002520  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6943  002522  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6944  002524                     l2626:
  6945  002524  C001  F001         	movff	___aomod@dividend,?___aomod
  6946  002528  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6947  00252C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6948  002530  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6949  002534  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6950  002538  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6951  00253C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6952  002540  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6953  002544  0012               	return		;funcret
  6954  002546                     __end_of___aomod:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function ___aodiv *****************
  6958 ;; Defined at:
  6959 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  dividend        8    0[COMRAM] long long 
  6962 ;;  divisor         8    8[COMRAM] long long 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  quotient        8   18[COMRAM] long long 
  6965 ;;  sign            1   17[COMRAM] unsigned char 
  6966 ;;  counter         1   16[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  8    0[COMRAM] long long 
  6969 ;; Registers used:
  6970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6976 ;;      Params:        16       0       0       0       0       0       0       0       0
  6977 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6979 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6980 ;;Total ram usage:       26 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_dtoa
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text29
  6990  0020E4                     __ptext29:
  6991                           	callstack 0
  6992  0020E4                     ___aodiv:
  6993                           	callstack 25
  6994  0020E4  0E00               	movlw	0
  6995  0020E6  6E12               	movwf	___aodiv@sign^0,c
  6996  0020E8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6997  0020EA  EF7B  F010         	goto	u2170
  6998  0020EE  EF79  F010         	goto	u2171
  6999  0020F2                     u2171:
  7000  0020F2  EF8D  F010         	goto	l2558
  7001  0020F6                     u2170:
  7002  0020F6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7003  0020F8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7004  0020FA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7005  0020FC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7006  0020FE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7007  002100  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7008  002102  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7009  002104  6C09               	negf	___aodiv@divisor^0,c
  7010  002106  0E00               	movlw	0
  7011  002108  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7012  00210A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7013  00210C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7014  00210E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7015  002110  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7016  002112  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7017  002114  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7018  002116  0E01               	movlw	1
  7019  002118  6E12               	movwf	___aodiv@sign^0,c
  7020  00211A                     l2558:
  7021  00211A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7022  00211C  EF94  F010         	goto	u2180
  7023  002120  EF92  F010         	goto	u2181
  7024  002124                     u2181:
  7025  002124  EFA6  F010         	goto	l2564
  7026  002128                     u2180:
  7027  002128  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7028  00212A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7029  00212C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7030  00212E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7031  002130  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7032  002132  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7033  002134  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7034  002136  6C01               	negf	___aodiv@dividend^0,c
  7035  002138  0E00               	movlw	0
  7036  00213A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7037  00213C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7038  00213E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7039  002140  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7040  002142  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7041  002144  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7042  002146  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7043  002148  0E01               	movlw	1
  7044  00214A  1A12               	xorwf	___aodiv@sign^0,f,c
  7045  00214C                     l2564:
  7046  00214C  EE20  F013         	lfsr	2,___aodiv@quotient
  7047  002150  0E07               	movlw	7
  7048  002152                     u2191:
  7049  002152  6ADE               	clrf	postinc2,c
  7050  002154  06E8               	decf	wreg,f,c
  7051  002156  E2FD               	bc	u2191
  7052  002158  5009               	movf	___aodiv@divisor^0,w,c
  7053  00215A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7054  00215C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7055  00215E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7056  002160  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7057  002162  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7058  002164  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7059  002166  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7060  002168  B4D8               	btfsc	status,2,c
  7061  00216A  EFB9  F010         	goto	u2201
  7062  00216E  EFBB  F010         	goto	u2200
  7063  002172                     u2201:
  7064  002172  EF0D  F011         	goto	l2586
  7065  002176                     u2200:
  7066  002176  0E01               	movlw	1
  7067  002178  6E11               	movwf	___aodiv@counter^0,c
  7068  00217A  EFC9  F010         	goto	l2572
  7069  00217E                     l2570:
  7070  00217E  90D8               	bcf	status,0,c
  7071  002180  3609               	rlcf	___aodiv@divisor^0,f,c
  7072  002182  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7073  002184  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7074  002186  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7075  002188  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7076  00218A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7077  00218C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7078  00218E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7079  002190  2A11               	incf	___aodiv@counter^0,f,c
  7080  002192                     l2572:
  7081  002192  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7082  002194  EFCE  F010         	goto	u2211
  7083  002198  EFD0  F010         	goto	u2210
  7084  00219C                     u2211:
  7085  00219C  EFBF  F010         	goto	l2570
  7086  0021A0                     u2210:
  7087  0021A0                     l2574:
  7088  0021A0  90D8               	bcf	status,0,c
  7089  0021A2  3613               	rlcf	___aodiv@quotient^0,f,c
  7090  0021A4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7091  0021A6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7092  0021A8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7093  0021AA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7094  0021AC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7095  0021AE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7096  0021B0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7097  0021B2  5009               	movf	___aodiv@divisor^0,w,c
  7098  0021B4  5C01               	subwf	___aodiv@dividend^0,w,c
  7099  0021B6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7100  0021B8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7101  0021BA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7102  0021BC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7103  0021BE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7104  0021C0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7105  0021C2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7106  0021C4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7107  0021C6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7108  0021C8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7109  0021CA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7110  0021CC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7111  0021CE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7112  0021D0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7113  0021D2  A0D8               	btfss	status,0,c
  7114  0021D4  EFEE  F010         	goto	u2221
  7115  0021D8  EFF0  F010         	goto	u2220
  7116  0021DC                     u2221:
  7117  0021DC  EF01  F011         	goto	l2582
  7118  0021E0                     u2220:
  7119  0021E0  5009               	movf	___aodiv@divisor^0,w,c
  7120  0021E2  5E01               	subwf	___aodiv@dividend^0,f,c
  7121  0021E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7122  0021E6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7123  0021E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7124  0021EA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7125  0021EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7126  0021EE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7127  0021F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7128  0021F2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7129  0021F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7130  0021F6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7131  0021F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7132  0021FA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7133  0021FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7134  0021FE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7135  002200  8013               	bsf	___aodiv@quotient^0,0,c
  7136  002202                     l2582:
  7137  002202  90D8               	bcf	status,0,c
  7138  002204  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7139  002206  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7140  002208  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7141  00220A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7142  00220C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7143  00220E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7144  002210  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7145  002212  3209               	rrcf	___aodiv@divisor^0,f,c
  7146  002214  2E11               	decfsz	___aodiv@counter^0,f,c
  7147  002216  EFD0  F010         	goto	l2574
  7148  00221A                     l2586:
  7149  00221A  5012               	movf	___aodiv@sign^0,w,c
  7150  00221C  B4D8               	btfsc	status,2,c
  7151  00221E  EF13  F011         	goto	u2231
  7152  002222  EF15  F011         	goto	u2230
  7153  002226                     u2231:
  7154  002226  EF25  F011         	goto	l2590
  7155  00222A                     u2230:
  7156  00222A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7157  00222C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7158  00222E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7159  002230  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7160  002232  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7161  002234  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7162  002236  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7163  002238  6C13               	negf	___aodiv@quotient^0,c
  7164  00223A  0E00               	movlw	0
  7165  00223C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7166  00223E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7167  002240  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7168  002242  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7169  002244  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7170  002246  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7171  002248  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7172  00224A                     l2590:
  7173  00224A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7174  00224E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7175  002252  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7176  002256  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7177  00225A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7178  00225E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7179  002262  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7180  002266  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7181  00226A  0012               	return		;funcret
  7182  00226C                     __end_of___aodiv:
  7183                           	callstack 0
  7184                           
  7185 ;; *************** function _ctoa *****************
  7186 ;; Defined at:
  7187 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7190 ;;		 -> sprintf@f(6), 
  7191 ;;  c               1   11[COMRAM] unsigned char 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  w               2   15[COMRAM] int 
  7194 ;;  l               2   13[COMRAM] int 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  2    9[COMRAM] int 
  7197 ;; Registers used:
  7198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7204 ;;      Params:         3       0       0       0       0       0       0       0       0
  7205 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7206 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7207 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7208 ;;Total ram usage:        8 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:    2
  7211 ;; This function calls:
  7212 ;;		_fputc
  7213 ;; This function is called by:
  7214 ;;		_vfpfcnvrt
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text30
  7219  002750                     __ptext30:
  7220                           	callstack 0
  7221  002750                     _ctoa:
  7222                           	callstack 24
  7223  002750                     
  7224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  7225  002750  0100               	movlb	0	; () banked
  7226  002752  51E5               	movf	_width& (0+255),w,b
  7227  002754  11E6               	iorwf	(_width+1)& (0+255),w,b
  7228  002756  A4D8               	btfss	status,2,c
  7229  002758  EFB0  F013         	goto	u2451
  7230  00275C  EFB2  F013         	goto	u2450
  7231  002760                     u2451:
  7232  002760  EFB8  F013         	goto	l2696
  7233  002764                     u2450:
  7234  002764                     
  7235                           ; BSR set to: 0
  7236  002764  C0E5  F010         	movff	_width,ctoa@w
  7237  002768  C0E6  F011         	movff	_width+1,ctoa@w+1
  7238  00276C  EFBE  F013         	goto	l2698
  7239  002770                     l2696:
  7240                           
  7241                           ; BSR set to: 0
  7242  002770  0EFF               	movlw	255
  7243  002772  25E5               	addwf	_width& (0+255),w,b
  7244  002774  6E10               	movwf	ctoa@w^0,c
  7245  002776  0EFF               	movlw	255
  7246  002778  21E6               	addwfc	(_width+1)& (0+255),w,b
  7247  00277A  6E11               	movwf	(ctoa@w+1)^0,c
  7248  00277C                     l2698:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  7252  00277C  A1E9               	btfss	_flags& (0+255),0,b
  7253  00277E  EFC3  F013         	goto	u2461
  7254  002782  EFC5  F013         	goto	u2460
  7255  002786                     u2461:
  7256  002786  EFCE  F013         	goto	l2702
  7257  00278A                     u2460:
  7258  00278A                     
  7259                           ; BSR set to: 0
  7260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  7261  00278A  C00C  F001         	movff	ctoa@c,fputc@c
  7262  00278E  6A02               	clrf	(fputc@c+1)^0,c
  7263  002790  C00A  F003         	movff	ctoa@fp,fputc@fp
  7264  002794  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7265  002798  EC14  F014         	call	_fputc	;wreg free
  7266  00279C                     l2702:
  7267                           
  7268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  7269  00279C  BE11               	btfsc	(ctoa@w+1)^0,7,c
  7270  00279E  EFD3  F013         	goto	u2471
  7271  0027A2  EFD5  F013         	goto	u2470
  7272  0027A6                     u2471:
  7273  0027A6  EFD7  F013         	goto	l2706
  7274  0027AA                     u2470:
  7275  0027AA  EFDB  F013         	goto	l1103
  7276  0027AE                     l2706:
  7277  0027AE  0E00               	movlw	0
  7278  0027B0  6E11               	movwf	(ctoa@w+1)^0,c
  7279  0027B2  0E00               	movlw	0
  7280  0027B4  6E10               	movwf	ctoa@w^0,c
  7281  0027B6                     l1103:
  7282                           
  7283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  7284  0027B6  0E00               	movlw	0
  7285  0027B8  6E0F               	movwf	(ctoa@l+1)^0,c
  7286  0027BA  0E00               	movlw	0
  7287  0027BC  6E0E               	movwf	ctoa@l^0,c
  7288                           
  7289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7290  0027BE  EFED  F013         	goto	l2712
  7291  0027C2                     l2708:
  7292                           
  7293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  7294  0027C2  0E00               	movlw	0
  7295  0027C4  6E02               	movwf	(fputc@c+1)^0,c
  7296  0027C6  0E20               	movlw	32
  7297  0027C8  6E01               	movwf	fputc@c^0,c
  7298  0027CA  C00A  F003         	movff	ctoa@fp,fputc@fp
  7299  0027CE  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7300  0027D2  EC14  F014         	call	_fputc	;wreg free
  7301  0027D6                     
  7302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  7303  0027D6  4A0E               	infsnz	ctoa@l^0,f,c
  7304  0027D8  2A0F               	incf	(ctoa@l+1)^0,f,c
  7305  0027DA                     l2712:
  7306                           
  7307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7308  0027DA  5010               	movf	ctoa@w^0,w,c
  7309  0027DC  5C0E               	subwf	ctoa@l^0,w,c
  7310  0027DE  500F               	movf	(ctoa@l+1)^0,w,c
  7311  0027E0  0A80               	xorlw	128
  7312  0027E2  6E0D               	movwf	??_ctoa^0,c
  7313  0027E4  5011               	movf	(ctoa@w+1)^0,w,c
  7314  0027E6  0A80               	xorlw	128
  7315  0027E8  580D               	subwfb	??_ctoa^0,w,c
  7316  0027EA  A0D8               	btfss	status,0,c
  7317  0027EC  EFFA  F013         	goto	u2481
  7318  0027F0  EFFC  F013         	goto	u2480
  7319  0027F4                     u2481:
  7320  0027F4  EFE1  F013         	goto	l2708
  7321  0027F8                     u2480:
  7322  0027F8                     
  7323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  7324  0027F8  0100               	movlb	0	; () banked
  7325  0027FA  B1E9               	btfsc	_flags& (0+255),0,b
  7326  0027FC  EF02  F014         	goto	u2491
  7327  002800  EF04  F014         	goto	u2490
  7328  002804                     u2491:
  7329  002804  EF0D  F014         	goto	l2716
  7330  002808                     u2490:
  7331  002808                     
  7332                           ; BSR set to: 0
  7333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  7334  002808  C00C  F001         	movff	ctoa@c,fputc@c
  7335  00280C  6A02               	clrf	(fputc@c+1)^0,c
  7336  00280E  C00A  F003         	movff	ctoa@fp,fputc@fp
  7337  002812  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7338  002816  EC14  F014         	call	_fputc	;wreg free
  7339  00281A                     l2716:
  7340                           
  7341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  7342  00281A  0E01               	movlw	1
  7343  00281C  240E               	addwf	ctoa@l^0,w,c
  7344  00281E  6E0A               	movwf	?_ctoa^0,c
  7345  002820  0E00               	movlw	0
  7346  002822  200F               	addwfc	(ctoa@l+1)^0,w,c
  7347  002824  6E0B               	movwf	(?_ctoa+1)^0,c
  7348  002826  0012               	return		;funcret
  7349  002828                     __end_of_ctoa:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _fputc *****************
  7353 ;; Defined at:
  7354 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  c               2    0[COMRAM] int 
  7357 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7358 ;;		 -> sprintf@f(6), 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  2    0[COMRAM] int 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7370 ;;      Params:         4       0       0       0       0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7372 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7373 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7374 ;;Total ram usage:        9 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:    1
  7377 ;; This function calls:
  7378 ;;		_putch
  7379 ;; This function is called by:
  7380 ;;		_pad
  7381 ;;		_ctoa
  7382 ;;		_vfpfcnvrt
  7383 ;;		_fputs
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text31
  7388  002828                     __ptext31:
  7389                           	callstack 0
  7390  002828                     _fputc:
  7391                           	callstack 22
  7392  002828  5003               	movf	fputc@fp^0,w,c
  7393  00282A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7394  00282C  B4D8               	btfsc	status,2,c
  7395  00282E  EF1B  F014         	goto	u2091
  7396  002832  EF1D  F014         	goto	u2090
  7397  002836                     u2091:
  7398  002836  EF26  F014         	goto	l2518
  7399  00283A                     u2090:
  7400  00283A  5003               	movf	fputc@fp^0,w,c
  7401  00283C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7402  00283E  A4D8               	btfss	status,2,c
  7403  002840  EF24  F014         	goto	u2101
  7404  002844  EF26  F014         	goto	u2100
  7405  002848                     u2101:
  7406  002848  EF2B  F014         	goto	l2520
  7407  00284C                     u2100:
  7408  00284C                     l2518:
  7409  00284C  5001               	movf	fputc@c^0,w,c
  7410  00284E  EC68  F019         	call	_putch
  7411  002852  EF78  F014         	goto	l1213
  7412  002856                     l2520:
  7413  002856  EE20 F004          	lfsr	2,4
  7414  00285A  5003               	movf	fputc@fp^0,w,c
  7415  00285C  26D9               	addwf	fsr2l,f,c
  7416  00285E  5004               	movf	(fputc@fp+1)^0,w,c
  7417  002860  22DA               	addwfc	fsr2h,f,c
  7418  002862  50DE               	movf	postinc2,w,c
  7419  002864  10DE               	iorwf	postinc2,w,c
  7420  002866  B4D8               	btfsc	status,2,c
  7421  002868  EF38  F014         	goto	u2111
  7422  00286C  EF3A  F014         	goto	u2110
  7423  002870                     u2111:
  7424  002870  EF55  F014         	goto	l2524
  7425  002874                     u2110:
  7426  002874  EE20 F004          	lfsr	2,4
  7427  002878  5003               	movf	fputc@fp^0,w,c
  7428  00287A  26D9               	addwf	fsr2l,f,c
  7429  00287C  5004               	movf	(fputc@fp+1)^0,w,c
  7430  00287E  22DA               	addwfc	fsr2h,f,c
  7431  002880  EE10 F002          	lfsr	1,2
  7432  002884  5003               	movf	fputc@fp^0,w,c
  7433  002886  26E1               	addwf	fsr1l,f,c
  7434  002888  5004               	movf	(fputc@fp+1)^0,w,c
  7435  00288A  22E2               	addwfc	fsr1h,f,c
  7436  00288C  50DE               	movf	postinc2,w,c
  7437  00288E  5CE6               	subwf	postinc1,w,c
  7438  002890  50E6               	movf	postinc1,w,c
  7439  002892  0A80               	xorlw	128
  7440  002894  6E09               	movwf	(??_fputc+4)^0,c
  7441  002896  50DE               	movf	postinc2,w,c
  7442  002898  0A80               	xorlw	128
  7443  00289A  5809               	subwfb	(??_fputc+4)^0,w,c
  7444  00289C  B0D8               	btfsc	status,0,c
  7445  00289E  EF53  F014         	goto	u2121
  7446  0028A2  EF55  F014         	goto	u2120
  7447  0028A6                     u2121:
  7448  0028A6  EF78  F014         	goto	l1213
  7449  0028AA                     u2120:
  7450  0028AA                     l2524:
  7451  0028AA  EE20 F002          	lfsr	2,2
  7452  0028AE  5003               	movf	fputc@fp^0,w,c
  7453  0028B0  26D9               	addwf	fsr2l,f,c
  7454  0028B2  5004               	movf	(fputc@fp+1)^0,w,c
  7455  0028B4  22DA               	addwfc	fsr2h,f,c
  7456  0028B6  CFDE F005          	movff	postinc2,??_fputc
  7457  0028BA  CFDD F006          	movff	postdec2,??_fputc+1
  7458  0028BE  C003  FFD9         	movff	fputc@fp,fsr2l
  7459  0028C2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7460  0028C6  CFDE F007          	movff	postinc2,??_fputc+2
  7461  0028CA  CFDD F008          	movff	postdec2,??_fputc+3
  7462  0028CE  5005               	movf	??_fputc^0,w,c
  7463  0028D0  2407               	addwf	(??_fputc+2)^0,w,c
  7464  0028D2  6ED9               	movwf	fsr2l,c
  7465  0028D4  5006               	movf	(??_fputc+1)^0,w,c
  7466  0028D6  2008               	addwfc	(??_fputc+3)^0,w,c
  7467  0028D8  6EDA               	movwf	fsr2h,c
  7468  0028DA  C001  FFDF         	movff	fputc@c,indf2
  7469  0028DE  EE20 F002          	lfsr	2,2
  7470  0028E2  5003               	movf	fputc@fp^0,w,c
  7471  0028E4  26D9               	addwf	fsr2l,f,c
  7472  0028E6  5004               	movf	(fputc@fp+1)^0,w,c
  7473  0028E8  22DA               	addwfc	fsr2h,f,c
  7474  0028EA  2ADE               	incf	postinc2,f,c
  7475  0028EC  0E00               	movlw	0
  7476  0028EE  22DD               	addwfc	postdec2,f,c
  7477  0028F0                     l1213:
  7478  0028F0  0012               	return		;funcret
  7479  0028F2                     __end_of_fputc:
  7480                           	callstack 0
  7481                           
  7482 ;; *************** function _putch *****************
  7483 ;; Defined at:
  7484 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  c               1    wreg     unsigned char 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  c               1    0[COMRAM] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		wreg
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7498 ;;      Params:         0       0       0       0       0       0       0       0       0
  7499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7501 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_fputc
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text32
  7512  0032D0                     __ptext32:
  7513                           	callstack 0
  7514  0032D0                     _putch:
  7515                           	callstack 22
  7516  0032D0  0012               	return		;funcret
  7517  0032D2                     __end_of_putch:
  7518                           	callstack 0
  7519                           
  7520 ;; *************** function _RTC_Read_Clock *****************
  7521 ;; Defined at:
  7522 ;;		line 235 in file "Controler.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  read_clock_a    1    wreg     unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, status,2, status,0, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0
  7537 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7538 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7539 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7540 ;;Total ram usage:        2 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    3
  7543 ;; This function calls:
  7544 ;;		_I2C_Read
  7545 ;;		_I2C_Repeated_Start
  7546 ;;		_I2C_Start
  7547 ;;		_I2C_Write
  7548 ;; This function is called by:
  7549 ;;		_RTC
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text33
  7554  002EB6                     __ptext33:
  7555                           	callstack 0
  7556  002EB6                     _RTC_Read_Clock:
  7557                           	callstack 26
  7558                           
  7559                           ;incstack = 0
  7560                           ;RTC_Read_Clock@read_clock_address stored from wreg
  7561  002EB6  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  7562  002EB8                     
  7563                           ;Controler.c: 236:     I2C_Start(0xD0);
  7564  002EB8  0ED0               	movlw	208
  7565  002EBA  EC8D  F018         	call	_I2C_Start
  7566                           
  7567                           ;Controler.c: 237:     I2C_Write(read_clock_address);
  7568  002EBE  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  7569  002EC0  ECF7  F018         	call	_I2C_Write
  7570                           
  7571                           ;Controler.c: 238:     I2C_Repeated_Start(0xD1);
  7572  002EC4  0ED1               	movlw	209
  7573  002EC6  ECA4  F018         	call	_I2C_Repeated_Start
  7574  002ECA                     
  7575                           ;Controler.c: 239:     sec = I2C_Read(0);
  7576  002ECA  0E00               	movlw	0
  7577  002ECC  EC1D  F018         	call	_I2C_Read
  7578  002ED0  6E03               	movwf	??_RTC_Read_Clock^0,c
  7579  002ED2  5003               	movf	??_RTC_Read_Clock^0,w,c
  7580  002ED4  0100               	movlb	0	; () banked
  7581  002ED6  6FEF               	movwf	_sec& (0+255),b
  7582  002ED8  6BF0               	clrf	(_sec+1)& (0+255),b
  7583  002EDA                     
  7584                           ; BSR set to: 0
  7585                           ;Controler.c: 240:     min = I2C_Read(0);
  7586  002EDA  0E00               	movlw	0
  7587  002EDC  EC1D  F018         	call	_I2C_Read
  7588  002EE0  6E03               	movwf	??_RTC_Read_Clock^0,c
  7589  002EE2  5003               	movf	??_RTC_Read_Clock^0,w,c
  7590  002EE4  0100               	movlb	0	; () banked
  7591  002EE6  6FED               	movwf	_min& (0+255),b
  7592  002EE8  6BEE               	clrf	(_min+1)& (0+255),b
  7593  002EEA                     
  7594                           ; BSR set to: 0
  7595                           ;Controler.c: 241:     hour = I2C_Read(1);
  7596  002EEA  0E01               	movlw	1
  7597  002EEC  EC1D  F018         	call	_I2C_Read
  7598  002EF0  6E03               	movwf	??_RTC_Read_Clock^0,c
  7599  002EF2  5003               	movf	??_RTC_Read_Clock^0,w,c
  7600  002EF4  0100               	movlb	0	; () banked
  7601  002EF6  6FEB               	movwf	_hour& (0+255),b
  7602  002EF8  6BEC               	clrf	(_hour+1)& (0+255),b
  7603  002EFA                     
  7604                           ; BSR set to: 0
  7605  002EFA  0012               	return		;funcret
  7606  002EFC                     __end_of_RTC_Read_Clock:
  7607                           	callstack 0
  7608                           
  7609 ;; *************** function _I2C_Start *****************
  7610 ;; Defined at:
  7611 ;;		line 81 in file "./I2C_Master_File_3.h"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  slave_write_    1    wreg     unsigned char 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  slave_write_    1    1[COMRAM] unsigned char 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      unsigned char 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2, cstack
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7625 ;;      Params:         0       0       0       0       0       0       0       0       0
  7626 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7628 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7629 ;;Total ram usage:        1 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    2
  7632 ;; This function calls:
  7633 ;;		_I2C_Write
  7634 ;; This function is called by:
  7635 ;;		_RTC_Read_Clock
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text34
  7640  00311A                     __ptext34:
  7641                           	callstack 0
  7642  00311A                     _I2C_Start:
  7643                           	callstack 26
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;incstack = 0
  7647                           ;I2C_Start@slave_write_address stored from wreg
  7648  00311A  6E02               	movwf	I2C_Start@slave_write_address^0,c
  7649  00311C                     
  7650                           ;./I2C_Master_File_3.h: 82:     SSPCON2bits.SEN=1;
  7651  00311C  80C5               	bsf	197,0,c	;volatile
  7652  00311E                     l226:
  7653  00311E  B0C5               	btfsc	197,0,c	;volatile
  7654  003120  EF94  F018         	goto	u2971
  7655  003124  EF96  F018         	goto	u2970
  7656  003128                     u2971:
  7657  003128  EF8F  F018         	goto	l226
  7658  00312C                     u2970:
  7659  00312C                     
  7660                           ;./I2C_Master_File_3.h: 84:  SSPIF=0;
  7661  00312C  969E               	bcf	3998,3,c	;volatile
  7662                           
  7663                           ;./I2C_Master_File_3.h: 85:     if(!SSPSTATbits.S)
  7664  00312E  B6C7               	btfsc	199,3,c	;volatile
  7665  003130  EF9C  F018         	goto	u2981
  7666  003134  EF9E  F018         	goto	u2980
  7667  003138                     u2981:
  7668  003138  EFA0  F018         	goto	l2980
  7669  00313C                     u2980:
  7670  00313C  EFA3  F018         	goto	l230
  7671  003140                     l2980:
  7672                           
  7673                           ;./I2C_Master_File_3.h: 87:     return (I2C_Write(slave_write_address));;	Return value o
      +                          f _I2C_Start is never used
  7674  003140  5002               	movf	I2C_Start@slave_write_address^0,w,c
  7675  003142  ECF7  F018         	call	_I2C_Write
  7676  003146                     l230:
  7677  003146  0012               	return		;funcret
  7678  003148                     __end_of_I2C_Start:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function _I2C_Repeated_Start *****************
  7682 ;; Defined at:
  7683 ;;		line 90 in file "./I2C_Master_File_3.h"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  slave_read_a    1    wreg     unsigned char 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      unsigned char 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7697 ;;      Params:         0       0       0       0       0       0       0       0       0
  7698 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7700 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7701 ;;Total ram usage:        1 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    2
  7704 ;; This function calls:
  7705 ;;		_I2C_Write
  7706 ;; This function is called by:
  7707 ;;		_RTC_Read_Clock
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text35
  7712  003148                     __ptext35:
  7713                           	callstack 0
  7714  003148                     _I2C_Repeated_Start:
  7715                           	callstack 26
  7716                           
  7717                           ;incstack = 0
  7718                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  7719  003148  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  7720  00314A                     
  7721                           ;./I2C_Master_File_3.h: 91:     RSEN = 1;
  7722  00314A  82C5               	bsf	4037,1,c	;volatile
  7723  00314C                     l233:
  7724  00314C  B2C5               	btfsc	4037,1,c	;volatile
  7725  00314E  EFAB  F018         	goto	u2991
  7726  003152  EFAD  F018         	goto	u2990
  7727  003156                     u2991:
  7728  003156  EFA6  F018         	goto	l233
  7729  00315A                     u2990:
  7730  00315A                     
  7731                           ;./I2C_Master_File_3.h: 93:     SSPIF = 0;
  7732  00315A  969E               	bcf	3998,3,c	;volatile
  7733                           
  7734                           ;./I2C_Master_File_3.h: 94:  if(!SSPSTATbits.S)
  7735  00315C  B6C7               	btfsc	199,3,c	;volatile
  7736  00315E  EFB3  F018         	goto	u3001
  7737  003162  EFB5  F018         	goto	u3000
  7738  003166                     u3001:
  7739  003166  EFB7  F018         	goto	l2988
  7740  00316A                     u3000:
  7741  00316A  EFBA  F018         	goto	l237
  7742  00316E                     l2988:
  7743                           
  7744                           ;./I2C_Master_File_3.h: 96:     I2C_Write(slave_read_address);
  7745  00316E  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  7746  003170  ECF7  F018         	call	_I2C_Write
  7747  003174                     l237:
  7748  003174  0012               	return		;funcret
  7749  003176                     __end_of_I2C_Repeated_Start:
  7750                           	callstack 0
  7751                           
  7752 ;; *************** function _I2C_Write *****************
  7753 ;; Defined at:
  7754 ;;		line 110 in file "./I2C_Master_File_3.h"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  data            1    wreg     unsigned char 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;  data            1    0[COMRAM] unsigned char 
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      unsigned char 
  7761 ;; Registers used:
  7762 ;;		wreg, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7768 ;;      Params:         0       0       0       0       0       0       0       0       0
  7769 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7771 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7772 ;;Total ram usage:        1 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    1
  7775 ;; This function calls:
  7776 ;;		_I2C_Ready
  7777 ;; This function is called by:
  7778 ;;		_I2C_Start
  7779 ;;		_I2C_Repeated_Start
  7780 ;;		_RTC_Read_Clock
  7781 ;;		_I2C_Start_Wait
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text36
  7786  0031EE                     __ptext36:
  7787                           	callstack 0
  7788  0031EE                     _I2C_Write:
  7789                           	callstack 27
  7790                           
  7791                           ;incstack = 0
  7792                           ;I2C_Write@data stored from wreg
  7793  0031EE  6E01               	movwf	I2C_Write@data^0,c
  7794  0031F0                     
  7795                           ;./I2C_Master_File_3.h: 111:       SSPBUF = data;
  7796  0031F0  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  7797  0031F4                     
  7798                           ;./I2C_Master_File_3.h: 112:       I2C_Ready();
  7799  0031F4  EC5B  F019         	call	_I2C_Ready	;wreg free
  7800  0031F8                     
  7801                           ;./I2C_Master_File_3.h: 113:       if (ACKSTAT)
  7802  0031F8  ACC5               	btfss	4037,6,c	;volatile
  7803  0031FA  EF01  F019         	goto	u2841
  7804  0031FE  EF03  F019         	goto	u2840
  7805  003202                     u2841:
  7806  003202  EF06  F019         	goto	l2876
  7807  003206                     u2840:
  7808  003206                     
  7809                           ;./I2C_Master_File_3.h: 114:         return 1;
  7810  003206  0E01               	movlw	1
  7811  003208  EF07  F019         	goto	l250
  7812  00320C                     l2876:
  7813                           
  7814                           ;./I2C_Master_File_3.h: 116:         return 2;
  7815  00320C  0E02               	movlw	2
  7816  00320E                     l250:
  7817  00320E  0012               	return		;funcret
  7818  003210                     __end_of_I2C_Write:
  7819                           	callstack 0
  7820                           
  7821 ;; *************** function _I2C_Read *****************
  7822 ;; Defined at:
  7823 ;;		line 31 in file "./I2C_Master_File_3.h"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  flag            1    wreg     unsigned char 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  flag            1    0[COMRAM] unsigned char 
  7828 ;;  buffer          1    1[COMRAM] unsigned char 
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      unsigned char 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0
  7839 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7841 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7842 ;;Total ram usage:        2 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    1
  7845 ;; This function calls:
  7846 ;;		_I2C_Ack
  7847 ;;		_I2C_Nack
  7848 ;;		_I2C_Ready
  7849 ;; This function is called by:
  7850 ;;		_RTC_Read_Clock
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text37
  7855  00303A                     __ptext37:
  7856                           	callstack 0
  7857  00303A                     _I2C_Read:
  7858                           	callstack 27
  7859                           
  7860                           ;incstack = 0
  7861                           ;I2C_Read@flag stored from wreg
  7862  00303A  6E01               	movwf	I2C_Read@flag^0,c
  7863  00303C                     
  7864                           ;./I2C_Master_File_3.h: 32:         char buffer;;./I2C_Master_File_3.h: 33:         RCEN
      +                           = 1;
  7865  00303C  86C5               	bsf	4037,3,c	;volatile
  7866  00303E                     l198:
  7867  00303E  A0C7               	btfss	199,0,c	;volatile
  7868  003040  EF24  F018         	goto	u2951
  7869  003044  EF26  F018         	goto	u2950
  7870  003048                     u2951:
  7871  003048  EF1F  F018         	goto	l198
  7872  00304C                     u2950:
  7873  00304C                     
  7874                           ;./I2C_Master_File_3.h: 36:         buffer = SSPBUF;
  7875  00304C  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  7876  003050                     
  7877                           ;./I2C_Master_File_3.h: 38:         if(flag==0)
  7878  003050  5001               	movf	I2C_Read@flag^0,w,c
  7879  003052  A4D8               	btfss	status,2,c
  7880  003054  EF2E  F018         	goto	u2961
  7881  003058  EF30  F018         	goto	u2960
  7882  00305C                     u2961:
  7883  00305C  EF34  F018         	goto	l2970
  7884  003060                     u2960:
  7885  003060                     
  7886                           ;./I2C_Master_File_3.h: 39:             I2C_Ack();
  7887  003060  EC47  F019         	call	_I2C_Ack	;wreg free
  7888  003064  EF36  F018         	goto	l202
  7889  003068                     l2970:
  7890                           
  7891                           ;./I2C_Master_File_3.h: 41:             I2C_Nack();
  7892  003068  EC3D  F019         	call	_I2C_Nack	;wreg free
  7893  00306C                     l202:
  7894                           
  7895                           ;./I2C_Master_File_3.h: 42:         I2C_Ready();
  7896  00306C  EC5B  F019         	call	_I2C_Ready	;wreg free
  7897  003070                     
  7898                           ;./I2C_Master_File_3.h: 43:         return(buffer);
  7899  003070  5002               	movf	I2C_Read@buffer^0,w,c
  7900  003072  0012               	return		;funcret
  7901  003074                     __end_of_I2C_Read:
  7902                           	callstack 0
  7903                           
  7904 ;; *************** function _I2C_Ready *****************
  7905 ;; Defined at:
  7906 ;;		line 59 in file "./I2C_Master_File_3.h"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		None
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7923 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7924 ;;Total ram usage:        0 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_I2C_Read
  7930 ;;		_I2C_Write
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text38
  7935  0032B6                     __ptext38:
  7936                           	callstack 0
  7937  0032B6                     _I2C_Ready:
  7938                           	callstack 27
  7939  0032B6                     l209:
  7940  0032B6  A69E               	btfss	3998,3,c	;volatile
  7941  0032B8  EF60  F019         	goto	u2441
  7942  0032BC  EF62  F019         	goto	u2440
  7943  0032C0                     u2441:
  7944  0032C0  EF5B  F019         	goto	l209
  7945  0032C4                     u2440:
  7946  0032C4                     
  7947                           ;./I2C_Master_File_3.h: 61:     SSPIF=0;
  7948  0032C4  969E               	bcf	3998,3,c	;volatile
  7949  0032C6  0012               	return		;funcret
  7950  0032C8                     __end_of_I2C_Ready:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function _I2C_Nack *****************
  7954 ;; Defined at:
  7955 ;;		line 125 in file "./I2C_Master_File_3.h"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;		None
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		None
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7969 ;;      Params:         0       0       0       0       0       0       0       0       0
  7970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7973 ;;Total ram usage:        0 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; This function calls:
  7976 ;;		Nothing
  7977 ;; This function is called by:
  7978 ;;		_I2C_Read
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text39
  7983  00327A                     __ptext39:
  7984                           	callstack 0
  7985  00327A                     _I2C_Nack:
  7986                           	callstack 27
  7987  00327A                     
  7988                           ;./I2C_Master_File_3.h: 126:     ACKDT=1;
  7989  00327A  8AC5               	bsf	4037,5,c	;volatile
  7990                           
  7991                           ;./I2C_Master_File_3.h: 127:  ACKEN=1;
  7992  00327C  88C5               	bsf	4037,4,c	;volatile
  7993  00327E                     l260:
  7994  00327E  B8C5               	btfsc	4037,4,c	;volatile
  7995  003280  EF44  F019         	goto	u2831
  7996  003284  EF46  F019         	goto	u2830
  7997  003288                     u2831:
  7998  003288  EF3F  F019         	goto	l260
  7999  00328C                     u2830:
  8000  00328C  0012               	return		;funcret
  8001  00328E                     __end_of_I2C_Nack:
  8002                           	callstack 0
  8003                           
  8004 ;; *************** function _I2C_Ack *****************
  8005 ;; Defined at:
  8006 ;;		line 119 in file "./I2C_Master_File_3.h"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;		None
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      void 
  8013 ;; Registers used:
  8014 ;;		None
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8020 ;;      Params:         0       0       0       0       0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8023 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8024 ;;Total ram usage:        0 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_I2C_Read
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text40
  8034  00328E                     __ptext40:
  8035                           	callstack 0
  8036  00328E                     _I2C_Ack:
  8037                           	callstack 27
  8038  00328E                     
  8039                           ;./I2C_Master_File_3.h: 120:     ACKDT=0;
  8040  00328E  9AC5               	bcf	4037,5,c	;volatile
  8041                           
  8042                           ;./I2C_Master_File_3.h: 121:  ACKEN=1;
  8043  003290  88C5               	bsf	4037,4,c	;volatile
  8044  003292                     l254:
  8045  003292  B8C5               	btfsc	4037,4,c	;volatile
  8046  003294  EF4E  F019         	goto	u2821
  8047  003298  EF50  F019         	goto	u2820
  8048  00329C                     u2821:
  8049  00329C  EF49  F019         	goto	l254
  8050  0032A0                     u2820:
  8051  0032A0  0012               	return		;funcret
  8052  0032A2                     __end_of_I2C_Ack:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _LCD_String_xy *****************
  8056 ;; Defined at:
  8057 ;;		line 82 in file "LCD_20x4.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  row             1    wreg     unsigned char 
  8060 ;;  pos             1    9[COMRAM] unsigned char 
  8061 ;;  str             2   10[COMRAM] PTR const unsigned char 
  8062 ;;		 -> hours(10), SensorMovimiento@buf(20), STR_6(22), STR_5(22), 
  8063 ;;		 -> STR_4(6), STR_3(6), SensorTemperatura@Temperature(10), STR_1(7), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  row             1   12[COMRAM] unsigned char 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      void 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8075 ;;      Params:         3       0       0       0       0       0       0       0       0
  8076 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8078 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8079 ;;Total ram usage:        4 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; Hardware stack levels required when called:    3
  8082 ;; This function calls:
  8083 ;;		_LCD_Command
  8084 ;;		_LCD_String
  8085 ;; This function is called by:
  8086 ;;		_SensorTemperatura
  8087 ;;		_SensorLuz
  8088 ;;		_SensorMovimiento
  8089 ;;		_RTC
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text41
  8094  002BA4                     __ptext41:
  8095                           	callstack 0
  8096  002BA4                     _LCD_String_xy:
  8097                           	callstack 26
  8098                           
  8099                           ;incstack = 0
  8100                           ;LCD_String_xy@row stored from wreg
  8101  002BA4  6E0D               	movwf	LCD_String_xy@row^0,c
  8102  002BA6                     
  8103                           ;LCD_20x4.c: 82: void LCD_String_xy(char row,char pos,const char *str);LCD_20x4.c: 83: {
      +                          ;LCD_20x4.c: 84:     if (row == 1)
  8104  002BA6  040D               	decf	LCD_String_xy@row^0,w,c
  8105  002BA8  A4D8               	btfss	status,2,c
  8106  002BAA  EFD9  F015         	goto	u3101
  8107  002BAE  EFDB  F015         	goto	u3100
  8108  002BB2                     u3101:
  8109  002BB2  EFE2  F015         	goto	l3020
  8110  002BB6                     u3100:
  8111  002BB6                     
  8112                           ;LCD_20x4.c: 85:   LCD_Command((pos & 0x0F)|0x80);
  8113  002BB6  500A               	movf	LCD_String_xy@pos^0,w,c
  8114  002BB8  0B0F               	andlw	15
  8115  002BBA  0980               	iorlw	128
  8116  002BBC  EC16  F019         	call	_LCD_Command
  8117  002BC0  EF12  F016         	goto	l3032
  8118  002BC4                     l3020:
  8119  002BC4  0E02               	movlw	2
  8120  002BC6  180D               	xorwf	LCD_String_xy@row^0,w,c
  8121  002BC8  A4D8               	btfss	status,2,c
  8122  002BCA  EFE9  F015         	goto	u3111
  8123  002BCE  EFEB  F015         	goto	u3110
  8124  002BD2                     u3111:
  8125  002BD2  EFF2  F015         	goto	l3024
  8126  002BD6                     u3110:
  8127  002BD6                     
  8128                           ;LCD_20x4.c: 87:   LCD_Command((pos & 0x0F)|0xC0);
  8129  002BD6  500A               	movf	LCD_String_xy@pos^0,w,c
  8130  002BD8  0B0F               	andlw	15
  8131  002BDA  09C0               	iorlw	192
  8132  002BDC  EC16  F019         	call	_LCD_Command
  8133  002BE0  EF12  F016         	goto	l3032
  8134  002BE4                     l3024:
  8135  002BE4  0E03               	movlw	3
  8136  002BE6  180D               	xorwf	LCD_String_xy@row^0,w,c
  8137  002BE8  A4D8               	btfss	status,2,c
  8138  002BEA  EFF9  F015         	goto	u3121
  8139  002BEE  EFFB  F015         	goto	u3120
  8140  002BF2                     u3121:
  8141  002BF2  EF02  F016         	goto	l3028
  8142  002BF6                     u3120:
  8143  002BF6                     
  8144                           ;LCD_20x4.c: 89:   LCD_Command((pos & 0x0F)|0x94);
  8145  002BF6  500A               	movf	LCD_String_xy@pos^0,w,c
  8146  002BF8  0B0F               	andlw	15
  8147  002BFA  0994               	iorlw	148
  8148  002BFC  EC16  F019         	call	_LCD_Command
  8149  002C00  EF12  F016         	goto	l3032
  8150  002C04                     l3028:
  8151  002C04  0E04               	movlw	4
  8152  002C06  180D               	xorwf	LCD_String_xy@row^0,w,c
  8153  002C08  A4D8               	btfss	status,2,c
  8154  002C0A  EF09  F016         	goto	u3131
  8155  002C0E  EF0B  F016         	goto	u3130
  8156  002C12                     u3131:
  8157  002C12  EF12  F016         	goto	l67
  8158  002C16                     u3130:
  8159  002C16                     
  8160                           ;LCD_20x4.c: 91:   LCD_Command((pos & 0x0F)|0xD4);
  8161  002C16  500A               	movf	LCD_String_xy@pos^0,w,c
  8162  002C18  0B0F               	andlw	15
  8163  002C1A  09D4               	iorlw	212
  8164  002C1C  EC16  F019         	call	_LCD_Command
  8165  002C20  EF12  F016         	goto	l3032
  8166  002C24                     l67:
  8167  002C24                     l3032:
  8168                           
  8169                           ;LCD_20x4.c: 92:  LCD_String(str);
  8170  002C24  C00B  F008         	movff	LCD_String_xy@str,LCD_String@msg
  8171  002C28  C00C  F009         	movff	LCD_String_xy@str+1,LCD_String@msg+1
  8172  002C2C  ECBA  F016         	call	_LCD_String	;wreg free
  8173  002C30  0012               	return		;funcret
  8174  002C32                     __end_of_LCD_String_xy:
  8175                           	callstack 0
  8176                           
  8177 ;; *************** function _LCD_String *****************
  8178 ;; Defined at:
  8179 ;;		line 72 in file "LCD_20x4.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  8182 ;;		 -> hours(10), mins(10), secs(10), SensorMovimiento@buf(20), 
  8183 ;;		 -> STR_6(22), STR_5(22), STR_4(6), STR_3(6), 
  8184 ;;		 -> SensorTemperatura@Temperature(10), STR_1(7), 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8196 ;;      Params:         2       0       0       0       0       0       0       0       0
  8197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8199 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8200 ;;Total ram usage:        2 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    2
  8203 ;; This function calls:
  8204 ;;		_LCD_Char
  8205 ;; This function is called by:
  8206 ;;		_LCD_String_xy
  8207 ;;		_RTC
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text42
  8212  002D74                     __ptext42:
  8213                           	callstack 0
  8214  002D74                     _LCD_String:
  8215                           	callstack 26
  8216  002D74                     
  8217                           ;LCD_20x4.c: 72: void LCD_String(const char *msg);LCD_20x4.c: 73: {;LCD_20x4.c: 74:  whi
      +                          le((*msg)!=0)
  8218  002D74  EFD0  F016         	goto	l2962
  8219  002D78                     l2958:
  8220                           
  8221                           ;LCD_20x4.c: 75:  {;LCD_20x4.c: 76:    LCD_Char(*msg);
  8222  002D78  C008  FFF6         	movff	LCD_String@msg,tblptrl
  8223  002D7C  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  8224  002D80  6AF8               	clrf	tblptru,c
  8225  002D82  0E07               	movlw	(high __ramtop+-1)
  8226  002D84  64F7               	cpfsgt	tblptrh,c
  8227  002D86  D003               	bra	u2927
  8228  002D88  0008               	tblrd		*
  8229  002D8A  50F5               	movf	tablat,w,c
  8230  002D8C  D005               	bra	u2920
  8231  002D8E                     u2927:
  8232  002D8E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8233  002D92  CFF7 FFE2          	movff	tblptrh,fsr1h
  8234  002D96  50E7               	movf	indf1,w,c
  8235  002D98                     u2920:
  8236  002D98  EC08  F019         	call	_LCD_Char
  8237  002D9C                     
  8238                           ;LCD_20x4.c: 77:    msg++;
  8239  002D9C  4A08               	infsnz	LCD_String@msg^0,f,c
  8240  002D9E  2A09               	incf	(LCD_String@msg+1)^0,f,c
  8241  002DA0                     l2962:
  8242                           
  8243                           ;LCD_20x4.c: 74:  while((*msg)!=0)
  8244  002DA0  C008  FFF6         	movff	LCD_String@msg,tblptrl
  8245  002DA4  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  8246  002DA8  6AF8               	clrf	tblptru,c
  8247  002DAA  0E07               	movlw	(high __ramtop+-1)
  8248  002DAC  64F7               	cpfsgt	tblptrh,c
  8249  002DAE  D003               	bra	u2937
  8250  002DB0  0008               	tblrd		*
  8251  002DB2  50F5               	movf	tablat,w,c
  8252  002DB4  D005               	bra	u2930
  8253  002DB6                     u2937:
  8254  002DB6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8255  002DBA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8256  002DBE  50E7               	movf	indf1,w,c
  8257  002DC0                     u2930:
  8258  002DC0  0900               	iorlw	0
  8259  002DC2  A4D8               	btfss	status,2,c
  8260  002DC4  EFE6  F016         	goto	u2941
  8261  002DC8  EFE8  F016         	goto	u2940
  8262  002DCC                     u2941:
  8263  002DCC  EFBC  F016         	goto	l2958
  8264  002DD0                     u2940:
  8265  002DD0  0012               	return		;funcret
  8266  002DD2                     __end_of_LCD_String:
  8267                           	callstack 0
  8268                           
  8269 ;; *************** function _LCD_Char *****************
  8270 ;; Defined at:
  8271 ;;		line 60 in file "LCD_20x4.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  char_data       1    wreg     unsigned char 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  char_data       1    6[COMRAM] unsigned char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8285 ;;      Params:         0       0       0       0       0       0       0       0       0
  8286 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8288 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8289 ;;Total ram usage:        1 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    1
  8292 ;; This function calls:
  8293 ;;		_MSdelay
  8294 ;; This function is called by:
  8295 ;;		_LCD_String
  8296 ;;		_LCD_Custom_Char
  8297 ;;		_SensorTemperatura
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text43
  8302  003210                     __ptext43:
  8303                           	callstack 0
  8304  003210                     _LCD_Char:
  8305                           	callstack 26
  8306                           
  8307                           ;incstack = 0
  8308                           ;LCD_Char@char_data stored from wreg
  8309  003210  6E07               	movwf	LCD_Char@char_data^0,c
  8310  003212                     
  8311                           ;LCD_20x4.c: 60: void LCD_Char(char char_data);LCD_20x4.c: 61: {;LCD_20x4.c: 62:  LATD =
      +                           char_data;
  8312  003212  C007  FF8C         	movff	LCD_Char@char_data,3980	;volatile
  8313  003216                     
  8314                           ;LCD_20x4.c: 63:  LATE1 = 1;
  8315  003216  828D               	bsf	3981,1,c	;volatile
  8316  003218                     
  8317                           ;LCD_20x4.c: 65:     LATE2 = 1;
  8318  003218  848D               	bsf	3981,2,c	;volatile
  8319  00321A                     
  8320                           ;LCD_20x4.c: 66:  __nop();
  8321  00321A  F000               	nop	
  8322  00321C                     
  8323                           ;LCD_20x4.c: 67:  LATE2 = 0;
  8324  00321C  948D               	bcf	3981,2,c	;volatile
  8325  00321E                     
  8326                           ;LCD_20x4.c: 68:  MSdelay(3);
  8327  00321E  0E00               	movlw	0
  8328  003220  6E02               	movwf	(MSdelay@val+1)^0,c
  8329  003222  0E03               	movlw	3
  8330  003224  6E01               	movwf	MSdelay@val^0,c
  8331  003226  EC12  F017         	call	_MSdelay	;wreg free
  8332  00322A  0012               	return		;funcret
  8333  00322C                     __end_of_LCD_Char:
  8334                           	callstack 0
  8335                           
  8336 ;; *************** function _I2C_Stop *****************
  8337 ;; Defined at:
  8338 ;;		line 103 in file "./I2C_Master_File_3.h"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      unsigned char 
  8345 ;; Registers used:
  8346 ;;		wreg
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_RTC
  8362 ;;		_I2C_Start_Wait
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text44
  8367  0032A2                     __ptext44:
  8368                           	callstack 0
  8369  0032A2                     _I2C_Stop:
  8370                           	callstack 29
  8371  0032A2                     
  8372                           ;./I2C_Master_File_3.h: 104:     PEN = 1;
  8373  0032A2  84C5               	bsf	4037,2,c	;volatile
  8374  0032A4                     l242:
  8375  0032A4  B4C5               	btfsc	4037,2,c	;volatile
  8376  0032A6  EF57  F019         	goto	u3161
  8377  0032AA  EF59  F019         	goto	u3160
  8378  0032AE                     u3161:
  8379  0032AE  EF52  F019         	goto	l242
  8380  0032B2                     u3160:
  8381  0032B2                     
  8382                           ;./I2C_Master_File_3.h: 106:     if(!SSPSTATbits.P);
  8383  0032B2  50C7               	movf	199,w,c	;volatile
  8384  0032B4  0012               	return		;funcret
  8385  0032B6                     __end_of_I2C_Stop:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _LCD_Init *****************
  8389 ;; Defined at:
  8390 ;;		line 28 in file "LCD_20x4.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    2
  8411 ;; This function calls:
  8412 ;;		_LCD_Command
  8413 ;;		_MSdelay
  8414 ;; This function is called by:
  8415 ;;		_main
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text45
  8420  003176                     __ptext45:
  8421                           	callstack 0
  8422  003176                     _LCD_Init:
  8423                           	callstack 28
  8424  003176                     
  8425                           ;LCD_20x4.c: 30:     TRISE = 0;
  8426  003176  0E00               	movlw	0
  8427  003178  6E96               	movwf	150,c	;volatile
  8428                           
  8429                           ;LCD_20x4.c: 31:  TRISD = 0x00;
  8430  00317A  0E00               	movlw	0
  8431  00317C  6E95               	movwf	149,c	;volatile
  8432  00317E                     
  8433                           ;LCD_20x4.c: 33:  MSdelay(20);
  8434  00317E  0E00               	movlw	0
  8435  003180  6E02               	movwf	(MSdelay@val+1)^0,c
  8436  003182  0E14               	movlw	20
  8437  003184  6E01               	movwf	MSdelay@val^0,c
  8438  003186  EC12  F017         	call	_MSdelay	;wreg free
  8439  00318A                     
  8440                           ;LCD_20x4.c: 34:  LCD_Command(0x38);
  8441  00318A  0E38               	movlw	56
  8442  00318C  EC16  F019         	call	_LCD_Command
  8443  003190                     
  8444                           ;LCD_20x4.c: 35:     LCD_Command(0x01);
  8445  003190  0E01               	movlw	1
  8446  003192  EC16  F019         	call	_LCD_Command
  8447  003196                     
  8448                           ;LCD_20x4.c: 36:     LCD_Command(0x0c);
  8449  003196  0E0C               	movlw	12
  8450  003198  EC16  F019         	call	_LCD_Command
  8451  00319C                     
  8452                           ;LCD_20x4.c: 37:     LCD_Command(0x06);
  8453  00319C  0E06               	movlw	6
  8454  00319E  EC16  F019         	call	_LCD_Command
  8455  0031A2  0012               	return		;funcret
  8456  0031A4                     __end_of_LCD_Init:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function _LCD_Command *****************
  8460 ;; Defined at:
  8461 ;;		line 49 in file "LCD_20x4.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  cmd             1    wreg     unsigned char 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  cmd             1    6[COMRAM] unsigned char 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8475 ;;      Params:         0       0       0       0       0       0       0       0       0
  8476 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8478 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8479 ;;Total ram usage:        1 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    1
  8482 ;; This function calls:
  8483 ;;		_MSdelay
  8484 ;; This function is called by:
  8485 ;;		_LCD_Init
  8486 ;;		_LCD_String_xy
  8487 ;;		_LCD_Custom_Char
  8488 ;;		_SensorTemperatura
  8489 ;;		_SensorLuz
  8490 ;;		_LCD_Clear
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text46
  8495  00322C                     __ptext46:
  8496                           	callstack 0
  8497  00322C                     _LCD_Command:
  8498                           	callstack 27
  8499                           
  8500                           ;incstack = 0
  8501                           ;LCD_Command@cmd stored from wreg
  8502  00322C  6E07               	movwf	LCD_Command@cmd^0,c
  8503  00322E                     
  8504                           ;LCD_20x4.c: 49: void LCD_Command(char cmd );LCD_20x4.c: 50: {;LCD_20x4.c: 51:  LATD = c
      +                          md;
  8505  00322E  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  8506  003232                     
  8507                           ;LCD_20x4.c: 52:  LATE1 = 0;
  8508  003232  928D               	bcf	3981,1,c	;volatile
  8509  003234                     
  8510                           ;LCD_20x4.c: 54:     LATE2 = 1;
  8511  003234  848D               	bsf	3981,2,c	;volatile
  8512  003236                     
  8513                           ;LCD_20x4.c: 55:  __nop();
  8514  003236  F000               	nop	
  8515  003238                     
  8516                           ;LCD_20x4.c: 56:  LATE2 = 0;
  8517  003238  948D               	bcf	3981,2,c	;volatile
  8518  00323A                     
  8519                           ;LCD_20x4.c: 57:  MSdelay(3);
  8520  00323A  0E00               	movlw	0
  8521  00323C  6E02               	movwf	(MSdelay@val+1)^0,c
  8522  00323E  0E03               	movlw	3
  8523  003240  6E01               	movwf	MSdelay@val^0,c
  8524  003242  EC12  F017         	call	_MSdelay	;wreg free
  8525  003246  0012               	return		;funcret
  8526  003248                     __end_of_LCD_Command:
  8527                           	callstack 0
  8528                           
  8529 ;; *************** function _MSdelay *****************
  8530 ;; Defined at:
  8531 ;;		line 108 in file "LCD_20x4.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  val             2    0[COMRAM] unsigned int 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  j               2    4[COMRAM] unsigned int 
  8536 ;;  i               2    2[COMRAM] unsigned int 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8546 ;;      Params:         2       0       0       0       0       0       0       0       0
  8547 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8549 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8550 ;;Total ram usage:        6 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_LCD_Init
  8556 ;;		_LCD_Command
  8557 ;;		_LCD_Char
  8558 ;;		_LCD_Clear
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text47
  8563  002E24                     __ptext47:
  8564                           	callstack 0
  8565  002E24                     _MSdelay:
  8566                           	callstack 26
  8567  002E24                     
  8568                           ;LCD_20x4.c: 108: void MSdelay(unsigned int val);LCD_20x4.c: 109: {;LCD_20x4.c: 110:    
      +                            unsigned int i,j;;LCD_20x4.c: 111:         for(i=0;i<=val;i++)
  8569  002E24  0E00               	movlw	0
  8570  002E26  6E04               	movwf	(MSdelay@i+1)^0,c
  8571  002E28  0E00               	movlw	0
  8572  002E2A  6E03               	movwf	MSdelay@i^0,c
  8573  002E2C  EF2B  F017         	goto	l2688
  8574  002E30                     l2676:
  8575                           
  8576                           ;LCD_20x4.c: 112:             for(j=0;j<165;j++);
  8577  002E30  0E00               	movlw	0
  8578  002E32  6E06               	movwf	(MSdelay@j+1)^0,c
  8579  002E34  0E00               	movlw	0
  8580  002E36  6E05               	movwf	MSdelay@j^0,c
  8581  002E38                     l2682:
  8582  002E38  4A05               	infsnz	MSdelay@j^0,f,c
  8583  002E3A  2A06               	incf	(MSdelay@j+1)^0,f,c
  8584  002E3C  5006               	movf	(MSdelay@j+1)^0,w,c
  8585  002E3E  E109               	bnz	u2420
  8586  002E40  0EA5               	movlw	165
  8587  002E42  5C05               	subwf	MSdelay@j^0,w,c
  8588  002E44  A0D8               	btfss	status,0,c
  8589  002E46  EF27  F017         	goto	u2421
  8590  002E4A  EF29  F017         	goto	u2420
  8591  002E4E                     u2421:
  8592  002E4E  EF1C  F017         	goto	l2682
  8593  002E52                     u2420:
  8594  002E52  4A03               	infsnz	MSdelay@i^0,f,c
  8595  002E54  2A04               	incf	(MSdelay@i+1)^0,f,c
  8596  002E56                     l2688:
  8597  002E56  5003               	movf	MSdelay@i^0,w,c
  8598  002E58  5C01               	subwf	MSdelay@val^0,w,c
  8599  002E5A  5004               	movf	(MSdelay@i+1)^0,w,c
  8600  002E5C  5802               	subwfb	(MSdelay@val+1)^0,w,c
  8601  002E5E  B0D8               	btfsc	status,0,c
  8602  002E60  EF34  F017         	goto	u2431
  8603  002E64  EF36  F017         	goto	u2430
  8604  002E68                     u2431:
  8605  002E68  EF18  F017         	goto	l2676
  8606  002E6C                     u2430:
  8607  002E6C  0012               	return		;funcret
  8608  002E6E                     __end_of_MSdelay:
  8609                           	callstack 0
  8610                           
  8611 ;; *************** function _I2C_Init *****************
  8612 ;; Defined at:
  8613 ;;		line 46 in file "./I2C_Master_File_3.h"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8627 ;;      Params:         0       0       0       0       0       0       0       0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8630 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_main
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text48
  8641  003248                     __ptext48:
  8642                           	callstack 0
  8643  003248                     _I2C_Init:
  8644                           	callstack 30
  8645  003248                     
  8646                           ;./I2C_Master_File_3.h: 47:     TRISB0 =1;
  8647  003248  8093               	bsf	3987,0,c	;volatile
  8648                           
  8649                           ;./I2C_Master_File_3.h: 48:  TRISB1 =1;
  8650  00324A  8293               	bsf	3987,1,c	;volatile
  8651  00324C                     
  8652                           ;./I2C_Master_File_3.h: 49:  SSPSTAT=80;
  8653  00324C  0E50               	movlw	80
  8654  00324E  6EC7               	movwf	199,c	;volatile
  8655                           
  8656                           ;./I2C_Master_File_3.h: 50:     SSPCON1=0x28;
  8657  003250  0E28               	movlw	40
  8658  003252  6EC6               	movwf	198,c	;volatile
  8659                           
  8660                           ;./I2C_Master_File_3.h: 52:  SSPCON2=0;
  8661  003254  0E00               	movlw	0
  8662  003256  6EC5               	movwf	197,c	;volatile
  8663                           
  8664                           ;./I2C_Master_File_3.h: 53:     SSPADD=((8000000/(4*100000))-1);
  8665  003258  0E13               	movlw	19
  8666  00325A  6EC8               	movwf	200,c	;volatile
  8667  00325C                     
  8668                           ;./I2C_Master_File_3.h: 54:     SSPIE=1;
  8669  00325C  869D               	bsf	3997,3,c	;volatile
  8670  00325E                     
  8671                           ;./I2C_Master_File_3.h: 55:     SSPIF=0;
  8672  00325E  969E               	bcf	3998,3,c	;volatile
  8673  003260  0012               	return		;funcret
  8674  003262                     __end_of_I2C_Init:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function _ADC_Init *****************
  8678 ;; Defined at:
  8679 ;;		line 22 in file "PIC18F4550_ADC_Source_File.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;		None
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  1    wreg      void 
  8686 ;; Registers used:
  8687 ;;		wreg, status,2
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8693 ;;      Params:         0       0       0       0       0       0       0       0       0
  8694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8696 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8697 ;;Total ram usage:        0 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; This function calls:
  8700 ;;		Nothing
  8701 ;; This function is called by:
  8702 ;;		_main
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text49
  8707  003262                     __ptext49:
  8708                           	callstack 0
  8709  003262                     _ADC_Init:
  8710                           	callstack 30
  8711  003262                     
  8712                           ;PIC18F4550_ADC_Source_File.c: 24:     TRISA = 0xff;
  8713  003262  6892               	setf	146,c	;volatile
  8714  003264                     
  8715                           ;PIC18F4550_ADC_Source_File.c: 25:     ADCON0 = 0x85;
  8716  003264  0E85               	movlw	133
  8717  003266  6EC2               	movwf	194,c	;volatile
  8718                           
  8719                           ;PIC18F4550_ADC_Source_File.c: 26:     ADCON1 = 0xC0;
  8720  003268  0EC0               	movlw	192
  8721  00326A  6EC1               	movwf	193,c	;volatile
  8722                           
  8723                           ;PIC18F4550_ADC_Source_File.c: 27:     ADCON2 = 0x92;
  8724  00326C  0E92               	movlw	146
  8725  00326E  6EC0               	movwf	192,c	;volatile
  8726                           
  8727                           ;PIC18F4550_ADC_Source_File.c: 28:     ADRESH = 0;
  8728  003270  0E00               	movlw	0
  8729  003272  6EC4               	movwf	196,c	;volatile
  8730                           
  8731                           ;PIC18F4550_ADC_Source_File.c: 29:     ADRESL = 0;
  8732  003274  0E00               	movlw	0
  8733  003276  6EC3               	movwf	195,c	;volatile
  8734  003278  0012               	return		;funcret
  8735  00327A                     __end_of_ADC_Init:
  8736                           	callstack 0
  8737                           
  8738                           	psect	rparam
  8739  0000                     
  8740                           	psect	idloc
  8741                           
  8742                           ;Config register IDLOC0 @ 0x200000
  8743                           ;	unspecified, using default values
  8744  200000                     	org	2097152
  8745  200000  FF                 	db	255
  8746                           
  8747                           ;Config register IDLOC1 @ 0x200001
  8748                           ;	unspecified, using default values
  8749  200001                     	org	2097153
  8750  200001  FF                 	db	255
  8751                           
  8752                           ;Config register IDLOC2 @ 0x200002
  8753                           ;	unspecified, using default values
  8754  200002                     	org	2097154
  8755  200002  FF                 	db	255
  8756                           
  8757                           ;Config register IDLOC3 @ 0x200003
  8758                           ;	unspecified, using default values
  8759  200003                     	org	2097155
  8760  200003  FF                 	db	255
  8761                           
  8762                           ;Config register IDLOC4 @ 0x200004
  8763                           ;	unspecified, using default values
  8764  200004                     	org	2097156
  8765  200004  FF                 	db	255
  8766                           
  8767                           ;Config register IDLOC5 @ 0x200005
  8768                           ;	unspecified, using default values
  8769  200005                     	org	2097157
  8770  200005  FF                 	db	255
  8771                           
  8772                           ;Config register IDLOC6 @ 0x200006
  8773                           ;	unspecified, using default values
  8774  200006                     	org	2097158
  8775  200006  FF                 	db	255
  8776                           
  8777                           ;Config register IDLOC7 @ 0x200007
  8778                           ;	unspecified, using default values
  8779  200007                     	org	2097159
  8780  200007  FF                 	db	255
  8781                           
  8782                           	psect	config
  8783                           
  8784                           ;Config register CONFIG1L @ 0x300000
  8785                           ;	PLL Prescaler Selection bits
  8786                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8787                           ;	System Clock Postscaler Selection bits
  8788                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8789                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8790                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8791  300000                     	org	3145728
  8792  300000  00                 	db	0
  8793                           
  8794                           ;Config register CONFIG1H @ 0x300001
  8795                           ;	Oscillator Selection bits
  8796                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8797                           ;	Fail-Safe Clock Monitor Enable bit
  8798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8799                           ;	Internal/External Oscillator Switchover bit
  8800                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8801  300001                     	org	3145729
  8802  300001  09                 	db	9
  8803                           
  8804                           ;Config register CONFIG2L @ 0x300002
  8805                           ;	Power-up Timer Enable bit
  8806                           ;	PWRT = OFF, PWRT disabled
  8807                           ;	Brown-out Reset Enable bits
  8808                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8809                           ;	Brown-out Reset Voltage bits
  8810                           ;	BORV = 3, Minimum setting 2.05V
  8811                           ;	USB Voltage Regulator Enable bit
  8812                           ;	VREGEN = OFF, USB voltage regulator disabled
  8813  300002                     	org	3145730
  8814  300002  19                 	db	25
  8815                           
  8816                           ;Config register CONFIG2H @ 0x300003
  8817                           ;	Watchdog Timer Enable bit
  8818                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8819                           ;	Watchdog Timer Postscale Select bits
  8820                           ;	WDTPS = 32768, 1:32768
  8821  300003                     	org	3145731
  8822  300003  1E                 	db	30
  8823                           
  8824                           ; Padding undefined space
  8825  300004                     	org	3145732
  8826  300004  FF                 	db	255
  8827                           
  8828                           ;Config register CONFIG3H @ 0x300005
  8829                           ;	CCP2 MUX bit
  8830                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8831                           ;	PORTB A/D Enable bit
  8832                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8833                           ;	Low-Power Timer 1 Oscillator Enable bit
  8834                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8835                           ;	MCLR Pin Enable bit
  8836                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8837  300005                     	org	3145733
  8838  300005  01                 	db	1
  8839                           
  8840                           ;Config register CONFIG4L @ 0x300006
  8841                           ;	Stack Full/Underflow Reset Enable bit
  8842                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8843                           ;	Single-Supply ICSP Enable bit
  8844                           ;	LVP = OFF, Single-Supply ICSP disabled
  8845                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8846                           ;	ICPRT = OFF, ICPORT disabled
  8847                           ;	Extended Instruction Set Enable bit
  8848                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8849                           ;	Background Debugger Enable bit
  8850                           ;	DEBUG = 0x1, unprogrammed default
  8851  300006                     	org	3145734
  8852  300006  81                 	db	129
  8853                           
  8854                           ; Padding undefined space
  8855  300007                     	org	3145735
  8856  300007  FF                 	db	255
  8857                           
  8858                           ;Config register CONFIG5L @ 0x300008
  8859                           ;	Code Protection bit
  8860                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8861                           ;	Code Protection bit
  8862                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8863                           ;	Code Protection bit
  8864                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8865                           ;	Code Protection bit
  8866                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8867  300008                     	org	3145736
  8868  300008  0F                 	db	15
  8869                           
  8870                           ;Config register CONFIG5H @ 0x300009
  8871                           ;	Boot Block Code Protection bit
  8872                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8873                           ;	Data EEPROM Code Protection bit
  8874                           ;	CPD = OFF, Data EEPROM is not code-protected
  8875  300009                     	org	3145737
  8876  300009  C0                 	db	192
  8877                           
  8878                           ;Config register CONFIG6L @ 0x30000A
  8879                           ;	Write Protection bit
  8880                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8881                           ;	Write Protection bit
  8882                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8883                           ;	Write Protection bit
  8884                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8885                           ;	Write Protection bit
  8886                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8887  30000A                     	org	3145738
  8888  30000A  0F                 	db	15
  8889                           
  8890                           ;Config register CONFIG6H @ 0x30000B
  8891                           ;	Configuration Register Write Protection bit
  8892                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8893                           ;	Boot Block Write Protection bit
  8894                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8895                           ;	Data EEPROM Write Protection bit
  8896                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8897  30000B                     	org	3145739
  8898  30000B  E0                 	db	224
  8899                           
  8900                           ;Config register CONFIG7L @ 0x30000C
  8901                           ;	Table Read Protection bit
  8902                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8903                           ;	Table Read Protection bit
  8904                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8905                           ;	Table Read Protection bit
  8906                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8907                           ;	Table Read Protection bit
  8908                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8909  30000C                     	org	3145740
  8910  30000C  0F                 	db	15
  8911                           
  8912                           ;Config register CONFIG7H @ 0x30000D
  8913                           ;	Boot Block Table Read Protection bit
  8914                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8915  30000D                     	org	3145741
  8916  30000D  40                 	db	64
  8917                           tosu	equ	0xFFF
  8918                           tosh	equ	0xFFE
  8919                           tosl	equ	0xFFD
  8920                           stkptr	equ	0xFFC
  8921                           pclatu	equ	0xFFB
  8922                           pclath	equ	0xFFA
  8923                           pcl	equ	0xFF9
  8924                           tblptru	equ	0xFF8
  8925                           tblptrh	equ	0xFF7
  8926                           tblptrl	equ	0xFF6
  8927                           tablat	equ	0xFF5
  8928                           prodh	equ	0xFF4
  8929                           prodl	equ	0xFF3
  8930                           indf0	equ	0xFEF
  8931                           postinc0	equ	0xFEE
  8932                           postdec0	equ	0xFED
  8933                           preinc0	equ	0xFEC
  8934                           plusw0	equ	0xFEB
  8935                           fsr0h	equ	0xFEA
  8936                           fsr0l	equ	0xFE9
  8937                           wreg	equ	0xFE8
  8938                           indf1	equ	0xFE7
  8939                           postinc1	equ	0xFE6
  8940                           postdec1	equ	0xFE5
  8941                           preinc1	equ	0xFE4
  8942                           plusw1	equ	0xFE3
  8943                           fsr1h	equ	0xFE2
  8944                           fsr1l	equ	0xFE1
  8945                           bsr	equ	0xFE0
  8946                           indf2	equ	0xFDF
  8947                           postinc2	equ	0xFDE
  8948                           postdec2	equ	0xFDD
  8949                           preinc2	equ	0xFDC
  8950                           plusw2	equ	0xFDB
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8

Data Sizes:
    Strings     118
    Constant    0
    Data        226
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    131     153
    BANK1           256      0     245
    BANK2           256      0      35
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), SensorMovimiento@buf(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), SensorMovimiento@buf(BANK0[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), 
		 -> STR_8(CODE[7]), STR_7(CODE[7]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), 
		 -> STR_8(CODE[7]), STR_7(CODE[7]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), SensorTemperatura@Temperature(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[4]), STR_13(CODE[4]), STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[4]), STR_13(CODE[4]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[4]), STR_13(CODE[4]), STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), SensorTemperatura@Temperature(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1396_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), SensorTemperatura@Temperature(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), SensorTemperatura@Temperature(BANK0[10]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> SensorMovimiento@buf(BANK0[20]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> SensorTemperatura@Temperature(BANK0[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character2(BANK1[8]), character1(BANK0[8]), 

    LCD_String_xy@str	PTR const unsigned char  size(2) Largest target is 22
		 -> hours(BANK1[10]), SensorMovimiento@buf(BANK0[20]), STR_6(CODE[22]), STR_5(CODE[22]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), SensorTemperatura@Temperature(BANK0[10]), STR_1(CODE[7]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 22
		 -> hours(BANK1[10]), mins(BANK1[10]), secs(BANK1[10]), SensorMovimiento@buf(BANK0[20]), 
		 -> STR_6(CODE[22]), STR_5(CODE[22]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> SensorTemperatura@Temperature(BANK0[10]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _SensorMovimiento->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _SensorLuz->___fldiv
    ___xxtofl->_ADC_Read
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_SensorMovimiento
    _SensorTemperatura->_sprintf
    _RTC->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   59965
                           _ADC_Init
                           _I2C_Init
                           _LCD_Init
                                _RTC
                          _SensorLuz
                   _SensorMovimiento
                  _SensorTemperatura
 ---------------------------------------------------------------------------------
 (1) _SensorTemperatura                                   62    62      0   26862
                                             24 BANK0     62    62      0
                           _ADC_Read
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1122
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _SensorMovimiento                                   131   131      0    4985
                                              0 BANK0    131   131      0
                      _LCD_String_xy
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1474
                                             12 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     552
                                              4 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _SensorLuz                                           49    49      0    7904
                                              0 BANK0     49    49      0
                           _ADC_Read
                        _LCD_Command
                      _LCD_String_xy
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              8 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             22 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             47 COMRAM    25    17      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTC                                                  0     0      0   19400
                           _I2C_Stop
                         _LCD_String
                      _LCD_String_xy
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   16009
                                              6 BANK0     18    10      8
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15198
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   14836
                                             66 COMRAM    27    21      6
                               _ctoa
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5479
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     1      3    2523
                                              9 COMRAM     4     1      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     691
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     418
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     814
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     418
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     396
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _RTC
     _I2C_Stop
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Write
         _I2C_Ready
     _sprintf
       ___fltol (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _SensorLuz
     _ADC_Read
     _LCD_Command
       _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     ___fldiv
       _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
   _SensorMovimiento
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
   _SensorTemperatura
     _ADC_Read
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
     _LCD_Custom_Char
       _LCD_Char
         _MSdelay
       _LCD_Command
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     ___fldiv
       _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fltol
     ___xxtofl
       _ADC_Read (ARG)
     _memset
     _sprintf
       ___fltol (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      23       9       13.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     210      20        0.0%
DATA                 0      0     210       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 23:51:51 2020

                        ___fldiv@aexp 0048                          ___fldiv@bexp 0047  
                  __size_of_I2C_Ready 0012                          ___fldiv@sign 0040  
                  __size_of_I2C_Start 002E                          ?_LCD_Command 0001  
                         _SSPSTATbits 000FC7                    __size_of_I2C_Write 0022  
                                  l21 3278                                    l24 2ADE  
                                  l27 2B0A                                    l52 3246  
                                  l61 2DD0                                    l46 31A2  
                                  l55 322A                                    l71 2C30  
                                  l67 2C24                                    l85 2E6C  
                                  l77 2EB4                                    _GO 007E11  
                         ?_LCD_String 0008                       _LCD_Custom_Char 2E6E  
                                 l200 304C                                   l202 306C  
                                 l211 32C4                                   l203 3072  
                                 l212 32C6                                   l206 3260  
                                 l230 3146                                   l303 1B24  
                                 l209 32B6                                   l233 314C  
                                 l242 32A4                                   l250 320E  
                                 l226 311E                                   l322 20A2  
                                 l314 202E                                   l330 1C38  
                                 l306 1B90                                   l235 315A  
                                 l244 32B2                                   l260 327E  
                                 l228 312C                                   l237 3174  
                                 l325 20E2                                   l246 32B4  
                                 l254 3292                                   l263 328C  
                                 l335 1BF4                                   l360 2EFA  
                                 l344 1C8E                                   l257 32A0  
                                 l353 1D28                                   l290 1B04  
                                 l363 2BA2                                   l339 1CD2  
                                 l348 1D6C                                   l357 1D94  
                                 l198 303E                                   l631 2708  
                                 l295 1A94                                   l480 226A  
                                 l636 274E                                   l493 2544  
                                 l663 264A                                   l950 0E9A  
                                 l961 0F58                                   l953 0E5E  
                                 l962 0F46                                   l948 103A  
                                 l980 093C                                   l990 0B98  
                                 l959 0EE0                                   l984 0CA0  
                                 l987 0B32                                   l997 0C62  
                                 l989 0BAA                                   _PEN 007E2A  
                                 _RTC 2B0C                                   _abs 2F80  
                     __end_of_I2C_Ack 32A2                                   _pad 28F2  
                                 _min 00ED                                   _sec 00EF  
                                 wreg 000FE8                          ___flmul@aexp 0028  
                        ___flmul@bexp 0029                          ___flmul@sign 0023  
                        ___flmul@temp 002E                          ___flmul@prod 002A  
                                ?_RTC 0001                          ___fltol@exp1 000A  
                                l1021 1DEC                                  l1103 27B6  
                                l1024 1F48                                  l1041 23E0  
                                l1106 27F8                                  l1114 13E6  
                                l1035 1EE0                                  ?_abs 0013  
                                l1108 2826                                  l1116 13EE  
                                l1028 1E84                                  l1213 28F0  
                                l1221 2F3E                                  l1141 166A  
                                l1134 1628                                  l1054 2E22  
                                l1231 31C8                                  l1224 32D0  
                                l3000 2CB4                                  l1090 297A  
                                l1162 189E                                  l3002 2CBC  
                                l3010 2AEC                                  l1243 3118  
                                l1139 1662                                  l3020 2BC4  
                                l3100 2EB8                                  l1092 29B6  
                                l1164 1902                                  l1148 1700  
                                l3004 2CCA                                  l3012 2B02  
                                l1253 2D72                                  l1181 2D0C  
                                l1237 2F7E                                  l3030 2C16  
                                l3022 2BD6                                  l3102 2ECA  
                                l1182 2D14                                  l3006 2CF0  
                                l3110 0CAE                                  l1087 2938  
                                l2240 3264                                  l3024 2BE4  
                                l3032 2C24                                  l3016 2BA6  
                                l3104 2EDA                                  l1192 3038  
                                l1248 2D6A                                  l3008 2A70  
                                l3200 0EDE                                  l3120 0CEE  
                                l3112 0CBC                                  l1169 1344  
                                l3050 32A2                                  l3026 2BF6  
                                l3018 2BB6                                  l3106 2EEA  
                                l1186 2FB6                                  l3210 0F3E  
                                l3202 0EF0                                  l3130 0D14  
                                l3122 0CF0                                  l3114 0CBE  
                                l3034 2E70                                  l1259 30AA  
                                l2260 325E                                  l3028 2C04  
                                l3060 2E10                                  l3052 2DD2  
                                l3220 0FAC                                  l3204 0EFE  
                                l3140 0D54                                  l3132 0D22  
                                l3116 0CCE                                  l3124 0CF8  
                                l3108 0CA2                                  l3300 09D8  
                                l3044 2E90                                  l3036 2E80  
                                l1189 2FBE                                  l2238 3262  
                                l2254 3248                                  l1198 30E2  
                                l3054 2DE4                                  l3230 1016  
                                l3214 0F68                                  l3222 0FB0  
                                l3206 0F02                                  l3150 0D94  
                                l3142 0D56                                  l3134 0D24  
                                l3126 0D08                                  l3118 0CDE  
                                l3310 0A1E                                  l3302 09E6  
                                l3046 2EA2                                  l3038 2E8C  
                                l3070 2296                                  l2256 324C  
                                l2520 2856                                  l2600 2414  
                                l3056 2DEC                                  l3232 101A  
                                l3224 0FCA                                  l3216 0F74  
                                l3208 0F10                                  l3160 0DC4  
                                l3152 0D9C                                  l3136 0D34  
                                l3144 0D5E                                  l3128 0D0E  
                                l3320 0A8C                                  l3312 0A38  
                                l3304 09F2                                  l3048 2EA4  
                                l3400 255C                                  l3080 233E  
                                l3064 226C                                  l2258 325C  
                                l2522 2874                                  l2514 2828  
                                l2610 246C                                  l2602 2418  
                                l2530 2F08                                  l3058 2DF4  
                                l3234 1028                                  l3226 0FE0  
                                l3218 0F82                                  l3170 0E02  
                                l3162 0DC4                                  l3154 0DA0  
                                l3146 0D6E                                  l3138 0D44  
                                l3330 0B22                                  l3322 0AB6  
                                l3314 0A48                                  l3306 0A02  
                                l3250 0892                                  l3410 25AC  
                                l3090 23C4                                  l3082 236A  
                                l3074 22CC                                  l2524 28AA  
                                l2516 283A                                  l2700 278A  
                                l2620 24EE                                  l2612 2480  
                                l2604 2426                                  l2532 2F1A  
                                l2540 30F4                                  l3500 2B0C  
                                l3236 102E                                  l3228 0FFA  
                                l3180 0E4E                                  l3172 0E12  
                                l3148 0D84                                  l3340 0B62  
                                l3332 0B30                                  l3324 0AEC  
                                l3316 0A64                                  l3308 0A0E  
                                l3260 08CA                                  l3252 0894  
                                l3420 25D6                                  l3412 25B0  
                                l3404 2570                                  l3092 23CA  
                                l3076 2324                                  l3068 228A  
                                l2518 284C                                  l2710 27D6  
                                l2702 279C                                  l2550 20E4  
                                l2614 248E                                  l2622 24F4  
                                l2606 2446                                  l2534 2F1E  
                                l2542 310C                                  l2630 28F2  
                                l3510 2B5A                                  l3502 2B12  
                                l3238 1030                                  l3190 0E98  
                                l3182 0E5C                                  l3174 0E22  
                                l3166 0DD8                                  l3158 0DB4  
                                l3350 0BD4                                  l3342 0B90  
                                l3334 0B42                                  l3326 0AFA  
                                l3318 0A70                                  l3270 08F6  
                                l3262 08DA                                  l3254 08A4  
                                l3246 0878                                  l3430 25FE  
                                l3422 25E0                                  l3414 25BE  
                                l3406 259A                                  l3094 23CE  
                                l3086 2384                                  l2712 27DA  
                                l2560 2128                                  l2552 20E8  
                                l2624 2504                                  l2616 24BC  
                                l2608 2464                                  l2528 2EFC  
                                l2536 30E4                                  l2640 2944  
                                l2632 2902                                  l2720 1346  
                                l2800 16C0                                  l3512 2B78  
                                l3504 2B16                                  l3192 0EAA  
                                l3184 0E68                                  l3176 0E2A  
                                l3168 0DF2                                  l3360 0C4A  
                                l3352 0BFE                                  l3336 0B50  
                                l3328 0B18                                  l3280 094C  
                                l3272 0906                                  l3264 08E0  
                                l3256 08B4                                  l3248 0884  
                                l3096 31A4                                  l3600 1BC2  
                                l3432 260A                                  l3424 25EA  
                                l3408 259C                                  l3088 23B8  
                                l3520 1908                                  l2714 2808  
                                l2706 27AE                                  l2570 217E  
                                l2562 2148                                  l2554 20F6  
                                l2626 2524                                  l2618 24DC  
                                l2538 30F0                                  l2642 2958  
                                l2634 2916                                  l2730 13C0  
                                l2722 1366                                  l2546 3074  
                                l2810 1734                                  l2802 16C8  
                                l3514 2B8A                                  l3506 2B20  
                                l3194 0EC0                                  l3186 0E86  
                                l3178 0E3A                                  l3362 0C66  
                                l3370 0C8C                                  l3346 0BBA  
                                l3354 0C02                                  l3338 0B54  
                                l3290 0986                                  l3282 095C  
                                l3274 0916                                  l3266 08E6  
                                l3258 08C4                                  l3450 1E12  
                                l3442 1D98                                  l3602 1BC4  
                                l3434 261A                                  l3530 19F4  
                                l3522 191A                                  l2716 281A  
                                l2708 27C2                                  l2580 2200  
                                l2572 2192                                  l2564 214C  
                                l2556 2116                                  l2652 2F80  
                                l2644 295C                                  l2636 2924  
                                l2740 141C                                  l2732 13DA  
                                l2724 138E                                  l2660 2FFE  
                                l2812 1746                                  l2820 17A6  
                                l2804 16E4                                  l2900 113E  
                                l3516 2B96                                  l3508 2B3C  
                                l3196 0EC6                                  l3188 0E88  
                                l3380 268A                                  l3372 0C90  
                                l3364 0C76                                  l3356 0C1C  
                                l3348 0BC6                                  l3292 099C  
                                l3276 0926                                  l3268 08F4  
                                l3460 1E6C                                  l3444 1DA8  
                                l3620 1C4E                                  l3612 1C02  
                                l3604 1BD8                                  l3436 262A  
                                l3540 1A8A                                  l3532 1A10  
                                l3524 1972                                  l2590 224A  
                                l2582 2202                                  l2574 21A0  
                                l2566 2158                                  l2558 211A  
                                l2654 2F9A                                  l2646 298A  
                                l2638 2930                                  l2750 14BC  
                                l2742 1424                                  l2734 13F6  
                                l2726 13AE                                  l2670 2D5E  
                                l2830 183C                                  l2822 17B6  
                                l2806 16F4                                  l2910 1206  
                                l2902 1186                                  l3198 0ED0  
                                l3390 26F6                                  l3382 26B8  
                                l3366 0C84                                  l3358 0C30  
                                l3294 09A8                                  l3286 0970  
                                l3278 092C                                  l3470 1ED0  
                                l3462 1E6E                                  l3454 1E26  
                                l3446 1DB6                                  l3702 20B0  
                                l3622 1C5C                                  l3614 1C14  
                                l3606 1BEA                                  l3438 263A  
                                l3550 1AB8                                  l3534 1A42  
                                l3526 19A6                                  l3518 1904  
                                l2584 2214                                  l2576 21B2  
                                l2568 2176                                  l2648 299E  
                                l2760 1578                                  l2752 14C2  
                                l2744 142E                                  l2736 1408  
                                l2728 13BE                                  l2656 30AC  
                                l2664 2D16                                  l2840 18B4  
                                l2832 185A                                  l2824 17BC  
                                l2816 1780                                  l2912 121C  
                                l2920 12A2                                  l3392 2746  
                                l3384 26C8                                  l3376 264C  
                                l3368 0C86                                  l3296 09C0  
                                l3288 097C                                  l3480 1F28  
                                l3472 1EEE                                  l3464 1E7A  
                                l3456 1E2E                                  l3448 1DFC  
                                l3704 20C2                                  l3640 1CD4  
                                l3624 1C5E                                  l3616 1C18  
                                l3560 1B08                                  l3552 1AD4  
                                l3536 1A74                                  l3528 19E2  
                                l3720 2FC4                                  l2682 2E38  
                                l2674 2E24                                  l3490 317E  
                                l2850 3216                                  l2690 32B6  
                                l2578 21E0                                  l2586 221A  
                                l2594 23E2                                  l2770 15CA  
                                l2762 1592                                  l2746 1434  
                                l2754 1526                                  l2738 1416  
                                l2842 18C4                                  l2834 1874  
                                l2826 17C2                                  l2818 1792  
                                l2922 12C6                                  l2930 12F4  
                                l2914 122A                                  l2906 11BE  
                                l3394 274C                                  l3386 26D6  
                                l3378 267A                                  l3298 09CC  
                                l3482 1F36                                  l3474 1EF0  
                                l3466 1EB6                                  l3458 1E3A  
                                l3706 20C6                                  l3650 1D1E  
                                l3642 1CE8                                  l3634 1C9C  
                                l3626 1C72                                  l3618 1C3A  
                                l3570 1B44                                  l3562 1B1A  
                                l3554 1AE6                                  l3546 1AA2  
                                l3538 1A78                                  l3730 2FD6  
                                l3722 2FC8                                  l2684 2E3C  
                                l2676 2E30                                  l3492 318A  
                                l2852 3218                                  l2860 328E  
                                l2692 2750                                  l2588 222A  
                                l2596 23E6                                  l2772 15DC  
                                l2756 1540                                  l2764 15A2  
                                l2748 14B6                                  l2668 2D4C  
                                l2844 18DA                                  l2836 188E  
                                l2828 1820                                  l2932 1302  
                                l2924 12D4                                  l2916 1266  
                                l2908 11E2                                  l3388 26E8  
                                l3484 1F38                                  l3476 1EF4  
                                l3468 1EC2                                  l3660 1D4C  
                                l3644 1CF6                                  l3636 1CAE  
                                l3628 1C84                                  l3580 1B8A  
                                l3572 1B48                                  l3556 1AF4  
                                l3548 1AB4                                  l3740 2FE0  
                                l3732 2FD8                                  l3724 2FCC  
                                l2686 2E52                                  l2950 3236  
                                l3494 3190                                  l2854 321A  
                                l2862 327A                                  l2870 3206  
                                l2694 2764                                  l2598 23F4  
                                l2774 15E8                                  l2766 15B4  
                                l2758 155E                                  l2838 18AE  
                                l2790 1680                                  l2782 162A  
                                l2926 12E8                                  l3478 1F18  
                                l3670 1FCC                                  l3662 1D6E  
                                l3646 1CF8                                  l3638 1CB2  
                                l3590 1B9C                                  l3582 1B92  
                                l3398 2546                                  l3574 1B64  
                                l3558 1AFA                                  l3750 2FF2  
                                l3742 2FE2                                  l3734 2FDA  
                                l3726 2FD0                                  l3718 2FC0  
                                ?_pad 0011                                  l2688 2E56  
                                l2952 3238                                  l2944 322E  
                                l3496 3196                                  l3488 3176  
                                l2856 321C                                  l2848 3212  
                                l2960 2D9C                                  l2864 31F0  
                                l2696 2770                                  l2776 15F0  
                                l2768 15C4                                  l2792 1688  
                                l2784 163A                                  l2936 130E  
                                l2880 103C                                  l3672 1FFE  
                                l3664 1D82                                  l3656 1D36  
                                l3648 1D0C                                  l3592 1B9E  
                                l3584 1B96                                  l3576 1B76  
                                l3568 1B32                                  l3744 2FE6  
                                l3736 2FDC                                  l3728 2FD4  
                                l2954 323A                                  l2946 3232  
                                l3498 319C                                  l2858 321E  
                                l2962 2DA0                                  l2970 3068  
                                l2866 31F4                                  l2698 277C  
                                l2778 1600                                  l2794 16A8  
                                l2786 163C                                  l2938 1332  
                                l2890 10A8                                  l2882 1060  
                                l3674 2010                                  l3690 2072  
                                l3666 1F4A                                  l3658 1D48  
                                l3594 1BA0                                  l3586 1B98  
                                l3578 1B84                                  l3746 2FEA  
                                l3738 2FDE                                  l2948 3234  
                                l2956 2D74                                  l2972 3070  
                                l2964 303C                                  l2876 320C  
                                l2868 31F8                                  l2980 3140  
                                l2796 16B0                                  l2788 1656  
                                l2892 10DA                                  l2884 106E  
                                l3692 2084                                  l3684 203C  
                                l3676 2012                                  l3668 1F50  
                                l3596 1BA2                                  l3588 1B9A  
                                l3748 2FEE                                  l2958 2D78  
                                l2966 3050                                  l2990 3174  
                                l2798 16BA                                  l2886 1080  
                                l3694 2086                                  l3686 204E  
                                l3678 2024                                  l3598 1BB4  
                                l2968 3060                                  l2984 314A  
                                l2976 311C                                  l2896 10F6  
                                l2888 1084                                  l3696 2098  
                                l3688 2052                                  l2898 111A  
                                l2988 316E                                  l2996 2F40  
                                l2998 2F50                                  _ADON 007E10  
                                STR_1 084A                                  STR_2 0851  
                                STR_3 086D                                  STR_4 086D  
                                STR_5 0817                                  STR_6 0801  
                                STR_7 0835                                  STR_8 0858  
                                STR_9 083C                                  u2100 284C  
                                u2101 2848                                  u2110 2874  
                                u2111 2870                                  u3000 316A  
                                u2120 28AA                                  u2200 2176  
                                u3001 3166                                  u2121 28A6  
                                u2201 2172                                  u2210 21A0  
                                u2130 2F3E                                  u3010 2F7E  
                                u2211 219C                                  u2131 2F3A  
                                u3011 2F7A                                  u3100 2BB6  
                                u2220 21E0                                  u2140 310C  
                                u2300 2902                                  u3020 2D0C  
                                u3101 2BB2                                  u2221 21DC  
                                u2141 3108                                  u2301 28FE  
                                u3021 2D08                                  u3110 2BD6  
                                u2230 222A                                  u2310 2924  
                                u2150 30A4                                  u3030 2A9A  
                                u3111 2BD2                                  u2231 2226  
                                u2311 2920                                  u2151 309E  
                                u3031 2A92                                  u3120 2BF6  
                                u2240 23F4                                  u2320 297A  
                                u2160 30A6                                  u2400 2D48  
                                u3200 2380                                  _LATD 000F8C  
                                u3121 2BF2                                  u2241 23F0  
                                u2321 2976                                  u4001 1C7C  
                                u3201 237C                                  u3130 2C16  
                                u2090 283A                                  u2170 20F6  
                                u2250 2426                                  u2330 298A  
                                u2410 2D5E                                  u4010 1C9C  
                                u3210 23E0                                  u3131 2C12  
                                u2091 2836                                  u2171 20F2  
                                u2251 2422                                  u2331 2986  
                                u2411 2D5A                                  u4011 1C98  
                                u3211 23DC                                  u2420 2E52  
                                u2180 2128                                  u2260 2464  
                                u2340 2F9A                                  u2500 1376  
                                u3060 2AC2                                  u3300 0E3A  
                                u3220 0CBC                                  u4100 206E  
                                u4020 1CCE                                  u3140 2E80  
                                u2421 2E4E                                  u2181 2124  
                                u2261 2460                                  u2341 2F96  
                                u2501 1370                                  u3061 2ABA  
                                u3301 0E36                                  u3221 0CB8  
                                u4101 206A                                  u4021 1CCA  
                                u3141 2E7C                                  u2430 2E6C  
                                u2270 248E                                  u2510 1378  
                                u2350 30DC                                  u3054 2AAA  
                                u3310 0E5C                                  u3230 0CCE  
                                u4030 1CF6                                  u3150 2EB4  
                                u2431 2E68                                  u2191 2152  
                                u2271 248A                                  u2351 30D6  
                                u3055 2AA6                                  u3311 0E58  
                                u3231 0CCA                                  u4111 2090  
                                u4031 1CF2                                  u3151 2EB0  
                                u3160 32B2                                  u2440 32C4  
                                u2280 24BC                                  u2600 1592  
                                u2520 138E                                  u2360 30DE  
                                u3048 2A9C                                  u3400 0F68  
                                u3320 0E86                                  u3240 0CDE  
                                u4120 20B0                                  u3161 32AE  
                                u2441 32C0                                  u2281 24B8  
                                u2601 158E                                  u2521 138A  
                                u3401 0F64                                  u3321 0E82  
                                u3241 0CDA                                  u4121 20AC  
                                u4041 1D16                                  u2450 2764  
                                u2290 2504                                  u2610 15A2  
                                u2530 13BE                                  u2370 3032  
                                u3090 2AEC                                  u3410 0F82  
                                u3330 0EAA                                  u3250 0D22  
                                u4130 20E2                                  u4050 1D36  
                                u3170 2286                                  u2451 2760  
                                u2291 2500                                  u2611 159E  
                                u2531 13BA                                  u2371 302C  
                                u3091 2AE8                                  u3411 0F7E  
                                u3331 0EA6                                  u3251 0D1E  
                                u4131 20DE                                  u4051 1D32  
                                u3171 2282                                  u2460 278A  
                                u2620 15B4                                  u2540 13DA  
                                u2380 3034                                  u2700 1730  
                                u3084 2AD2                                  u3420 0FCA  
                                u3340 0EC0                                  u3260 0D34  
                                u3500 0916                                  u4060 1D68  
                                u3180 22C8                                  u2461 2786  
                                u2621 15B0                                  u2541 13D6  
                                u3085 2ACE                                  u3421 0FC6  
                                u3341 0EBC                                  u3261 0D30  
                                u3501 0912                                  u4061 1D64  
                                u3181 22C4                                  u2470 27AA  
                                u2630 15C4                                  u2550 1408  
                                u2390 2D46                                  u2710 1746  
                                u3078 2AC4                                  u3430 0FFA  
                                u3350 0EDE                                  u3270 0D44  
                                u3510 094C                                  u4070 1FFE  
                                u3190 233A                                  u2471 27A6  
                                u2631 15C0                                  u2551 1404  
                                u2391 2D40                                  u2711 1742  
                                u3431 0FF6                                  u3351 0EDA  
                                u3271 0D40                                  u3511 0948  
                                u4071 1FFA                                  u3191 2336  
                                u2480 27F8                                  u2640 15DC  
                                u2560 1416                                  u2800 189E  
                                u2720 177A                                  u3440 1028  
                                u3360 0EFE                                  u3280 0D84  
                                u3600 0BD4                                  u3520 095C  
                                u2481 27F4                                  u2641 15D8  
                                u2561 1412                                  u2801 189A  
                                u2721 1774                                  u3441 1024  
                                u3361 0EFA                                  u3281 0D80  
                                u3601 0BD0                                  u3521 0958  
                                u4081 201C                                  u2490 2808  
                                u2570 1540                                  u2810 18AE  
                                u2730 177C                                  u2650 163A  
                                u3370 0F10                                  u3290 0DC4  
                                u3610 0C1C                                  u3530 0AD6  
                                u3450 0892                                  u4090 203C  
                                u2491 2804                                  u2571 153C  
                                u2811 18AA                                  u2651 1636  
                                u3371 0F0C                                  u3291 0DC0  
                                u3611 0C18                                  u3451 088E  
                                u4091 2038                                  u2820 32A0  
                                u2580 155E                                  u2740 1792  
                                u2660 1656                                  u2900 1206  
                                u3380 0F3E                                  u3620 0C4A  
                                u3540 0B30                                  u3460 08A4  
                                u3700 2590                                  u2821 329C  
                                u2581 155A                                  u2741 178E  
                                u2661 1652                                  u2901 1202  
                                u3381 0F3A                                  u3621 0C46  
                                u3541 0B2C                                  u3461 08A0  
                                u2830 328C                                  u2590 1578  
                                u2750 17FA                                  u2670 1680  
                                u2910 12C6                                  u3390 0F54  
                                u3630 0C84                                  u3550 0B50  
                                u3470 08B4                                  u3710 25BE  
                                u2831 3288                                  u2591 1574  
                                u2671 167C                                  u2911 12C2  
                                u3391 0F50                                  u3631 0C80  
                                u3551 0B4C                                  u3535 0ACC  
                                u3471 08B0                                  u3711 25BA  
                                u2920 2D98                                  u2840 3206  
                                u2760 183C                                  u2680 16E4  
                                u3640 267A                                  u3560 0B62  
                                u3480 08F4                                  u3800 1EB2  
                                u3720 25D2                                  u2841 3202  
                                u2761 1838                                  u2681 16E0  
                                u3641 2676                                  u3561 0B5E  
                                u3481 08F0                                  u3801 1EAE  
                                u3721 25CE                                  u3705 2586  
                                u2930 2DC0                                  u2770 185A  
                                u2690 172E                                  u2850 1060  
                                u3650 26B8                                  u3570 0B90  
                                u3490 0906                                  u3810 1ED0  
                                u3730 25FA                                  u2771 1856  
                                u2755 17E8                                  u2691 1728  
                                u2851 105C                                  u3651 26B4  
                                u3571 0B8C                                  u3491 0902  
                                u3811 1ECC                                  u3731 25F6  
                                u2940 2DD0                                  u2780 1874  
                                u2860 10A8                                  u3660 26D6  
                                u3580 0BA6                                  u3820 1EE0  
                                u3740 261A                                  u3900 1AD4  
                                u2941 2DCC                                  u2781 1870  
                                u2861 10A4                                  u3661 26D2  
                                u3581 0BA2                                  u3821 1EDC  
                                u3741 2616                                  u3901 1AD0  
                                u2950 304C                                  u2790 188E  
                                u2870 111A                                  u3670 26F6  
                                u3590 0BBA                                  u3830 1EEE  
                                u3750 262A                                  u2927 2D8E  
                                u2951 3048                                  u2791 188A  
                                u2871 1116                                  u3671 26F2  
                                u3591 0BB6                                  u3831 1EEA  
                                u3751 2626                                  u3911 1B12  
                                u2960 3060                                  u2880 113E  
                                u3680 2746                                  u3840 1F28  
                                u3760 1DA8                                  u3920 1B32  
                                u2937 2DB6                                  u2961 305C  
                                u2881 113A                                  u3681 2742  
                                u3841 1F24                                  u3761 1DA4  
                                u3921 1B2E                                  u2970 312C  
                                u2890 11E2                                  u3850 1F36  
                                u3770 1DB6                                  u3690 255C  
                                u3930 1B64                                  u2971 3128  
                                u2891 11DE                                  u3851 1F32  
                                u3771 1DB2                                  u3691 2558  
                                u3931 1B60                                  u2980 313C  
                                u3780 1E12                                  u3860 1A42  
                                _RCEN 007E2B                                  u2981 3138  
                                u3781 1E0E                                  u3941 1BAC  
                                u3861 1A3E                                  u2990 315A  
                                u3790 1E68                                  u3950 1BC2  
                                u3870 1A74                                  u2991 3156  
                                u3791 1E64                                  u3951 1BBE  
                                u3871 1A70                                  u3961 1BE2  
                                u3881 1A82                                  u3970 1C02  
                                u3890 1AA2                                  u3971 1BFE  
                                u3891 1A9E                                  u3980 1C34  
                                u3981 1C30                                  u3990 1C5C  
                                u3991 1C58                                  _RSEN 007E29  
                                abs@a 0013                                  _dbuf 01B7  
                                _ctoa 2750                                  _main 2FC0  
                                _dtoa 1346                       ?_RTC_Read_Clock 0001  
                                _hour 00EB                      __end_of_I2C_Nack 328E  
                                _mins 01E1                                  _secs 01EB  
                                _prec 00E7                      __end_of_I2C_Init 3262  
                    __end_of_I2C_Read 3074                                  _nout 00E3  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  _xtoa 162A  
                    __end_of_I2C_Stop 32B6                      __end_of_ADC_Init 327A  
                    __end_of_ADC_Read 2B0C                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                     __end_of_MSdelay 2E6E                       ___fldiv@new_exp 0041  
                       _LCD_String_xy 2BA4                          ___param_bank 000000  
                               ??_RTC 0060      RTC_Read_Clock@read_clock_address 0004  
                               ??_abs 0015                                 ??_pad 0017  
                    __end_of_LCD_Char 322C                      __end_of_LCD_Init 31A4  
                       ___fltol@sign1 0009                       __end_of___aodiv 226C  
                               ?_ctoa 000A                                 ?_main 0001  
                               ?_dtoa 001C                       __end_of___aomod 2546  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___fldiv 103C                                 STR_10 085F  
                               STR_11 0843                                 STR_12 0866  
                               STR_13 0873                                 STR_14 0831  
                               STR_15 082D                       __end_of___flmul 0CA2  
                     __end_of___fltol 264C                                 ?_xtoa 001C  
                               _LATB2 007C52                                 _LATC0 007C58  
                               _LATB3 007C53                                 _LATC1 007C59  
                               _LATC2 007C5A                                 _LATE1 007C69  
                               _LATE2 007C6A                          vfpfcnvrt@fmt 0045  
                        vfpfcnvrt@llu 0055                                 _SPBRG 000FAF  
                               _TRISA 000F92                                 _TRISD 000F95  
                               _SSPIE 007CEB                                 _TRISE 000F96  
                               _SSPIF 007CF3                                 _TXREG 000FAD  
                               _flags 00E9                                 _fputc 2828  
                     __end_of_isalpha 303A                                 _fputs 2EFC  
                               _hours 01D7                        SensorLuz@F3722 015D  
                      SensorLuz@F3725 019B                     __end_of_I2C_Ready 32C8  
                               pad@fp 0011                                 _width 00E5  
                               ctoa@c 000C                                 _putch 32D0  
                               ctoa@l 000E                                 ctoa@w 0010  
                               dtoa@d 001E                                 dtoa@i 003E  
                               dtoa@n 0036                                 dtoa@p 0030  
                               dtoa@s 0034                                 dtoa@w 0032  
                     __end_of_islower 30AC                     __end_of_I2C_Start 3148  
                   __end_of_I2C_Write 3210                       __end_of_isupper 30E4  
                               tablat 000FF5                                 plusw1 000FE3  
                               plusw2 000FDB                                 status 000FD8  
                 __size_of_LCD_String 005E                       __end_of_sprintf 2E24  
                               xtoa@c 0041                                 xtoa@d 001E  
                               xtoa@i 003F                                 xtoa@n 0037  
                               xtoa@p 0033                                 xtoa@w 0035  
                               xtoa@x 0026                     SensorMovimiento@i 00DD  
                     __end_of_toupper 2D74                        SensorLuz@i_909 008F  
                      ?_LCD_String_xy 000A                          _toupper$1600 000D  
             __end_of_LCD_Custom_Char 2EB6                       __initialization 2C32  
                        __end_of_ctoa 2828                          __end_of_main 2FFE  
                        __end_of_dtoa 162A                          __end_of_xtoa 1904  
                           ??_I2C_Ack 0001                   SensorLuz@buffer_TX3 0060  
                 SensorLuz@buffer_TX4 0075                                ??_ctoa 000D  
                              ??_main 0060                                ??_dtoa 0026  
                              ??_xtoa 0027                         __activetblptr 000002  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                                ?_fputc 0001  
                              ?_fputs 000A                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                ?_putch 0001  
                    LCD_String_xy@pos 000A                      LCD_String_xy@row 000D  
                    LCD_String_xy@str 000B                             ??_MSdelay 0003  
                              _OSCCON 000FD3                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                      __end_of___xxtofl 1F4A  
                          SensorLuz@i 008D                      _SensorMovimiento 1B92  
                        vfprintf@cfmt 005E                                ___flge 264C  
                           ??___aodiv 0011                             ??___aomod 0011  
                           ??___fldiv 0038                             ??___flmul 001F  
                           ??___fltol 0005                       ADC_Read@channel 0001  
                              _memset 226C                       ADC_Read@digital 0007  
                              clear_0 2C98                                clear_1 2CA4  
                  _I2C_Repeated_Start 3148                                pad@buf 0013  
                              ctoa@fp 000A                  __size_of_LCD_Command 001C  
                              _strcat 31A4                                dtoa@fp 001C  
                              _strcpy 2F40                                _strlen 30E4  
                  __size_of_SensorLuz 019A                                fputc@c 0001  
                              fputs@c 000E                      LCD_Custom_Char@i 000B  
                              fputs@i 000F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ?_I2C_Init 0001                             ?_I2C_Read 0001  
                           ?_I2C_Stop 0001                             ?_ADC_Init 0001  
                           ?_ADC_Read 0001                             ??_islower 0003  
                        __mediumconst 0000                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 2D16  
                           ??_sprintf 0060                                xtoa@fp 001C  
                           ??_toupper 0009                            ___flge@ff1 0001  
                          ___flge@ff2 0005                          ___xxtofl@arg 0013  
                        ___xxtofl@exp 0012                          ___xxtofl@val 0009  
                           ?_LCD_Char 0001                            __accesstop 0060  
             __end_of__initialization 2CAA                             ?_LCD_Init 0001  
                     ??_LCD_String_xy 000D                         ___rparam_used 000001  
                          ___fltol@f1 0001                  ??_I2C_Repeated_Start 0002  
                    ?_LCD_Custom_Char 0008                        __pcstackCOMRAM 0001  
                        __pidataBANK0 32C8                          __pidataBANK1 29B8  
                        __pidataBANK2 31CA                    SensorTemperatura@i 00AE  
                       __end_of_fputc 28F2                         __end_of_fputs 2F40  
                       __end_of_putch 32D2                          ??_LCD_String 000A  
                          ??_I2C_Nack 0001                            ??_I2C_Init 0001  
                          ??_I2C_Read 0001                            ??_I2C_Stop 0001  
                          ??_ADC_Init 0001                            ??_ADC_Read 0003  
        SensorTemperatura@Temperature 00A4                      ??_RTC_Read_Clock 0003  
                             ??_fputc 0005                               ??_fputs 000E  
                             ??_putch 0001                            __pbssBANK0 00E3  
                          __pbssBANK1 01B7                            ??_LCD_Char 0007  
                          _character1 00F1                            _character2 01AF  
                          ??_LCD_Init 0008                     __end_of_SensorLuz 20E4  
                  __end_of_LCD_String 2DD2                          I2C_Read@flag 0001  
                             ?___flge 0001                        I2C_Read@buffer 0002  
              SensorTemperatura@F3714 0146                SensorTemperatura@F3717 0172  
                             _I2C_Ack 328E                               _ACKSTAT 007E2E  
                             ?_memset 0001                               ?_strcat 000D  
                             ?_strcpy 0005                               ?_strlen 0001  
              SensorTemperatura@i_892 00B0                             ?___xxtofl 0009  
                  __size_of_vfpfcnvrt 030A                               _SSPCON1 000FC6  
                             _SSPCON2 000FC5                               _SSPSTAT 000FC7  
                             _MSdelay 2E24                             _I2C_Ready 32B6  
                           _I2C_Start 311A                             _I2C_Write 31EE  
                       LCD_String@msg 0008                               __Hparam 0000  
                             __Lparam 0000                       __size_of___flge 0104  
                             ___aodiv 20E4                               ___aomod 23E2  
                             ___fldiv 0CA2                               ___flmul 0878  
                   _SensorTemperatura 1904                               ___fltol 2546  
                           ?_vfprintf 0060                          __psmallconst 0800  
                             __pcinit 2C32                    ?_SensorTemperatura 0001  
                     __size_of_memset 0176                               __ramtop 0800  
                             __ptext0 2FC0                               __ptext1 1904  
                             __ptext2 226C                               __ptext3 2546  
                             __ptext4 2E6E                               __ptext5 1B92  
                             __ptext6 31A4                               __ptext7 2F40  
                             __ptext8 1F4A                               __ptext9 1D96  
                     __size_of_strcat 0026                       __size_of_strcpy 0040  
                     __size_of_strlen 0036                          __size_of_RTC 0098  
                        __size_of_abs 0040                          __size_of_pad 00C6  
                             _isalpha 2FFE                            ??___xxtofl 000D  
                             _islower 3074                   ??_SensorTemperatura 0060  
                             _isupper 30AC              __end_of_SensorMovimiento 1D96  
                             _sprintf 2DD2              SensorTemperatura@celsius 00B2  
                             _toupper 2D16                  end_of_initialization 2CAA  
                             fputc@fp 0003                               memset@c 0003  
                             memset@k 0009                               memset@n 0005  
                             memset@s 000B                        LCD_Command@cmd 0007  
                       __Lmediumconst 0000                               fputs@fp 000C  
                          ?_I2C_Ready 0001                            ?_I2C_Start 0001  
                          ?_I2C_Write 0001             __end_of_SensorTemperatura 1B92  
                   __end_of_vfpfcnvrt 1346                             _RCSTAbits 000FAB  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                            ??_vfprintf 005E  
                             strcpy@d 000B                               strlen@a 0003  
                             strcpy@s 0009                               strlen@s 0001  
                           _PORTAbits 000F80                             _PORTEbits 000F84  
                 SensorMovimiento@buf 00C9                         ___xxtofl@sign 0011  
                           _TRISAbits 000F92                             _TRISBbits 000F93  
                           _TRISCbits 000F94                     __size_of_I2C_Nack 0014  
                   __size_of_I2C_Init 001A                     __size_of_I2C_Read 003A  
                         ___fldiv@grs 0043                           ___fldiv@rem 003C  
                   __size_of_I2C_Stop 0014                     __size_of_ADC_Init 0018  
                   __size_of_ADC_Read 009C           SensorTemperatura@buffer_TX1 0078  
         SensorTemperatura@buffer_TX2 008F                           ___flmul@grs 0024  
                           _TXSTAbits 000FAC                     __size_of_LCD_Char 001C  
                   __size_of_LCD_Init 002E                         ??_LCD_Command 0007  
                      __end_of___flge 2750                     LCD_Char@char_data 0007  
                         vfpfcnvrt@ap 0047                           vfpfcnvrt@fp 0043  
                         vfpfcnvrt@ll 004D                           _BAUDCONbits 000FB8  
                      __end_of_memset 23E2                        __end_of_strcat 31CA  
                      __end_of_strcpy 2F80                        __end_of_strlen 311A  
                 start_initialization 2C32                           __end_of_RTC 2BA4  
                         __end_of_abs 2FC0                           __end_of_pad 29B8  
I2C_Repeated_Start@slave_read_address 0002                           ??_I2C_Ready 0001  
                         ??_I2C_Start 0002                           ??_I2C_Write 0001  
               __end_of_LCD_String_xy 2C32            __size_of_SensorTemperatura 028E  
                         vfprintf@fmt 0062           __size_of_I2C_Repeated_Start 002E  
                            ??___flge 0009                             _SensorLuz 1F4A  
                         __pdataBANK0 00F1                           __pdataBANK1 0100  
                         __pdataBANK2 0200                              ?_I2C_Ack 0001  
                            ??_memset 0007                            memset@dest 0001  
                            ??_strcat 0011                              ??_strcpy 0009  
                            ??_strlen 0003              __size_of_LCD_Custom_Char 0048  
                           ___fldiv@a 0034                             ___fldiv@b 0030  
                 __end_of_LCD_Command 3248                             ___flmul@a 001B  
                           ___flmul@b 0017                         __pcstackBANK0 0060  
                    ___aodiv@dividend 0001                     __size_of___xxtofl 01B4  
                            ?_MSdelay 0001                             _dtoa$1489 002E  
                          ?_SensorLuz 0001                              ?___aodiv 0001  
                            ?___aomod 0001                              ?___fldiv 0030  
                    ___aodiv@quotient 0013                              ?___flmul 0017  
                            ?___fltol 0001                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 327A  
                            ?_isalpha 0001                              _I2C_Init 3248  
                            _I2C_Read 303A                              _I2C_Stop 32A2  
                            _ADC_Init 3262                              _ADC_Read 2A70  
                            ?_islower 0001                              ?_isupper 0001  
                   ?_SensorMovimiento 0001                              ?_sprintf 0066  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                  ??_SensorMovimiento 0011                              MSdelay@i 0003  
                            MSdelay@j 0005                              _LCD_Char 3210  
                            _LCD_Init 3176               __size_of_RTC_Read_Clock 0046  
                         _LCD_Command 322C                             _vfpfcnvrt 103C  
                           _xtoa$1500 002F                             _xtoa$1501 0031  
                    __size_of_I2C_Ack 0014                            _ADCON0bits 000FC2  
                   ??_LCD_Custom_Char 000A                            vfpfcnvrt@c 005D  
                           copy_data0 2C46                             copy_data1 2C66  
                           copy_data2 2C86          I2C_Start@slave_write_address 0002  
                        SensorLuz@val 0089                      __size_of_MSdelay 004A  
                            __Hrparam 0000            SensorMovimiento@buffer_TX5 0060  
          SensorMovimiento@buffer_TX6 0083            SensorMovimiento@buffer_TX7 00A6  
                          vfprintf@ap 0064                              __Lrparam 0000  
                          vfprintf@fp 0060                           ??_SensorLuz 0049  
                       I2C_Write@data 0001                      __size_of___aodiv 0188  
                    __size_of___aomod 0164                      __size_of___fldiv 039A  
                    __size_of___flmul 042A                      __size_of___fltol 0106  
                          ?_vfpfcnvrt 0043                       ___aodiv@divisor 0009  
                     ___aodiv@counter 0011                            sprintf@fmt 0068  
                            ___xxtofl 1D96                            strcat@dest 000D  
                    __size_of_isalpha 003C                      __size_of_islower 0038  
                            __ptext10 0878                              __ptext11 264C  
                            __ptext20 3074                              __ptext12 0CA2  
                            __ptext21 30AC                              __ptext13 2A70  
                            __ptext30 2750                              __ptext22 2FFE  
                            __ptext14 2B0C                              __ptext31 2828  
                            __ptext23 1346                              __ptext15 2DD2  
                            __ptext40 328E                              __ptext32 32D0  
                            __ptext24 28F2                              __ptext16 2CB4  
                            __ptext41 2BA4                              __ptext33 2EB6  
                            __ptext25 30E4                              __ptext17 103C  
                            __ptext42 2D74                              __ptext34 311A  
                            __ptext26 2EFC                              __ptext18 162A  
                            __ptext43 3210                              __ptext35 3148  
                            __ptext27 2F80                              __ptext19 2D16  
                            __ptext44 32A2                              __ptext36 31EE  
                            __ptext28 23E2                              __ptext45 3176  
                            __ptext37 303A                              __ptext29 20E4  
                            __ptext46 322C                              __ptext38 32B6  
                            __ptext47 2E24                              __ptext39 327A  
                            __ptext48 3248                              __ptext49 3262  
                    __size_of_isupper 0038                      __size_of_sprintf 0052  
                          strcpy@dest 0005                      __size_of_toupper 005E  
                       __size_of_ctoa 00D8                         __size_of_main 003E  
                       __size_of_dtoa 02E4                         __size_of_xtoa 02DA  
                          MSdelay@val 0001                              _vfprintf 2CB4  
                          _LCD_String 2D74                      ___aomod@dividend 0001  
                            isalpha@c 0001                    LCD_Custom_Char@loc 000A  
                  LCD_Custom_Char@msg 0008                             sprintf@ap 0070  
                           strcat@src 000F                              islower@c 0001  
                           strcpy@src 0007            __end_of_I2C_Repeated_Start 3176  
                            isupper@c 0001                        _RTC_Read_Clock 2EB6  
               SensorMovimiento@F3731 0123                 SensorMovimiento@F3734 0100  
               SensorMovimiento@F3737 0200                 SensorMovimiento@F3729 0187  
                     ___aomod@divisor 0009                           ??_vfpfcnvrt 0049  
                     ___aomod@counter 0011                 SensorMovimiento@i_940 00E1  
               SensorMovimiento@i_935 00DF                              sprintf@f 0072  
                            sprintf@s 0066                              toupper@c 0007  
              __size_of_LCD_String_xy 008E                           _SSPCON2bits 000FC5  
                        ___aodiv@sign 0012                __end_of_RTC_Read_Clock 2EFC  
                        ___aomod@sign 0012             __size_of_SensorMovimiento 0204  
